!function(a, b) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = a.document ? b(a, !0) : function(a) {
        if (!a.document) throw new Error("jQuery requires a window with a document");
        return b(a);
    } : b(a);
}("undefined" != typeof window ? window : this, function(a, b) {
    var c = [], d = c.slice, e = c.concat, f = c.push, g = c.indexOf, h = {}, i = h.toString, j = h.hasOwnProperty, k = {}, l = a.document, m = "2.1.4", n = function(a, b) {
        return new n.fn.init(a, b);
    }, o = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, p = /^-ms-/, q = /-([\da-z])/gi, r = function(a, b) {
        return b.toUpperCase();
    };
    n.fn = n.prototype = {
        jquery: m,
        constructor: n,
        selector: "",
        length: 0,
        toArray: function() {
            return d.call(this);
        },
        get: function(a) {
            return null != a ? 0 > a ? this[a + this.length] : this[a] : d.call(this);
        },
        pushStack: function(a) {
            var b = n.merge(this.constructor(), a);
            return b.prevObject = this, b.context = this.context, b;
        },
        each: function(a, b) {
            return n.each(this, a, b);
        },
        map: function(a) {
            return this.pushStack(n.map(this, function(b, c) {
                return a.call(b, c, b);
            }));
        },
        slice: function() {
            return this.pushStack(d.apply(this, arguments));
        },
        first: function() {
            return this.eq(0);
        },
        last: function() {
            return this.eq(-1);
        },
        eq: function(a) {
            var b = this.length, c = +a + (0 > a ? b : 0);
            return this.pushStack(c >= 0 && b > c ? [ this[c] ] : []);
        },
        end: function() {
            return this.prevObject || this.constructor(null);
        },
        push: f,
        sort: c.sort,
        splice: c.splice
    }, n.extend = n.fn.extend = function() {
        var a, b, c, d, e, f, g = arguments[0] || {}, h = 1, i = arguments.length, j = !1;
        for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == typeof g || n.isFunction(g) || (g = {}), 
        h === i && (g = this, h--); i > h; h++) if (null != (a = arguments[h])) for (b in a) c = g[b], 
        d = a[b], g !== d && (j && d && (n.isPlainObject(d) || (e = n.isArray(d))) ? (e ? (e = !1, 
        f = c && n.isArray(c) ? c : []) : f = c && n.isPlainObject(c) ? c : {}, g[b] = n.extend(j, f, d)) : void 0 !== d && (g[b] = d));
        return g;
    }, n.extend({
        expando: "jQuery" + (m + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(a) {
            throw new Error(a);
        },
        noop: function() {},
        isFunction: function(a) {
            return "function" === n.type(a);
        },
        isArray: Array.isArray,
        isWindow: function(a) {
            return null != a && a === a.window;
        },
        isNumeric: function(a) {
            return !n.isArray(a) && a - parseFloat(a) + 1 >= 0;
        },
        isPlainObject: function(a) {
            return "object" !== n.type(a) || a.nodeType || n.isWindow(a) ? !1 : a.constructor && !j.call(a.constructor.prototype, "isPrototypeOf") ? !1 : !0;
        },
        isEmptyObject: function(a) {
            var b;
            for (b in a) return !1;
            return !0;
        },
        type: function(a) {
            return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? h[i.call(a)] || "object" : typeof a;
        },
        globalEval: function(a) {
            var b, c = eval;
            a = n.trim(a), a && (1 === a.indexOf("use strict") ? (b = l.createElement("script"), 
            b.text = a, l.head.appendChild(b).parentNode.removeChild(b)) : c(a));
        },
        camelCase: function(a) {
            return a.replace(p, "ms-").replace(q, r);
        },
        nodeName: function(a, b) {
            return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase();
        },
        each: function(a, b, c) {
            var d, e = 0, f = a.length, g = s(a);
            if (c) {
                if (g) {
                    for (;f > e; e++) if (d = b.apply(a[e], c), d === !1) break;
                } else for (e in a) if (d = b.apply(a[e], c), d === !1) break;
            } else if (g) {
                for (;f > e; e++) if (d = b.call(a[e], e, a[e]), d === !1) break;
            } else for (e in a) if (d = b.call(a[e], e, a[e]), d === !1) break;
            return a;
        },
        trim: function(a) {
            return null == a ? "" : (a + "").replace(o, "");
        },
        makeArray: function(a, b) {
            var c = b || [];
            return null != a && (s(Object(a)) ? n.merge(c, "string" == typeof a ? [ a ] : a) : f.call(c, a)), 
            c;
        },
        inArray: function(a, b, c) {
            return null == b ? -1 : g.call(b, a, c);
        },
        merge: function(a, b) {
            for (var c = +b.length, d = 0, e = a.length; c > d; d++) a[e++] = b[d];
            return a.length = e, a;
        },
        grep: function(a, b, c) {
            for (var d, e = [], f = 0, g = a.length, h = !c; g > f; f++) d = !b(a[f], f), d !== h && e.push(a[f]);
            return e;
        },
        map: function(a, b, c) {
            var d, f = 0, g = a.length, h = s(a), i = [];
            if (h) for (;g > f; f++) d = b(a[f], f, c), null != d && i.push(d); else for (f in a) d = b(a[f], f, c), 
            null != d && i.push(d);
            return e.apply([], i);
        },
        guid: 1,
        proxy: function(a, b) {
            var c, e, f;
            return "string" == typeof b && (c = a[b], b = a, a = c), n.isFunction(a) ? (e = d.call(arguments, 2), 
            f = function() {
                return a.apply(b || this, e.concat(d.call(arguments)));
            }, f.guid = a.guid = a.guid || n.guid++, f) : void 0;
        },
        now: Date.now,
        support: k
    }), n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(a, b) {
        h["[object " + b + "]"] = b.toLowerCase();
    });
    function s(a) {
        var b = "length" in a && a.length, c = n.type(a);
        return "function" === c || n.isWindow(a) ? !1 : 1 === a.nodeType && b ? !0 : "array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a;
    }
    var t = function(a) {
        var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = "sizzle" + 1 * new Date(), v = a.document, w = 0, x = 0, y = ga(), z = ga(), A = ga(), B = function(a, b) {
            return a === b && (l = !0), 0;
        }, C = 1 << 31, D = {}.hasOwnProperty, E = [], F = E.pop, G = E.push, H = E.push, I = E.slice, J = function(a, b) {
            for (var c = 0, d = a.length; d > c; c++) if (a[c] === b) return c;
            return -1;
        }, K = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", L = "[\\x20\\t\\r\\n\\f]", M = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", N = M.replace("w", "w#"), O = "\\[" + L + "*(" + M + ")(?:" + L + "*([*^$|!~]?=)" + L + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + N + "))|)" + L + "*\\]", P = ":(" + M + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + O + ")*)|.*)\\)|)", Q = new RegExp(L + "+", "g"), R = new RegExp("^" + L + "+|((?:^|[^\\\\])(?:\\\\.)*)" + L + "+$", "g"), S = new RegExp("^" + L + "*," + L + "*"), T = new RegExp("^" + L + "*([>+~]|" + L + ")" + L + "*"), U = new RegExp("=" + L + "*([^\\]'\"]*?)" + L + "*\\]", "g"), V = new RegExp(P), W = new RegExp("^" + N + "$"), X = {
            ID: new RegExp("^#(" + M + ")"),
            CLASS: new RegExp("^\\.(" + M + ")"),
            TAG: new RegExp("^(" + M.replace("w", "w*") + ")"),
            ATTR: new RegExp("^" + O),
            PSEUDO: new RegExp("^" + P),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + L + "*(even|odd|(([+-]|)(\\d*)n|)" + L + "*(?:([+-]|)" + L + "*(\\d+)|))" + L + "*\\)|)", "i"),
            bool: new RegExp("^(?:" + K + ")$", "i"),
            needsContext: new RegExp("^" + L + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + L + "*((?:-\\d)?\\d*)" + L + "*\\)|)(?=[^-]|$)", "i")
        }, Y = /^(?:input|select|textarea|button)$/i, Z = /^h\d$/i, $ = /^[^{]+\{\s*\[native \w/, _ = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, aa = /[+~]/, ba = /'|\\/g, ca = new RegExp("\\\\([\\da-f]{1,6}" + L + "?|(" + L + ")|.)", "ig"), da = function(a, b, c) {
            var d = "0x" + b - 65536;
            return d !== d || c ? b : 0 > d ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320);
        }, ea = function() {
            m();
        };
        try {
            H.apply(E = I.call(v.childNodes), v.childNodes), E[v.childNodes.length].nodeType;
        } catch (a) {
            H = {
                apply: E.length ? function(a, b) {
                    G.apply(a, I.call(b));
                } : function(a, b) {
                    var c = a.length, d = 0;
                    while (a[c++] = b[d++]) ;
                    a.length = c - 1;
                }
            };
        }
        function fa(a, b, d, e) {
            var f, h, j, k, l, o, r, s, w, x;
            if ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, d = d || [], k = b.nodeType, 
            "string" != typeof a || !a || 1 !== k && 9 !== k && 11 !== k) return d;
            if (!e && p) {
                if (11 !== k && (f = _.exec(a))) if (j = f[1]) {
                    if (9 === k) {
                        if (h = b.getElementById(j), !h || !h.parentNode) return d;
                        if (h.id === j) return d.push(h), d;
                    } else if (b.ownerDocument && (h = b.ownerDocument.getElementById(j)) && t(b, h) && h.id === j) return d.push(h), 
                    d;
                } else {
                    if (f[2]) return H.apply(d, b.getElementsByTagName(a)), d;
                    if ((j = f[3]) && c.getElementsByClassName) return H.apply(d, b.getElementsByClassName(j)), 
                    d;
                }
                if (c.qsa && (!q || !q.test(a))) {
                    if (s = r = u, w = b, x = 1 !== k && a, 1 === k && "object" !== b.nodeName.toLowerCase()) {
                        o = g(a), (r = b.getAttribute("id")) ? s = r.replace(ba, "\\$&") : b.setAttribute("id", s), 
                        s = "[id='" + s + "'] ", l = o.length;
                        while (l--) o[l] = s + qa(o[l]);
                        w = aa.test(a) && oa(b.parentNode) || b, x = o.join(",");
                    }
                    if (x) try {
                        return H.apply(d, w.querySelectorAll(x)), d;
                    } catch (a) {} finally {
                        r || b.removeAttribute("id");
                    }
                }
            }
            return i(a.replace(R, "$1"), b, d, e);
        }
        function ga() {
            var a = [];
            function b(c, e) {
                return a.push(c + " ") > d.cacheLength && delete b[a.shift()], b[c + " "] = e;
            }
            return b;
        }
        function ha(a) {
            return a[u] = !0, a;
        }
        function ia(a) {
            var b = n.createElement("div");
            try {
                return !!a(b);
            } catch (a) {
                return !1;
            } finally {
                b.parentNode && b.parentNode.removeChild(b), b = null;
            }
        }
        function ja(a, b) {
            var c = a.split("|"), e = a.length;
            while (e--) d.attrHandle[c[e]] = b;
        }
        function ka(a, b) {
            var c = b && a, d = c && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || C) - (~a.sourceIndex || C);
            if (d) return d;
            if (c) while (c = c.nextSibling) if (c === b) return -1;
            return a ? 1 : -1;
        }
        function la(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return "input" === c && b.type === a;
            };
        }
        function ma(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return ("input" === c || "button" === c) && b.type === a;
            };
        }
        function na(a) {
            return ha(function(b) {
                return b = +b, ha(function(c, d) {
                    var e, f = a([], c.length, b), g = f.length;
                    while (g--) c[e = f[g]] && (c[e] = !(d[e] = c[e]));
                });
            });
        }
        function oa(a) {
            return a && "undefined" != typeof a.getElementsByTagName && a;
        }
        c = fa.support = {}, f = fa.isXML = function(a) {
            var b = a && (a.ownerDocument || a).documentElement;
            return b ? "HTML" !== b.nodeName : !1;
        }, m = fa.setDocument = function(a) {
            var b, e, g = a ? a.ownerDocument || a : v;
            return g !== n && 9 === g.nodeType && g.documentElement ? (n = g, o = g.documentElement, 
            e = g.defaultView, e && e !== e.top && (e.addEventListener ? e.addEventListener("unload", ea, !1) : e.attachEvent && e.attachEvent("onunload", ea)), 
            p = !f(g), c.attributes = ia(function(a) {
                return a.className = "i", !a.getAttribute("className");
            }), c.getElementsByTagName = ia(function(a) {
                return a.appendChild(g.createComment("")), !a.getElementsByTagName("*").length;
            }), c.getElementsByClassName = $.test(g.getElementsByClassName), c.getById = ia(function(a) {
                return o.appendChild(a).id = u, !g.getElementsByName || !g.getElementsByName(u).length;
            }), c.getById ? (d.find.ID = function(a, b) {
                if ("undefined" != typeof b.getElementById && p) {
                    var c = b.getElementById(a);
                    return c && c.parentNode ? [ c ] : [];
                }
            }, d.filter.ID = function(a) {
                var b = a.replace(ca, da);
                return function(a) {
                    return a.getAttribute("id") === b;
                };
            }) : (delete d.find.ID, d.filter.ID = function(a) {
                var b = a.replace(ca, da);
                return function(a) {
                    var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id");
                    return c && c.value === b;
                };
            }), d.find.TAG = c.getElementsByTagName ? function(a, b) {
                return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(a) : void 0;
            } : function(a, b) {
                var c, d = [], e = 0, f = b.getElementsByTagName(a);
                if ("*" === a) {
                    while (c = f[e++]) 1 === c.nodeType && d.push(c);
                    return d;
                }
                return f;
            }, d.find.CLASS = c.getElementsByClassName && function(a, b) {
                return p ? b.getElementsByClassName(a) : void 0;
            }, r = [], q = [], (c.qsa = $.test(g.querySelectorAll)) && (ia(function(a) {
                o.appendChild(a).innerHTML = "<a id='" + u + "'></a><select id='" + u + "-\f]' msallowcapture=''><option selected=''></option></select>", 
                a.querySelectorAll("[msallowcapture^='']").length && q.push("[*^$]=" + L + "*(?:''|\"\")"), 
                a.querySelectorAll("[selected]").length || q.push("\\[" + L + "*(?:value|" + K + ")"), 
                a.querySelectorAll("[id~=" + u + "-]").length || q.push("~="), a.querySelectorAll(":checked").length || q.push(":checked"), 
                a.querySelectorAll("a#" + u + "+*").length || q.push(".#.+[+~]");
            }), ia(function(a) {
                var b = g.createElement("input");
                b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && q.push("name" + L + "*[*^$|!~]?="), 
                a.querySelectorAll(":enabled").length || q.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), 
                q.push(",.*:");
            })), (c.matchesSelector = $.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ia(function(a) {
                c.disconnectedMatch = s.call(a, "div"), s.call(a, "[s!='']:x"), r.push("!=", P);
            }), q = q.length && new RegExp(q.join("|")), r = r.length && new RegExp(r.join("|")), 
            b = $.test(o.compareDocumentPosition), t = b || $.test(o.contains) ? function(a, b) {
                var c = 9 === a.nodeType ? a.documentElement : a, d = b && b.parentNode;
                return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)));
            } : function(a, b) {
                if (b) while (b = b.parentNode) if (b === a) return !0;
                return !1;
            }, B = b ? function(a, b) {
                if (a === b) return l = !0, 0;
                var d = !a.compareDocumentPosition - !b.compareDocumentPosition;
                return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 
                1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === g || a.ownerDocument === v && t(v, a) ? -1 : b === g || b.ownerDocument === v && t(v, b) ? 1 : k ? J(k, a) - J(k, b) : 0 : 4 & d ? -1 : 1);
            } : function(a, b) {
                if (a === b) return l = !0, 0;
                var c, d = 0, e = a.parentNode, f = b.parentNode, h = [ a ], i = [ b ];
                if (!e || !f) return a === g ? -1 : b === g ? 1 : e ? -1 : f ? 1 : k ? J(k, a) - J(k, b) : 0;
                if (e === f) return ka(a, b);
                c = a;
                while (c = c.parentNode) h.unshift(c);
                c = b;
                while (c = c.parentNode) i.unshift(c);
                while (h[d] === i[d]) d++;
                return d ? ka(h[d], i[d]) : h[d] === v ? -1 : i[d] === v ? 1 : 0;
            }, g) : n;
        }, fa.matches = function(a, b) {
            return fa(a, null, null, b);
        }, fa.matchesSelector = function(a, b) {
            if ((a.ownerDocument || a) !== n && m(a), b = b.replace(U, "='$1']"), !(!c.matchesSelector || !p || r && r.test(b) || q && q.test(b))) try {
                var d = s.call(a, b);
                if (d || c.disconnectedMatch || a.document && 11 !== a.document.nodeType) return d;
            } catch (a) {}
            return fa(b, n, null, [ a ]).length > 0;
        }, fa.contains = function(a, b) {
            return (a.ownerDocument || a) !== n && m(a), t(a, b);
        }, fa.attr = function(a, b) {
            (a.ownerDocument || a) !== n && m(a);
            var e = d.attrHandle[b.toLowerCase()], f = e && D.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0;
            return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null;
        }, fa.error = function(a) {
            throw new Error("Syntax error, unrecognized expression: " + a);
        }, fa.uniqueSort = function(a) {
            var b, d = [], e = 0, f = 0;
            if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(0), a.sort(B), l) {
                while (b = a[f++]) b === a[f] && (e = d.push(f));
                while (e--) a.splice(d[e], 1);
            }
            return k = null, a;
        }, e = fa.getText = function(a) {
            var b, c = "", d = 0, f = a.nodeType;
            if (f) {
                if (1 === f || 9 === f || 11 === f) {
                    if ("string" == typeof a.textContent) return a.textContent;
                    for (a = a.firstChild; a; a = a.nextSibling) c += e(a);
                } else if (3 === f || 4 === f) return a.nodeValue;
            } else while (b = a[d++]) c += e(b);
            return c;
        }, d = fa.selectors = {
            cacheLength: 50,
            createPseudo: ha,
            match: X,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(a) {
                    return a[1] = a[1].replace(ca, da), a[3] = (a[3] || a[4] || a[5] || "").replace(ca, da), 
                    "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4);
                },
                CHILD: function(a) {
                    return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || fa.error(a[0]), 
                    a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && fa.error(a[0]), 
                    a;
                },
                PSEUDO: function(a) {
                    var b, c = !a[6] && a[2];
                    return X.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && V.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), 
                    a[2] = c.slice(0, b)), a.slice(0, 3));
                }
            },
            filter: {
                TAG: function(a) {
                    var b = a.replace(ca, da).toLowerCase();
                    return "*" === a ? function() {
                        return !0;
                    } : function(a) {
                        return a.nodeName && a.nodeName.toLowerCase() === b;
                    };
                },
                CLASS: function(a) {
                    var b = y[a + " "];
                    return b || (b = new RegExp("(^|" + L + ")" + a + "(" + L + "|$)")) && y(a, function(a) {
                        return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "");
                    });
                },
                ATTR: function(a, b, c) {
                    return function(d) {
                        var e = fa.attr(d, a);
                        return null == e ? "!=" === b : b ? (e += "", "=" === b ? e === c : "!=" === b ? e !== c : "^=" === b ? c && 0 === e.indexOf(c) : "*=" === b ? c && e.indexOf(c) > -1 : "$=" === b ? c && e.slice(-c.length) === c : "~=" === b ? (" " + e.replace(Q, " ") + " ").indexOf(c) > -1 : "|=" === b ? e === c || e.slice(0, c.length + 1) === c + "-" : !1) : !0;
                    };
                },
                CHILD: function(a, b, c, d, e) {
                    var f = "nth" !== a.slice(0, 3), g = "last" !== a.slice(-4), h = "of-type" === b;
                    return 1 === d && 0 === e ? function(a) {
                        return !!a.parentNode;
                    } : function(b, c, i) {
                        var j, k, l, m, n, o, p = f !== g ? "nextSibling" : "previousSibling", q = b.parentNode, r = h && b.nodeName.toLowerCase(), s = !i && !h;
                        if (q) {
                            if (f) {
                                while (p) {
                                    l = b;
                                    while (l = l[p]) if (h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) return !1;
                                    o = p = "only" === a && !o && "nextSibling";
                                }
                                return !0;
                            }
                            if (o = [ g ? q.firstChild : q.lastChild ], g && s) {
                                k = q[u] || (q[u] = {}), j = k[a] || [], n = j[0] === w && j[1], m = j[0] === w && j[2], 
                                l = n && q.childNodes[n];
                                while (l = ++n && l && l[p] || (m = n = 0) || o.pop()) if (1 === l.nodeType && ++m && l === b) {
                                    k[a] = [ w, n, m ];
                                    break;
                                }
                            } else if (s && (j = (b[u] || (b[u] = {}))[a]) && j[0] === w) m = j[1]; else while (l = ++n && l && l[p] || (m = n = 0) || o.pop()) if ((h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) && ++m && (s && ((l[u] || (l[u] = {}))[a] = [ w, m ]), 
                            l === b)) break;
                            return m -= e, m === d || m % d === 0 && m / d >= 0;
                        }
                    };
                },
                PSEUDO: function(a, b) {
                    var c, e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || fa.error("unsupported pseudo: " + a);
                    return e[u] ? e(b) : e.length > 1 ? (c = [ a, a, "", b ], d.setFilters.hasOwnProperty(a.toLowerCase()) ? ha(function(a, c) {
                        var d, f = e(a, b), g = f.length;
                        while (g--) d = J(a, f[g]), a[d] = !(c[d] = f[g]);
                    }) : function(a) {
                        return e(a, 0, c);
                    }) : e;
                }
            },
            pseudos: {
                not: ha(function(a) {
                    var b = [], c = [], d = h(a.replace(R, "$1"));
                    return d[u] ? ha(function(a, b, c, e) {
                        var f, g = d(a, null, e, []), h = a.length;
                        while (h--) (f = g[h]) && (a[h] = !(b[h] = f));
                    }) : function(a, e, f) {
                        return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop();
                    };
                }),
                has: ha(function(a) {
                    return function(b) {
                        return fa(a, b).length > 0;
                    };
                }),
                contains: ha(function(a) {
                    return a = a.replace(ca, da), function(b) {
                        return (b.textContent || b.innerText || e(b)).indexOf(a) > -1;
                    };
                }),
                lang: ha(function(a) {
                    return W.test(a || "") || fa.error("unsupported lang: " + a), a = a.replace(ca, da).toLowerCase(), 
                    function(b) {
                        var c;
                        do {
                            if (c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) return c = c.toLowerCase(), 
                            c === a || 0 === c.indexOf(a + "-");
                        } while ((b = b.parentNode) && 1 === b.nodeType);
                        return !1;
                    };
                }),
                target: function(b) {
                    var c = a.location && a.location.hash;
                    return c && c.slice(1) === b.id;
                },
                root: function(a) {
                    return a === o;
                },
                focus: function(a) {
                    return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex);
                },
                enabled: function(a) {
                    return a.disabled === !1;
                },
                disabled: function(a) {
                    return a.disabled === !0;
                },
                checked: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && !!a.checked || "option" === b && !!a.selected;
                },
                selected: function(a) {
                    return a.parentNode && a.parentNode.selectedIndex, a.selected === !0;
                },
                empty: function(a) {
                    for (a = a.firstChild; a; a = a.nextSibling) if (a.nodeType < 6) return !1;
                    return !0;
                },
                parent: function(a) {
                    return !d.pseudos.empty(a);
                },
                header: function(a) {
                    return Z.test(a.nodeName);
                },
                input: function(a) {
                    return Y.test(a.nodeName);
                },
                button: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && "button" === a.type || "button" === b;
                },
                text: function(a) {
                    var b;
                    return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase());
                },
                first: na(function() {
                    return [ 0 ];
                }),
                last: na(function(a, b) {
                    return [ b - 1 ];
                }),
                eq: na(function(a, b, c) {
                    return [ 0 > c ? c + b : c ];
                }),
                even: na(function(a, b) {
                    for (var c = 0; b > c; c += 2) a.push(c);
                    return a;
                }),
                odd: na(function(a, b) {
                    for (var c = 1; b > c; c += 2) a.push(c);
                    return a;
                }),
                lt: na(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c; --d >= 0; ) a.push(d);
                    return a;
                }),
                gt: na(function(a, b, c) {
                    for (var d = 0 > c ? c + b : c; ++d < b; ) a.push(d);
                    return a;
                })
            }
        }, d.pseudos.nth = d.pseudos.eq;
        for (b in {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        }) d.pseudos[b] = la(b);
        for (b in {
            submit: !0,
            reset: !0
        }) d.pseudos[b] = ma(b);
        function pa() {}
        pa.prototype = d.filters = d.pseudos, d.setFilters = new pa(), g = fa.tokenize = function(a, b) {
            var c, e, f, g, h, i, j, k = z[a + " "];
            if (k) return b ? 0 : k.slice(0);
            h = a, i = [], j = d.preFilter;
            while (h) {
                (!c || (e = S.exec(h))) && (e && (h = h.slice(e[0].length) || h), i.push(f = [])), 
                c = !1, (e = T.exec(h)) && (c = e.shift(), f.push({
                    value: c,
                    type: e[0].replace(R, " ")
                }), h = h.slice(c.length));
                for (g in d.filter) !(e = X[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(), 
                f.push({
                    value: c,
                    type: g,
                    matches: e
                }), h = h.slice(c.length));
                if (!c) break;
            }
            return b ? h.length : h ? fa.error(a) : z(a, i).slice(0);
        };
        function qa(a) {
            for (var b = 0, c = a.length, d = ""; c > b; b++) d += a[b].value;
            return d;
        }
        function ra(a, b, c) {
            var d = b.dir, e = c && "parentNode" === d, f = x++;
            return b.first ? function(b, c, f) {
                while (b = b[d]) if (1 === b.nodeType || e) return a(b, c, f);
            } : function(b, c, g) {
                var h, i, j = [ w, f ];
                if (g) {
                    while (b = b[d]) if ((1 === b.nodeType || e) && a(b, c, g)) return !0;
                } else while (b = b[d]) if (1 === b.nodeType || e) {
                    if (i = b[u] || (b[u] = {}), (h = i[d]) && h[0] === w && h[1] === f) return j[2] = h[2];
                    if (i[d] = j, j[2] = a(b, c, g)) return !0;
                }
            };
        }
        function sa(a) {
            return a.length > 1 ? function(b, c, d) {
                var e = a.length;
                while (e--) if (!a[e](b, c, d)) return !1;
                return !0;
            } : a[0];
        }
        function ta(a, b, c) {
            for (var d = 0, e = b.length; e > d; d++) fa(a, b[d], c);
            return c;
        }
        function ua(a, b, c, d, e) {
            for (var f, g = [], h = 0, i = a.length, j = null != b; i > h; h++) (f = a[h]) && (!c || c(f, d, e)) && (g.push(f), 
            j && b.push(h));
            return g;
        }
        function va(a, b, c, d, e, f) {
            return d && !d[u] && (d = va(d)), e && !e[u] && (e = va(e, f)), ha(function(f, g, h, i) {
                var j, k, l, m = [], n = [], o = g.length, p = f || ta(b || "*", h.nodeType ? [ h ] : h, []), q = !a || !f && b ? p : ua(p, m, a, h, i), r = c ? e || (f ? a : o || d) ? [] : g : q;
                if (c && c(q, r, h, i), d) {
                    j = ua(r, n), d(j, [], h, i), k = j.length;
                    while (k--) (l = j[k]) && (r[n[k]] = !(q[n[k]] = l));
                }
                if (f) {
                    if (e || a) {
                        if (e) {
                            j = [], k = r.length;
                            while (k--) (l = r[k]) && j.push(q[k] = l);
                            e(null, r = [], j, i);
                        }
                        k = r.length;
                        while (k--) (l = r[k]) && (j = e ? J(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l));
                    }
                } else r = ua(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : H.apply(g, r);
            });
        }
        function wa(a) {
            for (var b, c, e, f = a.length, g = d.relative[a[0].type], h = g || d.relative[" "], i = g ? 1 : 0, k = ra(function(a) {
                return a === b;
            }, h, !0), l = ra(function(a) {
                return J(b, a) > -1;
            }, h, !0), m = [ function(a, c, d) {
                var e = !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d));
                return b = null, e;
            } ]; f > i; i++) if (c = d.relative[a[i].type]) m = [ ra(sa(m), c) ]; else {
                if (c = d.filter[a[i].type].apply(null, a[i].matches), c[u]) {
                    for (e = ++i; f > e; e++) if (d.relative[a[e].type]) break;
                    return va(i > 1 && sa(m), i > 1 && qa(a.slice(0, i - 1).concat({
                        value: " " === a[i - 2].type ? "*" : ""
                    })).replace(R, "$1"), c, e > i && wa(a.slice(i, e)), f > e && wa(a = a.slice(e)), f > e && qa(a));
                }
                m.push(c);
            }
            return sa(m);
        }
        function xa(a, b) {
            var c = b.length > 0, e = a.length > 0, f = function(f, g, h, i, k) {
                var l, m, o, p = 0, q = "0", r = f && [], s = [], t = j, u = f || e && d.find.TAG("*", k), v = w += null == t ? 1 : Math.random() || .1, x = u.length;
                for (k && (j = g !== n && g); q !== x && null != (l = u[q]); q++) {
                    if (e && l) {
                        m = 0;
                        while (o = a[m++]) if (o(l, g, h)) {
                            i.push(l);
                            break;
                        }
                        k && (w = v);
                    }
                    c && ((l = !o && l) && p--, f && r.push(l));
                }
                if (p += q, c && q !== p) {
                    m = 0;
                    while (o = b[m++]) o(r, s, g, h);
                    if (f) {
                        if (p > 0) while (q--) r[q] || s[q] || (s[q] = F.call(i));
                        s = ua(s);
                    }
                    H.apply(i, s), k && !f && s.length > 0 && p + b.length > 1 && fa.uniqueSort(i);
                }
                return k && (w = v, j = t), r;
            };
            return c ? ha(f) : f;
        }
        return h = fa.compile = function(a, b) {
            var c, d = [], e = [], f = A[a + " "];
            if (!f) {
                b || (b = g(a)), c = b.length;
                while (c--) f = wa(b[c]), f[u] ? d.push(f) : e.push(f);
                f = A(a, xa(e, d)), f.selector = a;
            }
            return f;
        }, i = fa.select = function(a, b, e, f) {
            var i, j, k, l, m, n = "function" == typeof a && a, o = !f && g(a = n.selector || a);
            if (e = e || [], 1 === o.length) {
                if (j = o[0] = o[0].slice(0), j.length > 2 && "ID" === (k = j[0]).type && c.getById && 9 === b.nodeType && p && d.relative[j[1].type]) {
                    if (b = (d.find.ID(k.matches[0].replace(ca, da), b) || [])[0], !b) return e;
                    n && (b = b.parentNode), a = a.slice(j.shift().value.length);
                }
                i = X.needsContext.test(a) ? 0 : j.length;
                while (i--) {
                    if (k = j[i], d.relative[l = k.type]) break;
                    if ((m = d.find[l]) && (f = m(k.matches[0].replace(ca, da), aa.test(j[0].type) && oa(b.parentNode) || b))) {
                        if (j.splice(i, 1), a = f.length && qa(j), !a) return H.apply(e, f), e;
                        break;
                    }
                }
            }
            return (n || h(a, o))(f, b, !p, e, aa.test(a) && oa(b.parentNode) || b), e;
        }, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !!l, 
        m(), c.sortDetached = ia(function(a) {
            return 1 & a.compareDocumentPosition(n.createElement("div"));
        }), ia(function(a) {
            return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href");
        }) || ja("type|href|height|width", function(a, b, c) {
            return c ? void 0 : a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2);
        }), c.attributes && ia(function(a) {
            return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value");
        }) || ja("value", function(a, b, c) {
            return c || "input" !== a.nodeName.toLowerCase() ? void 0 : a.defaultValue;
        }), ia(function(a) {
            return null == a.getAttribute("disabled");
        }) || ja(K, function(a, b, c) {
            var d;
            return c ? void 0 : a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null;
        }), fa;
    }(a);
    n.find = t, n.expr = t.selectors, n.expr[":"] = n.expr.pseudos, n.unique = t.uniqueSort, 
    n.text = t.getText, n.isXMLDoc = t.isXML, n.contains = t.contains;
    var u = n.expr.match.needsContext, v = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, w = /^.[^:#\[\.,]*$/;
    function x(a, b, c) {
        if (n.isFunction(b)) return n.grep(a, function(a, d) {
            return !!b.call(a, d, a) !== c;
        });
        if (b.nodeType) return n.grep(a, function(a) {
            return a === b !== c;
        });
        if ("string" == typeof b) {
            if (w.test(b)) return n.filter(b, a, c);
            b = n.filter(b, a);
        }
        return n.grep(a, function(a) {
            return g.call(b, a) >= 0 !== c;
        });
    }
    n.filter = function(a, b, c) {
        var d = b[0];
        return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? n.find.matchesSelector(d, a) ? [ d ] : [] : n.find.matches(a, n.grep(b, function(a) {
            return 1 === a.nodeType;
        }));
    }, n.fn.extend({
        find: function(a) {
            var b, c = this.length, d = [], e = this;
            if ("string" != typeof a) return this.pushStack(n(a).filter(function() {
                for (b = 0; c > b; b++) if (n.contains(e[b], this)) return !0;
            }));
            for (b = 0; c > b; b++) n.find(a, e[b], d);
            return d = this.pushStack(c > 1 ? n.unique(d) : d), d.selector = this.selector ? this.selector + " " + a : a, 
            d;
        },
        filter: function(a) {
            return this.pushStack(x(this, a || [], !1));
        },
        not: function(a) {
            return this.pushStack(x(this, a || [], !0));
        },
        is: function(a) {
            return !!x(this, "string" == typeof a && u.test(a) ? n(a) : a || [], !1).length;
        }
    });
    var y, z = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/, A = n.fn.init = function(a, b) {
        var c, d;
        if (!a) return this;
        if ("string" == typeof a) {
            if (c = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [ null, a, null ] : z.exec(a), 
            !c || !c[1] && b) return !b || b.jquery ? (b || y).find(a) : this.constructor(b).find(a);
            if (c[1]) {
                if (b = b instanceof n ? b[0] : b, n.merge(this, n.parseHTML(c[1], b && b.nodeType ? b.ownerDocument || b : l, !0)), 
                v.test(c[1]) && n.isPlainObject(b)) for (c in b) n.isFunction(this[c]) ? this[c](b[c]) : this.attr(c, b[c]);
                return this;
            }
            return d = l.getElementById(c[2]), d && d.parentNode && (this.length = 1, this[0] = d), 
            this.context = l, this.selector = a, this;
        }
        return a.nodeType ? (this.context = this[0] = a, this.length = 1, this) : n.isFunction(a) ? "undefined" != typeof y.ready ? y.ready(a) : a(n) : (void 0 !== a.selector && (this.selector = a.selector, 
        this.context = a.context), n.makeArray(a, this));
    };
    A.prototype = n.fn, y = n(l);
    var B = /^(?:parents|prev(?:Until|All))/, C = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    n.extend({
        dir: function(a, b, c) {
            var d = [], e = void 0 !== c;
            while ((a = a[b]) && 9 !== a.nodeType) if (1 === a.nodeType) {
                if (e && n(a).is(c)) break;
                d.push(a);
            }
            return d;
        },
        sibling: function(a, b) {
            for (var c = []; a; a = a.nextSibling) 1 === a.nodeType && a !== b && c.push(a);
            return c;
        }
    }), n.fn.extend({
        has: function(a) {
            var b = n(a, this), c = b.length;
            return this.filter(function() {
                for (var a = 0; c > a; a++) if (n.contains(this, b[a])) return !0;
            });
        },
        closest: function(a, b) {
            for (var c, d = 0, e = this.length, f = [], g = u.test(a) || "string" != typeof a ? n(a, b || this.context) : 0; e > d; d++) for (c = this[d]; c && c !== b; c = c.parentNode) if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && n.find.matchesSelector(c, a))) {
                f.push(c);
                break;
            }
            return this.pushStack(f.length > 1 ? n.unique(f) : f);
        },
        index: function(a) {
            return a ? "string" == typeof a ? g.call(n(a), this[0]) : g.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        },
        add: function(a, b) {
            return this.pushStack(n.unique(n.merge(this.get(), n(a, b))));
        },
        addBack: function(a) {
            return this.add(null == a ? this.prevObject : this.prevObject.filter(a));
        }
    });
    function D(a, b) {
        while ((a = a[b]) && 1 !== a.nodeType) ;
        return a;
    }
    n.each({
        parent: function(a) {
            var b = a.parentNode;
            return b && 11 !== b.nodeType ? b : null;
        },
        parents: function(a) {
            return n.dir(a, "parentNode");
        },
        parentsUntil: function(a, b, c) {
            return n.dir(a, "parentNode", c);
        },
        next: function(a) {
            return D(a, "nextSibling");
        },
        prev: function(a) {
            return D(a, "previousSibling");
        },
        nextAll: function(a) {
            return n.dir(a, "nextSibling");
        },
        prevAll: function(a) {
            return n.dir(a, "previousSibling");
        },
        nextUntil: function(a, b, c) {
            return n.dir(a, "nextSibling", c);
        },
        prevUntil: function(a, b, c) {
            return n.dir(a, "previousSibling", c);
        },
        siblings: function(a) {
            return n.sibling((a.parentNode || {}).firstChild, a);
        },
        children: function(a) {
            return n.sibling(a.firstChild);
        },
        contents: function(a) {
            return a.contentDocument || n.merge([], a.childNodes);
        }
    }, function(a, b) {
        n.fn[a] = function(c, d) {
            var e = n.map(this, b, c);
            return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = n.filter(d, e)), 
            this.length > 1 && (C[a] || n.unique(e), B.test(a) && e.reverse()), this.pushStack(e);
        };
    });
    var E = /\S+/g, F = {};
    function G(a) {
        var b = F[a] = {};
        return n.each(a.match(E) || [], function(a, c) {
            b[c] = !0;
        }), b;
    }
    n.Callbacks = function(a) {
        a = "string" == typeof a ? F[a] || G(a) : n.extend({}, a);
        var b, c, d, e, f, g, h = [], i = !a.once && [], j = function(l) {
            for (b = a.memory && l, c = !0, g = e || 0, e = 0, f = h.length, d = !0; h && f > g; g++) if (h[g].apply(l[0], l[1]) === !1 && a.stopOnFalse) {
                b = !1;
                break;
            }
            d = !1, h && (i ? i.length && j(i.shift()) : b ? h = [] : k.disable());
        }, k = {
            add: function() {
                if (h) {
                    var c = h.length;
                    !function b(c) {
                        n.each(c, function(c, d) {
                            var e = n.type(d);
                            "function" === e ? a.unique && k.has(d) || h.push(d) : d && d.length && "string" !== e && b(d);
                        });
                    }(arguments), d ? f = h.length : b && (e = c, j(b));
                }
                return this;
            },
            remove: function() {
                return h && n.each(arguments, function(a, b) {
                    var c;
                    while ((c = n.inArray(b, h, c)) > -1) h.splice(c, 1), d && (f >= c && f--, g >= c && g--);
                }), this;
            },
            has: function(a) {
                return a ? n.inArray(a, h) > -1 : !(!h || !h.length);
            },
            empty: function() {
                return h = [], f = 0, this;
            },
            disable: function() {
                return h = i = b = void 0, this;
            },
            disabled: function() {
                return !h;
            },
            lock: function() {
                return i = void 0, b || k.disable(), this;
            },
            locked: function() {
                return !i;
            },
            fireWith: function(a, b) {
                return !h || c && !i || (b = b || [], b = [ a, b.slice ? b.slice() : b ], d ? i.push(b) : j(b)), 
                this;
            },
            fire: function() {
                return k.fireWith(this, arguments), this;
            },
            fired: function() {
                return !!c;
            }
        };
        return k;
    }, n.extend({
        Deferred: function(a) {
            var b = [ [ "resolve", "done", n.Callbacks("once memory"), "resolved" ], [ "reject", "fail", n.Callbacks("once memory"), "rejected" ], [ "notify", "progress", n.Callbacks("memory") ] ], c = "pending", d = {
                state: function() {
                    return c;
                },
                always: function() {
                    return e.done(arguments).fail(arguments), this;
                },
                then: function() {
                    var a = arguments;
                    return n.Deferred(function(c) {
                        n.each(b, function(b, f) {
                            var g = n.isFunction(a[b]) && a[b];
                            e[f[1]](function() {
                                var a = g && g.apply(this, arguments);
                                a && n.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[f[0] + "With"](this === d ? c.promise() : this, g ? [ a ] : arguments);
                            });
                        }), a = null;
                    }).promise();
                },
                promise: function(a) {
                    return null != a ? n.extend(a, d) : d;
                }
            }, e = {};
            return d.pipe = d.then, n.each(b, function(a, f) {
                var g = f[2], h = f[3];
                d[f[1]] = g.add, h && g.add(function() {
                    c = h;
                }, b[1 ^ a][2].disable, b[2][2].lock), e[f[0]] = function() {
                    return e[f[0] + "With"](this === e ? d : this, arguments), this;
                }, e[f[0] + "With"] = g.fireWith;
            }), d.promise(e), a && a.call(e, e), e;
        },
        when: function(a) {
            var b = 0, c = d.call(arguments), e = c.length, f = 1 !== e || a && n.isFunction(a.promise) ? e : 0, g = 1 === f ? a : n.Deferred(), h = function(a, b, c) {
                return function(e) {
                    b[a] = this, c[a] = arguments.length > 1 ? d.call(arguments) : e, c === i ? g.notifyWith(b, c) : --f || g.resolveWith(b, c);
                };
            }, i, j, k;
            if (e > 1) for (i = new Array(e), j = new Array(e), k = new Array(e); e > b; b++) c[b] && n.isFunction(c[b].promise) ? c[b].promise().done(h(b, k, c)).fail(g.reject).progress(h(b, j, i)) : --f;
            return f || g.resolveWith(k, c), g.promise();
        }
    });
    var H;
    n.fn.ready = function(a) {
        return n.ready.promise().done(a), this;
    }, n.extend({
        isReady: !1,
        readyWait: 1,
        holdReady: function(a) {
            a ? n.readyWait++ : n.ready(!0);
        },
        ready: function(a) {
            (a === !0 ? --n.readyWait : n.isReady) || (n.isReady = !0, a !== !0 && --n.readyWait > 0 || (H.resolveWith(l, [ n ]), 
            n.fn.triggerHandler && (n(l).triggerHandler("ready"), n(l).off("ready"))));
        }
    });
    function I() {
        l.removeEventListener("DOMContentLoaded", I, !1), a.removeEventListener("load", I, !1), 
        n.ready();
    }
    n.ready.promise = function(b) {
        return H || (H = n.Deferred(), "complete" === l.readyState ? setTimeout(n.ready) : (l.addEventListener("DOMContentLoaded", I, !1), 
        a.addEventListener("load", I, !1))), H.promise(b);
    }, n.ready.promise();
    var J = n.access = function(a, b, c, d, e, f, g) {
        var h = 0, i = a.length, j = null == c;
        if ("object" === n.type(c)) {
            e = !0;
            for (h in c) n.access(a, b, h, c[h], !0, f, g);
        } else if (void 0 !== d && (e = !0, n.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), 
        b = null) : (j = b, b = function(a, b, c) {
            return j.call(n(a), c);
        })), b)) for (;i > h; h++) b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)));
        return e ? a : j ? b.call(a) : i ? b(a[0], c) : f;
    };
    n.acceptData = function(a) {
        return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType;
    };
    function K() {
        Object.defineProperty(this.cache = {}, 0, {
            get: function() {
                return {};
            }
        }), this.expando = n.expando + K.uid++;
    }
    K.uid = 1, K.accepts = n.acceptData, K.prototype = {
        key: function(a) {
            if (!K.accepts(a)) return 0;
            var b = {}, c = a[this.expando];
            if (!c) {
                c = K.uid++;
                try {
                    b[this.expando] = {
                        value: c
                    }, Object.defineProperties(a, b);
                } catch (d) {
                    b[this.expando] = c, n.extend(a, b);
                }
            }
            return this.cache[c] || (this.cache[c] = {}), c;
        },
        set: function(a, b, c) {
            var d, e = this.key(a), f = this.cache[e];
            if ("string" == typeof b) f[b] = c; else if (n.isEmptyObject(f)) n.extend(this.cache[e], b); else for (d in b) f[d] = b[d];
            return f;
        },
        get: function(a, b) {
            var c = this.cache[this.key(a)];
            return void 0 === b ? c : c[b];
        },
        access: function(a, b, c) {
            var d;
            return void 0 === b || b && "string" == typeof b && void 0 === c ? (d = this.get(a, b), 
            void 0 !== d ? d : this.get(a, n.camelCase(b))) : (this.set(a, b, c), void 0 !== c ? c : b);
        },
        remove: function(a, b) {
            var c, d, e, f = this.key(a), g = this.cache[f];
            if (void 0 === b) this.cache[f] = {}; else {
                n.isArray(b) ? d = b.concat(b.map(n.camelCase)) : (e = n.camelCase(b), b in g ? d = [ b, e ] : (d = e, 
                d = d in g ? [ d ] : d.match(E) || [])), c = d.length;
                while (c--) delete g[d[c]];
            }
        },
        hasData: function(a) {
            return !n.isEmptyObject(this.cache[a[this.expando]] || {});
        },
        discard: function(a) {
            a[this.expando] && delete this.cache[a[this.expando]];
        }
    };
    var L = new K(), M = new K(), N = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, O = /([A-Z])/g;
    function P(a, b, c) {
        var d;
        if (void 0 === c && 1 === a.nodeType) if (d = "data-" + b.replace(O, "-$1").toLowerCase(), 
        c = a.getAttribute(d), "string" == typeof c) {
            try {
                c = "true" === c ? !0 : "false" === c ? !1 : "null" === c ? null : +c + "" === c ? +c : N.test(c) ? n.parseJSON(c) : c;
            } catch (a) {}
            M.set(a, b, c);
        } else c = void 0;
        return c;
    }
    n.extend({
        hasData: function(a) {
            return M.hasData(a) || L.hasData(a);
        },
        data: function(a, b, c) {
            return M.access(a, b, c);
        },
        removeData: function(a, b) {
            M.remove(a, b);
        },
        _data: function(a, b, c) {
            return L.access(a, b, c);
        },
        _removeData: function(a, b) {
            L.remove(a, b);
        }
    }), n.fn.extend({
        data: function(a, b) {
            var c, d, e, f = this[0], g = f && f.attributes;
            if (void 0 === a) {
                if (this.length && (e = M.get(f), 1 === f.nodeType && !L.get(f, "hasDataAttrs"))) {
                    c = g.length;
                    while (c--) g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = n.camelCase(d.slice(5)), 
                    P(f, d, e[d])));
                    L.set(f, "hasDataAttrs", !0);
                }
                return e;
            }
            return "object" == typeof a ? this.each(function() {
                M.set(this, a);
            }) : J(this, function(b) {
                var c, d = n.camelCase(a);
                if (f && void 0 === b) {
                    if (c = M.get(f, a), void 0 !== c) return c;
                    if (c = M.get(f, d), void 0 !== c) return c;
                    if (c = P(f, d, void 0), void 0 !== c) return c;
                } else this.each(function() {
                    var c = M.get(this, d);
                    M.set(this, d, b), -1 !== a.indexOf("-") && void 0 !== c && M.set(this, a, b);
                });
            }, null, b, arguments.length > 1, null, !0);
        },
        removeData: function(a) {
            return this.each(function() {
                M.remove(this, a);
            });
        }
    }), n.extend({
        queue: function(a, b, c) {
            var d;
            return a ? (b = (b || "fx") + "queue", d = L.get(a, b), c && (!d || n.isArray(c) ? d = L.access(a, b, n.makeArray(c)) : d.push(c)), 
            d || []) : void 0;
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var c = n.queue(a, b), d = c.length, e = c.shift(), f = n._queueHooks(a, b), g = function() {
                n.dequeue(a, b);
            };
            "inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), 
            delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire();
        },
        _queueHooks: function(a, b) {
            var c = b + "queueHooks";
            return L.get(a, c) || L.access(a, c, {
                empty: n.Callbacks("once memory").add(function() {
                    L.remove(a, [ b + "queue", c ]);
                })
            });
        }
    }), n.fn.extend({
        queue: function(a, b) {
            var c = 2;
            return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? n.queue(this[0], a) : void 0 === b ? this : this.each(function() {
                var c = n.queue(this, a, b);
                n._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && n.dequeue(this, a);
            });
        },
        dequeue: function(a) {
            return this.each(function() {
                n.dequeue(this, a);
            });
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", []);
        },
        promise: function(a, b) {
            var c, d = 1, e = n.Deferred(), f = this, g = this.length, h = function() {
                --d || e.resolveWith(f, [ f ]);
            };
            "string" != typeof a && (b = a, a = void 0), a = a || "fx";
            while (g--) c = L.get(f[g], a + "queueHooks"), c && c.empty && (d++, c.empty.add(h));
            return h(), e.promise(b);
        }
    });
    var Q = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, R = [ "Top", "Right", "Bottom", "Left" ], S = function(a, b) {
        return a = b || a, "none" === n.css(a, "display") || !n.contains(a.ownerDocument, a);
    }, T = /^(?:checkbox|radio)$/i;
    !function() {
        var a = l.createDocumentFragment(), b = a.appendChild(l.createElement("div")), c = l.createElement("input");
        c.setAttribute("type", "radio"), c.setAttribute("checked", "checked"), c.setAttribute("name", "t"), 
        b.appendChild(c), k.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, 
        b.innerHTML = "<textarea>x</textarea>", k.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue;
    }();
    var U = "undefined";
    k.focusinBubbles = "onfocusin" in a;
    var V = /^key/, W = /^(?:mouse|pointer|contextmenu)|click/, X = /^(?:focusinfocus|focusoutblur)$/, Y = /^([^.]*)(?:\.(.+)|)$/;
    function Z() {
        return !0;
    }
    function $() {
        return !1;
    }
    function _() {
        try {
            return l.activeElement;
        } catch (a) {}
    }
    n.event = {
        global: {},
        add: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, o, p, q, r = L.get(a);
            if (r) {
                c.handler && (f = c, c = f.handler, e = f.selector), c.guid || (c.guid = n.guid++), 
                (i = r.events) || (i = r.events = {}), (g = r.handle) || (g = r.handle = function(b) {
                    return typeof n !== U && n.event.triggered !== b.type ? n.event.dispatch.apply(a, arguments) : void 0;
                }), b = (b || "").match(E) || [ "" ], j = b.length;
                while (j--) h = Y.exec(b[j]) || [], o = q = h[1], p = (h[2] || "").split(".").sort(), 
                o && (l = n.event.special[o] || {}, o = (e ? l.delegateType : l.bindType) || o, 
                l = n.event.special[o] || {}, k = n.extend({
                    type: o,
                    origType: q,
                    data: d,
                    handler: c,
                    guid: c.guid,
                    selector: e,
                    needsContext: e && n.expr.match.needsContext.test(e),
                    namespace: p.join(".")
                }, f), (m = i[o]) || (m = i[o] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, p, g) !== !1 || a.addEventListener && a.addEventListener(o, g, !1)), 
                l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), 
                n.event.global[o] = !0);
            }
        },
        remove: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, o, p, q, r = L.hasData(a) && L.get(a);
            if (r && (i = r.events)) {
                b = (b || "").match(E) || [ "" ], j = b.length;
                while (j--) if (h = Y.exec(b[j]) || [], o = q = h[1], p = (h[2] || "").split(".").sort(), 
                o) {
                    l = n.event.special[o] || {}, o = (d ? l.delegateType : l.bindType) || o, m = i[o] || [], 
                    h = h[2] && new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)"), g = f = m.length;
                    while (f--) k = m[f], !e && q !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && ("**" !== d || !k.selector) || (m.splice(f, 1), 
                    k.selector && m.delegateCount--, l.remove && l.remove.call(a, k));
                    g && !m.length && (l.teardown && l.teardown.call(a, p, r.handle) !== !1 || n.removeEvent(a, o, r.handle), 
                    delete i[o]);
                } else for (o in i) n.event.remove(a, o + b[j], c, d, !0);
                n.isEmptyObject(i) && (delete r.handle, L.remove(a, "events"));
            }
        },
        trigger: function(b, c, d, e) {
            var f, g, h, i, k, m, o, p = [ d || l ], q = j.call(b, "type") ? b.type : b, r = j.call(b, "namespace") ? b.namespace.split(".") : [];
            if (g = h = d = d || l, 3 !== d.nodeType && 8 !== d.nodeType && !X.test(q + n.event.triggered) && (q.indexOf(".") >= 0 && (r = q.split("."), 
            q = r.shift(), r.sort()), k = q.indexOf(":") < 0 && "on" + q, b = b[n.expando] ? b : new n.Event(q, "object" == typeof b && b), 
            b.isTrigger = e ? 2 : 3, b.namespace = r.join("."), b.namespace_re = b.namespace ? new RegExp("(^|\\.)" + r.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, 
            b.result = void 0, b.target || (b.target = d), c = null == c ? [ b ] : n.makeArray(c, [ b ]), 
            o = n.event.special[q] || {}, e || !o.trigger || o.trigger.apply(d, c) !== !1)) {
                if (!e && !o.noBubble && !n.isWindow(d)) {
                    for (i = o.delegateType || q, X.test(i + q) || (g = g.parentNode); g; g = g.parentNode) p.push(g), 
                    h = g;
                    h === (d.ownerDocument || l) && p.push(h.defaultView || h.parentWindow || a);
                }
                f = 0;
                while ((g = p[f++]) && !b.isPropagationStopped()) b.type = f > 1 ? i : o.bindType || q, 
                m = (L.get(g, "events") || {})[b.type] && L.get(g, "handle"), m && m.apply(g, c), 
                m = k && g[k], m && m.apply && n.acceptData(g) && (b.result = m.apply(g, c), b.result === !1 && b.preventDefault());
                return b.type = q, e || b.isDefaultPrevented() || o._default && o._default.apply(p.pop(), c) !== !1 || !n.acceptData(d) || k && n.isFunction(d[q]) && !n.isWindow(d) && (h = d[k], 
                h && (d[k] = null), n.event.triggered = q, d[q](), n.event.triggered = void 0, h && (d[k] = h)), 
                b.result;
            }
        },
        dispatch: function(a) {
            a = n.event.fix(a);
            var b, c, e, f, g, h = [], i = d.call(arguments), j = (L.get(this, "events") || {})[a.type] || [], k = n.event.special[a.type] || {};
            if (i[0] = a, a.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, a) !== !1) {
                h = n.event.handlers.call(this, a, j), b = 0;
                while ((f = h[b++]) && !a.isPropagationStopped()) {
                    a.currentTarget = f.elem, c = 0;
                    while ((g = f.handlers[c++]) && !a.isImmediatePropagationStopped()) (!a.namespace_re || a.namespace_re.test(g.namespace)) && (a.handleObj = g, 
                    a.data = g.data, e = ((n.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i), 
                    void 0 !== e && (a.result = e) === !1 && (a.preventDefault(), a.stopPropagation()));
                }
                return k.postDispatch && k.postDispatch.call(this, a), a.result;
            }
        },
        handlers: function(a, b) {
            var c, d, e, f, g = [], h = b.delegateCount, i = a.target;
            if (h && i.nodeType && (!a.button || "click" !== a.type)) for (;i !== this; i = i.parentNode || this) if (i.disabled !== !0 || "click" !== a.type) {
                for (d = [], c = 0; h > c; c++) f = b[c], e = f.selector + " ", void 0 === d[e] && (d[e] = f.needsContext ? n(e, this).index(i) >= 0 : n.find(e, this, null, [ i ]).length), 
                d[e] && d.push(f);
                d.length && g.push({
                    elem: i,
                    handlers: d
                });
            }
            return h < b.length && g.push({
                elem: this,
                handlers: b.slice(h)
            }), g;
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(a, b) {
                return null == a.which && (a.which = null != b.charCode ? b.charCode : b.keyCode), 
                a;
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(a, b) {
                var c, d, e, f = b.button;
                return null == a.pageX && null != b.clientX && (c = a.target.ownerDocument || l, 
                d = c.documentElement, e = c.body, a.pageX = b.clientX + (d && d.scrollLeft || e && e.scrollLeft || 0) - (d && d.clientLeft || e && e.clientLeft || 0), 
                a.pageY = b.clientY + (d && d.scrollTop || e && e.scrollTop || 0) - (d && d.clientTop || e && e.clientTop || 0)), 
                a.which || void 0 === f || (a.which = 1 & f ? 1 : 2 & f ? 3 : 4 & f ? 2 : 0), a;
            }
        },
        fix: function(a) {
            if (a[n.expando]) return a;
            var b, c, d, e = a.type, f = a, g = this.fixHooks[e];
            g || (this.fixHooks[e] = g = W.test(e) ? this.mouseHooks : V.test(e) ? this.keyHooks : {}), 
            d = g.props ? this.props.concat(g.props) : this.props, a = new n.Event(f), b = d.length;
            while (b--) c = d[b], a[c] = f[c];
            return a.target || (a.target = l), 3 === a.target.nodeType && (a.target = a.target.parentNode), 
            g.filter ? g.filter(a, f) : a;
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
                    return this !== _() && this.focus ? (this.focus(), !1) : void 0;
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    return this === _() && this.blur ? (this.blur(), !1) : void 0;
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
                    return "checkbox" === this.type && this.click && n.nodeName(this, "input") ? (this.click(), 
                    !1) : void 0;
                },
                _default: function(a) {
                    return n.nodeName(a.target, "a");
                }
            },
            beforeunload: {
                postDispatch: function(a) {
                    void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result);
                }
            }
        },
        simulate: function(a, b, c, d) {
            var e = n.extend(new n.Event(), c, {
                type: a,
                isSimulated: !0,
                originalEvent: {}
            });
            d ? n.event.trigger(e, null, b) : n.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault();
        }
    }, n.removeEvent = function(a, b, c) {
        a.removeEventListener && a.removeEventListener(b, c, !1);
    }, n.Event = function(a, b) {
        return this instanceof n.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, 
        this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? Z : $) : this.type = a, 
        b && n.extend(this, b), this.timeStamp = a && a.timeStamp || n.now(), void (this[n.expando] = !0)) : new n.Event(a, b);
    }, n.Event.prototype = {
        isDefaultPrevented: $,
        isPropagationStopped: $,
        isImmediatePropagationStopped: $,
        preventDefault: function() {
            var a = this.originalEvent;
            this.isDefaultPrevented = Z, a && a.preventDefault && a.preventDefault();
        },
        stopPropagation: function() {
            var a = this.originalEvent;
            this.isPropagationStopped = Z, a && a.stopPropagation && a.stopPropagation();
        },
        stopImmediatePropagation: function() {
            var a = this.originalEvent;
            this.isImmediatePropagationStopped = Z, a && a.stopImmediatePropagation && a.stopImmediatePropagation(), 
            this.stopPropagation();
        }
    }, n.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(a, b) {
        n.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
                var c, d = this, e = a.relatedTarget, f = a.handleObj;
                return (!e || e !== d && !n.contains(d, e)) && (a.type = f.origType, c = f.handler.apply(this, arguments), 
                a.type = b), c;
            }
        };
    }), k.focusinBubbles || n.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var c = function(a) {
            n.event.simulate(b, a.target, n.event.fix(a), !0);
        };
        n.event.special[b] = {
            setup: function() {
                var d = this.ownerDocument || this, e = L.access(d, b);
                e || d.addEventListener(a, c, !0), L.access(d, b, (e || 0) + 1);
            },
            teardown: function() {
                var d = this.ownerDocument || this, e = L.access(d, b) - 1;
                e ? L.access(d, b, e) : (d.removeEventListener(a, c, !0), L.remove(d, b));
            }
        };
    }), n.fn.extend({
        on: function(a, b, c, d, e) {
            var f, g;
            if ("object" == typeof a) {
                "string" != typeof b && (c = c || b, b = void 0);
                for (g in a) this.on(g, b, c, a[g], e);
                return this;
            }
            if (null == c && null == d ? (d = b, c = b = void 0) : null == d && ("string" == typeof b ? (d = c, 
            c = void 0) : (d = c, c = b, b = void 0)), d === !1) d = $; else if (!d) return this;
            return 1 === e && (f = d, d = function(a) {
                return n().off(a), f.apply(this, arguments);
            }, d.guid = f.guid || (f.guid = n.guid++)), this.each(function() {
                n.event.add(this, a, d, c, b);
            });
        },
        one: function(a, b, c, d) {
            return this.on(a, b, c, d, 1);
        },
        off: function(a, b, c) {
            var d, e;
            if (a && a.preventDefault && a.handleObj) return d = a.handleObj, n(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), 
            this;
            if ("object" == typeof a) {
                for (e in a) this.off(e, b, a[e]);
                return this;
            }
            return (b === !1 || "function" == typeof b) && (c = b, b = void 0), c === !1 && (c = $), 
            this.each(function() {
                n.event.remove(this, a, c, b);
            });
        },
        trigger: function(a, b) {
            return this.each(function() {
                n.event.trigger(a, b, this);
            });
        },
        triggerHandler: function(a, b) {
            var c = this[0];
            return c ? n.event.trigger(a, b, c, !0) : void 0;
        }
    });
    var aa = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, ba = /<([\w:]+)/, ca = /<|&#?\w+;/, da = /<(?:script|style|link)/i, ea = /checked\s*(?:[^=]|=\s*.checked.)/i, fa = /^$|\/(?:java|ecma)script/i, ga = /^true\/(.*)/, ha = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, ia = {
        option: [ 1, "<select multiple='multiple'>", "</select>" ],
        thead: [ 1, "<table>", "</table>" ],
        col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
        td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
        _default: [ 0, "", "" ]
    };
    ia.optgroup = ia.option, ia.tbody = ia.tfoot = ia.colgroup = ia.caption = ia.thead, 
    ia.th = ia.td;
    function ja(a, b) {
        return n.nodeName(a, "table") && n.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a;
    }
    function ka(a) {
        return a.type = (null !== a.getAttribute("type")) + "/" + a.type, a;
    }
    function la(a) {
        var b = ga.exec(a.type);
        return b ? a.type = b[1] : a.removeAttribute("type"), a;
    }
    function ma(a, b) {
        for (var c = 0, d = a.length; d > c; c++) L.set(a[c], "globalEval", !b || L.get(b[c], "globalEval"));
    }
    function na(a, b) {
        var c, d, e, f, g, h, i, j;
        if (1 === b.nodeType) {
            if (L.hasData(a) && (f = L.access(a), g = L.set(b, f), j = f.events)) {
                delete g.handle, g.events = {};
                for (e in j) for (c = 0, d = j[e].length; d > c; c++) n.event.add(b, e, j[e][c]);
            }
            M.hasData(a) && (h = M.access(a), i = n.extend({}, h), M.set(b, i));
        }
    }
    function oa(a, b) {
        var c = a.getElementsByTagName ? a.getElementsByTagName(b || "*") : a.querySelectorAll ? a.querySelectorAll(b || "*") : [];
        return void 0 === b || b && n.nodeName(a, b) ? n.merge([ a ], c) : c;
    }
    function pa(a, b) {
        var c = b.nodeName.toLowerCase();
        "input" === c && T.test(a.type) ? b.checked = a.checked : ("input" === c || "textarea" === c) && (b.defaultValue = a.defaultValue);
    }
    n.extend({
        clone: function(a, b, c) {
            var d, e, f, g, h = a.cloneNode(!0), i = n.contains(a.ownerDocument, a);
            if (!(k.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || n.isXMLDoc(a))) for (g = oa(h), 
            f = oa(a), d = 0, e = f.length; e > d; d++) pa(f[d], g[d]);
            if (b) if (c) for (f = f || oa(a), g = g || oa(h), d = 0, e = f.length; e > d; d++) na(f[d], g[d]); else na(a, h);
            return g = oa(h, "script"), g.length > 0 && ma(g, !i && oa(a, "script")), h;
        },
        buildFragment: function(a, b, c, d) {
            for (var e, f, g, h, i, j, k = b.createDocumentFragment(), l = [], m = 0, o = a.length; o > m; m++) if (e = a[m], 
            e || 0 === e) if ("object" === n.type(e)) n.merge(l, e.nodeType ? [ e ] : e); else if (ca.test(e)) {
                f = f || k.appendChild(b.createElement("div")), g = (ba.exec(e) || [ "", "" ])[1].toLowerCase(), 
                h = ia[g] || ia._default, f.innerHTML = h[1] + e.replace(aa, "<$1></$2>") + h[2], 
                j = h[0];
                while (j--) f = f.lastChild;
                n.merge(l, f.childNodes), f = k.firstChild, f.textContent = "";
            } else l.push(b.createTextNode(e));
            k.textContent = "", m = 0;
            while (e = l[m++]) if ((!d || -1 === n.inArray(e, d)) && (i = n.contains(e.ownerDocument, e), 
            f = oa(k.appendChild(e), "script"), i && ma(f), c)) {
                j = 0;
                while (e = f[j++]) fa.test(e.type || "") && c.push(e);
            }
            return k;
        },
        cleanData: function(a) {
            for (var b, c, d, e, f = n.event.special, g = 0; void 0 !== (c = a[g]); g++) {
                if (n.acceptData(c) && (e = c[L.expando], e && (b = L.cache[e]))) {
                    if (b.events) for (d in b.events) f[d] ? n.event.remove(c, d) : n.removeEvent(c, d, b.handle);
                    L.cache[e] && delete L.cache[e];
                }
                delete M.cache[c[M.expando]];
            }
        }
    }), n.fn.extend({
        text: function(a) {
            return J(this, function(a) {
                return void 0 === a ? n.text(this) : this.empty().each(function() {
                    (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) && (this.textContent = a);
                });
            }, null, a, arguments.length);
        },
        append: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = ja(this, a);
                    b.appendChild(a);
                }
            });
        },
        prepend: function() {
            return this.domManip(arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = ja(this, a);
                    b.insertBefore(a, b.firstChild);
                }
            });
        },
        before: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this);
            });
        },
        after: function() {
            return this.domManip(arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this.nextSibling);
            });
        },
        remove: function(a, b) {
            for (var c, d = a ? n.filter(a, this) : this, e = 0; null != (c = d[e]); e++) b || 1 !== c.nodeType || n.cleanData(oa(c)), 
            c.parentNode && (b && n.contains(c.ownerDocument, c) && ma(oa(c, "script")), c.parentNode.removeChild(c));
            return this;
        },
        empty: function() {
            for (var a, b = 0; null != (a = this[b]); b++) 1 === a.nodeType && (n.cleanData(oa(a, !1)), 
            a.textContent = "");
            return this;
        },
        clone: function(a, b) {
            return a = null == a ? !1 : a, b = null == b ? a : b, this.map(function() {
                return n.clone(this, a, b);
            });
        },
        html: function(a) {
            return J(this, function(a) {
                var b = this[0] || {}, c = 0, d = this.length;
                if (void 0 === a && 1 === b.nodeType) return b.innerHTML;
                if ("string" == typeof a && !da.test(a) && !ia[(ba.exec(a) || [ "", "" ])[1].toLowerCase()]) {
                    a = a.replace(aa, "<$1></$2>");
                    try {
                        for (;d > c; c++) b = this[c] || {}, 1 === b.nodeType && (n.cleanData(oa(b, !1)), 
                        b.innerHTML = a);
                        b = 0;
                    } catch (a) {}
                }
                b && this.empty().append(a);
            }, null, a, arguments.length);
        },
        replaceWith: function() {
            var a = arguments[0];
            return this.domManip(arguments, function(b) {
                a = this.parentNode, n.cleanData(oa(this)), a && a.replaceChild(b, this);
            }), a && (a.length || a.nodeType) ? this : this.remove();
        },
        detach: function(a) {
            return this.remove(a, !0);
        },
        domManip: function(a, b) {
            a = e.apply([], a);
            var c, d, f, g, h, i, j = 0, l = this.length, m = this, o = l - 1, p = a[0], q = n.isFunction(p);
            if (q || l > 1 && "string" == typeof p && !k.checkClone && ea.test(p)) return this.each(function(c) {
                var d = m.eq(c);
                q && (a[0] = p.call(this, c, d.html())), d.domManip(a, b);
            });
            if (l && (c = n.buildFragment(a, this[0].ownerDocument, !1, this), d = c.firstChild, 
            1 === c.childNodes.length && (c = d), d)) {
                for (f = n.map(oa(c, "script"), ka), g = f.length; l > j; j++) h = c, j !== o && (h = n.clone(h, !0, !0), 
                g && n.merge(f, oa(h, "script"))), b.call(this[j], h, j);
                if (g) for (i = f[f.length - 1].ownerDocument, n.map(f, la), j = 0; g > j; j++) h = f[j], 
                fa.test(h.type || "") && !L.access(h, "globalEval") && n.contains(i, h) && (h.src ? n._evalUrl && n._evalUrl(h.src) : n.globalEval(h.textContent.replace(ha, "")));
            }
            return this;
        }
    }), n.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        n.fn[a] = function(a) {
            for (var c, d = [], e = n(a), g = e.length - 1, h = 0; g >= h; h++) c = h === g ? this : this.clone(!0), 
            n(e[h])[b](c), f.apply(d, c.get());
            return this.pushStack(d);
        };
    });
    var qa, ra = {};
    function sa(b, c) {
        var d, e = n(c.createElement(b)).appendTo(c.body), f = a.getDefaultComputedStyle && (d = a.getDefaultComputedStyle(e[0])) ? d.display : n.css(e[0], "display");
        return e.detach(), f;
    }
    function ta(a) {
        var b = l, c = ra[a];
        return c || (c = sa(a, b), "none" !== c && c || (qa = (qa || n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement), 
        b = qa[0].contentDocument, b.write(), b.close(), c = sa(a, b), qa.detach()), ra[a] = c), 
        c;
    }
    var ua = /^margin/, va = new RegExp("^(" + Q + ")(?!px)[a-z%]+$", "i"), wa = function(b) {
        return b.ownerDocument.defaultView.opener ? b.ownerDocument.defaultView.getComputedStyle(b, null) : a.getComputedStyle(b, null);
    };
    function xa(a, b, c) {
        var d, e, f, g, h = a.style;
        return c = c || wa(a), c && (g = c.getPropertyValue(b) || c[b]), c && ("" !== g || n.contains(a.ownerDocument, a) || (g = n.style(a, b)), 
        va.test(g) && ua.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, 
        g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0 !== g ? g + "" : g;
    }
    function ya(a, b) {
        return {
            get: function() {
                return a() ? void delete this.get : (this.get = b).apply(this, arguments);
            }
        };
    }
    !function() {
        var b, c, d = l.documentElement, e = l.createElement("div"), f = l.createElement("div");
        if (f.style) {
            f.style.backgroundClip = "content-box", f.cloneNode(!0).style.backgroundClip = "", 
            k.clearCloneStyle = "content-box" === f.style.backgroundClip, e.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute", 
            e.appendChild(f);
            function g() {
                f.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute", 
                f.innerHTML = "", d.appendChild(e);
                var g = a.getComputedStyle(f, null);
                b = "1%" !== g.top, c = "4px" === g.width, d.removeChild(e);
            }
            a.getComputedStyle && n.extend(k, {
                pixelPosition: function() {
                    return g(), b;
                },
                boxSizingReliable: function() {
                    return null == c && g(), c;
                },
                reliableMarginRight: function() {
                    var b, c = f.appendChild(l.createElement("div"));
                    return c.style.cssText = f.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", 
                    c.style.marginRight = c.style.width = "0", f.style.width = "1px", d.appendChild(e), 
                    b = !parseFloat(a.getComputedStyle(c, null).marginRight), d.removeChild(e), f.removeChild(c), 
                    b;
                }
            });
        }
    }(), n.swap = function(a, b, c, d) {
        var e, f, g = {};
        for (f in b) g[f] = a.style[f], a.style[f] = b[f];
        e = c.apply(a, d || []);
        for (f in b) a.style[f] = g[f];
        return e;
    };
    var za = /^(none|table(?!-c[ea]).+)/, Aa = new RegExp("^(" + Q + ")(.*)$", "i"), Ba = new RegExp("^([+-])=(" + Q + ")", "i"), Ca = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, Da = {
        letterSpacing: "0",
        fontWeight: "400"
    }, Ea = [ "Webkit", "O", "Moz", "ms" ];
    function Fa(a, b) {
        if (b in a) return b;
        var c = b[0].toUpperCase() + b.slice(1), d = b, e = Ea.length;
        while (e--) if (b = Ea[e] + c, b in a) return b;
        return d;
    }
    function Ga(a, b, c) {
        var d = Aa.exec(b);
        return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b;
    }
    function Ha(a, b, c, d, e) {
        for (var f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0, g = 0; 4 > f; f += 2) "margin" === c && (g += n.css(a, c + R[f], !0, e)), 
        d ? ("content" === c && (g -= n.css(a, "padding" + R[f], !0, e)), "margin" !== c && (g -= n.css(a, "border" + R[f] + "Width", !0, e))) : (g += n.css(a, "padding" + R[f], !0, e), 
        "padding" !== c && (g += n.css(a, "border" + R[f] + "Width", !0, e)));
        return g;
    }
    function Ia(a, b, c) {
        var d = !0, e = "width" === b ? a.offsetWidth : a.offsetHeight, f = wa(a), g = "border-box" === n.css(a, "boxSizing", !1, f);
        if (0 >= e || null == e) {
            if (e = xa(a, b, f), (0 > e || null == e) && (e = a.style[b]), va.test(e)) return e;
            d = g && (k.boxSizingReliable() || e === a.style[b]), e = parseFloat(e) || 0;
        }
        return e + Ha(a, b, c || (g ? "border" : "content"), d, f) + "px";
    }
    function Ja(a, b) {
        for (var c, d, e, f = [], g = 0, h = a.length; h > g; g++) d = a[g], d.style && (f[g] = L.get(d, "olddisplay"), 
        c = d.style.display, b ? (f[g] || "none" !== c || (d.style.display = ""), "" === d.style.display && S(d) && (f[g] = L.access(d, "olddisplay", ta(d.nodeName)))) : (e = S(d), 
        "none" === c && e || L.set(d, "olddisplay", e ? c : n.css(d, "display"))));
        for (g = 0; h > g; g++) d = a[g], d.style && (b && "none" !== d.style.display && "" !== d.style.display || (d.style.display = b ? f[g] || "" : "none"));
        return a;
    }
    n.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = xa(a, "opacity");
                        return "" === c ? "1" : c;
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            float: "cssFloat"
        },
        style: function(a, b, c, d) {
            if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                var e, f, g, h = n.camelCase(b), i = a.style;
                return b = n.cssProps[h] || (n.cssProps[h] = Fa(i, h)), g = n.cssHooks[b] || n.cssHooks[h], 
                void 0 === c ? g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : i[b] : (f = typeof c, 
                "string" === f && (e = Ba.exec(c)) && (c = (e[1] + 1) * e[2] + parseFloat(n.css(a, b)), 
                f = "number"), null != c && c === c && ("number" !== f || n.cssNumber[h] || (c += "px"), 
                k.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"), 
                g && "set" in g && void 0 === (c = g.set(a, c, d)) || (i[b] = c)), void 0);
            }
        },
        css: function(a, b, c, d) {
            var e, f, g, h = n.camelCase(b);
            return b = n.cssProps[h] || (n.cssProps[h] = Fa(a.style, h)), g = n.cssHooks[b] || n.cssHooks[h], 
            g && "get" in g && (e = g.get(a, !0, c)), void 0 === e && (e = xa(a, b, d)), "normal" === e && b in Da && (e = Da[b]), 
            "" === c || c ? (f = parseFloat(e), c === !0 || n.isNumeric(f) ? f || 0 : e) : e;
        }
    }), n.each([ "height", "width" ], function(a, b) {
        n.cssHooks[b] = {
            get: function(a, c, d) {
                return c ? za.test(n.css(a, "display")) && 0 === a.offsetWidth ? n.swap(a, Ca, function() {
                    return Ia(a, b, d);
                }) : Ia(a, b, d) : void 0;
            },
            set: function(a, c, d) {
                var e = d && wa(a);
                return Ga(a, c, d ? Ha(a, b, d, "border-box" === n.css(a, "boxSizing", !1, e), e) : 0);
            }
        };
    }), n.cssHooks.marginRight = ya(k.reliableMarginRight, function(a, b) {
        return b ? n.swap(a, {
            display: "inline-block"
        }, xa, [ a, "marginRight" ]) : void 0;
    }), n.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        n.cssHooks[a + b] = {
            expand: function(c) {
                for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [ c ]; 4 > d; d++) e[a + R[d] + b] = f[d] || f[d - 2] || f[0];
                return e;
            }
        }, ua.test(a) || (n.cssHooks[a + b].set = Ga);
    }), n.fn.extend({
        css: function(a, b) {
            return J(this, function(a, b, c) {
                var d, e, f = {}, g = 0;
                if (n.isArray(b)) {
                    for (d = wa(a), e = b.length; e > g; g++) f[b[g]] = n.css(a, b[g], !1, d);
                    return f;
                }
                return void 0 !== c ? n.style(a, b, c) : n.css(a, b);
            }, a, b, arguments.length > 1);
        },
        show: function() {
            return Ja(this, !0);
        },
        hide: function() {
            return Ja(this);
        },
        toggle: function(a) {
            return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function() {
                S(this) ? n(this).show() : n(this).hide();
            });
        }
    });
    function Ka(a, b, c, d, e) {
        return new Ka.prototype.init(a, b, c, d, e);
    }
    n.Tween = Ka, Ka.prototype = {
        constructor: Ka,
        init: function(a, b, c, d, e, f) {
            this.elem = a, this.prop = c, this.easing = e || "swing", this.options = b, this.start = this.now = this.cur(), 
            this.end = d, this.unit = f || (n.cssNumber[c] ? "" : "px");
        },
        cur: function() {
            var a = Ka.propHooks[this.prop];
            return a && a.get ? a.get(this) : Ka.propHooks._default.get(this);
        },
        run: function(a) {
            var b, c = Ka.propHooks[this.prop];
            return this.options.duration ? this.pos = b = n.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a, 
            this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), 
            c && c.set ? c.set(this) : Ka.propHooks._default.set(this), this;
        }
    }, Ka.prototype.init.prototype = Ka.prototype, Ka.propHooks = {
        _default: {
            get: function(a) {
                var b;
                return null == a.elem[a.prop] || a.elem.style && null != a.elem.style[a.prop] ? (b = n.css(a.elem, a.prop, ""), 
                b && "auto" !== b ? b : 0) : a.elem[a.prop];
            },
            set: function(a) {
                n.fx.step[a.prop] ? n.fx.step[a.prop](a) : a.elem.style && (null != a.elem.style[n.cssProps[a.prop]] || n.cssHooks[a.prop]) ? n.style(a.elem, a.prop, a.now + a.unit) : a.elem[a.prop] = a.now;
            }
        }
    }, Ka.propHooks.scrollTop = Ka.propHooks.scrollLeft = {
        set: function(a) {
            a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now);
        }
    }, n.easing = {
        linear: function(a) {
            return a;
        },
        swing: function(a) {
            return .5 - Math.cos(a * Math.PI) / 2;
        }
    }, n.fx = Ka.prototype.init, n.fx.step = {};
    var La, Ma, Na = /^(?:toggle|show|hide)$/, Oa = new RegExp("^(?:([+-])=|)(" + Q + ")([a-z%]*)$", "i"), Pa = /queueHooks$/, Qa = [ Va ], Ra = {
        "*": [ function(a, b) {
            var c = this.createTween(a, b), d = c.cur(), e = Oa.exec(b), f = e && e[3] || (n.cssNumber[a] ? "" : "px"), g = (n.cssNumber[a] || "px" !== f && +d) && Oa.exec(n.css(c.elem, a)), h = 1, i = 20;
            if (g && g[3] !== f) {
                f = f || g[3], e = e || [], g = +d || 1;
                do {
                    h = h || ".5", g /= h, n.style(c.elem, a, g + f);
                } while (h !== (h = c.cur() / d) && 1 !== h && --i);
            }
            return e && (g = c.start = +g || +d || 0, c.unit = f, c.end = e[1] ? g + (e[1] + 1) * e[2] : +e[2]), 
            c;
        } ]
    };
    function Sa() {
        return setTimeout(function() {
            La = void 0;
        }), La = n.now();
    }
    function Ta(a, b) {
        var c, d = 0, e = {
            height: a
        };
        for (b = b ? 1 : 0; 4 > d; d += 2 - b) c = R[d], e["margin" + c] = e["padding" + c] = a;
        return b && (e.opacity = e.width = a), e;
    }
    function Ua(a, b, c) {
        for (var d, e = (Ra[b] || []).concat(Ra["*"]), f = 0, g = e.length; g > f; f++) if (d = e[f].call(c, b, a)) return d;
    }
    function Va(a, b, c) {
        var d, e, f, g, h, i, j, k, l = this, m = {}, o = a.style, p = a.nodeType && S(a), q = L.get(a, "fxshow");
        c.queue || (h = n._queueHooks(a, "fx"), null == h.unqueued && (h.unqueued = 0, i = h.empty.fire, 
        h.empty.fire = function() {
            h.unqueued || i();
        }), h.unqueued++, l.always(function() {
            l.always(function() {
                h.unqueued--, n.queue(a, "fx").length || h.empty.fire();
            });
        })), 1 === a.nodeType && ("height" in b || "width" in b) && (c.overflow = [ o.overflow, o.overflowX, o.overflowY ], 
        j = n.css(a, "display"), k = "none" === j ? L.get(a, "olddisplay") || ta(a.nodeName) : j, 
        "inline" === k && "none" === n.css(a, "float") && (o.display = "inline-block")), 
        c.overflow && (o.overflow = "hidden", l.always(function() {
            o.overflow = c.overflow[0], o.overflowX = c.overflow[1], o.overflowY = c.overflow[2];
        }));
        for (d in b) if (e = b[d], Na.exec(e)) {
            if (delete b[d], f = f || "toggle" === e, e === (p ? "hide" : "show")) {
                if ("show" !== e || !q || void 0 === q[d]) continue;
                p = !0;
            }
            m[d] = q && q[d] || n.style(a, d);
        } else j = void 0;
        if (n.isEmptyObject(m)) "inline" === ("none" === j ? ta(a.nodeName) : j) && (o.display = j); else {
            q ? "hidden" in q && (p = q.hidden) : q = L.access(a, "fxshow", {}), f && (q.hidden = !p), 
            p ? n(a).show() : l.done(function() {
                n(a).hide();
            }), l.done(function() {
                var b;
                L.remove(a, "fxshow");
                for (b in m) n.style(a, b, m[b]);
            });
            for (d in m) g = Ua(p ? q[d] : 0, d, l), d in q || (q[d] = g.start, p && (g.end = g.start, 
            g.start = "width" === d || "height" === d ? 1 : 0));
        }
    }
    function Wa(a, b) {
        var c, d, e, f, g;
        for (c in a) if (d = n.camelCase(c), e = b[d], f = a[c], n.isArray(f) && (e = f[1], 
        f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = n.cssHooks[d], g && "expand" in g) {
            f = g.expand(f), delete a[d];
            for (c in f) c in a || (a[c] = f[c], b[c] = e);
        } else b[d] = e;
    }
    function Xa(a, b, c) {
        var d, e, f = 0, g = Qa.length, h = n.Deferred().always(function() {
            delete i.elem;
        }), i = function() {
            if (e) return !1;
            for (var b = La || Sa(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; i > g; g++) j.tweens[g].run(f);
            return h.notifyWith(a, [ j, f, c ]), 1 > f && i ? c : (h.resolveWith(a, [ j ]), 
            !1);
        }, j = h.promise({
            elem: a,
            props: n.extend({}, b),
            opts: n.extend(!0, {
                specialEasing: {}
            }, c),
            originalProperties: b,
            originalOptions: c,
            startTime: La || Sa(),
            duration: c.duration,
            tweens: [],
            createTween: function(b, c) {
                var d = n.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
                return j.tweens.push(d), d;
            },
            stop: function(b) {
                var c = 0, d = b ? j.tweens.length : 0;
                if (e) return this;
                for (e = !0; d > c; c++) j.tweens[c].run(1);
                return b ? h.resolveWith(a, [ j, b ]) : h.rejectWith(a, [ j, b ]), this;
            }
        }), k = j.props;
        for (Wa(k, j.opts.specialEasing); g > f; f++) if (d = Qa[f].call(j, a, k, j.opts)) return d;
        return n.map(k, Ua, j), n.isFunction(j.opts.start) && j.opts.start.call(a, j), n.fx.timer(n.extend(i, {
            elem: a,
            anim: j,
            queue: j.opts.queue
        })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always);
    }
    n.Animation = n.extend(Xa, {
        tweener: function(a, b) {
            n.isFunction(a) ? (b = a, a = [ "*" ]) : a = a.split(" ");
            for (var c, d = 0, e = a.length; e > d; d++) c = a[d], Ra[c] = Ra[c] || [], Ra[c].unshift(b);
        },
        prefilter: function(a, b) {
            b ? Qa.unshift(a) : Qa.push(a);
        }
    }), n.speed = function(a, b, c) {
        var d = a && "object" == typeof a ? n.extend({}, a) : {
            complete: c || !c && b || n.isFunction(a) && a,
            duration: a,
            easing: c && b || b && !n.isFunction(b) && b
        };
        return d.duration = n.fx.off ? 0 : "number" == typeof d.duration ? d.duration : d.duration in n.fx.speeds ? n.fx.speeds[d.duration] : n.fx.speeds._default, 
        (null == d.queue || d.queue === !0) && (d.queue = "fx"), d.old = d.complete, d.complete = function() {
            n.isFunction(d.old) && d.old.call(this), d.queue && n.dequeue(this, d.queue);
        }, d;
    }, n.fn.extend({
        fadeTo: function(a, b, c, d) {
            return this.filter(S).css("opacity", 0).show().end().animate({
                opacity: b
            }, a, c, d);
        },
        animate: function(a, b, c, d) {
            var e = n.isEmptyObject(a), f = n.speed(b, c, d), g = function() {
                var b = Xa(this, n.extend({}, a), f);
                (e || L.get(this, "finish")) && b.stop(!0);
            };
            return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g);
        },
        stop: function(a, b, c) {
            var d = function(a) {
                var b = a.stop;
                delete a.stop, b(c);
            };
            return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), 
            this.each(function() {
                var b = !0, e = null != a && a + "queueHooks", f = n.timers, g = L.get(this);
                if (e) g[e] && g[e].stop && d(g[e]); else for (e in g) g[e] && g[e].stop && Pa.test(e) && d(g[e]);
                for (e = f.length; e--; ) f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), 
                b = !1, f.splice(e, 1));
                (b || !c) && n.dequeue(this, a);
            });
        },
        finish: function(a) {
            return a !== !1 && (a = a || "fx"), this.each(function() {
                var b, c = L.get(this), d = c[a + "queue"], e = c[a + "queueHooks"], f = n.timers, g = d ? d.length : 0;
                for (c.finish = !0, n.queue(this, a, []), e && e.stop && e.stop.call(this, !0), 
                b = f.length; b--; ) f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), 
                f.splice(b, 1));
                for (b = 0; g > b; b++) d[b] && d[b].finish && d[b].finish.call(this);
                delete c.finish;
            });
        }
    }), n.each([ "toggle", "show", "hide" ], function(a, b) {
        var c = n.fn[b];
        n.fn[b] = function(a, d, e) {
            return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(Ta(b, !0), a, d, e);
        };
    }), n.each({
        slideDown: Ta("show"),
        slideUp: Ta("hide"),
        slideToggle: Ta("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(a, b) {
        n.fn[a] = function(a, c, d) {
            return this.animate(b, a, c, d);
        };
    }), n.timers = [], n.fx.tick = function() {
        var a, b = 0, c = n.timers;
        for (La = n.now(); b < c.length; b++) a = c[b], a() || c[b] !== a || c.splice(b--, 1);
        c.length || n.fx.stop(), La = void 0;
    }, n.fx.timer = function(a) {
        n.timers.push(a), a() ? n.fx.start() : n.timers.pop();
    }, n.fx.interval = 13, n.fx.start = function() {
        Ma || (Ma = setInterval(n.fx.tick, n.fx.interval));
    }, n.fx.stop = function() {
        clearInterval(Ma), Ma = null;
    }, n.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    }, n.fn.delay = function(a, b) {
        return a = n.fx ? n.fx.speeds[a] || a : a, b = b || "fx", this.queue(b, function(b, c) {
            var d = setTimeout(b, a);
            c.stop = function() {
                clearTimeout(d);
            };
        });
    }, function() {
        var a = l.createElement("input"), b = l.createElement("select"), c = b.appendChild(l.createElement("option"));
        a.type = "checkbox", k.checkOn = "" !== a.value, k.optSelected = c.selected, b.disabled = !0, 
        k.optDisabled = !c.disabled, a = l.createElement("input"), a.value = "t", a.type = "radio", 
        k.radioValue = "t" === a.value;
    }();
    var Ya, Za, $a = n.expr.attrHandle;
    n.fn.extend({
        attr: function(a, b) {
            return J(this, n.attr, a, b, arguments.length > 1);
        },
        removeAttr: function(a) {
            return this.each(function() {
                n.removeAttr(this, a);
            });
        }
    }), n.extend({
        attr: function(a, b, c) {
            var d, e, f = a.nodeType;
            if (a && 3 !== f && 8 !== f && 2 !== f) return typeof a.getAttribute === U ? n.prop(a, b, c) : (1 === f && n.isXMLDoc(a) || (b = b.toLowerCase(), 
            d = n.attrHooks[b] || (n.expr.match.bool.test(b) ? Za : Ya)), void 0 === c ? d && "get" in d && null !== (e = d.get(a, b)) ? e : (e = n.find.attr(a, b), 
            null == e ? void 0 : e) : null !== c ? d && "set" in d && void 0 !== (e = d.set(a, c, b)) ? e : (a.setAttribute(b, c + ""), 
            c) : void n.removeAttr(a, b));
        },
        removeAttr: function(a, b) {
            var c, d, e = 0, f = b && b.match(E);
            if (f && 1 === a.nodeType) while (c = f[e++]) d = n.propFix[c] || c, n.expr.match.bool.test(c) && (a[d] = !1), 
            a.removeAttribute(c);
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (!k.radioValue && "radio" === b && n.nodeName(a, "input")) {
                        var c = a.value;
                        return a.setAttribute("type", b), c && (a.value = c), b;
                    }
                }
            }
        }
    }), Za = {
        set: function(a, b, c) {
            return b === !1 ? n.removeAttr(a, c) : a.setAttribute(c, c), c;
        }
    }, n.each(n.expr.match.bool.source.match(/\w+/g), function(a, b) {
        var c = $a[b] || n.find.attr;
        $a[b] = function(a, b, d) {
            var e, f;
            return d || (f = $a[b], $a[b] = e, e = null != c(a, b, d) ? b.toLowerCase() : null, 
            $a[b] = f), e;
        };
    });
    var _a = /^(?:input|select|textarea|button)$/i;
    n.fn.extend({
        prop: function(a, b) {
            return J(this, n.prop, a, b, arguments.length > 1);
        },
        removeProp: function(a) {
            return this.each(function() {
                delete this[n.propFix[a] || a];
            });
        }
    }), n.extend({
        propFix: {
            for: "htmlFor",
            class: "className"
        },
        prop: function(a, b, c) {
            var d, e, f, g = a.nodeType;
            if (a && 3 !== g && 8 !== g && 2 !== g) return f = 1 !== g || !n.isXMLDoc(a), f && (b = n.propFix[b] || b, 
            e = n.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b];
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    return a.hasAttribute("tabindex") || _a.test(a.nodeName) || a.href ? a.tabIndex : -1;
                }
            }
        }
    }), k.optSelected || (n.propHooks.selected = {
        get: function(a) {
            var b = a.parentNode;
            return b && b.parentNode && b.parentNode.selectedIndex, null;
        }
    }), n.each([ "tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable" ], function() {
        n.propFix[this.toLowerCase()] = this;
    });
    var ab = /[\t\r\n\f]/g;
    n.fn.extend({
        addClass: function(a) {
            var b, c, d, e, f, g, h = "string" == typeof a && a, i = 0, j = this.length;
            if (n.isFunction(a)) return this.each(function(b) {
                n(this).addClass(a.call(this, b, this.className));
            });
            if (h) for (b = (a || "").match(E) || []; j > i; i++) if (c = this[i], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(ab, " ") : " ")) {
                f = 0;
                while (e = b[f++]) d.indexOf(" " + e + " ") < 0 && (d += e + " ");
                g = n.trim(d), c.className !== g && (c.className = g);
            }
            return this;
        },
        removeClass: function(a) {
            var b, c, d, e, f, g, h = 0 === arguments.length || "string" == typeof a && a, i = 0, j = this.length;
            if (n.isFunction(a)) return this.each(function(b) {
                n(this).removeClass(a.call(this, b, this.className));
            });
            if (h) for (b = (a || "").match(E) || []; j > i; i++) if (c = this[i], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(ab, " ") : "")) {
                f = 0;
                while (e = b[f++]) while (d.indexOf(" " + e + " ") >= 0) d = d.replace(" " + e + " ", " ");
                g = a ? n.trim(d) : "", c.className !== g && (c.className = g);
            }
            return this;
        },
        toggleClass: function(a, b) {
            var c = typeof a;
            return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : this.each(n.isFunction(a) ? function(c) {
                n(this).toggleClass(a.call(this, c, this.className, b), b);
            } : function() {
                if ("string" === c) {
                    var b, d = 0, e = n(this), f = a.match(E) || [];
                    while (b = f[d++]) e.hasClass(b) ? e.removeClass(b) : e.addClass(b);
                } else (c === U || "boolean" === c) && (this.className && L.set(this, "__className__", this.className), 
                this.className = this.className || a === !1 ? "" : L.get(this, "__className__") || "");
            });
        },
        hasClass: function(a) {
            for (var b = " " + a + " ", c = 0, d = this.length; d > c; c++) if (1 === this[c].nodeType && (" " + this[c].className + " ").replace(ab, " ").indexOf(b) >= 0) return !0;
            return !1;
        }
    });
    var bb = /\r/g;
    n.fn.extend({
        val: function(a) {
            var b, c, d, e = this[0];
            {
                if (arguments.length) return d = n.isFunction(a), this.each(function(c) {
                    var e;
                    1 === this.nodeType && (e = d ? a.call(this, c, n(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : n.isArray(e) && (e = n.map(e, function(a) {
                        return null == a ? "" : a + "";
                    })), b = n.valHooks[this.type] || n.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e));
                });
                if (e) return b = n.valHooks[e.type] || n.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, 
                "string" == typeof c ? c.replace(bb, "") : null == c ? "" : c);
            }
        }
    }), n.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = n.find.attr(a, "value");
                    return null != b ? b : n.trim(n.text(a));
                }
            },
            select: {
                get: function(a) {
                    for (var b, c, d = a.options, e = a.selectedIndex, f = "select-one" === a.type || 0 > e, g = f ? null : [], h = f ? e + 1 : d.length, i = 0 > e ? h : f ? e : 0; h > i; i++) if (c = d[i], 
                    !(!c.selected && i !== e || (k.optDisabled ? c.disabled : null !== c.getAttribute("disabled")) || c.parentNode.disabled && n.nodeName(c.parentNode, "optgroup"))) {
                        if (b = n(c).val(), f) return b;
                        g.push(b);
                    }
                    return g;
                },
                set: function(a, b) {
                    var c, d, e = a.options, f = n.makeArray(b), g = e.length;
                    while (g--) d = e[g], (d.selected = n.inArray(d.value, f) >= 0) && (c = !0);
                    return c || (a.selectedIndex = -1), f;
                }
            }
        }
    }), n.each([ "radio", "checkbox" ], function() {
        n.valHooks[this] = {
            set: function(a, b) {
                return n.isArray(b) ? a.checked = n.inArray(n(a).val(), b) >= 0 : void 0;
            }
        }, k.checkOn || (n.valHooks[this].get = function(a) {
            return null === a.getAttribute("value") ? "on" : a.value;
        });
    }), n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
        n.fn[b] = function(a, c) {
            return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b);
        };
    }), n.fn.extend({
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a);
        },
        bind: function(a, b, c) {
            return this.on(a, null, b, c);
        },
        unbind: function(a, b) {
            return this.off(a, null, b);
        },
        delegate: function(a, b, c, d) {
            return this.on(b, a, c, d);
        },
        undelegate: function(a, b, c) {
            return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c);
        }
    });
    var cb = n.now(), db = /\?/;
    n.parseJSON = function(a) {
        return JSON.parse(a + "");
    }, n.parseXML = function(a) {
        var b, c;
        if (!a || "string" != typeof a) return null;
        try {
            c = new DOMParser(), b = c.parseFromString(a, "text/xml");
        } catch (a) {
            b = void 0;
        }
        return (!b || b.getElementsByTagName("parsererror").length) && n.error("Invalid XML: " + a), 
        b;
    };
    var eb = /#.*$/, fb = /([?&])_=[^&]*/, gb = /^(.*?):[ \t]*([^\r\n]*)$/gm, hb = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, ib = /^(?:GET|HEAD)$/, jb = /^\/\//, kb = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/, lb = {}, mb = {}, nb = "*/".concat("*"), ob = a.location.href, pb = kb.exec(ob.toLowerCase()) || [];
    function qb(a) {
        return function(b, c) {
            "string" != typeof b && (c = b, b = "*");
            var d, e = 0, f = b.toLowerCase().match(E) || [];
            if (n.isFunction(c)) while (d = f[e++]) "+" === d[0] ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c);
        };
    }
    function rb(a, b, c, d) {
        var e = {}, f = a === mb;
        function g(h) {
            var i;
            return e[h] = !0, n.each(a[h] || [], function(a, h) {
                var j = h(b, c, d);
                return "string" != typeof j || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), 
                g(j), !1);
            }), i;
        }
        return g(b.dataTypes[0]) || !e["*"] && g("*");
    }
    function sb(a, b) {
        var c, d, e = n.ajaxSettings.flatOptions || {};
        for (c in b) void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]);
        return d && n.extend(!0, a, d), a;
    }
    function tb(a, b, c) {
        var d, e, f, g, h = a.contents, i = a.dataTypes;
        while ("*" === i[0]) i.shift(), void 0 === d && (d = a.mimeType || b.getResponseHeader("Content-Type"));
        if (d) for (e in h) if (h[e] && h[e].test(d)) {
            i.unshift(e);
            break;
        }
        if (i[0] in c) f = i[0]; else {
            for (e in c) {
                if (!i[0] || a.converters[e + " " + i[0]]) {
                    f = e;
                    break;
                }
                g || (g = e);
            }
            f = f || g;
        }
        return f ? (f !== i[0] && i.unshift(f), c[f]) : void 0;
    }
    function ub(a, b, c, d) {
        var e, f, g, h, i, j = {}, k = a.dataTypes.slice();
        if (k[1]) for (g in a.converters) j[g.toLowerCase()] = a.converters[g];
        f = k.shift();
        while (f) if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), 
        i = f, f = k.shift()) if ("*" === f) f = i; else if ("*" !== i && i !== f) {
            if (g = j[i + " " + f] || j["* " + f], !g) for (e in j) if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {
                g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1]));
                break;
            }
            if (g !== !0) if (g && a["throws"]) b = g(b); else try {
                b = g(b);
            } catch (a) {
                return {
                    state: "parsererror",
                    error: g ? a : "No conversion from " + i + " to " + f
                };
            }
        }
        return {
            state: "success",
            data: b
        };
    }
    n.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: ob,
            type: "GET",
            isLocal: hb.test(pb[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": nb,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": n.parseJSON,
                "text xml": n.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(a, b) {
            return b ? sb(sb(a, n.ajaxSettings), b) : sb(n.ajaxSettings, a);
        },
        ajaxPrefilter: qb(lb),
        ajaxTransport: qb(mb),
        ajax: function(a, b) {
            "object" == typeof a && (b = a, a = void 0), b = b || {};
            var c, d, e, f, g, h, i, j, k = n.ajaxSetup({}, b), l = k.context || k, m = k.context && (l.nodeType || l.jquery) ? n(l) : n.event, o = n.Deferred(), p = n.Callbacks("once memory"), q = k.statusCode || {}, r = {}, s = {}, t = 0, u = "canceled", v = {
                readyState: 0,
                getResponseHeader: function(a) {
                    var b;
                    if (2 === t) {
                        if (!f) {
                            f = {};
                            while (b = gb.exec(e)) f[b[1].toLowerCase()] = b[2];
                        }
                        b = f[a.toLowerCase()];
                    }
                    return null == b ? null : b;
                },
                getAllResponseHeaders: function() {
                    return 2 === t ? e : null;
                },
                setRequestHeader: function(a, b) {
                    var c = a.toLowerCase();
                    return t || (a = s[c] = s[c] || a, r[a] = b), this;
                },
                overrideMimeType: function(a) {
                    return t || (k.mimeType = a), this;
                },
                statusCode: function(a) {
                    var b;
                    if (a) if (2 > t) for (b in a) q[b] = [ q[b], a[b] ]; else v.always(a[v.status]);
                    return this;
                },
                abort: function(a) {
                    var b = a || u;
                    return c && c.abort(b), w(0, b), this;
                }
            };
            if (o.promise(v).complete = p.add, v.success = v.done, v.error = v.fail, k.url = ((a || k.url || ob) + "").replace(eb, "").replace(jb, pb[1] + "//"), 
            k.type = b.method || b.type || k.method || k.type, k.dataTypes = n.trim(k.dataType || "*").toLowerCase().match(E) || [ "" ], 
            null == k.crossDomain && (h = kb.exec(k.url.toLowerCase()), k.crossDomain = !(!h || h[1] === pb[1] && h[2] === pb[2] && (h[3] || ("http:" === h[1] ? "80" : "443")) === (pb[3] || ("http:" === pb[1] ? "80" : "443")))), 
            k.data && k.processData && "string" != typeof k.data && (k.data = n.param(k.data, k.traditional)), 
            rb(lb, k, b, v), 2 === t) return v;
            i = n.event && k.global, i && 0 === n.active++ && n.event.trigger("ajaxStart"), 
            k.type = k.type.toUpperCase(), k.hasContent = !ib.test(k.type), d = k.url, k.hasContent || (k.data && (d = k.url += (db.test(d) ? "&" : "?") + k.data, 
            delete k.data), k.cache === !1 && (k.url = fb.test(d) ? d.replace(fb, "$1_=" + cb++) : d + (db.test(d) ? "&" : "?") + "_=" + cb++)), 
            k.ifModified && (n.lastModified[d] && v.setRequestHeader("If-Modified-Since", n.lastModified[d]), 
            n.etag[d] && v.setRequestHeader("If-None-Match", n.etag[d])), (k.data && k.hasContent && k.contentType !== !1 || b.contentType) && v.setRequestHeader("Content-Type", k.contentType), 
            v.setRequestHeader("Accept", k.dataTypes[0] && k.accepts[k.dataTypes[0]] ? k.accepts[k.dataTypes[0]] + ("*" !== k.dataTypes[0] ? ", " + nb + "; q=0.01" : "") : k.accepts["*"]);
            for (j in k.headers) v.setRequestHeader(j, k.headers[j]);
            if (k.beforeSend && (k.beforeSend.call(l, v, k) === !1 || 2 === t)) return v.abort();
            u = "abort";
            for (j in {
                success: 1,
                error: 1,
                complete: 1
            }) v[j](k[j]);
            if (c = rb(mb, k, b, v)) {
                v.readyState = 1, i && m.trigger("ajaxSend", [ v, k ]), k.async && k.timeout > 0 && (g = setTimeout(function() {
                    v.abort("timeout");
                }, k.timeout));
                try {
                    t = 1, c.send(r, w);
                } catch (a) {
                    if (!(2 > t)) throw a;
                    w(-1, a);
                }
            } else w(-1, "No Transport");
            function w(a, b, f, h) {
                var j, r, s, u, w, x = b;
                2 !== t && (t = 2, g && clearTimeout(g), c = void 0, e = h || "", v.readyState = a > 0 ? 4 : 0, 
                j = a >= 200 && 300 > a || 304 === a, f && (u = tb(k, v, f)), u = ub(k, u, v, j), 
                j ? (k.ifModified && (w = v.getResponseHeader("Last-Modified"), w && (n.lastModified[d] = w), 
                w = v.getResponseHeader("etag"), w && (n.etag[d] = w)), 204 === a || "HEAD" === k.type ? x = "nocontent" : 304 === a ? x = "notmodified" : (x = u.state, 
                r = u.data, s = u.error, j = !s)) : (s = x, (a || !x) && (x = "error", 0 > a && (a = 0))), 
                v.status = a, v.statusText = (b || x) + "", j ? o.resolveWith(l, [ r, x, v ]) : o.rejectWith(l, [ v, x, s ]), 
                v.statusCode(q), q = void 0, i && m.trigger(j ? "ajaxSuccess" : "ajaxError", [ v, k, j ? r : s ]), 
                p.fireWith(l, [ v, x ]), i && (m.trigger("ajaxComplete", [ v, k ]), --n.active || n.event.trigger("ajaxStop")));
            }
            return v;
        },
        getJSON: function(a, b, c) {
            return n.get(a, b, c, "json");
        },
        getScript: function(a, b) {
            return n.get(a, void 0, b, "script");
        }
    }), n.each([ "get", "post" ], function(a, b) {
        n[b] = function(a, c, d, e) {
            return n.isFunction(c) && (e = e || d, d = c, c = void 0), n.ajax({
                url: a,
                type: b,
                dataType: e,
                data: c,
                success: d
            });
        };
    }), n._evalUrl = function(a) {
        return n.ajax({
            url: a,
            type: "GET",
            dataType: "script",
            async: !1,
            global: !1,
            throws: !0
        });
    }, n.fn.extend({
        wrapAll: function(a) {
            var b;
            return n.isFunction(a) ? this.each(function(b) {
                n(this).wrapAll(a.call(this, b));
            }) : (this[0] && (b = n(a, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && b.insertBefore(this[0]), 
            b.map(function() {
                var a = this;
                while (a.firstElementChild) a = a.firstElementChild;
                return a;
            }).append(this)), this);
        },
        wrapInner: function(a) {
            return this.each(n.isFunction(a) ? function(b) {
                n(this).wrapInner(a.call(this, b));
            } : function() {
                var b = n(this), c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a);
            });
        },
        wrap: function(a) {
            var b = n.isFunction(a);
            return this.each(function(c) {
                n(this).wrapAll(b ? a.call(this, c) : a);
            });
        },
        unwrap: function() {
            return this.parent().each(function() {
                n.nodeName(this, "body") || n(this).replaceWith(this.childNodes);
            }).end();
        }
    }), n.expr.filters.hidden = function(a) {
        return a.offsetWidth <= 0 && a.offsetHeight <= 0;
    }, n.expr.filters.visible = function(a) {
        return !n.expr.filters.hidden(a);
    };
    var vb = /%20/g, wb = /\[\]$/, xb = /\r?\n/g, yb = /^(?:submit|button|image|reset|file)$/i, zb = /^(?:input|select|textarea|keygen)/i;
    function Ab(a, b, c, d) {
        var e;
        if (n.isArray(b)) n.each(b, function(b, e) {
            c || wb.test(a) ? d(a, e) : Ab(a + "[" + ("object" == typeof e ? b : "") + "]", e, c, d);
        }); else if (c || "object" !== n.type(b)) d(a, b); else for (e in b) Ab(a + "[" + e + "]", b[e], c, d);
    }
    n.param = function(a, b) {
        var c, d = [], e = function(a, b) {
            b = n.isFunction(b) ? b() : null == b ? "" : b, d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b);
        };
        if (void 0 === b && (b = n.ajaxSettings && n.ajaxSettings.traditional), n.isArray(a) || a.jquery && !n.isPlainObject(a)) n.each(a, function() {
            e(this.name, this.value);
        }); else for (c in a) Ab(c, a[c], b, e);
        return d.join("&").replace(vb, "+");
    }, n.fn.extend({
        serialize: function() {
            return n.param(this.serializeArray());
        },
        serializeArray: function() {
            return this.map(function() {
                var a = n.prop(this, "elements");
                return a ? n.makeArray(a) : this;
            }).filter(function() {
                var a = this.type;
                return this.name && !n(this).is(":disabled") && zb.test(this.nodeName) && !yb.test(a) && (this.checked || !T.test(a));
            }).map(function(a, b) {
                var c = n(this).val();
                return null == c ? null : n.isArray(c) ? n.map(c, function(a) {
                    return {
                        name: b.name,
                        value: a.replace(xb, "\r\n")
                    };
                }) : {
                    name: b.name,
                    value: c.replace(xb, "\r\n")
                };
            }).get();
        }
    }), n.ajaxSettings.xhr = function() {
        try {
            return new XMLHttpRequest();
        } catch (a) {}
    };
    var Bb = 0, Cb = {}, Db = {
        0: 200,
        1223: 204
    }, Eb = n.ajaxSettings.xhr();
    a.attachEvent && a.attachEvent("onunload", function() {
        for (var a in Cb) Cb[a]();
    }), k.cors = !!Eb && "withCredentials" in Eb, k.ajax = Eb = !!Eb, n.ajaxTransport(function(a) {
        var b;
        return k.cors || Eb && !a.crossDomain ? {
            send: function(c, d) {
                var e, f = a.xhr(), g = ++Bb;
                if (f.open(a.type, a.url, a.async, a.username, a.password), a.xhrFields) for (e in a.xhrFields) f[e] = a.xhrFields[e];
                a.mimeType && f.overrideMimeType && f.overrideMimeType(a.mimeType), a.crossDomain || c["X-Requested-With"] || (c["X-Requested-With"] = "XMLHttpRequest");
                for (e in c) f.setRequestHeader(e, c[e]);
                b = function(a) {
                    return function() {
                        b && (delete Cb[g], b = f.onload = f.onerror = null, "abort" === a ? f.abort() : "error" === a ? d(f.status, f.statusText) : d(Db[f.status] || f.status, f.statusText, "string" == typeof f.responseText ? {
                            text: f.responseText
                        } : void 0, f.getAllResponseHeaders()));
                    };
                }, f.onload = b(), f.onerror = b("error"), b = Cb[g] = b("abort");
                try {
                    f.send(a.hasContent && a.data || null);
                } catch (a) {
                    if (b) throw a;
                }
            },
            abort: function() {
                b && b();
            }
        } : void 0;
    }), n.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /(?:java|ecma)script/
        },
        converters: {
            "text script": function(a) {
                return n.globalEval(a), a;
            }
        }
    }), n.ajaxPrefilter("script", function(a) {
        void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET");
    }), n.ajaxTransport("script", function(a) {
        if (a.crossDomain) {
            var b, c;
            return {
                send: function(d, e) {
                    b = n("<script>").prop({
                        async: !0,
                        charset: a.scriptCharset,
                        src: a.url
                    }).on("load error", c = function(a) {
                        b.remove(), c = null, a && e("error" === a.type ? 404 : 200, a.type);
                    }), l.head.appendChild(b[0]);
                },
                abort: function() {
                    c && c();
                }
            };
        }
    });
    var Fb = [], Gb = /(=)\?(?=&|$)|\?\?/;
    n.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var a = Fb.pop() || n.expando + "_" + cb++;
            return this[a] = !0, a;
        }
    }), n.ajaxPrefilter("json jsonp", function(b, c, d) {
        var e, f, g, h = b.jsonp !== !1 && (Gb.test(b.url) ? "url" : "string" == typeof b.data && !(b.contentType || "").indexOf("application/x-www-form-urlencoded") && Gb.test(b.data) && "data");
        return h || "jsonp" === b.dataTypes[0] ? (e = b.jsonpCallback = n.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, 
        h ? b[h] = b[h].replace(Gb, "$1" + e) : b.jsonp !== !1 && (b.url += (db.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), 
        b.converters["script json"] = function() {
            return g || n.error(e + " was not called"), g[0];
        }, b.dataTypes[0] = "json", f = a[e], a[e] = function() {
            g = arguments;
        }, d.always(function() {
            a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, Fb.push(e)), g && n.isFunction(f) && f(g[0]), 
            g = f = void 0;
        }), "script") : void 0;
    }), n.parseHTML = function(a, b, c) {
        if (!a || "string" != typeof a) return null;
        "boolean" == typeof b && (c = b, b = !1), b = b || l;
        var d = v.exec(a), e = !c && [];
        return d ? [ b.createElement(d[1]) ] : (d = n.buildFragment([ a ], b, e), e && e.length && n(e).remove(), 
        n.merge([], d.childNodes));
    };
    var Hb = n.fn.load;
    n.fn.load = function(a, b, c) {
        if ("string" != typeof a && Hb) return Hb.apply(this, arguments);
        var d, e, f, g = this, h = a.indexOf(" ");
        return h >= 0 && (d = n.trim(a.slice(h)), a = a.slice(0, h)), n.isFunction(b) ? (c = b, 
        b = void 0) : b && "object" == typeof b && (e = "POST"), g.length > 0 && n.ajax({
            url: a,
            type: e,
            dataType: "html",
            data: b
        }).done(function(a) {
            f = arguments, g.html(d ? n("<div>").append(n.parseHTML(a)).find(d) : a);
        }).complete(c && function(a, b) {
            g.each(c, f || [ a.responseText, b, a ]);
        }), this;
    }, n.each([ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function(a, b) {
        n.fn[b] = function(a) {
            return this.on(b, a);
        };
    }), n.expr.filters.animated = function(a) {
        return n.grep(n.timers, function(b) {
            return a === b.elem;
        }).length;
    };
    var Ib = a.document.documentElement;
    function Jb(a) {
        return n.isWindow(a) ? a : 9 === a.nodeType && a.defaultView;
    }
    n.offset = {
        setOffset: function(a, b, c) {
            var d, e, f, g, h, i, j, k = n.css(a, "position"), l = n(a), m = {};
            "static" === k && (a.style.position = "relative"), h = l.offset(), f = n.css(a, "top"), 
            i = n.css(a, "left"), j = ("absolute" === k || "fixed" === k) && (f + i).indexOf("auto") > -1, 
            j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), 
            n.isFunction(b) && (b = b.call(a, c, h)), null != b.top && (m.top = b.top - h.top + g), 
            null != b.left && (m.left = b.left - h.left + e), "using" in b ? b.using.call(a, m) : l.css(m);
        }
    }, n.fn.extend({
        offset: function(a) {
            if (arguments.length) return void 0 === a ? this : this.each(function(b) {
                n.offset.setOffset(this, a, b);
            });
            var b, c, d = this[0], e = {
                top: 0,
                left: 0
            }, f = d && d.ownerDocument;
            if (f) return b = f.documentElement, n.contains(b, d) ? (typeof d.getBoundingClientRect !== U && (e = d.getBoundingClientRect()), 
            c = Jb(f), {
                top: e.top + c.pageYOffset - b.clientTop,
                left: e.left + c.pageXOffset - b.clientLeft
            }) : e;
        },
        position: function() {
            if (this[0]) {
                var a, b, c = this[0], d = {
                    top: 0,
                    left: 0
                };
                return "fixed" === n.css(c, "position") ? b = c.getBoundingClientRect() : (a = this.offsetParent(), 
                b = this.offset(), n.nodeName(a[0], "html") || (d = a.offset()), d.top += n.css(a[0], "borderTopWidth", !0), 
                d.left += n.css(a[0], "borderLeftWidth", !0)), {
                    top: b.top - d.top - n.css(c, "marginTop", !0),
                    left: b.left - d.left - n.css(c, "marginLeft", !0)
                };
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var a = this.offsetParent || Ib;
                while (a && !n.nodeName(a, "html") && "static" === n.css(a, "position")) a = a.offsetParent;
                return a || Ib;
            });
        }
    }), n.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(b, c) {
        var d = "pageYOffset" === c;
        n.fn[b] = function(e) {
            return J(this, function(b, e, f) {
                var g = Jb(b);
                return void 0 === f ? g ? g[c] : b[e] : void (g ? g.scrollTo(d ? a.pageXOffset : f, d ? f : a.pageYOffset) : b[e] = f);
            }, b, e, arguments.length, null);
        };
    }), n.each([ "top", "left" ], function(a, b) {
        n.cssHooks[b] = ya(k.pixelPosition, function(a, c) {
            return c ? (c = xa(a, b), va.test(c) ? n(a).position()[b] + "px" : c) : void 0;
        });
    }), n.each({
        Height: "height",
        Width: "width"
    }, function(a, b) {
        n.each({
            padding: "inner" + a,
            content: b,
            "": "outer" + a
        }, function(c, d) {
            n.fn[d] = function(d, e) {
                var f = arguments.length && (c || "boolean" != typeof d), g = c || (d === !0 || e === !0 ? "margin" : "border");
                return J(this, function(b, c, d) {
                    var e;
                    return n.isWindow(b) ? b.document.documentElement["client" + a] : 9 === b.nodeType ? (e = b.documentElement, 
                    Math.max(b.body["scroll" + a], e["scroll" + a], b.body["offset" + a], e["offset" + a], e["client" + a])) : void 0 === d ? n.css(b, c, g) : n.style(b, c, d, g);
                }, b, f ? d : void 0, f, null);
            };
        });
    }), n.fn.size = function() {
        return this.length;
    }, n.fn.andSelf = n.fn.addBack, "function" == typeof define && define.amd && define("jquery", [], function() {
        return n;
    });
    var Kb = a.jQuery, Lb = a.$;
    return n.noConflict = function(b) {
        return a.$ === n && (a.$ = Lb), b && a.jQuery === n && (a.jQuery = Kb), n;
    }, typeof b === U && (a.jQuery = a.$ = n), n;
});

(function(a) {
    "function" == typeof define && define.amd ? define([ "jquery" ], a) : a(jQuery);
})(function(a) {
    function b(a) {
        for (var b = a.css("visibility"); "inherit" === b; ) a = a.parent(), b = a.css("visibility");
        return "hidden" !== b;
    }
    function c(a) {
        for (var b, c; a.length && a[0] !== document; ) {
            if (b = a.css("position"), ("absolute" === b || "relative" === b || "fixed" === b) && (c = parseInt(a.css("zIndex"), 10), 
            !isNaN(c) && 0 !== c)) return c;
            a = a.parent();
        }
        return 0;
    }
    function d() {
        this._curInst = null, this._keyEvent = !1, this._disabledInputs = [], this._datepickerShowing = !1, 
        this._inDialog = !1, this._mainDivId = "ui-datepicker-div", this._inlineClass = "ui-datepicker-inline", 
        this._appendClass = "ui-datepicker-append", this._triggerClass = "ui-datepicker-trigger", 
        this._dialogClass = "ui-datepicker-dialog", this._disableClass = "ui-datepicker-disabled", 
        this._unselectableClass = "ui-datepicker-unselectable", this._currentClass = "ui-datepicker-current-day", 
        this._dayOverClass = "ui-datepicker-days-cell-over", this.regional = [], this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
            monthNamesShort: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ],
            dayNames: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
            dayNamesShort: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
            dayNamesMin: [ "Su", "Mo", "Tu", "We", "Th", "Fr", "Sa" ],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: !1,
            showMonthAfterYear: !1,
            yearSuffix: ""
        }, this._defaults = {
            showOn: "focus",
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: !1,
            hideIfNoPrevNext: !1,
            navigationAsDateFormat: !1,
            gotoCurrent: !1,
            changeMonth: !1,
            changeYear: !1,
            yearRange: "c-10:c+10",
            showOtherMonths: !1,
            selectOtherMonths: !1,
            showWeek: !1,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null,
            maxDate: null,
            duration: "fast",
            beforeShowDay: null,
            beforeShow: null,
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: !0,
            showButtonPanel: !1,
            autoSize: !1,
            disabled: !1
        }, a.extend(this._defaults, this.regional[""]), this.regional.en = a.extend(!0, {}, this.regional[""]), 
        this.regional["en-US"] = a.extend(!0, {}, this.regional.en), this.dpDiv = e(a("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"));
    }
    function e(b) {
        var c = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return b.on("mouseout", c, function() {
            a(this).removeClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && a(this).removeClass("ui-datepicker-prev-hover"), 
            -1 !== this.className.indexOf("ui-datepicker-next") && a(this).removeClass("ui-datepicker-next-hover");
        }).on("mouseover", c, f);
    }
    function f() {
        a.datepicker._isDisabledDatepicker(q.inline ? q.dpDiv.parent()[0] : q.input[0]) || (a(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"), 
        a(this).addClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && a(this).addClass("ui-datepicker-prev-hover"), 
        -1 !== this.className.indexOf("ui-datepicker-next") && a(this).addClass("ui-datepicker-next-hover"));
    }
    function g(b, c) {
        a.extend(b, c);
        for (var d in c) null == c[d] && (b[d] = c[d]);
        return b;
    }
    function h(a) {
        return function() {
            var b = this.element.val();
            a.apply(this, arguments), this._refresh(), b !== this.element.val() && this._trigger("change");
        };
    }
    a.ui = a.ui || {}, a.ui.version = "1.12.1";
    var i = 0, j = Array.prototype.slice;
    a.cleanData = function(b) {
        return function(c) {
            var d, e, f;
            for (f = 0; null != (e = c[f]); f++) try {
                d = a._data(e, "events"), d && d.remove && a(e).triggerHandler("remove");
            } catch (a) {}
            b(c);
        };
    }(a.cleanData), a.widget = function(b, c, d) {
        var e, f, g, h = {}, i = b.split(".")[0];
        b = b.split(".")[1];
        var j = i + "-" + b;
        return d || (d = c, c = a.Widget), a.isArray(d) && (d = a.extend.apply(null, [ {} ].concat(d))), 
        a.expr[":"][j.toLowerCase()] = function(b) {
            return !!a.data(b, j);
        }, a[i] = a[i] || {}, e = a[i][b], f = a[i][b] = function(a, b) {
            return this._createWidget ? (arguments.length && this._createWidget(a, b), void 0) : new f(a, b);
        }, a.extend(f, e, {
            version: d.version,
            _proto: a.extend({}, d),
            _childConstructors: []
        }), g = new c(), g.options = a.widget.extend({}, g.options), a.each(d, function(b, d) {
            return a.isFunction(d) ? (h[b] = function() {
                function a() {
                    return c.prototype[b].apply(this, arguments);
                }
                function e(a) {
                    return c.prototype[b].apply(this, a);
                }
                return function() {
                    var b, c = this._super, f = this._superApply;
                    return this._super = a, this._superApply = e, b = d.apply(this, arguments), this._super = c, 
                    this._superApply = f, b;
                };
            }(), void 0) : (h[b] = d, void 0);
        }), f.prototype = a.widget.extend(g, {
            widgetEventPrefix: e ? g.widgetEventPrefix || b : b
        }, h, {
            constructor: f,
            namespace: i,
            widgetName: b,
            widgetFullName: j
        }), e ? (a.each(e._childConstructors, function(b, c) {
            var d = c.prototype;
            a.widget(d.namespace + "." + d.widgetName, f, c._proto);
        }), delete e._childConstructors) : c._childConstructors.push(f), a.widget.bridge(b, f), 
        f;
    }, a.widget.extend = function(b) {
        for (var c, d, e = j.call(arguments, 1), f = 0, g = e.length; g > f; f++) for (c in e[f]) d = e[f][c], 
        e[f].hasOwnProperty(c) && void 0 !== d && (b[c] = a.isPlainObject(d) ? a.isPlainObject(b[c]) ? a.widget.extend({}, b[c], d) : a.widget.extend({}, d) : d);
        return b;
    }, a.widget.bridge = function(b, c) {
        var d = c.prototype.widgetFullName || b;
        a.fn[b] = function(e) {
            var f = "string" == typeof e, g = j.call(arguments, 1), h = this;
            return f ? this.length || "instance" !== e ? this.each(function() {
                var c, f = a.data(this, d);
                return "instance" === e ? (h = f, !1) : f ? a.isFunction(f[e]) && "_" !== e.charAt(0) ? (c = f[e].apply(f, g), 
                c !== f && void 0 !== c ? (h = c && c.jquery ? h.pushStack(c.get()) : c, !1) : void 0) : a.error("no such method '" + e + "' for " + b + " widget instance") : a.error("cannot call methods on " + b + " prior to initialization; " + "attempted to call method '" + e + "'");
            }) : h = void 0 : (g.length && (e = a.widget.extend.apply(null, [ e ].concat(g))), 
            this.each(function() {
                var b = a.data(this, d);
                b ? (b.option(e || {}), b._init && b._init()) : a.data(this, d, new c(e, this));
            })), h;
        };
    }, a.Widget = function() {}, a.Widget._childConstructors = [], a.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            classes: {},
            disabled: !1,
            create: null
        },
        _createWidget: function(b, c) {
            c = a(c || this.defaultElement || this)[0], this.element = a(c), this.uuid = i++, 
            this.eventNamespace = "." + this.widgetName + this.uuid, this.bindings = a(), this.hoverable = a(), 
            this.focusable = a(), this.classesElementLookup = {}, c !== this && (a.data(c, this.widgetFullName, this), 
            this._on(!0, this.element, {
                remove: function(a) {
                    a.target === c && this.destroy();
                }
            }), this.document = a(c.style ? c.ownerDocument : c.document || c), this.window = a(this.document[0].defaultView || this.document[0].parentWindow)), 
            this.options = a.widget.extend({}, this.options, this._getCreateOptions(), b), this._create(), 
            this.options.disabled && this._setOptionDisabled(this.options.disabled), this._trigger("create", null, this._getCreateEventData()), 
            this._init();
        },
        _getCreateOptions: function() {
            return {};
        },
        _getCreateEventData: a.noop,
        _create: a.noop,
        _init: a.noop,
        destroy: function() {
            var b = this;
            this._destroy(), a.each(this.classesElementLookup, function(a, c) {
                b._removeClass(c, a);
            }), this.element.off(this.eventNamespace).removeData(this.widgetFullName), this.widget().off(this.eventNamespace).removeAttr("aria-disabled"), 
            this.bindings.off(this.eventNamespace);
        },
        _destroy: a.noop,
        widget: function() {
            return this.element;
        },
        option: function(b, c) {
            var d, e, f, g = b;
            if (0 === arguments.length) return a.widget.extend({}, this.options);
            if ("string" == typeof b) if (g = {}, d = b.split("."), b = d.shift(), d.length) {
                for (e = g[b] = a.widget.extend({}, this.options[b]), f = 0; d.length - 1 > f; f++) e[d[f]] = e[d[f]] || {}, 
                e = e[d[f]];
                if (b = d.pop(), 1 === arguments.length) return void 0 === e[b] ? null : e[b];
                e[b] = c;
            } else {
                if (1 === arguments.length) return void 0 === this.options[b] ? null : this.options[b];
                g[b] = c;
            }
            return this._setOptions(g), this;
        },
        _setOptions: function(a) {
            var b;
            for (b in a) this._setOption(b, a[b]);
            return this;
        },
        _setOption: function(a, b) {
            return "classes" === a && this._setOptionClasses(b), this.options[a] = b, "disabled" === a && this._setOptionDisabled(b), 
            this;
        },
        _setOptionClasses: function(b) {
            var c, d, e;
            for (c in b) e = this.classesElementLookup[c], b[c] !== this.options.classes[c] && e && e.length && (d = a(e.get()), 
            this._removeClass(e, c), d.addClass(this._classes({
                element: d,
                keys: c,
                classes: b,
                add: !0
            })));
        },
        _setOptionDisabled: function(a) {
            this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, !!a), 
            a && (this._removeClass(this.hoverable, null, "ui-state-hover"), this._removeClass(this.focusable, null, "ui-state-focus"));
        },
        enable: function() {
            return this._setOptions({
                disabled: !1
            });
        },
        disable: function() {
            return this._setOptions({
                disabled: !0
            });
        },
        _classes: function(b) {
            function c(c, f) {
                var g, h;
                for (h = 0; c.length > h; h++) g = e.classesElementLookup[c[h]] || a(), g = b.add ? a(a.unique(g.get().concat(b.element.get()))) : a(g.not(b.element).get()), 
                e.classesElementLookup[c[h]] = g, d.push(c[h]), f && b.classes[c[h]] && d.push(b.classes[c[h]]);
            }
            var d = [], e = this;
            return b = a.extend({
                element: this.element,
                classes: this.options.classes || {}
            }, b), this._on(b.element, {
                remove: "_untrackClassesElement"
            }), b.keys && c(b.keys.match(/\S+/g) || [], !0), b.extra && c(b.extra.match(/\S+/g) || []), 
            d.join(" ");
        },
        _untrackClassesElement: function(b) {
            var c = this;
            a.each(c.classesElementLookup, function(d, e) {
                -1 !== a.inArray(b.target, e) && (c.classesElementLookup[d] = a(e.not(b.target).get()));
            });
        },
        _removeClass: function(a, b, c) {
            return this._toggleClass(a, b, c, !1);
        },
        _addClass: function(a, b, c) {
            return this._toggleClass(a, b, c, !0);
        },
        _toggleClass: function(a, b, c, d) {
            d = "boolean" == typeof d ? d : c;
            var e = "string" == typeof a || null === a, f = {
                extra: e ? b : c,
                keys: e ? a : b,
                element: e ? this.element : a,
                add: d
            };
            return f.element.toggleClass(this._classes(f), d), this;
        },
        _on: function(b, c, d) {
            var e, f = this;
            "boolean" != typeof b && (d = c, c = b, b = !1), d ? (c = e = a(c), this.bindings = this.bindings.add(c)) : (d = c, 
            c = this.element, e = this.widget()), a.each(d, function(d, g) {
                function h() {
                    return b || f.options.disabled !== !0 && !a(this).hasClass("ui-state-disabled") ? ("string" == typeof g ? f[g] : g).apply(f, arguments) : void 0;
                }
                "string" != typeof g && (h.guid = g.guid = g.guid || h.guid || a.guid++);
                var i = d.match(/^([\w:-]*)\s*(.*)$/), j = i[1] + f.eventNamespace, k = i[2];
                k ? e.on(j, k, h) : c.on(j, h);
            });
        },
        _off: function(b, c) {
            c = (c || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, 
            b.off(c).off(c), this.bindings = a(this.bindings.not(b).get()), this.focusable = a(this.focusable.not(b).get()), 
            this.hoverable = a(this.hoverable.not(b).get());
        },
        _delay: function(a, b) {
            function c() {
                return ("string" == typeof a ? d[a] : a).apply(d, arguments);
            }
            var d = this;
            return setTimeout(c, b || 0);
        },
        _hoverable: function(b) {
            this.hoverable = this.hoverable.add(b), this._on(b, {
                mouseenter: function(b) {
                    this._addClass(a(b.currentTarget), null, "ui-state-hover");
                },
                mouseleave: function(b) {
                    this._removeClass(a(b.currentTarget), null, "ui-state-hover");
                }
            });
        },
        _focusable: function(b) {
            this.focusable = this.focusable.add(b), this._on(b, {
                focusin: function(b) {
                    this._addClass(a(b.currentTarget), null, "ui-state-focus");
                },
                focusout: function(b) {
                    this._removeClass(a(b.currentTarget), null, "ui-state-focus");
                }
            });
        },
        _trigger: function(b, c, d) {
            var e, f, g = this.options[b];
            if (d = d || {}, c = a.Event(c), c.type = (b === this.widgetEventPrefix ? b : this.widgetEventPrefix + b).toLowerCase(), 
            c.target = this.element[0], f = c.originalEvent) for (e in f) e in c || (c[e] = f[e]);
            return this.element.trigger(c, d), !(a.isFunction(g) && g.apply(this.element[0], [ c ].concat(d)) === !1 || c.isDefaultPrevented());
        }
    }, a.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(b, c) {
        a.Widget.prototype["_" + b] = function(d, e, f) {
            "string" == typeof e && (e = {
                effect: e
            });
            var g, h = e ? e === !0 || "number" == typeof e ? c : e.effect || c : b;
            e = e || {}, "number" == typeof e && (e = {
                duration: e
            }), g = !a.isEmptyObject(e), e.complete = f, e.delay && d.delay(e.delay), g && a.effects && a.effects.effect[h] ? d[b](e) : h !== b && d[h] ? d[h](e.duration, e.easing, f) : d.queue(function(c) {
                a(this)[b](), f && f.call(d[0]), c();
            });
        };
    }), a.widget, function() {
        function b(a, b, c) {
            return [ parseFloat(a[0]) * (l.test(a[0]) ? b / 100 : 1), parseFloat(a[1]) * (l.test(a[1]) ? c / 100 : 1) ];
        }
        function c(b, c) {
            return parseInt(a.css(b, c), 10) || 0;
        }
        function d(b) {
            var c = b[0];
            return 9 === c.nodeType ? {
                width: b.width(),
                height: b.height(),
                offset: {
                    top: 0,
                    left: 0
                }
            } : a.isWindow(c) ? {
                width: b.width(),
                height: b.height(),
                offset: {
                    top: b.scrollTop(),
                    left: b.scrollLeft()
                }
            } : c.preventDefault ? {
                width: 0,
                height: 0,
                offset: {
                    top: c.pageY,
                    left: c.pageX
                }
            } : {
                width: b.outerWidth(),
                height: b.outerHeight(),
                offset: b.offset()
            };
        }
        var e, f = Math.max, g = Math.abs, h = /left|center|right/, i = /top|center|bottom/, j = /[\+\-]\d+(\.[\d]+)?%?/, k = /^\w+/, l = /%$/, m = a.fn.position;
        a.position = {
            scrollbarWidth: function() {
                if (void 0 !== e) return e;
                var b, c, d = a("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"), f = d.children()[0];
                return a("body").append(d), b = f.offsetWidth, d.css("overflow", "scroll"), c = f.offsetWidth, 
                b === c && (c = d[0].clientWidth), d.remove(), e = b - c;
            },
            getScrollInfo: function(b) {
                var c = b.isWindow || b.isDocument ? "" : b.element.css("overflow-x"), d = b.isWindow || b.isDocument ? "" : b.element.css("overflow-y"), e = "scroll" === c || "auto" === c && b.width < b.element[0].scrollWidth, f = "scroll" === d || "auto" === d && b.height < b.element[0].scrollHeight;
                return {
                    width: f ? a.position.scrollbarWidth() : 0,
                    height: e ? a.position.scrollbarWidth() : 0
                };
            },
            getWithinInfo: function(b) {
                var c = a(b || window), d = a.isWindow(c[0]), e = !!c[0] && 9 === c[0].nodeType, f = !d && !e;
                return {
                    element: c,
                    isWindow: d,
                    isDocument: e,
                    offset: f ? a(b).offset() : {
                        left: 0,
                        top: 0
                    },
                    scrollLeft: c.scrollLeft(),
                    scrollTop: c.scrollTop(),
                    width: c.outerWidth(),
                    height: c.outerHeight()
                };
            }
        }, a.fn.position = function(e) {
            if (!e || !e.of) return m.apply(this, arguments);
            e = a.extend({}, e);
            var l, n, o, p, q, r, s = a(e.of), t = a.position.getWithinInfo(e.within), u = a.position.getScrollInfo(t), v = (e.collision || "flip").split(" "), w = {};
            return r = d(s), s[0].preventDefault && (e.at = "left top"), n = r.width, o = r.height, 
            p = r.offset, q = a.extend({}, p), a.each([ "my", "at" ], function() {
                var a, b, c = (e[this] || "").split(" ");
                1 === c.length && (c = h.test(c[0]) ? c.concat([ "center" ]) : i.test(c[0]) ? [ "center" ].concat(c) : [ "center", "center" ]), 
                c[0] = h.test(c[0]) ? c[0] : "center", c[1] = i.test(c[1]) ? c[1] : "center", a = j.exec(c[0]), 
                b = j.exec(c[1]), w[this] = [ a ? a[0] : 0, b ? b[0] : 0 ], e[this] = [ k.exec(c[0])[0], k.exec(c[1])[0] ];
            }), 1 === v.length && (v[1] = v[0]), "right" === e.at[0] ? q.left += n : "center" === e.at[0] && (q.left += n / 2), 
            "bottom" === e.at[1] ? q.top += o : "center" === e.at[1] && (q.top += o / 2), l = b(w.at, n, o), 
            q.left += l[0], q.top += l[1], this.each(function() {
                var d, h, i = a(this), j = i.outerWidth(), k = i.outerHeight(), m = c(this, "marginLeft"), r = c(this, "marginTop"), x = j + m + c(this, "marginRight") + u.width, y = k + r + c(this, "marginBottom") + u.height, z = a.extend({}, q), A = b(w.my, i.outerWidth(), i.outerHeight());
                "right" === e.my[0] ? z.left -= j : "center" === e.my[0] && (z.left -= j / 2), "bottom" === e.my[1] ? z.top -= k : "center" === e.my[1] && (z.top -= k / 2), 
                z.left += A[0], z.top += A[1], d = {
                    marginLeft: m,
                    marginTop: r
                }, a.each([ "left", "top" ], function(b, c) {
                    a.ui.position[v[b]] && a.ui.position[v[b]][c](z, {
                        targetWidth: n,
                        targetHeight: o,
                        elemWidth: j,
                        elemHeight: k,
                        collisionPosition: d,
                        collisionWidth: x,
                        collisionHeight: y,
                        offset: [ l[0] + A[0], l[1] + A[1] ],
                        my: e.my,
                        at: e.at,
                        within: t,
                        elem: i
                    });
                }), e.using && (h = function(a) {
                    var b = p.left - z.left, c = b + n - j, d = p.top - z.top, h = d + o - k, l = {
                        target: {
                            element: s,
                            left: p.left,
                            top: p.top,
                            width: n,
                            height: o
                        },
                        element: {
                            element: i,
                            left: z.left,
                            top: z.top,
                            width: j,
                            height: k
                        },
                        horizontal: 0 > c ? "left" : b > 0 ? "right" : "center",
                        vertical: 0 > h ? "top" : d > 0 ? "bottom" : "middle"
                    };
                    j > n && n > g(b + c) && (l.horizontal = "center"), k > o && o > g(d + h) && (l.vertical = "middle"), 
                    l.important = f(g(b), g(c)) > f(g(d), g(h)) ? "horizontal" : "vertical", e.using.call(this, a, l);
                }), i.offset(a.extend(z, {
                    using: h
                }));
            });
        }, a.ui.position = {
            fit: {
                left: function(a, b) {
                    var c, d = b.within, e = d.isWindow ? d.scrollLeft : d.offset.left, g = d.width, h = a.left - b.collisionPosition.marginLeft, i = e - h, j = h + b.collisionWidth - g - e;
                    b.collisionWidth > g ? i > 0 && 0 >= j ? (c = a.left + i + b.collisionWidth - g - e, 
                    a.left += i - c) : a.left = j > 0 && 0 >= i ? e : i > j ? e + g - b.collisionWidth : e : i > 0 ? a.left += i : j > 0 ? a.left -= j : a.left = f(a.left - h, a.left);
                },
                top: function(a, b) {
                    var c, d = b.within, e = d.isWindow ? d.scrollTop : d.offset.top, g = b.within.height, h = a.top - b.collisionPosition.marginTop, i = e - h, j = h + b.collisionHeight - g - e;
                    b.collisionHeight > g ? i > 0 && 0 >= j ? (c = a.top + i + b.collisionHeight - g - e, 
                    a.top += i - c) : a.top = j > 0 && 0 >= i ? e : i > j ? e + g - b.collisionHeight : e : i > 0 ? a.top += i : j > 0 ? a.top -= j : a.top = f(a.top - h, a.top);
                }
            },
            flip: {
                left: function(a, b) {
                    var c, d, e = b.within, f = e.offset.left + e.scrollLeft, h = e.width, i = e.isWindow ? e.scrollLeft : e.offset.left, j = a.left - b.collisionPosition.marginLeft, k = j - i, l = j + b.collisionWidth - h - i, m = "left" === b.my[0] ? -b.elemWidth : "right" === b.my[0] ? b.elemWidth : 0, n = "left" === b.at[0] ? b.targetWidth : "right" === b.at[0] ? -b.targetWidth : 0, o = -2 * b.offset[0];
                    0 > k ? (c = a.left + m + n + o + b.collisionWidth - h - f, (0 > c || g(k) > c) && (a.left += m + n + o)) : l > 0 && (d = a.left - b.collisionPosition.marginLeft + m + n + o - i, 
                    (d > 0 || l > g(d)) && (a.left += m + n + o));
                },
                top: function(a, b) {
                    var c, d, e = b.within, f = e.offset.top + e.scrollTop, h = e.height, i = e.isWindow ? e.scrollTop : e.offset.top, j = a.top - b.collisionPosition.marginTop, k = j - i, l = j + b.collisionHeight - h - i, m = "top" === b.my[1], n = m ? -b.elemHeight : "bottom" === b.my[1] ? b.elemHeight : 0, o = "top" === b.at[1] ? b.targetHeight : "bottom" === b.at[1] ? -b.targetHeight : 0, p = -2 * b.offset[1];
                    0 > k ? (d = a.top + n + o + p + b.collisionHeight - h - f, (0 > d || g(k) > d) && (a.top += n + o + p)) : l > 0 && (c = a.top - b.collisionPosition.marginTop + n + o + p - i, 
                    (c > 0 || l > g(c)) && (a.top += n + o + p));
                }
            },
            flipfit: {
                left: function() {
                    a.ui.position.flip.left.apply(this, arguments), a.ui.position.fit.left.apply(this, arguments);
                },
                top: function() {
                    a.ui.position.flip.top.apply(this, arguments), a.ui.position.fit.top.apply(this, arguments);
                }
            }
        };
    }(), a.ui.position, a.extend(a.expr[":"], {
        data: a.expr.createPseudo ? a.expr.createPseudo(function(b) {
            return function(c) {
                return !!a.data(c, b);
            };
        }) : function(b, c, d) {
            return !!a.data(b, d[3]);
        }
    }), a.fn.extend({
        disableSelection: function() {
            var a = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown";
            return function() {
                return this.on(a + ".ui-disableSelection", function(a) {
                    a.preventDefault();
                });
            };
        }(),
        enableSelection: function() {
            return this.off(".ui-disableSelection");
        }
    });
    var k = "ui-effects-", l = "ui-effects-style", m = "ui-effects-animated", n = a;
    a.effects = {
        effect: {}
    }, function(a, b) {
        function c(a, b, c) {
            var d = l[b.type] || {};
            return null == a ? c || !b.def ? null : b.def : (a = d.floor ? ~~a : parseFloat(a), 
            isNaN(a) ? b.def : d.mod ? (a + d.mod) % d.mod : 0 > a ? 0 : a > d.max ? d.max : a);
        }
        function d(c) {
            var d = j(), e = d._rgba = [];
            return c = c.toLowerCase(), o(i, function(a, f) {
                var g, h = f.re.exec(c), i = h && f.parse(h), j = f.space || "rgba";
                return i ? (g = d[j](i), d[k[j].cache] = g[k[j].cache], e = d._rgba = g._rgba, !1) : b;
            }), e.length ? ("0,0,0,0" === e.join() && a.extend(e, f.transparent), d) : f[c];
        }
        function e(a, b, c) {
            return c = (c + 1) % 1, 1 > 6 * c ? a + 6 * (b - a) * c : 1 > 2 * c ? b : 2 > 3 * c ? a + 6 * (b - a) * (2 / 3 - c) : a;
        }
        var f, g = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor", h = /^([\-+])=\s*(\d+\.?\d*)/, i = [ {
            re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function(a) {
                return [ a[1], a[2], a[3], a[4] ];
            }
        }, {
            re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function(a) {
                return [ 2.55 * a[1], 2.55 * a[2], 2.55 * a[3], a[4] ];
            }
        }, {
            re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
            parse: function(a) {
                return [ parseInt(a[1], 16), parseInt(a[2], 16), parseInt(a[3], 16) ];
            }
        }, {
            re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
            parse: function(a) {
                return [ parseInt(a[1] + a[1], 16), parseInt(a[2] + a[2], 16), parseInt(a[3] + a[3], 16) ];
            }
        }, {
            re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            space: "hsla",
            parse: function(a) {
                return [ a[1], a[2] / 100, a[3] / 100, a[4] ];
            }
        } ], j = a.Color = function(b, c, d, e) {
            return new a.Color.fn.parse(b, c, d, e);
        }, k = {
            rgba: {
                props: {
                    red: {
                        idx: 0,
                        type: "byte"
                    },
                    green: {
                        idx: 1,
                        type: "byte"
                    },
                    blue: {
                        idx: 2,
                        type: "byte"
                    }
                }
            },
            hsla: {
                props: {
                    hue: {
                        idx: 0,
                        type: "degrees"
                    },
                    saturation: {
                        idx: 1,
                        type: "percent"
                    },
                    lightness: {
                        idx: 2,
                        type: "percent"
                    }
                }
            }
        }, l = {
            byte: {
                floor: !0,
                max: 255
            },
            percent: {
                max: 1
            },
            degrees: {
                mod: 360,
                floor: !0
            }
        }, m = j.support = {}, n = a("<p>")[0], o = a.each;
        n.style.cssText = "background-color:rgba(1,1,1,.5)", m.rgba = n.style.backgroundColor.indexOf("rgba") > -1, 
        o(k, function(a, b) {
            b.cache = "_" + a, b.props.alpha = {
                idx: 3,
                type: "percent",
                def: 1
            };
        }), j.fn = a.extend(j.prototype, {
            parse: function(e, g, h, i) {
                if (e === b) return this._rgba = [ null, null, null, null ], this;
                (e.jquery || e.nodeType) && (e = a(e).css(g), g = b);
                var l = this, m = a.type(e), n = this._rgba = [];
                return g !== b && (e = [ e, g, h, i ], m = "array"), "string" === m ? this.parse(d(e) || f._default) : "array" === m ? (o(k.rgba.props, function(a, b) {
                    n[b.idx] = c(e[b.idx], b);
                }), this) : "object" === m ? (e instanceof j ? o(k, function(a, b) {
                    e[b.cache] && (l[b.cache] = e[b.cache].slice());
                }) : o(k, function(b, d) {
                    var f = d.cache;
                    o(d.props, function(a, b) {
                        if (!l[f] && d.to) {
                            if ("alpha" === a || null == e[a]) return;
                            l[f] = d.to(l._rgba);
                        }
                        l[f][b.idx] = c(e[a], b, !0);
                    }), l[f] && 0 > a.inArray(null, l[f].slice(0, 3)) && (l[f][3] = 1, d.from && (l._rgba = d.from(l[f])));
                }), this) : b;
            },
            is: function(a) {
                var c = j(a), d = !0, e = this;
                return o(k, function(a, f) {
                    var g, h = c[f.cache];
                    return h && (g = e[f.cache] || f.to && f.to(e._rgba) || [], o(f.props, function(a, c) {
                        return null != h[c.idx] ? d = h[c.idx] === g[c.idx] : b;
                    })), d;
                }), d;
            },
            _space: function() {
                var a = [], b = this;
                return o(k, function(c, d) {
                    b[d.cache] && a.push(c);
                }), a.pop();
            },
            transition: function(a, b) {
                var d = j(a), e = d._space(), f = k[e], g = 0 === this.alpha() ? j("transparent") : this, h = g[f.cache] || f.to(g._rgba), i = h.slice();
                return d = d[f.cache], o(f.props, function(a, e) {
                    var f = e.idx, g = h[f], j = d[f], k = l[e.type] || {};
                    null !== j && (null === g ? i[f] = j : (k.mod && (j - g > k.mod / 2 ? g += k.mod : g - j > k.mod / 2 && (g -= k.mod)), 
                    i[f] = c((j - g) * b + g, e)));
                }), this[e](i);
            },
            blend: function(b) {
                if (1 === this._rgba[3]) return this;
                var c = this._rgba.slice(), d = c.pop(), e = j(b)._rgba;
                return j(a.map(c, function(a, b) {
                    return (1 - d) * e[b] + d * a;
                }));
            },
            toRgbaString: function() {
                var b = "rgba(", c = a.map(this._rgba, function(a, b) {
                    return null == a ? b > 2 ? 1 : 0 : a;
                });
                return 1 === c[3] && (c.pop(), b = "rgb("), b + c.join() + ")";
            },
            toHslaString: function() {
                var b = "hsla(", c = a.map(this.hsla(), function(a, b) {
                    return null == a && (a = b > 2 ? 1 : 0), b && 3 > b && (a = Math.round(100 * a) + "%"), 
                    a;
                });
                return 1 === c[3] && (c.pop(), b = "hsl("), b + c.join() + ")";
            },
            toHexString: function(b) {
                var c = this._rgba.slice(), d = c.pop();
                return b && c.push(~~(255 * d)), "#" + a.map(c, function(a) {
                    return a = (a || 0).toString(16), 1 === a.length ? "0" + a : a;
                }).join("");
            },
            toString: function() {
                return 0 === this._rgba[3] ? "transparent" : this.toRgbaString();
            }
        }), j.fn.parse.prototype = j.fn, k.hsla.to = function(a) {
            if (null == a[0] || null == a[1] || null == a[2]) return [ null, null, null, a[3] ];
            var b, c, d = a[0] / 255, e = a[1] / 255, f = a[2] / 255, g = a[3], h = Math.max(d, e, f), i = Math.min(d, e, f), j = h - i, k = h + i, l = .5 * k;
            return b = i === h ? 0 : d === h ? 60 * (e - f) / j + 360 : e === h ? 60 * (f - d) / j + 120 : 60 * (d - e) / j + 240, 
            c = 0 === j ? 0 : .5 >= l ? j / k : j / (2 - k), [ Math.round(b) % 360, c, l, null == g ? 1 : g ];
        }, k.hsla.from = function(a) {
            if (null == a[0] || null == a[1] || null == a[2]) return [ null, null, null, a[3] ];
            var b = a[0] / 360, c = a[1], d = a[2], f = a[3], g = .5 >= d ? d * (1 + c) : d + c - d * c, h = 2 * d - g;
            return [ Math.round(255 * e(h, g, b + 1 / 3)), Math.round(255 * e(h, g, b)), Math.round(255 * e(h, g, b - 1 / 3)), f ];
        }, o(k, function(d, e) {
            var f = e.props, g = e.cache, i = e.to, k = e.from;
            j.fn[d] = function(d) {
                if (i && !this[g] && (this[g] = i(this._rgba)), d === b) return this[g].slice();
                var e, h = a.type(d), l = "array" === h || "object" === h ? d : arguments, m = this[g].slice();
                return o(f, function(a, b) {
                    var d = l["object" === h ? a : b.idx];
                    null == d && (d = m[b.idx]), m[b.idx] = c(d, b);
                }), k ? (e = j(k(m)), e[g] = m, e) : j(m);
            }, o(f, function(b, c) {
                j.fn[b] || (j.fn[b] = function(e) {
                    var f, g = a.type(e), i = "alpha" === b ? this._hsla ? "hsla" : "rgba" : d, j = this[i](), k = j[c.idx];
                    return "undefined" === g ? k : ("function" === g && (e = e.call(this, k), g = a.type(e)), 
                    null == e && c.empty ? this : ("string" === g && (f = h.exec(e), f && (e = k + parseFloat(f[2]) * ("+" === f[1] ? 1 : -1))), 
                    j[c.idx] = e, this[i](j)));
                });
            });
        }), j.hook = function(b) {
            var c = b.split(" ");
            o(c, function(b, c) {
                a.cssHooks[c] = {
                    set: function(b, e) {
                        var f, g, h = "";
                        if ("transparent" !== e && ("string" !== a.type(e) || (f = d(e)))) {
                            if (e = j(f || e), !m.rgba && 1 !== e._rgba[3]) {
                                for (g = "backgroundColor" === c ? b.parentNode : b; ("" === h || "transparent" === h) && g && g.style; ) try {
                                    h = a.css(g, "backgroundColor"), g = g.parentNode;
                                } catch (a) {}
                                e = e.blend(h && "transparent" !== h ? h : "_default");
                            }
                            e = e.toRgbaString();
                        }
                        try {
                            b.style[c] = e;
                        } catch (a) {}
                    }
                }, a.fx.step[c] = function(b) {
                    b.colorInit || (b.start = j(b.elem, c), b.end = j(b.end), b.colorInit = !0), a.cssHooks[c].set(b.elem, b.start.transition(b.end, b.pos));
                };
            });
        }, j.hook(g), a.cssHooks.borderColor = {
            expand: function(a) {
                var b = {};
                return o([ "Top", "Right", "Bottom", "Left" ], function(c, d) {
                    b["border" + d + "Color"] = a;
                }), b;
            }
        }, f = a.Color.names = {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [ null, null, null, 0 ],
            _default: "#ffffff"
        };
    }(n), function() {
        function b(b) {
            var c, d, e = b.ownerDocument.defaultView ? b.ownerDocument.defaultView.getComputedStyle(b, null) : b.currentStyle, f = {};
            if (e && e.length && e[0] && e[e[0]]) for (d = e.length; d--; ) c = e[d], "string" == typeof e[c] && (f[a.camelCase(c)] = e[c]); else for (c in e) "string" == typeof e[c] && (f[c] = e[c]);
            return f;
        }
        function c(b, c) {
            var d, f, g = {};
            for (d in c) f = c[d], b[d] !== f && (e[d] || (a.fx.step[d] || !isNaN(parseFloat(f))) && (g[d] = f));
            return g;
        }
        var d = [ "add", "remove", "toggle" ], e = {
            border: 1,
            borderBottom: 1,
            borderColor: 1,
            borderLeft: 1,
            borderRight: 1,
            borderTop: 1,
            borderWidth: 1,
            margin: 1,
            padding: 1
        };
        a.each([ "borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle" ], function(b, c) {
            a.fx.step[c] = function(a) {
                ("none" !== a.end && !a.setAttr || 1 === a.pos && !a.setAttr) && (n.style(a.elem, c, a.end), 
                a.setAttr = !0);
            };
        }), a.fn.addBack || (a.fn.addBack = function(a) {
            return this.add(null == a ? this.prevObject : this.prevObject.filter(a));
        }), a.effects.animateClass = function(e, f, g, h) {
            var i = a.speed(f, g, h);
            return this.queue(function() {
                var f, g = a(this), h = g.attr("class") || "", j = i.children ? g.find("*").addBack() : g;
                j = j.map(function() {
                    var c = a(this);
                    return {
                        el: c,
                        start: b(this)
                    };
                }), f = function() {
                    a.each(d, function(a, b) {
                        e[b] && g[b + "Class"](e[b]);
                    });
                }, f(), j = j.map(function() {
                    return this.end = b(this.el[0]), this.diff = c(this.start, this.end), this;
                }), g.attr("class", h), j = j.map(function() {
                    var b = this, c = a.Deferred(), d = a.extend({}, i, {
                        queue: !1,
                        complete: function() {
                            c.resolve(b);
                        }
                    });
                    return this.el.animate(this.diff, d), c.promise();
                }), a.when.apply(a, j.get()).done(function() {
                    f(), a.each(arguments, function() {
                        var b = this.el;
                        a.each(this.diff, function(a) {
                            b.css(a, "");
                        });
                    }), i.complete.call(g[0]);
                });
            });
        }, a.fn.extend({
            addClass: function(b) {
                return function(c, d, e, f) {
                    return d ? a.effects.animateClass.call(this, {
                        add: c
                    }, d, e, f) : b.apply(this, arguments);
                };
            }(a.fn.addClass),
            removeClass: function(b) {
                return function(c, d, e, f) {
                    return arguments.length > 1 ? a.effects.animateClass.call(this, {
                        remove: c
                    }, d, e, f) : b.apply(this, arguments);
                };
            }(a.fn.removeClass),
            toggleClass: function(b) {
                return function(c, d, e, f, g) {
                    return "boolean" == typeof d || void 0 === d ? e ? a.effects.animateClass.call(this, d ? {
                        add: c
                    } : {
                        remove: c
                    }, e, f, g) : b.apply(this, arguments) : a.effects.animateClass.call(this, {
                        toggle: c
                    }, d, e, f);
                };
            }(a.fn.toggleClass),
            switchClass: function(b, c, d, e, f) {
                return a.effects.animateClass.call(this, {
                    add: c,
                    remove: b
                }, d, e, f);
            }
        });
    }(), function() {
        function b(b, c, d, e) {
            return a.isPlainObject(b) && (c = b, b = b.effect), b = {
                effect: b
            }, null == c && (c = {}), a.isFunction(c) && (e = c, d = null, c = {}), ("number" == typeof c || a.fx.speeds[c]) && (e = d, 
            d = c, c = {}), a.isFunction(d) && (e = d, d = null), c && a.extend(b, c), d = d || c.duration, 
            b.duration = a.fx.off ? 0 : "number" == typeof d ? d : d in a.fx.speeds ? a.fx.speeds[d] : a.fx.speeds._default, 
            b.complete = e || c.complete, b;
        }
        function c(b) {
            return !b || "number" == typeof b || a.fx.speeds[b] ? !0 : "string" != typeof b || a.effects.effect[b] ? a.isFunction(b) ? !0 : "object" != typeof b || b.effect ? !1 : !0 : !0;
        }
        function d(a, b) {
            var c = b.outerWidth(), d = b.outerHeight(), e = /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/, f = e.exec(a) || [ "", 0, c, d, 0 ];
            return {
                top: parseFloat(f[1]) || 0,
                right: "auto" === f[2] ? c : parseFloat(f[2]),
                bottom: "auto" === f[3] ? d : parseFloat(f[3]),
                left: parseFloat(f[4]) || 0
            };
        }
        a.expr && a.expr.filters && a.expr.filters.animated && (a.expr.filters.animated = function(b) {
            return function(c) {
                return !!a(c).data(m) || b(c);
            };
        }(a.expr.filters.animated)), a.uiBackCompat !== !1 && a.extend(a.effects, {
            save: function(a, b) {
                for (var c = 0, d = b.length; d > c; c++) null !== b[c] && a.data(k + b[c], a[0].style[b[c]]);
            },
            restore: function(a, b) {
                for (var c, d = 0, e = b.length; e > d; d++) null !== b[d] && (c = a.data(k + b[d]), 
                a.css(b[d], c));
            },
            setMode: function(a, b) {
                return "toggle" === b && (b = a.is(":hidden") ? "show" : "hide"), b;
            },
            createWrapper: function(b) {
                if (b.parent().is(".ui-effects-wrapper")) return b.parent();
                var c = {
                    width: b.outerWidth(!0),
                    height: b.outerHeight(!0),
                    float: b.css("float")
                }, d = a("<div></div>").addClass("ui-effects-wrapper").css({
                    fontSize: "100%",
                    background: "transparent",
                    border: "none",
                    margin: 0,
                    padding: 0
                }), e = {
                    width: b.width(),
                    height: b.height()
                }, f = document.activeElement;
                try {
                    f.id;
                } catch (a) {
                    f = document.body;
                }
                return b.wrap(d), (b[0] === f || a.contains(b[0], f)) && a(f).trigger("focus"), 
                d = b.parent(), "static" === b.css("position") ? (d.css({
                    position: "relative"
                }), b.css({
                    position: "relative"
                })) : (a.extend(c, {
                    position: b.css("position"),
                    zIndex: b.css("z-index")
                }), a.each([ "top", "left", "bottom", "right" ], function(a, d) {
                    c[d] = b.css(d), isNaN(parseInt(c[d], 10)) && (c[d] = "auto");
                }), b.css({
                    position: "relative",
                    top: 0,
                    left: 0,
                    right: "auto",
                    bottom: "auto"
                })), b.css(e), d.css(c).show();
            },
            removeWrapper: function(b) {
                var c = document.activeElement;
                return b.parent().is(".ui-effects-wrapper") && (b.parent().replaceWith(b), (b[0] === c || a.contains(b[0], c)) && a(c).trigger("focus")), 
                b;
            }
        }), a.extend(a.effects, {
            version: "1.12.1",
            define: function(b, c, d) {
                return d || (d = c, c = "effect"), a.effects.effect[b] = d, a.effects.effect[b].mode = c, 
                d;
            },
            scaledDimensions: function(a, b, c) {
                if (0 === b) return {
                    height: 0,
                    width: 0,
                    outerHeight: 0,
                    outerWidth: 0
                };
                var d = "horizontal" !== c ? (b || 100) / 100 : 1, e = "vertical" !== c ? (b || 100) / 100 : 1;
                return {
                    height: a.height() * e,
                    width: a.width() * d,
                    outerHeight: a.outerHeight() * e,
                    outerWidth: a.outerWidth() * d
                };
            },
            clipToBox: function(a) {
                return {
                    width: a.clip.right - a.clip.left,
                    height: a.clip.bottom - a.clip.top,
                    left: a.clip.left,
                    top: a.clip.top
                };
            },
            unshift: function(a, b, c) {
                var d = a.queue();
                b > 1 && d.splice.apply(d, [ 1, 0 ].concat(d.splice(b, c))), a.dequeue();
            },
            saveStyle: function(a) {
                a.data(l, a[0].style.cssText);
            },
            restoreStyle: function(a) {
                a[0].style.cssText = a.data(l) || "", a.removeData(l);
            },
            mode: function(a, b) {
                var c = a.is(":hidden");
                return "toggle" === b && (b = c ? "show" : "hide"), (c ? "hide" === b : "show" === b) && (b = "none"), 
                b;
            },
            getBaseline: function(a, b) {
                var c, d;
                switch (a[0]) {
                  case "top":
                    c = 0;
                    break;

                  case "middle":
                    c = .5;
                    break;

                  case "bottom":
                    c = 1;
                    break;

                  default:
                    c = a[0] / b.height;
                }
                switch (a[1]) {
                  case "left":
                    d = 0;
                    break;

                  case "center":
                    d = .5;
                    break;

                  case "right":
                    d = 1;
                    break;

                  default:
                    d = a[1] / b.width;
                }
                return {
                    x: d,
                    y: c
                };
            },
            createPlaceholder: function(b) {
                var c, d = b.css("position"), e = b.position();
                return b.css({
                    marginTop: b.css("marginTop"),
                    marginBottom: b.css("marginBottom"),
                    marginLeft: b.css("marginLeft"),
                    marginRight: b.css("marginRight")
                }).outerWidth(b.outerWidth()).outerHeight(b.outerHeight()), /^(static|relative)/.test(d) && (d = "absolute", 
                c = a("<" + b[0].nodeName + ">").insertAfter(b).css({
                    display: /^(inline|ruby)/.test(b.css("display")) ? "inline-block" : "block",
                    visibility: "hidden",
                    marginTop: b.css("marginTop"),
                    marginBottom: b.css("marginBottom"),
                    marginLeft: b.css("marginLeft"),
                    marginRight: b.css("marginRight"),
                    float: b.css("float")
                }).outerWidth(b.outerWidth()).outerHeight(b.outerHeight()).addClass("ui-effects-placeholder"), 
                b.data(k + "placeholder", c)), b.css({
                    position: d,
                    left: e.left,
                    top: e.top
                }), c;
            },
            removePlaceholder: function(a) {
                var b = k + "placeholder", c = a.data(b);
                c && (c.remove(), a.removeData(b));
            },
            cleanUp: function(b) {
                a.effects.restoreStyle(b), a.effects.removePlaceholder(b);
            },
            setTransition: function(b, c, d, e) {
                return e = e || {}, a.each(c, function(a, c) {
                    var f = b.cssUnit(c);
                    f[0] > 0 && (e[c] = f[0] * d + f[1]);
                }), e;
            }
        }), a.fn.extend({
            effect: function() {
                function c(b) {
                    function c() {
                        h.removeData(m), a.effects.cleanUp(h), "hide" === d.mode && h.hide(), g();
                    }
                    function g() {
                        a.isFunction(i) && i.call(h[0]), a.isFunction(b) && b();
                    }
                    var h = a(this);
                    d.mode = k.shift(), a.uiBackCompat === !1 || f ? "none" === d.mode ? (h[j](), g()) : e.call(h[0], d, c) : (h.is(":hidden") ? "hide" === j : "show" === j) ? (h[j](), 
                    g()) : e.call(h[0], d, g);
                }
                var d = b.apply(this, arguments), e = a.effects.effect[d.effect], f = e.mode, g = d.queue, h = g || "fx", i = d.complete, j = d.mode, k = [], l = function(b) {
                    var c = a(this), d = a.effects.mode(c, j) || f;
                    c.data(m, !0), k.push(d), f && ("show" === d || d === f && "hide" === d) && c.show(), 
                    f && "none" === d || a.effects.saveStyle(c), a.isFunction(b) && b();
                };
                return a.fx.off || !e ? j ? this[j](d.duration, i) : this.each(function() {
                    i && i.call(this);
                }) : g === !1 ? this.each(l).each(c) : this.queue(h, l).queue(h, c);
            },
            show: function(a) {
                return function(d) {
                    if (c(d)) return a.apply(this, arguments);
                    var e = b.apply(this, arguments);
                    return e.mode = "show", this.effect.call(this, e);
                };
            }(a.fn.show),
            hide: function(a) {
                return function(d) {
                    if (c(d)) return a.apply(this, arguments);
                    var e = b.apply(this, arguments);
                    return e.mode = "hide", this.effect.call(this, e);
                };
            }(a.fn.hide),
            toggle: function(a) {
                return function(d) {
                    if (c(d) || "boolean" == typeof d) return a.apply(this, arguments);
                    var e = b.apply(this, arguments);
                    return e.mode = "toggle", this.effect.call(this, e);
                };
            }(a.fn.toggle),
            cssUnit: function(b) {
                var c = this.css(b), d = [];
                return a.each([ "em", "px", "%", "pt" ], function(a, b) {
                    c.indexOf(b) > 0 && (d = [ parseFloat(c), b ]);
                }), d;
            },
            cssClip: function(a) {
                return a ? this.css("clip", "rect(" + a.top + "px " + a.right + "px " + a.bottom + "px " + a.left + "px)") : d(this.css("clip"), this);
            },
            transfer: function(b, c) {
                var d = a(this), e = a(b.to), f = "fixed" === e.css("position"), g = a("body"), h = f ? g.scrollTop() : 0, i = f ? g.scrollLeft() : 0, j = e.offset(), k = {
                    top: j.top - h,
                    left: j.left - i,
                    height: e.innerHeight(),
                    width: e.innerWidth()
                }, l = d.offset(), m = a("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(b.className).css({
                    top: l.top - h,
                    left: l.left - i,
                    height: d.innerHeight(),
                    width: d.innerWidth(),
                    position: f ? "fixed" : "absolute"
                }).animate(k, b.duration, b.easing, function() {
                    m.remove(), a.isFunction(c) && c();
                });
            }
        }), a.fx.step.clip = function(b) {
            b.clipInit || (b.start = a(b.elem).cssClip(), "string" == typeof b.end && (b.end = d(b.end, b.elem)), 
            b.clipInit = !0), a(b.elem).cssClip({
                top: b.pos * (b.end.top - b.start.top) + b.start.top,
                right: b.pos * (b.end.right - b.start.right) + b.start.right,
                bottom: b.pos * (b.end.bottom - b.start.bottom) + b.start.bottom,
                left: b.pos * (b.end.left - b.start.left) + b.start.left
            });
        };
    }(), function() {
        var b = {};
        a.each([ "Quad", "Cubic", "Quart", "Quint", "Expo" ], function(a, c) {
            b[c] = function(b) {
                return Math.pow(b, a + 2);
            };
        }), a.extend(b, {
            Sine: function(a) {
                return 1 - Math.cos(a * Math.PI / 2);
            },
            Circ: function(a) {
                return 1 - Math.sqrt(1 - a * a);
            },
            Elastic: function(a) {
                return 0 === a || 1 === a ? a : -Math.pow(2, 8 * (a - 1)) * Math.sin((80 * (a - 1) - 7.5) * Math.PI / 15);
            },
            Back: function(a) {
                return a * a * (3 * a - 2);
            },
            Bounce: function(a) {
                for (var b, c = 4; ((b = Math.pow(2, --c)) - 1) / 11 > a; ) ;
                return 1 / Math.pow(4, 3 - c) - 7.5625 * Math.pow((3 * b - 2) / 22 - a, 2);
            }
        }), a.each(b, function(b, c) {
            a.easing["easeIn" + b] = c, a.easing["easeOut" + b] = function(a) {
                return 1 - c(1 - a);
            }, a.easing["easeInOut" + b] = function(a) {
                return .5 > a ? c(2 * a) / 2 : 1 - c(-2 * a + 2) / 2;
            };
        });
    }();
    var o = a.effects;
    a.effects.define("blind", "hide", function(b, c) {
        var d = {
            up: [ "bottom", "top" ],
            vertical: [ "bottom", "top" ],
            down: [ "top", "bottom" ],
            left: [ "right", "left" ],
            horizontal: [ "right", "left" ],
            right: [ "left", "right" ]
        }, e = a(this), f = b.direction || "up", g = e.cssClip(), h = {
            clip: a.extend({}, g)
        }, i = a.effects.createPlaceholder(e);
        h.clip[d[f][0]] = h.clip[d[f][1]], "show" === b.mode && (e.cssClip(h.clip), i && i.css(a.effects.clipToBox(h)), 
        h.clip = g), i && i.animate(a.effects.clipToBox(h), b.duration, b.easing), e.animate(h, {
            queue: !1,
            duration: b.duration,
            easing: b.easing,
            complete: c
        });
    }), a.effects.define("bounce", function(b, c) {
        var d, e, f, g = a(this), h = b.mode, i = "hide" === h, j = "show" === h, k = b.direction || "up", l = b.distance, m = b.times || 5, n = 2 * m + (j || i ? 1 : 0), o = b.duration / n, p = b.easing, q = "up" === k || "down" === k ? "top" : "left", r = "up" === k || "left" === k, s = 0, t = g.queue().length;
        for (a.effects.createPlaceholder(g), f = g.css(q), l || (l = g["top" === q ? "outerHeight" : "outerWidth"]() / 3), 
        j && (e = {
            opacity: 1
        }, e[q] = f, g.css("opacity", 0).css(q, r ? 2 * -l : 2 * l).animate(e, o, p)), i && (l /= Math.pow(2, m - 1)), 
        e = {}, e[q] = f; m > s; s++) d = {}, d[q] = (r ? "-=" : "+=") + l, g.animate(d, o, p).animate(e, o, p), 
        l = i ? 2 * l : l / 2;
        i && (d = {
            opacity: 0
        }, d[q] = (r ? "-=" : "+=") + l, g.animate(d, o, p)), g.queue(c), a.effects.unshift(g, t, n + 1);
    }), a.effects.define("clip", "hide", function(b, c) {
        var d, e = {}, f = a(this), g = b.direction || "vertical", h = "both" === g, i = h || "horizontal" === g, j = h || "vertical" === g;
        d = f.cssClip(), e.clip = {
            top: j ? (d.bottom - d.top) / 2 : d.top,
            right: i ? (d.right - d.left) / 2 : d.right,
            bottom: j ? (d.bottom - d.top) / 2 : d.bottom,
            left: i ? (d.right - d.left) / 2 : d.left
        }, a.effects.createPlaceholder(f), "show" === b.mode && (f.cssClip(e.clip), e.clip = d), 
        f.animate(e, {
            queue: !1,
            duration: b.duration,
            easing: b.easing,
            complete: c
        });
    }), a.effects.define("drop", "hide", function(b, c) {
        var d, e = a(this), f = b.mode, g = "show" === f, h = b.direction || "left", i = "up" === h || "down" === h ? "top" : "left", j = "up" === h || "left" === h ? "-=" : "+=", k = "+=" === j ? "-=" : "+=", l = {
            opacity: 0
        };
        a.effects.createPlaceholder(e), d = b.distance || e["top" === i ? "outerHeight" : "outerWidth"](!0) / 2, 
        l[i] = j + d, g && (e.css(l), l[i] = k + d, l.opacity = 1), e.animate(l, {
            queue: !1,
            duration: b.duration,
            easing: b.easing,
            complete: c
        });
    }), a.effects.define("explode", "hide", function(b, c) {
        function d() {
            t.push(this), t.length === l * m && e();
        }
        function e() {
            n.css({
                visibility: "visible"
            }), a(t).remove(), c();
        }
        var f, g, h, i, j, k, l = b.pieces ? Math.round(Math.sqrt(b.pieces)) : 3, m = l, n = a(this), o = b.mode, p = "show" === o, q = n.show().css("visibility", "hidden").offset(), r = Math.ceil(n.outerWidth() / m), s = Math.ceil(n.outerHeight() / l), t = [];
        for (f = 0; l > f; f++) for (i = q.top + f * s, k = f - (l - 1) / 2, g = 0; m > g; g++) h = q.left + g * r, 
        j = g - (m - 1) / 2, n.clone().appendTo("body").wrap("<div></div>").css({
            position: "absolute",
            visibility: "visible",
            left: -g * r,
            top: -f * s
        }).parent().addClass("ui-effects-explode").css({
            position: "absolute",
            overflow: "hidden",
            width: r,
            height: s,
            left: h + (p ? j * r : 0),
            top: i + (p ? k * s : 0),
            opacity: p ? 0 : 1
        }).animate({
            left: h + (p ? 0 : j * r),
            top: i + (p ? 0 : k * s),
            opacity: p ? 1 : 0
        }, b.duration || 500, b.easing, d);
    }), a.effects.define("fade", "toggle", function(b, c) {
        var d = "show" === b.mode;
        a(this).css("opacity", d ? 0 : 1).animate({
            opacity: d ? 1 : 0
        }, {
            queue: !1,
            duration: b.duration,
            easing: b.easing,
            complete: c
        });
    }), a.effects.define("fold", "hide", function(b, c) {
        var d = a(this), e = b.mode, f = "show" === e, g = "hide" === e, h = b.size || 15, i = /([0-9]+)%/.exec(h), j = !!b.horizFirst, k = j ? [ "right", "bottom" ] : [ "bottom", "right" ], l = b.duration / 2, m = a.effects.createPlaceholder(d), n = d.cssClip(), o = {
            clip: a.extend({}, n)
        }, p = {
            clip: a.extend({}, n)
        }, q = [ n[k[0]], n[k[1]] ], r = d.queue().length;
        i && (h = parseInt(i[1], 10) / 100 * q[g ? 0 : 1]), o.clip[k[0]] = h, p.clip[k[0]] = h, 
        p.clip[k[1]] = 0, f && (d.cssClip(p.clip), m && m.css(a.effects.clipToBox(p)), p.clip = n), 
        d.queue(function(c) {
            m && m.animate(a.effects.clipToBox(o), l, b.easing).animate(a.effects.clipToBox(p), l, b.easing), 
            c();
        }).animate(o, l, b.easing).animate(p, l, b.easing).queue(c), a.effects.unshift(d, r, 4);
    }), a.effects.define("highlight", "show", function(b, c) {
        var d = a(this), e = {
            backgroundColor: d.css("backgroundColor")
        };
        "hide" === b.mode && (e.opacity = 0), a.effects.saveStyle(d), d.css({
            backgroundImage: "none",
            backgroundColor: b.color || "#ffff99"
        }).animate(e, {
            queue: !1,
            duration: b.duration,
            easing: b.easing,
            complete: c
        });
    }), a.effects.define("size", function(b, c) {
        var d, e, f, g = a(this), h = [ "fontSize" ], i = [ "borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom" ], j = [ "borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight" ], k = b.mode, l = "effect" !== k, m = b.scale || "both", n = b.origin || [ "middle", "center" ], o = g.css("position"), p = g.position(), q = a.effects.scaledDimensions(g), r = b.from || q, s = b.to || a.effects.scaledDimensions(g, 0);
        a.effects.createPlaceholder(g), "show" === k && (f = r, r = s, s = f), e = {
            from: {
                y: r.height / q.height,
                x: r.width / q.width
            },
            to: {
                y: s.height / q.height,
                x: s.width / q.width
            }
        }, ("box" === m || "both" === m) && (e.from.y !== e.to.y && (r = a.effects.setTransition(g, i, e.from.y, r), 
        s = a.effects.setTransition(g, i, e.to.y, s)), e.from.x !== e.to.x && (r = a.effects.setTransition(g, j, e.from.x, r), 
        s = a.effects.setTransition(g, j, e.to.x, s))), ("content" === m || "both" === m) && e.from.y !== e.to.y && (r = a.effects.setTransition(g, h, e.from.y, r), 
        s = a.effects.setTransition(g, h, e.to.y, s)), n && (d = a.effects.getBaseline(n, q), 
        r.top = (q.outerHeight - r.outerHeight) * d.y + p.top, r.left = (q.outerWidth - r.outerWidth) * d.x + p.left, 
        s.top = (q.outerHeight - s.outerHeight) * d.y + p.top, s.left = (q.outerWidth - s.outerWidth) * d.x + p.left), 
        g.css(r), ("content" === m || "both" === m) && (i = i.concat([ "marginTop", "marginBottom" ]).concat(h), 
        j = j.concat([ "marginLeft", "marginRight" ]), g.find("*[width]").each(function() {
            var c = a(this), d = a.effects.scaledDimensions(c), f = {
                height: d.height * e.from.y,
                width: d.width * e.from.x,
                outerHeight: d.outerHeight * e.from.y,
                outerWidth: d.outerWidth * e.from.x
            }, g = {
                height: d.height * e.to.y,
                width: d.width * e.to.x,
                outerHeight: d.height * e.to.y,
                outerWidth: d.width * e.to.x
            };
            e.from.y !== e.to.y && (f = a.effects.setTransition(c, i, e.from.y, f), g = a.effects.setTransition(c, i, e.to.y, g)), 
            e.from.x !== e.to.x && (f = a.effects.setTransition(c, j, e.from.x, f), g = a.effects.setTransition(c, j, e.to.x, g)), 
            l && a.effects.saveStyle(c), c.css(f), c.animate(g, b.duration, b.easing, function() {
                l && a.effects.restoreStyle(c);
            });
        })), g.animate(s, {
            queue: !1,
            duration: b.duration,
            easing: b.easing,
            complete: function() {
                var b = g.offset();
                0 === s.opacity && g.css("opacity", r.opacity), l || (g.css("position", "static" === o ? "relative" : o).offset(b), 
                a.effects.saveStyle(g)), c();
            }
        });
    }), a.effects.define("scale", function(b, c) {
        var d = a(this), e = b.mode, f = parseInt(b.percent, 10) || (0 === parseInt(b.percent, 10) ? 0 : "effect" !== e ? 0 : 100), g = a.extend(!0, {
            from: a.effects.scaledDimensions(d),
            to: a.effects.scaledDimensions(d, f, b.direction || "both"),
            origin: b.origin || [ "middle", "center" ]
        }, b);
        b.fade && (g.from.opacity = 1, g.to.opacity = 0), a.effects.effect.size.call(this, g, c);
    }), a.effects.define("puff", "hide", function(b, c) {
        var d = a.extend(!0, {}, b, {
            fade: !0,
            percent: parseInt(b.percent, 10) || 150
        });
        a.effects.effect.scale.call(this, d, c);
    }), a.effects.define("pulsate", "show", function(b, c) {
        var d = a(this), e = b.mode, f = "show" === e, g = "hide" === e, h = f || g, i = 2 * (b.times || 5) + (h ? 1 : 0), j = b.duration / i, k = 0, l = 1, m = d.queue().length;
        for ((f || !d.is(":visible")) && (d.css("opacity", 0).show(), k = 1); i > l; l++) d.animate({
            opacity: k
        }, j, b.easing), k = 1 - k;
        d.animate({
            opacity: k
        }, j, b.easing), d.queue(c), a.effects.unshift(d, m, i + 1);
    }), a.effects.define("shake", function(b, c) {
        var d = 1, e = a(this), f = b.direction || "left", g = b.distance || 20, h = b.times || 3, i = 2 * h + 1, j = Math.round(b.duration / i), k = "up" === f || "down" === f ? "top" : "left", l = "up" === f || "left" === f, m = {}, n = {}, o = {}, p = e.queue().length;
        for (a.effects.createPlaceholder(e), m[k] = (l ? "-=" : "+=") + g, n[k] = (l ? "+=" : "-=") + 2 * g, 
        o[k] = (l ? "-=" : "+=") + 2 * g, e.animate(m, j, b.easing); h > d; d++) e.animate(n, j, b.easing).animate(o, j, b.easing);
        e.animate(n, j, b.easing).animate(m, j / 2, b.easing).queue(c), a.effects.unshift(e, p, i + 1);
    }), a.effects.define("slide", "show", function(b, c) {
        var d, e, f = a(this), g = {
            up: [ "bottom", "top" ],
            down: [ "top", "bottom" ],
            left: [ "right", "left" ],
            right: [ "left", "right" ]
        }, h = b.mode, i = b.direction || "left", j = "up" === i || "down" === i ? "top" : "left", k = "up" === i || "left" === i, l = b.distance || f["top" === j ? "outerHeight" : "outerWidth"](!0), m = {};
        a.effects.createPlaceholder(f), d = f.cssClip(), e = f.position()[j], m[j] = (k ? -1 : 1) * l + e, 
        m.clip = f.cssClip(), m.clip[g[i][1]] = m.clip[g[i][0]], "show" === h && (f.cssClip(m.clip), 
        f.css(j, m[j]), m.clip = d, m[j] = e), f.animate(m, {
            queue: !1,
            duration: b.duration,
            easing: b.easing,
            complete: c
        });
    });
    var o;
    a.uiBackCompat !== !1 && (o = a.effects.define("transfer", function(b, c) {
        a(this).transfer(b, c);
    })), a.ui.focusable = function(c, d) {
        var e, f, g, h, i, j = c.nodeName.toLowerCase();
        return "area" === j ? (e = c.parentNode, f = e.name, c.href && f && "map" === e.nodeName.toLowerCase() ? (g = a("img[usemap='#" + f + "']"), 
        g.length > 0 && g.is(":visible")) : !1) : (/^(input|select|textarea|button|object)$/.test(j) ? (h = !c.disabled, 
        h && (i = a(c).closest("fieldset")[0], i && (h = !i.disabled))) : h = "a" === j ? c.href || d : d, 
        h && a(c).is(":visible") && b(a(c)));
    }, a.extend(a.expr[":"], {
        focusable: function(b) {
            return a.ui.focusable(b, null != a.attr(b, "tabindex"));
        }
    }), a.ui.focusable, a.fn.form = function() {
        return "string" == typeof this[0].form ? this.closest("form") : a(this[0].form);
    }, a.ui.formResetMixin = {
        _formResetHandler: function() {
            var b = a(this);
            setTimeout(function() {
                var c = b.data("ui-form-reset-instances");
                a.each(c, function() {
                    this.refresh();
                });
            });
        },
        _bindFormResetHandler: function() {
            if (this.form = this.element.form(), this.form.length) {
                var a = this.form.data("ui-form-reset-instances") || [];
                a.length || this.form.on("reset.ui-form-reset", this._formResetHandler), a.push(this), 
                this.form.data("ui-form-reset-instances", a);
            }
        },
        _unbindFormResetHandler: function() {
            if (this.form.length) {
                var b = this.form.data("ui-form-reset-instances");
                b.splice(a.inArray(this, b), 1), b.length ? this.form.data("ui-form-reset-instances", b) : this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset");
            }
        }
    }, "1.7" === a.fn.jquery.substring(0, 3) && (a.each([ "Width", "Height" ], function(b, c) {
        function d(b, c, d, f) {
            return a.each(e, function() {
                c -= parseFloat(a.css(b, "padding" + this)) || 0, d && (c -= parseFloat(a.css(b, "border" + this + "Width")) || 0), 
                f && (c -= parseFloat(a.css(b, "margin" + this)) || 0);
            }), c;
        }
        var e = "Width" === c ? [ "Left", "Right" ] : [ "Top", "Bottom" ], f = c.toLowerCase(), g = {
            innerWidth: a.fn.innerWidth,
            innerHeight: a.fn.innerHeight,
            outerWidth: a.fn.outerWidth,
            outerHeight: a.fn.outerHeight
        };
        a.fn["inner" + c] = function(b) {
            return void 0 === b ? g["inner" + c].call(this) : this.each(function() {
                a(this).css(f, d(this, b) + "px");
            });
        }, a.fn["outer" + c] = function(b, e) {
            return "number" != typeof b ? g["outer" + c].call(this, b) : this.each(function() {
                a(this).css(f, d(this, b, !0, e) + "px");
            });
        };
    }), a.fn.addBack = function(a) {
        return this.add(null == a ? this.prevObject : this.prevObject.filter(a));
    }), a.ui.keyCode = {
        BACKSPACE: 8,
        COMMA: 188,
        DELETE: 46,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        ESCAPE: 27,
        HOME: 36,
        LEFT: 37,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        PERIOD: 190,
        RIGHT: 39,
        SPACE: 32,
        TAB: 9,
        UP: 38
    }, a.ui.escapeSelector = function() {
        var a = /([!"#$%&'()*+,.\/:;<=>?@[\]^`{|}~])/g;
        return function(b) {
            return b.replace(a, "\\$1");
        };
    }(), a.fn.labels = function() {
        var b, c, d, e, f;
        return this[0].labels && this[0].labels.length ? this.pushStack(this[0].labels) : (e = this.eq(0).parents("label"), 
        d = this.attr("id"), d && (b = this.eq(0).parents().last(), f = b.add(b.length ? b.siblings() : this.siblings()), 
        c = "label[for='" + a.ui.escapeSelector(d) + "']", e = e.add(f.find(c).addBack(c))), 
        this.pushStack(e));
    }, a.fn.scrollParent = function(b) {
        var c = this.css("position"), d = "absolute" === c, e = b ? /(auto|scroll|hidden)/ : /(auto|scroll)/, f = this.parents().filter(function() {
            var b = a(this);
            return d && "static" === b.css("position") ? !1 : e.test(b.css("overflow") + b.css("overflow-y") + b.css("overflow-x"));
        }).eq(0);
        return "fixed" !== c && f.length ? f : a(this[0].ownerDocument || document);
    }, a.extend(a.expr[":"], {
        tabbable: function(b) {
            var c = a.attr(b, "tabindex"), d = null != c;
            return (!d || c >= 0) && a.ui.focusable(b, d);
        }
    }), a.fn.extend({
        uniqueId: function() {
            var a = 0;
            return function() {
                return this.each(function() {
                    this.id || (this.id = "ui-id-" + ++a);
                });
            };
        }(),
        removeUniqueId: function() {
            return this.each(function() {
                /^ui-id-\d+$/.test(this.id) && a(this).removeAttr("id");
            });
        }
    }), a.widget("ui.accordion", {
        version: "1.12.1",
        options: {
            active: 0,
            animate: {},
            classes: {
                "ui-accordion-header": "ui-corner-top",
                "ui-accordion-header-collapsed": "ui-corner-all",
                "ui-accordion-content": "ui-corner-bottom"
            },
            collapsible: !1,
            event: "click",
            header: "> li > :first-child, > :not(li):even",
            heightStyle: "auto",
            icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e"
            },
            activate: null,
            beforeActivate: null
        },
        hideProps: {
            borderTopWidth: "hide",
            borderBottomWidth: "hide",
            paddingTop: "hide",
            paddingBottom: "hide",
            height: "hide"
        },
        showProps: {
            borderTopWidth: "show",
            borderBottomWidth: "show",
            paddingTop: "show",
            paddingBottom: "show",
            height: "show"
        },
        _create: function() {
            var b = this.options;
            this.prevShow = this.prevHide = a(), this._addClass("ui-accordion", "ui-widget ui-helper-reset"), 
            this.element.attr("role", "tablist"), b.collapsible || b.active !== !1 && null != b.active || (b.active = 0), 
            this._processPanels(), 0 > b.active && (b.active += this.headers.length), this._refresh();
        },
        _getCreateEventData: function() {
            return {
                header: this.active,
                panel: this.active.length ? this.active.next() : a()
            };
        },
        _createIcons: function() {
            var b, c, d = this.options.icons;
            d && (b = a("<span>"), this._addClass(b, "ui-accordion-header-icon", "ui-icon " + d.header), 
            b.prependTo(this.headers), c = this.active.children(".ui-accordion-header-icon"), 
            this._removeClass(c, d.header)._addClass(c, null, d.activeHeader)._addClass(this.headers, "ui-accordion-icons"));
        },
        _destroyIcons: function() {
            this._removeClass(this.headers, "ui-accordion-icons"), this.headers.children(".ui-accordion-header-icon").remove();
        },
        _destroy: function() {
            var a;
            this.element.removeAttr("role"), this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(), 
            this._destroyIcons(), a = this.headers.next().css("display", "").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(), 
            "content" !== this.options.heightStyle && a.css("height", "");
        },
        _setOption: function(a, b) {
            return "active" === a ? (this._activate(b), void 0) : ("event" === a && (this.options.event && this._off(this.headers, this.options.event), 
            this._setupEvents(b)), this._super(a, b), "collapsible" !== a || b || this.options.active !== !1 || this._activate(0), 
            "icons" === a && (this._destroyIcons(), b && this._createIcons()), void 0);
        },
        _setOptionDisabled: function(a) {
            this._super(a), this.element.attr("aria-disabled", a), this._toggleClass(null, "ui-state-disabled", !!a), 
            this._toggleClass(this.headers.add(this.headers.next()), null, "ui-state-disabled", !!a);
        },
        _keydown: function(b) {
            if (!b.altKey && !b.ctrlKey) {
                var c = a.ui.keyCode, d = this.headers.length, e = this.headers.index(b.target), f = !1;
                switch (b.keyCode) {
                  case c.RIGHT:
                  case c.DOWN:
                    f = this.headers[(e + 1) % d];
                    break;

                  case c.LEFT:
                  case c.UP:
                    f = this.headers[(e - 1 + d) % d];
                    break;

                  case c.SPACE:
                  case c.ENTER:
                    this._eventHandler(b);
                    break;

                  case c.HOME:
                    f = this.headers[0];
                    break;

                  case c.END:
                    f = this.headers[d - 1];
                }
                f && (a(b.target).attr("tabIndex", -1), a(f).attr("tabIndex", 0), a(f).trigger("focus"), 
                b.preventDefault());
            }
        },
        _panelKeyDown: function(b) {
            b.keyCode === a.ui.keyCode.UP && b.ctrlKey && a(b.currentTarget).prev().trigger("focus");
        },
        refresh: function() {
            var b = this.options;
            this._processPanels(), b.active === !1 && b.collapsible === !0 || !this.headers.length ? (b.active = !1, 
            this.active = a()) : b.active === !1 ? this._activate(0) : this.active.length && !a.contains(this.element[0], this.active[0]) ? this.headers.length === this.headers.find(".ui-state-disabled").length ? (b.active = !1, 
            this.active = a()) : this._activate(Math.max(0, b.active - 1)) : b.active = this.headers.index(this.active), 
            this._destroyIcons(), this._refresh();
        },
        _processPanels: function() {
            var a = this.headers, b = this.panels;
            this.headers = this.element.find(this.options.header), this._addClass(this.headers, "ui-accordion-header ui-accordion-header-collapsed", "ui-state-default"), 
            this.panels = this.headers.next().filter(":not(.ui-accordion-content-active)").hide(), 
            this._addClass(this.panels, "ui-accordion-content", "ui-helper-reset ui-widget-content"), 
            b && (this._off(a.not(this.headers)), this._off(b.not(this.panels)));
        },
        _refresh: function() {
            var b, c = this.options, d = c.heightStyle, e = this.element.parent();
            this.active = this._findActive(c.active), this._addClass(this.active, "ui-accordion-header-active", "ui-state-active")._removeClass(this.active, "ui-accordion-header-collapsed"), 
            this._addClass(this.active.next(), "ui-accordion-content-active"), this.active.next().show(), 
            this.headers.attr("role", "tab").each(function() {
                var b = a(this), c = b.uniqueId().attr("id"), d = b.next(), e = d.uniqueId().attr("id");
                b.attr("aria-controls", e), d.attr("aria-labelledby", c);
            }).next().attr("role", "tabpanel"), this.headers.not(this.active).attr({
                "aria-selected": "false",
                "aria-expanded": "false",
                tabIndex: -1
            }).next().attr({
                "aria-hidden": "true"
            }).hide(), this.active.length ? this.active.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            }).next().attr({
                "aria-hidden": "false"
            }) : this.headers.eq(0).attr("tabIndex", 0), this._createIcons(), this._setupEvents(c.event), 
            "fill" === d ? (b = e.height(), this.element.siblings(":visible").each(function() {
                var c = a(this), d = c.css("position");
                "absolute" !== d && "fixed" !== d && (b -= c.outerHeight(!0));
            }), this.headers.each(function() {
                b -= a(this).outerHeight(!0);
            }), this.headers.next().each(function() {
                a(this).height(Math.max(0, b - a(this).innerHeight() + a(this).height()));
            }).css("overflow", "auto")) : "auto" === d && (b = 0, this.headers.next().each(function() {
                var c = a(this).is(":visible");
                c || a(this).show(), b = Math.max(b, a(this).css("height", "").height()), c || a(this).hide();
            }).height(b));
        },
        _activate: function(b) {
            var c = this._findActive(b)[0];
            c !== this.active[0] && (c = c || this.active[0], this._eventHandler({
                target: c,
                currentTarget: c,
                preventDefault: a.noop
            }));
        },
        _findActive: function(b) {
            return "number" == typeof b ? this.headers.eq(b) : a();
        },
        _setupEvents: function(b) {
            var c = {
                keydown: "_keydown"
            };
            b && a.each(b.split(" "), function(a, b) {
                c[b] = "_eventHandler";
            }), this._off(this.headers.add(this.headers.next())), this._on(this.headers, c), 
            this._on(this.headers.next(), {
                keydown: "_panelKeyDown"
            }), this._hoverable(this.headers), this._focusable(this.headers);
        },
        _eventHandler: function(b) {
            var c, d, e = this.options, f = this.active, g = a(b.currentTarget), h = g[0] === f[0], i = h && e.collapsible, j = i ? a() : g.next(), k = f.next(), l = {
                oldHeader: f,
                oldPanel: k,
                newHeader: i ? a() : g,
                newPanel: j
            };
            b.preventDefault(), h && !e.collapsible || this._trigger("beforeActivate", b, l) === !1 || (e.active = i ? !1 : this.headers.index(g), 
            this.active = h ? a() : g, this._toggle(l), this._removeClass(f, "ui-accordion-header-active", "ui-state-active"), 
            e.icons && (c = f.children(".ui-accordion-header-icon"), this._removeClass(c, null, e.icons.activeHeader)._addClass(c, null, e.icons.header)), 
            h || (this._removeClass(g, "ui-accordion-header-collapsed")._addClass(g, "ui-accordion-header-active", "ui-state-active"), 
            e.icons && (d = g.children(".ui-accordion-header-icon"), this._removeClass(d, null, e.icons.header)._addClass(d, null, e.icons.activeHeader)), 
            this._addClass(g.next(), "ui-accordion-content-active")));
        },
        _toggle: function(b) {
            var c = b.newPanel, d = this.prevShow.length ? this.prevShow : b.oldPanel;
            this.prevShow.add(this.prevHide).stop(!0, !0), this.prevShow = c, this.prevHide = d, 
            this.options.animate ? this._animate(c, d, b) : (d.hide(), c.show(), this._toggleComplete(b)), 
            d.attr({
                "aria-hidden": "true"
            }), d.prev().attr({
                "aria-selected": "false",
                "aria-expanded": "false"
            }), c.length && d.length ? d.prev().attr({
                tabIndex: -1,
                "aria-expanded": "false"
            }) : c.length && this.headers.filter(function() {
                return 0 === parseInt(a(this).attr("tabIndex"), 10);
            }).attr("tabIndex", -1), c.attr("aria-hidden", "false").prev().attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            });
        },
        _animate: function(a, b, c) {
            var d, e, f, g = this, h = 0, i = a.css("box-sizing"), j = a.length && (!b.length || a.index() < b.index()), k = this.options.animate || {}, l = j && k.down || k, m = function() {
                g._toggleComplete(c);
            };
            return "number" == typeof l && (f = l), "string" == typeof l && (e = l), e = e || l.easing || k.easing, 
            f = f || l.duration || k.duration, b.length ? a.length ? (d = a.show().outerHeight(), 
            b.animate(this.hideProps, {
                duration: f,
                easing: e,
                step: function(a, b) {
                    b.now = Math.round(a);
                }
            }), a.hide().animate(this.showProps, {
                duration: f,
                easing: e,
                complete: m,
                step: function(a, c) {
                    c.now = Math.round(a), "height" !== c.prop ? "content-box" === i && (h += c.now) : "content" !== g.options.heightStyle && (c.now = Math.round(d - b.outerHeight() - h), 
                    h = 0);
                }
            }), void 0) : b.animate(this.hideProps, f, e, m) : a.animate(this.showProps, f, e, m);
        },
        _toggleComplete: function(a) {
            var b = a.oldPanel, c = b.prev();
            this._removeClass(b, "ui-accordion-content-active"), this._removeClass(c, "ui-accordion-header-active")._addClass(c, "ui-accordion-header-collapsed"), 
            b.length && (b.parent()[0].className = b.parent()[0].className), this._trigger("activate", null, a);
        }
    }), a.ui.safeActiveElement = function(a) {
        var b;
        try {
            b = a.activeElement;
        } catch (c) {
            b = a.body;
        }
        return b || (b = a.body), b.nodeName || (b = a.body), b;
    }, a.widget("ui.menu", {
        version: "1.12.1",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-caret-1-e"
            },
            items: "> *",
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",
            blur: null,
            focus: null,
            select: null
        },
        _create: function() {
            this.activeMenu = this.element, this.mouseHandled = !1, this.element.uniqueId().attr({
                role: this.options.role,
                tabIndex: 0
            }), this._addClass("ui-menu", "ui-widget ui-widget-content"), this._on({
                "mousedown .ui-menu-item": function(a) {
                    a.preventDefault();
                },
                "click .ui-menu-item": function(b) {
                    var c = a(b.target), d = a(a.ui.safeActiveElement(this.document[0]));
                    !this.mouseHandled && c.not(".ui-state-disabled").length && (this.select(b), b.isPropagationStopped() || (this.mouseHandled = !0), 
                    c.has(".ui-menu").length ? this.expand(b) : !this.element.is(":focus") && d.closest(".ui-menu").length && (this.element.trigger("focus", [ !0 ]), 
                    this.active && 1 === this.active.parents(".ui-menu").length && clearTimeout(this.timer)));
                },
                "mouseenter .ui-menu-item": function(b) {
                    if (!this.previousFilter) {
                        var c = a(b.target).closest(".ui-menu-item"), d = a(b.currentTarget);
                        c[0] === d[0] && (this._removeClass(d.siblings().children(".ui-state-active"), null, "ui-state-active"), 
                        this.focus(b, d));
                    }
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function(a, b) {
                    var c = this.active || this.element.find(this.options.items).eq(0);
                    b || this.focus(a, c);
                },
                blur: function(b) {
                    this._delay(function() {
                        var c = !a.contains(this.element[0], a.ui.safeActiveElement(this.document[0]));
                        c && this.collapseAll(b);
                    });
                },
                keydown: "_keydown"
            }), this.refresh(), this._on(this.document, {
                click: function(a) {
                    this._closeOnDocumentClick(a) && this.collapseAll(a), this.mouseHandled = !1;
                }
            });
        },
        _destroy: function() {
            var b = this.element.find(".ui-menu-item").removeAttr("role aria-disabled"), c = b.children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(), 
            c.children().each(function() {
                var b = a(this);
                b.data("ui-menu-submenu-caret") && b.remove();
            });
        },
        _keydown: function(b) {
            var c, d, e, f, g = !0;
            switch (b.keyCode) {
              case a.ui.keyCode.PAGE_UP:
                this.previousPage(b);
                break;

              case a.ui.keyCode.PAGE_DOWN:
                this.nextPage(b);
                break;

              case a.ui.keyCode.HOME:
                this._move("first", "first", b);
                break;

              case a.ui.keyCode.END:
                this._move("last", "last", b);
                break;

              case a.ui.keyCode.UP:
                this.previous(b);
                break;

              case a.ui.keyCode.DOWN:
                this.next(b);
                break;

              case a.ui.keyCode.LEFT:
                this.collapse(b);
                break;

              case a.ui.keyCode.RIGHT:
                this.active && !this.active.is(".ui-state-disabled") && this.expand(b);
                break;

              case a.ui.keyCode.ENTER:
              case a.ui.keyCode.SPACE:
                this._activate(b);
                break;

              case a.ui.keyCode.ESCAPE:
                this.collapse(b);
                break;

              default:
                g = !1, d = this.previousFilter || "", f = !1, e = b.keyCode >= 96 && 105 >= b.keyCode ? "" + (b.keyCode - 96) : String.fromCharCode(b.keyCode), 
                clearTimeout(this.filterTimer), e === d ? f = !0 : e = d + e, c = this._filterMenuItems(e), 
                c = f && -1 !== c.index(this.active.next()) ? this.active.nextAll(".ui-menu-item") : c, 
                c.length || (e = String.fromCharCode(b.keyCode), c = this._filterMenuItems(e)), 
                c.length ? (this.focus(b, c), this.previousFilter = e, this.filterTimer = this._delay(function() {
                    delete this.previousFilter;
                }, 1e3)) : delete this.previousFilter;
            }
            g && b.preventDefault();
        },
        _activate: function(a) {
            this.active && !this.active.is(".ui-state-disabled") && (this.active.children("[aria-haspopup='true']").length ? this.expand(a) : this.select(a));
        },
        refresh: function() {
            var b, c, d, e, f, g = this, h = this.options.icons.submenu, i = this.element.find(this.options.menus);
            this._toggleClass("ui-menu-icons", null, !!this.element.find(".ui-icon").length), 
            d = i.filter(":not(.ui-menu)").hide().attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false"
            }).each(function() {
                var b = a(this), c = b.prev(), d = a("<span>").data("ui-menu-submenu-caret", !0);
                g._addClass(d, "ui-menu-icon", "ui-icon " + h), c.attr("aria-haspopup", "true").prepend(d), 
                b.attr("aria-labelledby", c.attr("id"));
            }), this._addClass(d, "ui-menu", "ui-widget ui-widget-content ui-front"), b = i.add(this.element), 
            c = b.find(this.options.items), c.not(".ui-menu-item").each(function() {
                var b = a(this);
                g._isDivider(b) && g._addClass(b, "ui-menu-divider", "ui-widget-content");
            }), e = c.not(".ui-menu-item, .ui-menu-divider"), f = e.children().not(".ui-menu").uniqueId().attr({
                tabIndex: -1,
                role: this._itemRole()
            }), this._addClass(e, "ui-menu-item")._addClass(f, "ui-menu-item-wrapper"), c.filter(".ui-state-disabled").attr("aria-disabled", "true"), 
            this.active && !a.contains(this.element[0], this.active[0]) && this.blur();
        },
        _itemRole: function() {
            return {
                menu: "menuitem",
                listbox: "option"
            }[this.options.role];
        },
        _setOption: function(a, b) {
            if ("icons" === a) {
                var c = this.element.find(".ui-menu-icon");
                this._removeClass(c, null, this.options.icons.submenu)._addClass(c, null, b.submenu);
            }
            this._super(a, b);
        },
        _setOptionDisabled: function(a) {
            this._super(a), this.element.attr("aria-disabled", a + ""), this._toggleClass(null, "ui-state-disabled", !!a);
        },
        focus: function(a, b) {
            var c, d, e;
            this.blur(a, a && "focus" === a.type), this._scrollIntoView(b), this.active = b.first(), 
            d = this.active.children(".ui-menu-item-wrapper"), this._addClass(d, null, "ui-state-active"), 
            this.options.role && this.element.attr("aria-activedescendant", d.attr("id")), e = this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"), 
            this._addClass(e, null, "ui-state-active"), a && "keydown" === a.type ? this._close() : this.timer = this._delay(function() {
                this._close();
            }, this.delay), c = b.children(".ui-menu"), c.length && a && /^mouse/.test(a.type) && this._startOpening(c), 
            this.activeMenu = b.parent(), this._trigger("focus", a, {
                item: b
            });
        },
        _scrollIntoView: function(b) {
            var c, d, e, f, g, h;
            this._hasScroll() && (c = parseFloat(a.css(this.activeMenu[0], "borderTopWidth")) || 0, 
            d = parseFloat(a.css(this.activeMenu[0], "paddingTop")) || 0, e = b.offset().top - this.activeMenu.offset().top - c - d, 
            f = this.activeMenu.scrollTop(), g = this.activeMenu.height(), h = b.outerHeight(), 
            0 > e ? this.activeMenu.scrollTop(f + e) : e + h > g && this.activeMenu.scrollTop(f + e - g + h));
        },
        blur: function(a, b) {
            b || clearTimeout(this.timer), this.active && (this._removeClass(this.active.children(".ui-menu-item-wrapper"), null, "ui-state-active"), 
            this._trigger("blur", a, {
                item: this.active
            }), this.active = null);
        },
        _startOpening: function(a) {
            clearTimeout(this.timer), "true" === a.attr("aria-hidden") && (this.timer = this._delay(function() {
                this._close(), this._open(a);
            }, this.delay));
        },
        _open: function(b) {
            var c = a.extend({
                of: this.active
            }, this.options.position);
            clearTimeout(this.timer), this.element.find(".ui-menu").not(b.parents(".ui-menu")).hide().attr("aria-hidden", "true"), 
            b.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(c);
        },
        collapseAll: function(b, c) {
            clearTimeout(this.timer), this.timer = this._delay(function() {
                var d = c ? this.element : a(b && b.target).closest(this.element.find(".ui-menu"));
                d.length || (d = this.element), this._close(d), this.blur(b), this._removeClass(d.find(".ui-state-active"), null, "ui-state-active"), 
                this.activeMenu = d;
            }, this.delay);
        },
        _close: function(a) {
            a || (a = this.active ? this.active.parent() : this.element), a.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false");
        },
        _closeOnDocumentClick: function(b) {
            return !a(b.target).closest(".ui-menu").length;
        },
        _isDivider: function(a) {
            return !/[^\-\u2014\u2013\s]/.test(a.text());
        },
        collapse: function(a) {
            var b = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            b && b.length && (this._close(), this.focus(a, b));
        },
        expand: function(a) {
            var b = this.active && this.active.children(".ui-menu ").find(this.options.items).first();
            b && b.length && (this._open(b.parent()), this._delay(function() {
                this.focus(a, b);
            }));
        },
        next: function(a) {
            this._move("next", "first", a);
        },
        previous: function(a) {
            this._move("prev", "last", a);
        },
        isFirstItem: function() {
            return this.active && !this.active.prevAll(".ui-menu-item").length;
        },
        isLastItem: function() {
            return this.active && !this.active.nextAll(".ui-menu-item").length;
        },
        _move: function(a, b, c) {
            var d;
            this.active && (d = "first" === a || "last" === a ? this.active["first" === a ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : this.active[a + "All"](".ui-menu-item").eq(0)), 
            d && d.length && this.active || (d = this.activeMenu.find(this.options.items)[b]()), 
            this.focus(c, d);
        },
        nextPage: function(b) {
            var c, d, e;
            return this.active ? (this.isLastItem() || (this._hasScroll() ? (d = this.active.offset().top, 
            e = this.element.height(), this.active.nextAll(".ui-menu-item").each(function() {
                return c = a(this), 0 > c.offset().top - d - e;
            }), this.focus(b, c)) : this.focus(b, this.activeMenu.find(this.options.items)[this.active ? "last" : "first"]())), 
            void 0) : (this.next(b), void 0);
        },
        previousPage: function(b) {
            var c, d, e;
            return this.active ? (this.isFirstItem() || (this._hasScroll() ? (d = this.active.offset().top, 
            e = this.element.height(), this.active.prevAll(".ui-menu-item").each(function() {
                return c = a(this), c.offset().top - d + e > 0;
            }), this.focus(b, c)) : this.focus(b, this.activeMenu.find(this.options.items).first())), 
            void 0) : (this.next(b), void 0);
        },
        _hasScroll: function() {
            return this.element.outerHeight() < this.element.prop("scrollHeight");
        },
        select: function(b) {
            this.active = this.active || a(b.target).closest(".ui-menu-item");
            var c = {
                item: this.active
            };
            this.active.has(".ui-menu").length || this.collapseAll(b, !0), this._trigger("select", b, c);
        },
        _filterMenuItems: function(b) {
            var c = b.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"), d = RegExp("^" + c, "i");
            return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function() {
                return d.test(a.trim(a(this).children(".ui-menu-item-wrapper").text()));
            });
        }
    }), a.widget("ui.autocomplete", {
        version: "1.12.1",
        defaultElement: "<input>",
        options: {
            appendTo: null,
            autoFocus: !1,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },
        requestIndex: 0,
        pending: 0,
        _create: function() {
            var b, c, d, e = this.element[0].nodeName.toLowerCase(), f = "textarea" === e, g = "input" === e;
            this.isMultiLine = f || !g && this._isContentEditable(this.element), this.valueMethod = this.element[f || g ? "val" : "text"], 
            this.isNewMenu = !0, this._addClass("ui-autocomplete-input"), this.element.attr("autocomplete", "off"), 
            this._on(this.element, {
                keydown: function(e) {
                    if (this.element.prop("readOnly")) return b = !0, d = !0, c = !0, void 0;
                    b = !1, d = !1, c = !1;
                    var f = a.ui.keyCode;
                    switch (e.keyCode) {
                      case f.PAGE_UP:
                        b = !0, this._move("previousPage", e);
                        break;

                      case f.PAGE_DOWN:
                        b = !0, this._move("nextPage", e);
                        break;

                      case f.UP:
                        b = !0, this._keyEvent("previous", e);
                        break;

                      case f.DOWN:
                        b = !0, this._keyEvent("next", e);
                        break;

                      case f.ENTER:
                        this.menu.active && (b = !0, e.preventDefault(), this.menu.select(e));
                        break;

                      case f.TAB:
                        this.menu.active && this.menu.select(e);
                        break;

                      case f.ESCAPE:
                        this.menu.element.is(":visible") && (this.isMultiLine || this._value(this.term), 
                        this.close(e), e.preventDefault());
                        break;

                      default:
                        c = !0, this._searchTimeout(e);
                    }
                },
                keypress: function(d) {
                    if (b) return b = !1, (!this.isMultiLine || this.menu.element.is(":visible")) && d.preventDefault(), 
                    void 0;
                    if (!c) {
                        var e = a.ui.keyCode;
                        switch (d.keyCode) {
                          case e.PAGE_UP:
                            this._move("previousPage", d);
                            break;

                          case e.PAGE_DOWN:
                            this._move("nextPage", d);
                            break;

                          case e.UP:
                            this._keyEvent("previous", d);
                            break;

                          case e.DOWN:
                            this._keyEvent("next", d);
                        }
                    }
                },
                input: function(a) {
                    return d ? (d = !1, a.preventDefault(), void 0) : (this._searchTimeout(a), void 0);
                },
                focus: function() {
                    this.selectedItem = null, this.previous = this._value();
                },
                blur: function(a) {
                    return this.cancelBlur ? (delete this.cancelBlur, void 0) : (clearTimeout(this.searching), 
                    this.close(a), this._change(a), void 0);
                }
            }), this._initSource(), this.menu = a("<ul>").appendTo(this._appendTo()).menu({
                role: null
            }).hide().menu("instance"), this._addClass(this.menu.element, "ui-autocomplete", "ui-front"), 
            this._on(this.menu.element, {
                mousedown: function(b) {
                    b.preventDefault(), this.cancelBlur = !0, this._delay(function() {
                        delete this.cancelBlur, this.element[0] !== a.ui.safeActiveElement(this.document[0]) && this.element.trigger("focus");
                    });
                },
                menufocus: function(b, c) {
                    var d, e;
                    return this.isNewMenu && (this.isNewMenu = !1, b.originalEvent && /^mouse/.test(b.originalEvent.type)) ? (this.menu.blur(), 
                    this.document.one("mousemove", function() {
                        a(b.target).trigger(b.originalEvent);
                    }), void 0) : (e = c.item.data("ui-autocomplete-item"), !1 !== this._trigger("focus", b, {
                        item: e
                    }) && b.originalEvent && /^key/.test(b.originalEvent.type) && this._value(e.value), 
                    d = c.item.attr("aria-label") || e.value, d && a.trim(d).length && (this.liveRegion.children().hide(), 
                    a("<div>").text(d).appendTo(this.liveRegion)), void 0);
                },
                menuselect: function(b, c) {
                    var d = c.item.data("ui-autocomplete-item"), e = this.previous;
                    this.element[0] !== a.ui.safeActiveElement(this.document[0]) && (this.element.trigger("focus"), 
                    this.previous = e, this._delay(function() {
                        this.previous = e, this.selectedItem = d;
                    })), !1 !== this._trigger("select", b, {
                        item: d
                    }) && this._value(d.value), this.term = this._value(), this.close(b), this.selectedItem = d;
                }
            }), this.liveRegion = a("<div>", {
                role: "status",
                "aria-live": "assertive",
                "aria-relevant": "additions"
            }).appendTo(this.document[0].body), this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"), 
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete");
                }
            });
        },
        _destroy: function() {
            clearTimeout(this.searching), this.element.removeAttr("autocomplete"), this.menu.element.remove(), 
            this.liveRegion.remove();
        },
        _setOption: function(a, b) {
            this._super(a, b), "source" === a && this._initSource(), "appendTo" === a && this.menu.element.appendTo(this._appendTo()), 
            "disabled" === a && b && this.xhr && this.xhr.abort();
        },
        _isEventTargetInWidget: function(b) {
            var c = this.menu.element[0];
            return b.target === this.element[0] || b.target === c || a.contains(c, b.target);
        },
        _closeOnClickOutside: function(a) {
            this._isEventTargetInWidget(a) || this.close();
        },
        _appendTo: function() {
            var b = this.options.appendTo;
            return b && (b = b.jquery || b.nodeType ? a(b) : this.document.find(b).eq(0)), b && b[0] || (b = this.element.closest(".ui-front, dialog")), 
            b.length || (b = this.document[0].body), b;
        },
        _initSource: function() {
            var b, c, d = this;
            a.isArray(this.options.source) ? (b = this.options.source, this.source = function(c, d) {
                d(a.ui.autocomplete.filter(b, c.term));
            }) : "string" == typeof this.options.source ? (c = this.options.source, this.source = function(b, e) {
                d.xhr && d.xhr.abort(), d.xhr = a.ajax({
                    url: c,
                    data: b,
                    dataType: "json",
                    success: function(a) {
                        e(a);
                    },
                    error: function() {
                        e([]);
                    }
                });
            }) : this.source = this.options.source;
        },
        _searchTimeout: function(a) {
            clearTimeout(this.searching), this.searching = this._delay(function() {
                var b = this.term === this._value(), c = this.menu.element.is(":visible"), d = a.altKey || a.ctrlKey || a.metaKey || a.shiftKey;
                (!b || b && !c && !d) && (this.selectedItem = null, this.search(null, a));
            }, this.options.delay);
        },
        search: function(a, b) {
            return a = null != a ? a : this._value(), this.term = this._value(), a.length < this.options.minLength ? this.close(b) : this._trigger("search", b) !== !1 ? this._search(a) : void 0;
        },
        _search: function(a) {
            this.pending++, this._addClass("ui-autocomplete-loading"), this.cancelSearch = !1, 
            this.source({
                term: a
            }, this._response());
        },
        _response: function() {
            var b = ++this.requestIndex;
            return a.proxy(function(a) {
                b === this.requestIndex && this.__response(a), this.pending--, this.pending || this._removeClass("ui-autocomplete-loading");
            }, this);
        },
        __response: function(a) {
            a && (a = this._normalize(a)), this._trigger("response", null, {
                content: a
            }), !this.options.disabled && a && a.length && !this.cancelSearch ? (this._suggest(a), 
            this._trigger("open")) : this._close();
        },
        close: function(a) {
            this.cancelSearch = !0, this._close(a);
        },
        _close: function(a) {
            this._off(this.document, "mousedown"), this.menu.element.is(":visible") && (this.menu.element.hide(), 
            this.menu.blur(), this.isNewMenu = !0, this._trigger("close", a));
        },
        _change: function(a) {
            this.previous !== this._value() && this._trigger("change", a, {
                item: this.selectedItem
            });
        },
        _normalize: function(b) {
            return b.length && b[0].label && b[0].value ? b : a.map(b, function(b) {
                return "string" == typeof b ? {
                    label: b,
                    value: b
                } : a.extend({}, b, {
                    label: b.label || b.value,
                    value: b.value || b.label
                });
            });
        },
        _suggest: function(b) {
            var c = this.menu.element.empty();
            this._renderMenu(c, b), this.isNewMenu = !0, this.menu.refresh(), c.show(), this._resizeMenu(), 
            c.position(a.extend({
                of: this.element
            }, this.options.position)), this.options.autoFocus && this.menu.next(), this._on(this.document, {
                mousedown: "_closeOnClickOutside"
            });
        },
        _resizeMenu: function() {
            var a = this.menu.element;
            a.outerWidth(Math.max(a.width("").outerWidth() + 1, this.element.outerWidth()));
        },
        _renderMenu: function(b, c) {
            var d = this;
            a.each(c, function(a, c) {
                d._renderItemData(b, c);
            });
        },
        _renderItemData: function(a, b) {
            return this._renderItem(a, b).data("ui-autocomplete-item", b);
        },
        _renderItem: function(b, c) {
            return a("<li>").append(a("<div>").text(c.label)).appendTo(b);
        },
        _move: function(a, b) {
            return this.menu.element.is(":visible") ? this.menu.isFirstItem() && /^previous/.test(a) || this.menu.isLastItem() && /^next/.test(a) ? (this.isMultiLine || this._value(this.term), 
            this.menu.blur(), void 0) : (this.menu[a](b), void 0) : (this.search(null, b), void 0);
        },
        widget: function() {
            return this.menu.element;
        },
        _value: function() {
            return this.valueMethod.apply(this.element, arguments);
        },
        _keyEvent: function(a, b) {
            (!this.isMultiLine || this.menu.element.is(":visible")) && (this._move(a, b), b.preventDefault());
        },
        _isContentEditable: function(a) {
            if (!a.length) return !1;
            var b = a.prop("contentEditable");
            return "inherit" === b ? this._isContentEditable(a.parent()) : "true" === b;
        }
    }), a.extend(a.ui.autocomplete, {
        escapeRegex: function(a) {
            return a.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        },
        filter: function(b, c) {
            var d = RegExp(a.ui.autocomplete.escapeRegex(c), "i");
            return a.grep(b, function(a) {
                return d.test(a.label || a.value || a);
            });
        }
    }), a.widget("ui.autocomplete", a.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function(a) {
                    return a + (a > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate.";
                }
            }
        },
        __response: function(b) {
            var c;
            this._superApply(arguments), this.options.disabled || this.cancelSearch || (c = b && b.length ? this.options.messages.results(b.length) : this.options.messages.noResults, 
            this.liveRegion.children().hide(), a("<div>").text(c).appendTo(this.liveRegion));
        }
    }), a.ui.autocomplete;
    var p = /ui-corner-([a-z]){2,6}/g;
    a.widget("ui.controlgroup", {
        version: "1.12.1",
        defaultElement: "<div>",
        options: {
            direction: "horizontal",
            disabled: null,
            onlyVisible: !0,
            items: {
                button: "input[type=button], input[type=submit], input[type=reset], button, a",
                controlgroupLabel: ".ui-controlgroup-label",
                checkboxradio: "input[type='checkbox'], input[type='radio']",
                selectmenu: "select",
                spinner: ".ui-spinner-input"
            }
        },
        _create: function() {
            this._enhance();
        },
        _enhance: function() {
            this.element.attr("role", "toolbar"), this.refresh();
        },
        _destroy: function() {
            this._callChildMethod("destroy"), this.childWidgets.removeData("ui-controlgroup-data"), 
            this.element.removeAttr("role"), this.options.items.controlgroupLabel && this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap();
        },
        _initWidgets: function() {
            var b = this, c = [];
            a.each(this.options.items, function(d, e) {
                var f, g = {};
                return e ? "controlgroupLabel" === d ? (f = b.element.find(e), f.each(function() {
                    var b = a(this);
                    b.children(".ui-controlgroup-label-contents").length || b.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>");
                }), b._addClass(f, null, "ui-widget ui-widget-content ui-state-default"), c = c.concat(f.get()), 
                void 0) : (a.fn[d] && (g = b["_" + d + "Options"] ? b["_" + d + "Options"]("middle") : {
                    classes: {}
                }, b.element.find(e).each(function() {
                    var e = a(this), f = e[d]("instance"), h = a.widget.extend({}, g);
                    if ("button" !== d || !e.parent(".ui-spinner").length) {
                        f || (f = e[d]()[d]("instance")), f && (h.classes = b._resolveClassesValues(h.classes, f)), 
                        e[d](h);
                        var i = e[d]("widget");
                        a.data(i[0], "ui-controlgroup-data", f ? f : e[d]("instance")), c.push(i[0]);
                    }
                })), void 0) : void 0;
            }), this.childWidgets = a(a.unique(c)), this._addClass(this.childWidgets, "ui-controlgroup-item");
        },
        _callChildMethod: function(b) {
            this.childWidgets.each(function() {
                var c = a(this), d = c.data("ui-controlgroup-data");
                d && d[b] && d[b]();
            });
        },
        _updateCornerClass: function(a, b) {
            var c = "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all", d = this._buildSimpleOptions(b, "label").classes.label;
            this._removeClass(a, null, c), this._addClass(a, null, d);
        },
        _buildSimpleOptions: function(a, b) {
            var c = "vertical" === this.options.direction, d = {
                classes: {}
            };
            return d.classes[b] = {
                middle: "",
                first: "ui-corner-" + (c ? "top" : "left"),
                last: "ui-corner-" + (c ? "bottom" : "right"),
                only: "ui-corner-all"
            }[a], d;
        },
        _spinnerOptions: function(a) {
            var b = this._buildSimpleOptions(a, "ui-spinner");
            return b.classes["ui-spinner-up"] = "", b.classes["ui-spinner-down"] = "", b;
        },
        _buttonOptions: function(a) {
            return this._buildSimpleOptions(a, "ui-button");
        },
        _checkboxradioOptions: function(a) {
            return this._buildSimpleOptions(a, "ui-checkboxradio-label");
        },
        _selectmenuOptions: function(a) {
            var b = "vertical" === this.options.direction;
            return {
                width: b ? "auto" : !1,
                classes: {
                    middle: {
                        "ui-selectmenu-button-open": "",
                        "ui-selectmenu-button-closed": ""
                    },
                    first: {
                        "ui-selectmenu-button-open": "ui-corner-" + (b ? "top" : "tl"),
                        "ui-selectmenu-button-closed": "ui-corner-" + (b ? "top" : "left")
                    },
                    last: {
                        "ui-selectmenu-button-open": b ? "" : "ui-corner-tr",
                        "ui-selectmenu-button-closed": "ui-corner-" + (b ? "bottom" : "right")
                    },
                    only: {
                        "ui-selectmenu-button-open": "ui-corner-top",
                        "ui-selectmenu-button-closed": "ui-corner-all"
                    }
                }[a]
            };
        },
        _resolveClassesValues: function(b, c) {
            var d = {};
            return a.each(b, function(e) {
                var f = c.options.classes[e] || "";
                f = a.trim(f.replace(p, "")), d[e] = (f + " " + b[e]).replace(/\s+/g, " ");
            }), d;
        },
        _setOption: function(a, b) {
            return "direction" === a && this._removeClass("ui-controlgroup-" + this.options.direction), 
            this._super(a, b), "disabled" === a ? (this._callChildMethod(b ? "disable" : "enable"), 
            void 0) : (this.refresh(), void 0);
        },
        refresh: function() {
            var b, c = this;
            this._addClass("ui-controlgroup ui-controlgroup-" + this.options.direction), "horizontal" === this.options.direction && this._addClass(null, "ui-helper-clearfix"), 
            this._initWidgets(), b = this.childWidgets, this.options.onlyVisible && (b = b.filter(":visible")), 
            b.length && (a.each([ "first", "last" ], function(a, d) {
                var e = b[d]().data("ui-controlgroup-data");
                if (e && c["_" + e.widgetName + "Options"]) {
                    var f = c["_" + e.widgetName + "Options"](1 === b.length ? "only" : d);
                    f.classes = c._resolveClassesValues(f.classes, e), e.element[e.widgetName](f);
                } else c._updateCornerClass(b[d](), d);
            }), this._callChildMethod("refresh"));
        }
    }), a.widget("ui.checkboxradio", [ a.ui.formResetMixin, {
        version: "1.12.1",
        options: {
            disabled: null,
            label: null,
            icon: !0,
            classes: {
                "ui-checkboxradio-label": "ui-corner-all",
                "ui-checkboxradio-icon": "ui-corner-all"
            }
        },
        _getCreateOptions: function() {
            var b, c, d = this, e = this._super() || {};
            return this._readType(), c = this.element.labels(), this.label = a(c[c.length - 1]), 
            this.label.length || a.error("No label found for checkboxradio widget"), this.originalLabel = "", 
            this.label.contents().not(this.element[0]).each(function() {
                d.originalLabel += 3 === this.nodeType ? a(this).text() : this.outerHTML;
            }), this.originalLabel && (e.label = this.originalLabel), b = this.element[0].disabled, 
            null != b && (e.disabled = b), e;
        },
        _create: function() {
            var a = this.element[0].checked;
            this._bindFormResetHandler(), null == this.options.disabled && (this.options.disabled = this.element[0].disabled), 
            this._setOption("disabled", this.options.disabled), this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible"), 
            this._addClass(this.label, "ui-checkboxradio-label", "ui-button ui-widget"), "radio" === this.type && this._addClass(this.label, "ui-checkboxradio-radio-label"), 
            this.options.label && this.options.label !== this.originalLabel ? this._updateLabel() : this.originalLabel && (this.options.label = this.originalLabel), 
            this._enhance(), a && (this._addClass(this.label, "ui-checkboxradio-checked", "ui-state-active"), 
            this.icon && this._addClass(this.icon, null, "ui-state-hover")), this._on({
                change: "_toggleClasses",
                focus: function() {
                    this._addClass(this.label, null, "ui-state-focus ui-visual-focus");
                },
                blur: function() {
                    this._removeClass(this.label, null, "ui-state-focus ui-visual-focus");
                }
            });
        },
        _readType: function() {
            var b = this.element[0].nodeName.toLowerCase();
            this.type = this.element[0].type, "input" === b && /radio|checkbox/.test(this.type) || a.error("Can't create checkboxradio on element.nodeName=" + b + " and element.type=" + this.type);
        },
        _enhance: function() {
            this._updateIcon(this.element[0].checked);
        },
        widget: function() {
            return this.label;
        },
        _getRadioGroup: function() {
            var b, c = this.element[0].name, d = "input[name='" + a.ui.escapeSelector(c) + "']";
            return c ? (b = this.form.length ? a(this.form[0].elements).filter(d) : a(d).filter(function() {
                return 0 === a(this).form().length;
            }), b.not(this.element)) : a([]);
        },
        _toggleClasses: function() {
            var b = this.element[0].checked;
            this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", b), 
            this.options.icon && "checkbox" === this.type && this._toggleClass(this.icon, null, "ui-icon-check ui-state-checked", b)._toggleClass(this.icon, null, "ui-icon-blank", !b), 
            "radio" === this.type && this._getRadioGroup().each(function() {
                var b = a(this).checkboxradio("instance");
                b && b._removeClass(b.label, "ui-checkboxradio-checked", "ui-state-active");
            });
        },
        _destroy: function() {
            this._unbindFormResetHandler(), this.icon && (this.icon.remove(), this.iconSpace.remove());
        },
        _setOption: function(a, b) {
            return "label" !== a || b ? (this._super(a, b), "disabled" === a ? (this._toggleClass(this.label, null, "ui-state-disabled", b), 
            this.element[0].disabled = b, void 0) : (this.refresh(), void 0)) : void 0;
        },
        _updateIcon: function(b) {
            var c = "ui-icon ui-icon-background ";
            this.options.icon ? (this.icon || (this.icon = a("<span>"), this.iconSpace = a("<span> </span>"), 
            this._addClass(this.iconSpace, "ui-checkboxradio-icon-space")), "checkbox" === this.type ? (c += b ? "ui-icon-check ui-state-checked" : "ui-icon-blank", 
            this._removeClass(this.icon, null, b ? "ui-icon-blank" : "ui-icon-check")) : c += "ui-icon-blank", 
            this._addClass(this.icon, "ui-checkboxradio-icon", c), b || this._removeClass(this.icon, null, "ui-icon-check ui-state-checked"), 
            this.icon.prependTo(this.label).after(this.iconSpace)) : void 0 !== this.icon && (this.icon.remove(), 
            this.iconSpace.remove(), delete this.icon);
        },
        _updateLabel: function() {
            var a = this.label.contents().not(this.element[0]);
            this.icon && (a = a.not(this.icon[0])), this.iconSpace && (a = a.not(this.iconSpace[0])), 
            a.remove(), this.label.append(this.options.label);
        },
        refresh: function() {
            var a = this.element[0].checked, b = this.element[0].disabled;
            this._updateIcon(a), this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", a), 
            null !== this.options.label && this._updateLabel(), b !== this.options.disabled && this._setOptions({
                disabled: b
            });
        }
    } ]), a.ui.checkboxradio, a.widget("ui.button", {
        version: "1.12.1",
        defaultElement: "<button>",
        options: {
            classes: {
                "ui-button": "ui-corner-all"
            },
            disabled: null,
            icon: null,
            iconPosition: "beginning",
            label: null,
            showLabel: !0
        },
        _getCreateOptions: function() {
            var a, b = this._super() || {};
            return this.isInput = this.element.is("input"), a = this.element[0].disabled, null != a && (b.disabled = a), 
            this.originalLabel = this.isInput ? this.element.val() : this.element.html(), this.originalLabel && (b.label = this.originalLabel), 
            b;
        },
        _create: function() {
            !this.option.showLabel & !this.options.icon && (this.options.showLabel = !0), null == this.options.disabled && (this.options.disabled = this.element[0].disabled || !1), 
            this.hasTitle = !!this.element.attr("title"), this.options.label && this.options.label !== this.originalLabel && (this.isInput ? this.element.val(this.options.label) : this.element.html(this.options.label)), 
            this._addClass("ui-button", "ui-widget"), this._setOption("disabled", this.options.disabled), 
            this._enhance(), this.element.is("a") && this._on({
                keyup: function(b) {
                    b.keyCode === a.ui.keyCode.SPACE && (b.preventDefault(), this.element[0].click ? this.element[0].click() : this.element.trigger("click"));
                }
            });
        },
        _enhance: function() {
            this.element.is("button") || this.element.attr("role", "button"), this.options.icon && (this._updateIcon("icon", this.options.icon), 
            this._updateTooltip());
        },
        _updateTooltip: function() {
            this.title = this.element.attr("title"), this.options.showLabel || this.title || this.element.attr("title", this.options.label);
        },
        _updateIcon: function(b, c) {
            var d = "iconPosition" !== b, e = d ? this.options.iconPosition : c, f = "top" === e || "bottom" === e;
            this.icon ? d && this._removeClass(this.icon, null, this.options.icon) : (this.icon = a("<span>"), 
            this._addClass(this.icon, "ui-button-icon", "ui-icon"), this.options.showLabel || this._addClass("ui-button-icon-only")), 
            d && this._addClass(this.icon, null, c), this._attachIcon(e), f ? (this._addClass(this.icon, null, "ui-widget-icon-block"), 
            this.iconSpace && this.iconSpace.remove()) : (this.iconSpace || (this.iconSpace = a("<span> </span>"), 
            this._addClass(this.iconSpace, "ui-button-icon-space")), this._removeClass(this.icon, null, "ui-wiget-icon-block"), 
            this._attachIconSpace(e));
        },
        _destroy: function() {
            this.element.removeAttr("role"), this.icon && this.icon.remove(), this.iconSpace && this.iconSpace.remove(), 
            this.hasTitle || this.element.removeAttr("title");
        },
        _attachIconSpace: function(a) {
            this.icon[/^(?:end|bottom)/.test(a) ? "before" : "after"](this.iconSpace);
        },
        _attachIcon: function(a) {
            this.element[/^(?:end|bottom)/.test(a) ? "append" : "prepend"](this.icon);
        },
        _setOptions: function(a) {
            var b = void 0 === a.showLabel ? this.options.showLabel : a.showLabel, c = void 0 === a.icon ? this.options.icon : a.icon;
            b || c || (a.showLabel = !0), this._super(a);
        },
        _setOption: function(a, b) {
            "icon" === a && (b ? this._updateIcon(a, b) : this.icon && (this.icon.remove(), 
            this.iconSpace && this.iconSpace.remove())), "iconPosition" === a && this._updateIcon(a, b), 
            "showLabel" === a && (this._toggleClass("ui-button-icon-only", null, !b), this._updateTooltip()), 
            "label" === a && (this.isInput ? this.element.val(b) : (this.element.html(b), this.icon && (this._attachIcon(this.options.iconPosition), 
            this._attachIconSpace(this.options.iconPosition)))), this._super(a, b), "disabled" === a && (this._toggleClass(null, "ui-state-disabled", b), 
            this.element[0].disabled = b, b && this.element.blur());
        },
        refresh: function() {
            var a = this.element.is("input, button") ? this.element[0].disabled : this.element.hasClass("ui-button-disabled");
            a !== this.options.disabled && this._setOptions({
                disabled: a
            }), this._updateTooltip();
        }
    }), a.uiBackCompat !== !1 && (a.widget("ui.button", a.ui.button, {
        options: {
            text: !0,
            icons: {
                primary: null,
                secondary: null
            }
        },
        _create: function() {
            this.options.showLabel && !this.options.text && (this.options.showLabel = this.options.text), 
            !this.options.showLabel && this.options.text && (this.options.text = this.options.showLabel), 
            this.options.icon || !this.options.icons.primary && !this.options.icons.secondary ? this.options.icon && (this.options.icons.primary = this.options.icon) : this.options.icons.primary ? this.options.icon = this.options.icons.primary : (this.options.icon = this.options.icons.secondary, 
            this.options.iconPosition = "end"), this._super();
        },
        _setOption: function(a, b) {
            return "text" === a ? (this._super("showLabel", b), void 0) : ("showLabel" === a && (this.options.text = b), 
            "icon" === a && (this.options.icons.primary = b), "icons" === a && (b.primary ? (this._super("icon", b.primary), 
            this._super("iconPosition", "beginning")) : b.secondary && (this._super("icon", b.secondary), 
            this._super("iconPosition", "end"))), this._superApply(arguments), void 0);
        }
    }), a.fn.button = function(b) {
        return function() {
            return !this.length || this.length && "INPUT" !== this[0].tagName || this.length && "INPUT" === this[0].tagName && "checkbox" !== this.attr("type") && "radio" !== this.attr("type") ? b.apply(this, arguments) : (a.ui.checkboxradio || a.error("Checkboxradio widget missing"), 
            0 === arguments.length ? this.checkboxradio({
                icon: !1
            }) : this.checkboxradio.apply(this, arguments));
        };
    }(a.fn.button), a.fn.buttonset = function() {
        return a.ui.controlgroup || a.error("Controlgroup widget missing"), "option" === arguments[0] && "items" === arguments[1] && arguments[2] ? this.controlgroup.apply(this, [ arguments[0], "items.button", arguments[2] ]) : "option" === arguments[0] && "items" === arguments[1] ? this.controlgroup.apply(this, [ arguments[0], "items.button" ]) : ("object" == typeof arguments[0] && arguments[0].items && (arguments[0].items = {
            button: arguments[0].items
        }), this.controlgroup.apply(this, arguments));
    }), a.ui.button, a.extend(a.ui, {
        datepicker: {
            version: "1.12.1"
        }
    });
    var q;
    a.extend(d.prototype, {
        markerClassName: "hasDatepicker",
        maxRows: 4,
        _widgetDatepicker: function() {
            return this.dpDiv;
        },
        setDefaults: function(a) {
            return g(this._defaults, a || {}), this;
        },
        _attachDatepicker: function(b, c) {
            var d, e, f;
            d = b.nodeName.toLowerCase(), e = "div" === d || "span" === d, b.id || (this.uuid += 1, 
            b.id = "dp" + this.uuid), f = this._newInst(a(b), e), f.settings = a.extend({}, c || {}), 
            "input" === d ? this._connectDatepicker(b, f) : e && this._inlineDatepicker(b, f);
        },
        _newInst: function(b, c) {
            var d = b[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1");
            return {
                id: d,
                input: b,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: c,
                dpDiv: c ? e(a("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")) : this.dpDiv
            };
        },
        _connectDatepicker: function(b, c) {
            var d = a(b);
            c.append = a([]), c.trigger = a([]), d.hasClass(this.markerClassName) || (this._attachments(d, c), 
            d.addClass(this.markerClassName).on("keydown", this._doKeyDown).on("keypress", this._doKeyPress).on("keyup", this._doKeyUp), 
            this._autoSize(c), a.data(b, "datepicker", c), c.settings.disabled && this._disableDatepicker(b));
        },
        _attachments: function(b, c) {
            var d, e, f, g = this._get(c, "appendText"), h = this._get(c, "isRTL");
            c.append && c.append.remove(), g && (c.append = a("<span class='" + this._appendClass + "'>" + g + "</span>"), 
            b[h ? "before" : "after"](c.append)), b.off("focus", this._showDatepicker), c.trigger && c.trigger.remove(), 
            d = this._get(c, "showOn"), ("focus" === d || "both" === d) && b.on("focus", this._showDatepicker), 
            ("button" === d || "both" === d) && (e = this._get(c, "buttonText"), f = this._get(c, "buttonImage"), 
            c.trigger = a(this._get(c, "buttonImageOnly") ? a("<img/>").addClass(this._triggerClass).attr({
                src: f,
                alt: e,
                title: e
            }) : a("<button type='button'></button>").addClass(this._triggerClass).html(f ? a("<img/>").attr({
                src: f,
                alt: e,
                title: e
            }) : e)), b[h ? "before" : "after"](c.trigger), c.trigger.on("click", function() {
                return a.datepicker._datepickerShowing && a.datepicker._lastInput === b[0] ? a.datepicker._hideDatepicker() : a.datepicker._datepickerShowing && a.datepicker._lastInput !== b[0] ? (a.datepicker._hideDatepicker(), 
                a.datepicker._showDatepicker(b[0])) : a.datepicker._showDatepicker(b[0]), !1;
            }));
        },
        _autoSize: function(a) {
            if (this._get(a, "autoSize") && !a.inline) {
                var b, c, d, e, f = new Date(2009, 11, 20), g = this._get(a, "dateFormat");
                g.match(/[DM]/) && (b = function(a) {
                    for (c = 0, d = 0, e = 0; a.length > e; e++) a[e].length > c && (c = a[e].length, 
                    d = e);
                    return d;
                }, f.setMonth(b(this._get(a, g.match(/MM/) ? "monthNames" : "monthNamesShort"))), 
                f.setDate(b(this._get(a, g.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - f.getDay())), 
                a.input.attr("size", this._formatDate(a, f).length);
            }
        },
        _inlineDatepicker: function(b, c) {
            var d = a(b);
            d.hasClass(this.markerClassName) || (d.addClass(this.markerClassName).append(c.dpDiv), 
            a.data(b, "datepicker", c), this._setDate(c, this._getDefaultDate(c), !0), this._updateDatepicker(c), 
            this._updateAlternate(c), c.settings.disabled && this._disableDatepicker(b), c.dpDiv.css("display", "block"));
        },
        _dialogDatepicker: function(b, c, d, e, f) {
            var h, i, j, k, l, m = this._dialogInst;
            return m || (this.uuid += 1, h = "dp" + this.uuid, this._dialogInput = a("<input type='text' id='" + h + "' style='position: absolute; top: -100px; width: 0px;'/>"), 
            this._dialogInput.on("keydown", this._doKeyDown), a("body").append(this._dialogInput), 
            m = this._dialogInst = this._newInst(this._dialogInput, !1), m.settings = {}, a.data(this._dialogInput[0], "datepicker", m)), 
            g(m.settings, e || {}), c = c && c.constructor === Date ? this._formatDate(m, c) : c, 
            this._dialogInput.val(c), this._pos = f ? f.length ? f : [ f.pageX, f.pageY ] : null, 
            this._pos || (i = document.documentElement.clientWidth, j = document.documentElement.clientHeight, 
            k = document.documentElement.scrollLeft || document.body.scrollLeft, l = document.documentElement.scrollTop || document.body.scrollTop, 
            this._pos = [ i / 2 - 100 + k, j / 2 - 150 + l ]), this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"), 
            m.settings.onSelect = d, this._inDialog = !0, this.dpDiv.addClass(this._dialogClass), 
            this._showDatepicker(this._dialogInput[0]), a.blockUI && a.blockUI(this.dpDiv), 
            a.data(this._dialogInput[0], "datepicker", m), this;
        },
        _destroyDatepicker: function(b) {
            var c, d = a(b), e = a.data(b, "datepicker");
            d.hasClass(this.markerClassName) && (c = b.nodeName.toLowerCase(), a.removeData(b, "datepicker"), 
            "input" === c ? (e.append.remove(), e.trigger.remove(), d.removeClass(this.markerClassName).off("focus", this._showDatepicker).off("keydown", this._doKeyDown).off("keypress", this._doKeyPress).off("keyup", this._doKeyUp)) : ("div" === c || "span" === c) && d.removeClass(this.markerClassName).empty(), 
            q === e && (q = null));
        },
        _enableDatepicker: function(b) {
            var c, d, e = a(b), f = a.data(b, "datepicker");
            e.hasClass(this.markerClassName) && (c = b.nodeName.toLowerCase(), "input" === c ? (b.disabled = !1, 
            f.trigger.filter("button").each(function() {
                this.disabled = !1;
            }).end().filter("img").css({
                opacity: "1.0",
                cursor: ""
            })) : ("div" === c || "span" === c) && (d = e.children("." + this._inlineClass), 
            d.children().removeClass("ui-state-disabled"), d.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)), 
            this._disabledInputs = a.map(this._disabledInputs, function(a) {
                return a === b ? null : a;
            }));
        },
        _disableDatepicker: function(b) {
            var c, d, e = a(b), f = a.data(b, "datepicker");
            e.hasClass(this.markerClassName) && (c = b.nodeName.toLowerCase(), "input" === c ? (b.disabled = !0, 
            f.trigger.filter("button").each(function() {
                this.disabled = !0;
            }).end().filter("img").css({
                opacity: "0.5",
                cursor: "default"
            })) : ("div" === c || "span" === c) && (d = e.children("." + this._inlineClass), 
            d.children().addClass("ui-state-disabled"), d.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)), 
            this._disabledInputs = a.map(this._disabledInputs, function(a) {
                return a === b ? null : a;
            }), this._disabledInputs[this._disabledInputs.length] = b);
        },
        _isDisabledDatepicker: function(a) {
            if (!a) return !1;
            for (var b = 0; this._disabledInputs.length > b; b++) if (this._disabledInputs[b] === a) return !0;
            return !1;
        },
        _getInst: function(b) {
            try {
                return a.data(b, "datepicker");
            } catch (a) {
                throw "Missing instance data for this datepicker";
            }
        },
        _optionDatepicker: function(b, c, d) {
            var e, f, h, i, j = this._getInst(b);
            return 2 === arguments.length && "string" == typeof c ? "defaults" === c ? a.extend({}, a.datepicker._defaults) : j ? "all" === c ? a.extend({}, j.settings) : this._get(j, c) : null : (e = c || {}, 
            "string" == typeof c && (e = {}, e[c] = d), j && (this._curInst === j && this._hideDatepicker(), 
            f = this._getDateDatepicker(b, !0), h = this._getMinMaxDate(j, "min"), i = this._getMinMaxDate(j, "max"), 
            g(j.settings, e), null !== h && void 0 !== e.dateFormat && void 0 === e.minDate && (j.settings.minDate = this._formatDate(j, h)), 
            null !== i && void 0 !== e.dateFormat && void 0 === e.maxDate && (j.settings.maxDate = this._formatDate(j, i)), 
            "disabled" in e && (e.disabled ? this._disableDatepicker(b) : this._enableDatepicker(b)), 
            this._attachments(a(b), j), this._autoSize(j), this._setDate(j, f), this._updateAlternate(j), 
            this._updateDatepicker(j)), void 0);
        },
        _changeDatepicker: function(a, b, c) {
            this._optionDatepicker(a, b, c);
        },
        _refreshDatepicker: function(a) {
            var b = this._getInst(a);
            b && this._updateDatepicker(b);
        },
        _setDateDatepicker: function(a, b) {
            var c = this._getInst(a);
            c && (this._setDate(c, b), this._updateDatepicker(c), this._updateAlternate(c));
        },
        _getDateDatepicker: function(a, b) {
            var c = this._getInst(a);
            return c && !c.inline && this._setDateFromField(c, b), c ? this._getDate(c) : null;
        },
        _doKeyDown: function(b) {
            var c, d, e, f = a.datepicker._getInst(b.target), g = !0, h = f.dpDiv.is(".ui-datepicker-rtl");
            if (f._keyEvent = !0, a.datepicker._datepickerShowing) switch (b.keyCode) {
              case 9:
                a.datepicker._hideDatepicker(), g = !1;
                break;

              case 13:
                return e = a("td." + a.datepicker._dayOverClass + ":not(." + a.datepicker._currentClass + ")", f.dpDiv), 
                e[0] && a.datepicker._selectDay(b.target, f.selectedMonth, f.selectedYear, e[0]), 
                c = a.datepicker._get(f, "onSelect"), c ? (d = a.datepicker._formatDate(f), c.apply(f.input ? f.input[0] : null, [ d, f ])) : a.datepicker._hideDatepicker(), 
                !1;

              case 27:
                a.datepicker._hideDatepicker();
                break;

              case 33:
                a.datepicker._adjustDate(b.target, b.ctrlKey ? -a.datepicker._get(f, "stepBigMonths") : -a.datepicker._get(f, "stepMonths"), "M");
                break;

              case 34:
                a.datepicker._adjustDate(b.target, b.ctrlKey ? +a.datepicker._get(f, "stepBigMonths") : +a.datepicker._get(f, "stepMonths"), "M");
                break;

              case 35:
                (b.ctrlKey || b.metaKey) && a.datepicker._clearDate(b.target), g = b.ctrlKey || b.metaKey;
                break;

              case 36:
                (b.ctrlKey || b.metaKey) && a.datepicker._gotoToday(b.target), g = b.ctrlKey || b.metaKey;
                break;

              case 37:
                (b.ctrlKey || b.metaKey) && a.datepicker._adjustDate(b.target, h ? 1 : -1, "D"), 
                g = b.ctrlKey || b.metaKey, b.originalEvent.altKey && a.datepicker._adjustDate(b.target, b.ctrlKey ? -a.datepicker._get(f, "stepBigMonths") : -a.datepicker._get(f, "stepMonths"), "M");
                break;

              case 38:
                (b.ctrlKey || b.metaKey) && a.datepicker._adjustDate(b.target, -7, "D"), g = b.ctrlKey || b.metaKey;
                break;

              case 39:
                (b.ctrlKey || b.metaKey) && a.datepicker._adjustDate(b.target, h ? -1 : 1, "D"), 
                g = b.ctrlKey || b.metaKey, b.originalEvent.altKey && a.datepicker._adjustDate(b.target, b.ctrlKey ? +a.datepicker._get(f, "stepBigMonths") : +a.datepicker._get(f, "stepMonths"), "M");
                break;

              case 40:
                (b.ctrlKey || b.metaKey) && a.datepicker._adjustDate(b.target, 7, "D"), g = b.ctrlKey || b.metaKey;
                break;

              default:
                g = !1;
            } else 36 === b.keyCode && b.ctrlKey ? a.datepicker._showDatepicker(this) : g = !1;
            g && (b.preventDefault(), b.stopPropagation());
        },
        _doKeyPress: function(b) {
            var c, d, e = a.datepicker._getInst(b.target);
            return a.datepicker._get(e, "constrainInput") ? (c = a.datepicker._possibleChars(a.datepicker._get(e, "dateFormat")), 
            d = String.fromCharCode(null == b.charCode ? b.keyCode : b.charCode), b.ctrlKey || b.metaKey || " " > d || !c || c.indexOf(d) > -1) : void 0;
        },
        _doKeyUp: function(b) {
            var c, d = a.datepicker._getInst(b.target);
            if (d.input.val() !== d.lastVal) try {
                c = a.datepicker.parseDate(a.datepicker._get(d, "dateFormat"), d.input ? d.input.val() : null, a.datepicker._getFormatConfig(d)), 
                c && (a.datepicker._setDateFromField(d), a.datepicker._updateAlternate(d), a.datepicker._updateDatepicker(d));
            } catch (a) {}
            return !0;
        },
        _showDatepicker: function(b) {
            if (b = b.target || b, "input" !== b.nodeName.toLowerCase() && (b = a("input", b.parentNode)[0]), 
            !a.datepicker._isDisabledDatepicker(b) && a.datepicker._lastInput !== b) {
                var d, e, f, h, i, j, k;
                d = a.datepicker._getInst(b), a.datepicker._curInst && a.datepicker._curInst !== d && (a.datepicker._curInst.dpDiv.stop(!0, !0), 
                d && a.datepicker._datepickerShowing && a.datepicker._hideDatepicker(a.datepicker._curInst.input[0])), 
                e = a.datepicker._get(d, "beforeShow"), f = e ? e.apply(b, [ b, d ]) : {}, f !== !1 && (g(d.settings, f), 
                d.lastVal = null, a.datepicker._lastInput = b, a.datepicker._setDateFromField(d), 
                a.datepicker._inDialog && (b.value = ""), a.datepicker._pos || (a.datepicker._pos = a.datepicker._findPos(b), 
                a.datepicker._pos[1] += b.offsetHeight), h = !1, a(b).parents().each(function() {
                    return h |= "fixed" === a(this).css("position"), !h;
                }), i = {
                    left: a.datepicker._pos[0],
                    top: a.datepicker._pos[1]
                }, a.datepicker._pos = null, d.dpDiv.empty(), d.dpDiv.css({
                    position: "absolute",
                    display: "block",
                    top: "-1000px"
                }), a.datepicker._updateDatepicker(d), i = a.datepicker._checkOffset(d, i, h), d.dpDiv.css({
                    position: a.datepicker._inDialog && a.blockUI ? "static" : h ? "fixed" : "absolute",
                    display: "none",
                    left: i.left + "px",
                    top: i.top + "px"
                }), d.inline || (j = a.datepicker._get(d, "showAnim"), k = a.datepicker._get(d, "duration"), 
                d.dpDiv.css("z-index", c(a(b)) + 1), a.datepicker._datepickerShowing = !0, a.effects && a.effects.effect[j] ? d.dpDiv.show(j, a.datepicker._get(d, "showOptions"), k) : d.dpDiv[j || "show"](j ? k : null), 
                a.datepicker._shouldFocusInput(d) && d.input.trigger("focus"), a.datepicker._curInst = d));
            }
        },
        _updateDatepicker: function(b) {
            this.maxRows = 4, q = b, b.dpDiv.empty().append(this._generateHTML(b)), this._attachHandlers(b);
            var c, d = this._getNumberOfMonths(b), e = d[1], g = 17, h = b.dpDiv.find("." + this._dayOverClass + " a");
            h.length > 0 && f.apply(h.get(0)), b.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""), 
            e > 1 && b.dpDiv.addClass("ui-datepicker-multi-" + e).css("width", g * e + "em"), 
            b.dpDiv[(1 !== d[0] || 1 !== d[1] ? "add" : "remove") + "Class"]("ui-datepicker-multi"), 
            b.dpDiv[(this._get(b, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"), 
            b === a.datepicker._curInst && a.datepicker._datepickerShowing && a.datepicker._shouldFocusInput(b) && b.input.trigger("focus"), 
            b.yearshtml && (c = b.yearshtml, setTimeout(function() {
                c === b.yearshtml && b.yearshtml && b.dpDiv.find("select.ui-datepicker-year:first").replaceWith(b.yearshtml), 
                c = b.yearshtml = null;
            }, 0));
        },
        _shouldFocusInput: function(a) {
            return a.input && a.input.is(":visible") && !a.input.is(":disabled") && !a.input.is(":focus");
        },
        _checkOffset: function(b, c, d) {
            var e = b.dpDiv.outerWidth(), f = b.dpDiv.outerHeight(), g = b.input ? b.input.outerWidth() : 0, h = b.input ? b.input.outerHeight() : 0, i = document.documentElement.clientWidth + (d ? 0 : a(document).scrollLeft()), j = document.documentElement.clientHeight + (d ? 0 : a(document).scrollTop());
            return c.left -= this._get(b, "isRTL") ? e - g : 0, c.left -= d && c.left === b.input.offset().left ? a(document).scrollLeft() : 0, 
            c.top -= d && c.top === b.input.offset().top + h ? a(document).scrollTop() : 0, 
            c.left -= Math.min(c.left, c.left + e > i && i > e ? Math.abs(c.left + e - i) : 0), 
            c.top -= Math.min(c.top, c.top + f > j && j > f ? Math.abs(f + h) : 0), c;
        },
        _findPos: function(b) {
            for (var c, d = this._getInst(b), e = this._get(d, "isRTL"); b && ("hidden" === b.type || 1 !== b.nodeType || a.expr.filters.hidden(b)); ) b = b[e ? "previousSibling" : "nextSibling"];
            return c = a(b).offset(), [ c.left, c.top ];
        },
        _hideDatepicker: function(b) {
            var c, d, e, f, g = this._curInst;
            !g || b && g !== a.data(b, "datepicker") || this._datepickerShowing && (c = this._get(g, "showAnim"), 
            d = this._get(g, "duration"), e = function() {
                a.datepicker._tidyDialog(g);
            }, a.effects && (a.effects.effect[c] || a.effects[c]) ? g.dpDiv.hide(c, a.datepicker._get(g, "showOptions"), d, e) : g.dpDiv["slideDown" === c ? "slideUp" : "fadeIn" === c ? "fadeOut" : "hide"](c ? d : null, e), 
            c || e(), this._datepickerShowing = !1, f = this._get(g, "onClose"), f && f.apply(g.input ? g.input[0] : null, [ g.input ? g.input.val() : "", g ]), 
            this._lastInput = null, this._inDialog && (this._dialogInput.css({
                position: "absolute",
                left: "0",
                top: "-100px"
            }), a.blockUI && (a.unblockUI(), a("body").append(this.dpDiv))), this._inDialog = !1);
        },
        _tidyDialog: function(a) {
            a.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar");
        },
        _checkExternalClick: function(b) {
            if (a.datepicker._curInst) {
                var c = a(b.target), d = a.datepicker._getInst(c[0]);
                (c[0].id !== a.datepicker._mainDivId && 0 === c.parents("#" + a.datepicker._mainDivId).length && !c.hasClass(a.datepicker.markerClassName) && !c.closest("." + a.datepicker._triggerClass).length && a.datepicker._datepickerShowing && (!a.datepicker._inDialog || !a.blockUI) || c.hasClass(a.datepicker.markerClassName) && a.datepicker._curInst !== d) && a.datepicker._hideDatepicker();
            }
        },
        _adjustDate: function(b, c, d) {
            var e = a(b), f = this._getInst(e[0]);
            this._isDisabledDatepicker(e[0]) || (this._adjustInstDate(f, c + ("M" === d ? this._get(f, "showCurrentAtPos") : 0), d), 
            this._updateDatepicker(f));
        },
        _gotoToday: function(b) {
            var c, d = a(b), e = this._getInst(d[0]);
            this._get(e, "gotoCurrent") && e.currentDay ? (e.selectedDay = e.currentDay, e.drawMonth = e.selectedMonth = e.currentMonth, 
            e.drawYear = e.selectedYear = e.currentYear) : (c = new Date(), e.selectedDay = c.getDate(), 
            e.drawMonth = e.selectedMonth = c.getMonth(), e.drawYear = e.selectedYear = c.getFullYear()), 
            this._notifyChange(e), this._adjustDate(d);
        },
        _selectMonthYear: function(b, c, d) {
            var e = a(b), f = this._getInst(e[0]);
            f["selected" + ("M" === d ? "Month" : "Year")] = f["draw" + ("M" === d ? "Month" : "Year")] = parseInt(c.options[c.selectedIndex].value, 10), 
            this._notifyChange(f), this._adjustDate(e);
        },
        _selectDay: function(b, c, d, e) {
            var f, g = a(b);
            a(e).hasClass(this._unselectableClass) || this._isDisabledDatepicker(g[0]) || (f = this._getInst(g[0]), 
            f.selectedDay = f.currentDay = a("a", e).html(), f.selectedMonth = f.currentMonth = c, 
            f.selectedYear = f.currentYear = d, this._selectDate(b, this._formatDate(f, f.currentDay, f.currentMonth, f.currentYear)));
        },
        _clearDate: function(b) {
            var c = a(b);
            this._selectDate(c, "");
        },
        _selectDate: function(b, c) {
            var d, e = a(b), f = this._getInst(e[0]);
            c = null != c ? c : this._formatDate(f), f.input && f.input.val(c), this._updateAlternate(f), 
            d = this._get(f, "onSelect"), d ? d.apply(f.input ? f.input[0] : null, [ c, f ]) : f.input && f.input.trigger("change"), 
            f.inline ? this._updateDatepicker(f) : (this._hideDatepicker(), this._lastInput = f.input[0], 
            "object" != typeof f.input[0] && f.input.trigger("focus"), this._lastInput = null);
        },
        _updateAlternate: function(b) {
            var c, d, e, f = this._get(b, "altField");
            f && (c = this._get(b, "altFormat") || this._get(b, "dateFormat"), d = this._getDate(b), 
            e = this.formatDate(c, d, this._getFormatConfig(b)), a(f).val(e));
        },
        noWeekends: function(a) {
            var b = a.getDay();
            return [ b > 0 && 6 > b, "" ];
        },
        iso8601Week: function(a) {
            var b, c = new Date(a.getTime());
            return c.setDate(c.getDate() + 4 - (c.getDay() || 7)), b = c.getTime(), c.setMonth(0), 
            c.setDate(1), Math.floor(Math.round((b - c) / 864e5) / 7) + 1;
        },
        parseDate: function(b, c, d) {
            if (null == b || null == c) throw "Invalid arguments";
            if (c = "object" == typeof c ? "" + c : c + "", "" === c) return null;
            var e, f, g, h, i = 0, j = (d ? d.shortYearCutoff : null) || this._defaults.shortYearCutoff, k = "string" != typeof j ? j : new Date().getFullYear() % 100 + parseInt(j, 10), l = (d ? d.dayNamesShort : null) || this._defaults.dayNamesShort, m = (d ? d.dayNames : null) || this._defaults.dayNames, n = (d ? d.monthNamesShort : null) || this._defaults.monthNamesShort, o = (d ? d.monthNames : null) || this._defaults.monthNames, p = -1, q = -1, r = -1, s = -1, t = !1, u = function(a) {
                var c = b.length > e + 1 && b.charAt(e + 1) === a;
                return c && e++, c;
            }, v = function(a) {
                var b = u(a), d = "@" === a ? 14 : "!" === a ? 20 : "y" === a && b ? 4 : "o" === a ? 3 : 2, e = "y" === a ? d : 1, f = RegExp("^\\d{" + e + "," + d + "}"), g = c.substring(i).match(f);
                if (!g) throw "Missing number at position " + i;
                return i += g[0].length, parseInt(g[0], 10);
            }, w = function(b, d, e) {
                var f = -1, g = a.map(u(b) ? e : d, function(a, b) {
                    return [ [ b, a ] ];
                }).sort(function(a, b) {
                    return -(a[1].length - b[1].length);
                });
                if (a.each(g, function(a, b) {
                    var d = b[1];
                    return c.substr(i, d.length).toLowerCase() === d.toLowerCase() ? (f = b[0], i += d.length, 
                    !1) : void 0;
                }), -1 !== f) return f + 1;
                throw "Unknown name at position " + i;
            }, x = function() {
                if (c.charAt(i) !== b.charAt(e)) throw "Unexpected literal at position " + i;
                i++;
            };
            for (e = 0; b.length > e; e++) if (t) "'" !== b.charAt(e) || u("'") ? x() : t = !1; else switch (b.charAt(e)) {
              case "d":
                r = v("d");
                break;

              case "D":
                w("D", l, m);
                break;

              case "o":
                s = v("o");
                break;

              case "m":
                q = v("m");
                break;

              case "M":
                q = w("M", n, o);
                break;

              case "y":
                p = v("y");
                break;

              case "@":
                h = new Date(v("@")), p = h.getFullYear(), q = h.getMonth() + 1, r = h.getDate();
                break;

              case "!":
                h = new Date((v("!") - this._ticksTo1970) / 1e4), p = h.getFullYear(), q = h.getMonth() + 1, 
                r = h.getDate();
                break;

              case "'":
                u("'") ? x() : t = !0;
                break;

              default:
                x();
            }
            if (c.length > i && (g = c.substr(i), !/^\s+/.test(g))) throw "Extra/unparsed characters found in date: " + g;
            if (-1 === p ? p = new Date().getFullYear() : 100 > p && (p += new Date().getFullYear() - new Date().getFullYear() % 100 + (k >= p ? 0 : -100)), 
            s > -1) for (q = 1, r = s; ;) {
                if (f = this._getDaysInMonth(p, q - 1), f >= r) break;
                q++, r -= f;
            }
            if (h = this._daylightSavingAdjust(new Date(p, q - 1, r)), h.getFullYear() !== p || h.getMonth() + 1 !== q || h.getDate() !== r) throw "Invalid date";
            return h;
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: 1e7 * 60 * 60 * 24 * (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)),
        formatDate: function(a, b, c) {
            if (!b) return "";
            var d, e = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort, f = (c ? c.dayNames : null) || this._defaults.dayNames, g = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort, h = (c ? c.monthNames : null) || this._defaults.monthNames, i = function(b) {
                var c = a.length > d + 1 && a.charAt(d + 1) === b;
                return c && d++, c;
            }, j = function(a, b, c) {
                var d = "" + b;
                if (i(a)) for (;c > d.length; ) d = "0" + d;
                return d;
            }, k = function(a, b, c, d) {
                return i(a) ? d[b] : c[b];
            }, l = "", m = !1;
            if (b) for (d = 0; a.length > d; d++) if (m) "'" !== a.charAt(d) || i("'") ? l += a.charAt(d) : m = !1; else switch (a.charAt(d)) {
              case "d":
                l += j("d", b.getDate(), 2);
                break;

              case "D":
                l += k("D", b.getDay(), e, f);
                break;

              case "o":
                l += j("o", Math.round((new Date(b.getFullYear(), b.getMonth(), b.getDate()).getTime() - new Date(b.getFullYear(), 0, 0).getTime()) / 864e5), 3);
                break;

              case "m":
                l += j("m", b.getMonth() + 1, 2);
                break;

              case "M":
                l += k("M", b.getMonth(), g, h);
                break;

              case "y":
                l += i("y") ? b.getFullYear() : (10 > b.getFullYear() % 100 ? "0" : "") + b.getFullYear() % 100;
                break;

              case "@":
                l += b.getTime();
                break;

              case "!":
                l += 1e4 * b.getTime() + this._ticksTo1970;
                break;

              case "'":
                i("'") ? l += "'" : m = !0;
                break;

              default:
                l += a.charAt(d);
            }
            return l;
        },
        _possibleChars: function(a) {
            var b, c = "", d = !1, e = function(c) {
                var d = a.length > b + 1 && a.charAt(b + 1) === c;
                return d && b++, d;
            };
            for (b = 0; a.length > b; b++) if (d) "'" !== a.charAt(b) || e("'") ? c += a.charAt(b) : d = !1; else switch (a.charAt(b)) {
              case "d":
              case "m":
              case "y":
              case "@":
                c += "0123456789";
                break;

              case "D":
              case "M":
                return null;

              case "'":
                e("'") ? c += "'" : d = !0;
                break;

              default:
                c += a.charAt(b);
            }
            return c;
        },
        _get: function(a, b) {
            return void 0 !== a.settings[b] ? a.settings[b] : this._defaults[b];
        },
        _setDateFromField: function(a, b) {
            if (a.input.val() !== a.lastVal) {
                var c = this._get(a, "dateFormat"), d = a.lastVal = a.input ? a.input.val() : null, e = this._getDefaultDate(a), f = e, g = this._getFormatConfig(a);
                try {
                    f = this.parseDate(c, d, g) || e;
                } catch (a) {
                    d = b ? "" : d;
                }
                a.selectedDay = f.getDate(), a.drawMonth = a.selectedMonth = f.getMonth(), a.drawYear = a.selectedYear = f.getFullYear(), 
                a.currentDay = d ? f.getDate() : 0, a.currentMonth = d ? f.getMonth() : 0, a.currentYear = d ? f.getFullYear() : 0, 
                this._adjustInstDate(a);
            }
        },
        _getDefaultDate: function(a) {
            return this._restrictMinMax(a, this._determineDate(a, this._get(a, "defaultDate"), new Date()));
        },
        _determineDate: function(b, c, d) {
            var e = function(a) {
                var b = new Date();
                return b.setDate(b.getDate() + a), b;
            }, f = function(c) {
                try {
                    return a.datepicker.parseDate(a.datepicker._get(b, "dateFormat"), c, a.datepicker._getFormatConfig(b));
                } catch (a) {}
                for (var d = (c.toLowerCase().match(/^c/) ? a.datepicker._getDate(b) : null) || new Date(), e = d.getFullYear(), f = d.getMonth(), g = d.getDate(), h = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, i = h.exec(c); i; ) {
                    switch (i[2] || "d") {
                      case "d":
                      case "D":
                        g += parseInt(i[1], 10);
                        break;

                      case "w":
                      case "W":
                        g += 7 * parseInt(i[1], 10);
                        break;

                      case "m":
                      case "M":
                        f += parseInt(i[1], 10), g = Math.min(g, a.datepicker._getDaysInMonth(e, f));
                        break;

                      case "y":
                      case "Y":
                        e += parseInt(i[1], 10), g = Math.min(g, a.datepicker._getDaysInMonth(e, f));
                    }
                    i = h.exec(c);
                }
                return new Date(e, f, g);
            }, g = null == c || "" === c ? d : "string" == typeof c ? f(c) : "number" == typeof c ? isNaN(c) ? d : e(c) : new Date(c.getTime());
            return g = g && "Invalid Date" == "" + g ? d : g, g && (g.setHours(0), g.setMinutes(0), 
            g.setSeconds(0), g.setMilliseconds(0)), this._daylightSavingAdjust(g);
        },
        _daylightSavingAdjust: function(a) {
            return a ? (a.setHours(a.getHours() > 12 ? a.getHours() + 2 : 0), a) : null;
        },
        _setDate: function(a, b, c) {
            var d = !b, e = a.selectedMonth, f = a.selectedYear, g = this._restrictMinMax(a, this._determineDate(a, b, new Date()));
            a.selectedDay = a.currentDay = g.getDate(), a.drawMonth = a.selectedMonth = a.currentMonth = g.getMonth(), 
            a.drawYear = a.selectedYear = a.currentYear = g.getFullYear(), e === a.selectedMonth && f === a.selectedYear || c || this._notifyChange(a), 
            this._adjustInstDate(a), a.input && a.input.val(d ? "" : this._formatDate(a));
        },
        _getDate: function(a) {
            var b = !a.currentYear || a.input && "" === a.input.val() ? null : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay));
            return b;
        },
        _attachHandlers: function(b) {
            var c = this._get(b, "stepMonths"), d = "#" + b.id.replace(/\\\\/g, "\\");
            b.dpDiv.find("[data-handler]").map(function() {
                var b = {
                    prev: function() {
                        a.datepicker._adjustDate(d, -c, "M");
                    },
                    next: function() {
                        a.datepicker._adjustDate(d, +c, "M");
                    },
                    hide: function() {
                        a.datepicker._hideDatepicker();
                    },
                    today: function() {
                        a.datepicker._gotoToday(d);
                    },
                    selectDay: function() {
                        return a.datepicker._selectDay(d, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this), 
                        !1;
                    },
                    selectMonth: function() {
                        return a.datepicker._selectMonthYear(d, this, "M"), !1;
                    },
                    selectYear: function() {
                        return a.datepicker._selectMonthYear(d, this, "Y"), !1;
                    }
                };
                a(this).on(this.getAttribute("data-event"), b[this.getAttribute("data-handler")]);
            });
        },
        _generateHTML: function(a) {
            var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O = new Date(), P = this._daylightSavingAdjust(new Date(O.getFullYear(), O.getMonth(), O.getDate())), Q = this._get(a, "isRTL"), R = this._get(a, "showButtonPanel"), S = this._get(a, "hideIfNoPrevNext"), T = this._get(a, "navigationAsDateFormat"), U = this._getNumberOfMonths(a), V = this._get(a, "showCurrentAtPos"), W = this._get(a, "stepMonths"), X = 1 !== U[0] || 1 !== U[1], Y = this._daylightSavingAdjust(a.currentDay ? new Date(a.currentYear, a.currentMonth, a.currentDay) : new Date(9999, 9, 9)), Z = this._getMinMaxDate(a, "min"), $ = this._getMinMaxDate(a, "max"), _ = a.drawMonth - V, aa = a.drawYear;
            if (0 > _ && (_ += 12, aa--), $) for (b = this._daylightSavingAdjust(new Date($.getFullYear(), $.getMonth() - U[0] * U[1] + 1, $.getDate())), 
            b = Z && Z > b ? Z : b; this._daylightSavingAdjust(new Date(aa, _, 1)) > b; ) _--, 
            0 > _ && (_ = 11, aa--);
            for (a.drawMonth = _, a.drawYear = aa, c = this._get(a, "prevText"), c = T ? this.formatDate(c, this._daylightSavingAdjust(new Date(aa, _ - W, 1)), this._getFormatConfig(a)) : c, 
            d = this._canAdjustMonth(a, -1, aa, _) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" + c + "'><span class='ui-icon ui-icon-circle-triangle-" + (Q ? "e" : "w") + "'>" + c + "</span></a>" : S ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + c + "'><span class='ui-icon ui-icon-circle-triangle-" + (Q ? "e" : "w") + "'>" + c + "</span></a>", 
            e = this._get(a, "nextText"), e = T ? this.formatDate(e, this._daylightSavingAdjust(new Date(aa, _ + W, 1)), this._getFormatConfig(a)) : e, 
            f = this._canAdjustMonth(a, 1, aa, _) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" + e + "'><span class='ui-icon ui-icon-circle-triangle-" + (Q ? "w" : "e") + "'>" + e + "</span></a>" : S ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + e + "'><span class='ui-icon ui-icon-circle-triangle-" + (Q ? "w" : "e") + "'>" + e + "</span></a>", 
            g = this._get(a, "currentText"), h = this._get(a, "gotoCurrent") && a.currentDay ? Y : P, 
            g = T ? this.formatDate(g, h, this._getFormatConfig(a)) : g, i = a.inline ? "" : "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(a, "closeText") + "</button>", 
            j = R ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (Q ? i : "") + (this._isInRange(a, h) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" + g + "</button>" : "") + (Q ? "" : i) + "</div>" : "", 
            k = parseInt(this._get(a, "firstDay"), 10), k = isNaN(k) ? 0 : k, l = this._get(a, "showWeek"), 
            m = this._get(a, "dayNames"), n = this._get(a, "dayNamesMin"), o = this._get(a, "monthNames"), 
            p = this._get(a, "monthNamesShort"), q = this._get(a, "beforeShowDay"), r = this._get(a, "showOtherMonths"), 
            s = this._get(a, "selectOtherMonths"), t = this._getDefaultDate(a), u = "", w = 0; U[0] > w; w++) {
                for (x = "", this.maxRows = 4, y = 0; U[1] > y; y++) {
                    if (z = this._daylightSavingAdjust(new Date(aa, _, a.selectedDay)), A = " ui-corner-all", 
                    B = "", X) {
                        if (B += "<div class='ui-datepicker-group", U[1] > 1) switch (y) {
                          case 0:
                            B += " ui-datepicker-group-first", A = " ui-corner-" + (Q ? "right" : "left");
                            break;

                          case U[1] - 1:
                            B += " ui-datepicker-group-last", A = " ui-corner-" + (Q ? "left" : "right");
                            break;

                          default:
                            B += " ui-datepicker-group-middle", A = "";
                        }
                        B += "'>";
                    }
                    for (B += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + A + "'>" + (/all|left/.test(A) && 0 === w ? Q ? f : d : "") + (/all|right/.test(A) && 0 === w ? Q ? d : f : "") + this._generateMonthYearHeader(a, _, aa, Z, $, w > 0 || y > 0, o, p) + "</div><table class='ui-datepicker-calendar'><thead>" + "<tr>", 
                    C = l ? "<th class='ui-datepicker-week-col'>" + this._get(a, "weekHeader") + "</th>" : "", 
                    v = 0; 7 > v; v++) D = (v + k) % 7, C += "<th scope='col'" + ((v + k + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + ">" + "<span title='" + m[D] + "'>" + n[D] + "</span></th>";
                    for (B += C + "</tr></thead><tbody>", E = this._getDaysInMonth(aa, _), aa === a.selectedYear && _ === a.selectedMonth && (a.selectedDay = Math.min(a.selectedDay, E)), 
                    F = (this._getFirstDayOfMonth(aa, _) - k + 7) % 7, G = Math.ceil((F + E) / 7), H = X ? this.maxRows > G ? this.maxRows : G : G, 
                    this.maxRows = H, I = this._daylightSavingAdjust(new Date(aa, _, 1 - F)), J = 0; H > J; J++) {
                        for (B += "<tr>", K = l ? "<td class='ui-datepicker-week-col'>" + this._get(a, "calculateWeek")(I) + "</td>" : "", 
                        v = 0; 7 > v; v++) L = q ? q.apply(a.input ? a.input[0] : null, [ I ]) : [ !0, "" ], 
                        M = I.getMonth() !== _, N = M && !s || !L[0] || Z && Z > I || $ && I > $, K += "<td class='" + ((v + k + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (M ? " ui-datepicker-other-month" : "") + (I.getTime() === z.getTime() && _ === a.selectedMonth && a._keyEvent || t.getTime() === I.getTime() && t.getTime() === z.getTime() ? " " + this._dayOverClass : "") + (N ? " " + this._unselectableClass + " ui-state-disabled" : "") + (M && !r ? "" : " " + L[1] + (I.getTime() === Y.getTime() ? " " + this._currentClass : "") + (I.getTime() === P.getTime() ? " ui-datepicker-today" : "")) + "'" + (M && !r || !L[2] ? "" : " title='" + L[2].replace(/'/g, "&#39;") + "'") + (N ? "" : " data-handler='selectDay' data-event='click' data-month='" + I.getMonth() + "' data-year='" + I.getFullYear() + "'") + ">" + (M && !r ? "&#xa0;" : N ? "<span class='ui-state-default'>" + I.getDate() + "</span>" : "<a class='ui-state-default" + (I.getTime() === P.getTime() ? " ui-state-highlight" : "") + (I.getTime() === Y.getTime() ? " ui-state-active" : "") + (M ? " ui-priority-secondary" : "") + "' href='#'>" + I.getDate() + "</a>") + "</td>", 
                        I.setDate(I.getDate() + 1), I = this._daylightSavingAdjust(I);
                        B += K + "</tr>";
                    }
                    _++, _ > 11 && (_ = 0, aa++), B += "</tbody></table>" + (X ? "</div>" + (U[0] > 0 && y === U[1] - 1 ? "<div class='ui-datepicker-row-break'></div>" : "") : ""), 
                    x += B;
                }
                u += x;
            }
            return u += j, a._keyEvent = !1, u;
        },
        _generateMonthYearHeader: function(a, b, c, d, e, f, g, h) {
            var i, j, k, l, m, n, o, p, q = this._get(a, "changeMonth"), r = this._get(a, "changeYear"), s = this._get(a, "showMonthAfterYear"), t = "<div class='ui-datepicker-title'>", u = "";
            if (f || !q) u += "<span class='ui-datepicker-month'>" + g[b] + "</span>"; else {
                for (i = d && d.getFullYear() === c, j = e && e.getFullYear() === c, u += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>", 
                k = 0; 12 > k; k++) (!i || k >= d.getMonth()) && (!j || e.getMonth() >= k) && (u += "<option value='" + k + "'" + (k === b ? " selected='selected'" : "") + ">" + h[k] + "</option>");
                u += "</select>";
            }
            if (s || (t += u + (!f && q && r ? "" : "&#xa0;")), !a.yearshtml) if (a.yearshtml = "", 
            f || !r) t += "<span class='ui-datepicker-year'>" + c + "</span>"; else {
                for (l = this._get(a, "yearRange").split(":"), m = new Date().getFullYear(), n = function(a) {
                    var b = a.match(/c[+\-].*/) ? c + parseInt(a.substring(1), 10) : a.match(/[+\-].*/) ? m + parseInt(a, 10) : parseInt(a, 10);
                    return isNaN(b) ? m : b;
                }, o = n(l[0]), p = Math.max(o, n(l[1] || "")), o = d ? Math.max(o, d.getFullYear()) : o, 
                p = e ? Math.min(p, e.getFullYear()) : p, a.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>"; p >= o; o++) a.yearshtml += "<option value='" + o + "'" + (o === c ? " selected='selected'" : "") + ">" + o + "</option>";
                a.yearshtml += "</select>", t += a.yearshtml, a.yearshtml = null;
            }
            return t += this._get(a, "yearSuffix"), s && (t += (!f && q && r ? "" : "&#xa0;") + u), 
            t += "</div>";
        },
        _adjustInstDate: function(a, b, c) {
            var d = a.selectedYear + ("Y" === c ? b : 0), e = a.selectedMonth + ("M" === c ? b : 0), f = Math.min(a.selectedDay, this._getDaysInMonth(d, e)) + ("D" === c ? b : 0), g = this._restrictMinMax(a, this._daylightSavingAdjust(new Date(d, e, f)));
            a.selectedDay = g.getDate(), a.drawMonth = a.selectedMonth = g.getMonth(), a.drawYear = a.selectedYear = g.getFullYear(), 
            ("M" === c || "Y" === c) && this._notifyChange(a);
        },
        _restrictMinMax: function(a, b) {
            var c = this._getMinMaxDate(a, "min"), d = this._getMinMaxDate(a, "max"), e = c && c > b ? c : b;
            return d && e > d ? d : e;
        },
        _notifyChange: function(a) {
            var b = this._get(a, "onChangeMonthYear");
            b && b.apply(a.input ? a.input[0] : null, [ a.selectedYear, a.selectedMonth + 1, a ]);
        },
        _getNumberOfMonths: function(a) {
            var b = this._get(a, "numberOfMonths");
            return null == b ? [ 1, 1 ] : "number" == typeof b ? [ 1, b ] : b;
        },
        _getMinMaxDate: function(a, b) {
            return this._determineDate(a, this._get(a, b + "Date"), null);
        },
        _getDaysInMonth: function(a, b) {
            return 32 - this._daylightSavingAdjust(new Date(a, b, 32)).getDate();
        },
        _getFirstDayOfMonth: function(a, b) {
            return new Date(a, b, 1).getDay();
        },
        _canAdjustMonth: function(a, b, c, d) {
            var e = this._getNumberOfMonths(a), f = this._daylightSavingAdjust(new Date(c, d + (0 > b ? b : e[0] * e[1]), 1));
            return 0 > b && f.setDate(this._getDaysInMonth(f.getFullYear(), f.getMonth())), 
            this._isInRange(a, f);
        },
        _isInRange: function(a, b) {
            var c, d, e = this._getMinMaxDate(a, "min"), f = this._getMinMaxDate(a, "max"), g = null, h = null, i = this._get(a, "yearRange");
            return i && (c = i.split(":"), d = new Date().getFullYear(), g = parseInt(c[0], 10), 
            h = parseInt(c[1], 10), c[0].match(/[+\-].*/) && (g += d), c[1].match(/[+\-].*/) && (h += d)), 
            (!e || b.getTime() >= e.getTime()) && (!f || b.getTime() <= f.getTime()) && (!g || b.getFullYear() >= g) && (!h || h >= b.getFullYear());
        },
        _getFormatConfig: function(a) {
            var b = this._get(a, "shortYearCutoff");
            return b = "string" != typeof b ? b : new Date().getFullYear() % 100 + parseInt(b, 10), 
            {
                shortYearCutoff: b,
                dayNamesShort: this._get(a, "dayNamesShort"),
                dayNames: this._get(a, "dayNames"),
                monthNamesShort: this._get(a, "monthNamesShort"),
                monthNames: this._get(a, "monthNames")
            };
        },
        _formatDate: function(a, b, c, d) {
            b || (a.currentDay = a.selectedDay, a.currentMonth = a.selectedMonth, a.currentYear = a.selectedYear);
            var e = b ? "object" == typeof b ? b : this._daylightSavingAdjust(new Date(d, c, b)) : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay));
            return this.formatDate(this._get(a, "dateFormat"), e, this._getFormatConfig(a));
        }
    }), a.fn.datepicker = function(b) {
        if (!this.length) return this;
        a.datepicker.initialized || (a(document).on("mousedown", a.datepicker._checkExternalClick), 
        a.datepicker.initialized = !0), 0 === a("#" + a.datepicker._mainDivId).length && a("body").append(a.datepicker.dpDiv);
        var c = Array.prototype.slice.call(arguments, 1);
        return "string" != typeof b || "isDisabled" !== b && "getDate" !== b && "widget" !== b ? "option" === b && 2 === arguments.length && "string" == typeof arguments[1] ? a.datepicker["_" + b + "Datepicker"].apply(a.datepicker, [ this[0] ].concat(c)) : this.each(function() {
            "string" == typeof b ? a.datepicker["_" + b + "Datepicker"].apply(a.datepicker, [ this ].concat(c)) : a.datepicker._attachDatepicker(this, b);
        }) : a.datepicker["_" + b + "Datepicker"].apply(a.datepicker, [ this[0] ].concat(c));
    }, a.datepicker = new d(), a.datepicker.initialized = !1, a.datepicker.uuid = new Date().getTime(), 
    a.datepicker.version = "1.12.1", a.datepicker, a.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());
    var r = !1;
    a(document).on("mouseup", function() {
        r = !1;
    }), a.widget("ui.mouse", {
        version: "1.12.1",
        options: {
            cancel: "input, textarea, button, select, option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var b = this;
            this.element.on("mousedown." + this.widgetName, function(a) {
                return b._mouseDown(a);
            }).on("click." + this.widgetName, function(c) {
                return !0 === a.data(c.target, b.widgetName + ".preventClickEvent") ? (a.removeData(c.target, b.widgetName + ".preventClickEvent"), 
                c.stopImmediatePropagation(), !1) : void 0;
            }), this.started = !1;
        },
        _mouseDestroy: function() {
            this.element.off("." + this.widgetName), this._mouseMoveDelegate && this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate);
        },
        _mouseDown: function(b) {
            if (!r) {
                this._mouseMoved = !1, this._mouseStarted && this._mouseUp(b), this._mouseDownEvent = b;
                var c = this, d = 1 === b.which, e = "string" == typeof this.options.cancel && b.target.nodeName ? a(b.target).closest(this.options.cancel).length : !1;
                return d && !e && this._mouseCapture(b) ? (this.mouseDelayMet = !this.options.delay, 
                this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
                    c.mouseDelayMet = !0;
                }, this.options.delay)), this._mouseDistanceMet(b) && this._mouseDelayMet(b) && (this._mouseStarted = this._mouseStart(b) !== !1, 
                !this._mouseStarted) ? (b.preventDefault(), !0) : (!0 === a.data(b.target, this.widgetName + ".preventClickEvent") && a.removeData(b.target, this.widgetName + ".preventClickEvent"), 
                this._mouseMoveDelegate = function(a) {
                    return c._mouseMove(a);
                }, this._mouseUpDelegate = function(a) {
                    return c._mouseUp(a);
                }, this.document.on("mousemove." + this.widgetName, this._mouseMoveDelegate).on("mouseup." + this.widgetName, this._mouseUpDelegate), 
                b.preventDefault(), r = !0, !0)) : !0;
            }
        },
        _mouseMove: function(b) {
            if (this._mouseMoved) {
                if (a.ui.ie && (!document.documentMode || 9 > document.documentMode) && !b.button) return this._mouseUp(b);
                if (!b.which) if (b.originalEvent.altKey || b.originalEvent.ctrlKey || b.originalEvent.metaKey || b.originalEvent.shiftKey) this.ignoreMissingWhich = !0; else if (!this.ignoreMissingWhich) return this._mouseUp(b);
            }
            return (b.which || b.button) && (this._mouseMoved = !0), this._mouseStarted ? (this._mouseDrag(b), 
            b.preventDefault()) : (this._mouseDistanceMet(b) && this._mouseDelayMet(b) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, b) !== !1, 
            this._mouseStarted ? this._mouseDrag(b) : this._mouseUp(b)), !this._mouseStarted);
        },
        _mouseUp: function(b) {
            this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate), 
            this._mouseStarted && (this._mouseStarted = !1, b.target === this._mouseDownEvent.target && a.data(b.target, this.widgetName + ".preventClickEvent", !0), 
            this._mouseStop(b)), this._mouseDelayTimer && (clearTimeout(this._mouseDelayTimer), 
            delete this._mouseDelayTimer), this.ignoreMissingWhich = !1, r = !1, b.preventDefault();
        },
        _mouseDistanceMet: function(a) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - a.pageX), Math.abs(this._mouseDownEvent.pageY - a.pageY)) >= this.options.distance;
        },
        _mouseDelayMet: function() {
            return this.mouseDelayMet;
        },
        _mouseStart: function() {},
        _mouseDrag: function() {},
        _mouseStop: function() {},
        _mouseCapture: function() {
            return !0;
        }
    }), a.ui.plugin = {
        add: function(b, c, d) {
            var e, f = a.ui[b].prototype;
            for (e in d) f.plugins[e] = f.plugins[e] || [], f.plugins[e].push([ c, d[e] ]);
        },
        call: function(a, b, c, d) {
            var e, f = a.plugins[b];
            if (f && (d || a.element[0].parentNode && 11 !== a.element[0].parentNode.nodeType)) for (e = 0; f.length > e; e++) a.options[f[e][0]] && f[e][1].apply(a.element, c);
        }
    }, a.ui.safeBlur = function(b) {
        b && "body" !== b.nodeName.toLowerCase() && a(b).trigger("blur");
    }, a.widget("ui.draggable", a.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "drag",
        options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1,
            drag: null,
            start: null,
            stop: null
        },
        _create: function() {
            "original" === this.options.helper && this._setPositionRelative(), this.options.addClasses && this._addClass("ui-draggable"), 
            this._setHandleClassName(), this._mouseInit();
        },
        _setOption: function(a, b) {
            this._super(a, b), "handle" === a && (this._removeHandleClassName(), this._setHandleClassName());
        },
        _destroy: function() {
            return (this.helper || this.element).is(".ui-draggable-dragging") ? (this.destroyOnClear = !0, 
            void 0) : (this._removeHandleClassName(), this._mouseDestroy(), void 0);
        },
        _mouseCapture: function(b) {
            var c = this.options;
            return this.helper || c.disabled || a(b.target).closest(".ui-resizable-handle").length > 0 ? !1 : (this.handle = this._getHandle(b), 
            this.handle ? (this._blurActiveElement(b), this._blockFrames(c.iframeFix === !0 ? "iframe" : c.iframeFix), 
            !0) : !1);
        },
        _blockFrames: function(b) {
            this.iframeBlocks = this.document.find(b).map(function() {
                var b = a(this);
                return a("<div>").css("position", "absolute").appendTo(b.parent()).outerWidth(b.outerWidth()).outerHeight(b.outerHeight()).offset(b.offset())[0];
            });
        },
        _unblockFrames: function() {
            this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);
        },
        _blurActiveElement: function(b) {
            var c = a.ui.safeActiveElement(this.document[0]), d = a(b.target);
            d.closest(c).length || a.ui.safeBlur(c);
        },
        _mouseStart: function(b) {
            var c = this.options;
            return this.helper = this._createHelper(b), this._addClass(this.helper, "ui-draggable-dragging"), 
            this._cacheHelperProportions(), a.ui.ddmanager && (a.ui.ddmanager.current = this), 
            this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(!0), 
            this.offsetParent = this.helper.offsetParent(), this.hasFixedAncestor = this.helper.parents().filter(function() {
                return "fixed" === a(this).css("position");
            }).length > 0, this.positionAbs = this.element.offset(), this._refreshOffsets(b), 
            this.originalPosition = this.position = this._generatePosition(b, !1), this.originalPageX = b.pageX, 
            this.originalPageY = b.pageY, c.cursorAt && this._adjustOffsetFromHelper(c.cursorAt), 
            this._setContainment(), this._trigger("start", b) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), 
            a.ui.ddmanager && !c.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b), this._mouseDrag(b, !0), 
            a.ui.ddmanager && a.ui.ddmanager.dragStart(this, b), !0);
        },
        _refreshOffsets: function(a) {
            this.offset = {
                top: this.positionAbs.top - this.margins.top,
                left: this.positionAbs.left - this.margins.left,
                scroll: !1,
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }, this.offset.click = {
                left: a.pageX - this.offset.left,
                top: a.pageY - this.offset.top
            };
        },
        _mouseDrag: function(b, c) {
            if (this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(b, !0), 
            this.positionAbs = this._convertPositionTo("absolute"), !c) {
                var d = this._uiHash();
                if (this._trigger("drag", b, d) === !1) return this._mouseUp(new a.Event("mouseup", b)), 
                !1;
                this.position = d.position;
            }
            return this.helper[0].style.left = this.position.left + "px", this.helper[0].style.top = this.position.top + "px", 
            a.ui.ddmanager && a.ui.ddmanager.drag(this, b), !1;
        },
        _mouseStop: function(b) {
            var c = this, d = !1;
            return a.ui.ddmanager && !this.options.dropBehaviour && (d = a.ui.ddmanager.drop(this, b)), 
            this.dropped && (d = this.dropped, this.dropped = !1), "invalid" === this.options.revert && !d || "valid" === this.options.revert && d || this.options.revert === !0 || a.isFunction(this.options.revert) && this.options.revert.call(this.element, d) ? a(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                c._trigger("stop", b) !== !1 && c._clear();
            }) : this._trigger("stop", b) !== !1 && this._clear(), !1;
        },
        _mouseUp: function(b) {
            return this._unblockFrames(), a.ui.ddmanager && a.ui.ddmanager.dragStop(this, b), 
            this.handleElement.is(b.target) && this.element.trigger("focus"), a.ui.mouse.prototype._mouseUp.call(this, b);
        },
        cancel: function() {
            return this.helper.is(".ui-draggable-dragging") ? this._mouseUp(new a.Event("mouseup", {
                target: this.element[0]
            })) : this._clear(), this;
        },
        _getHandle: function(b) {
            return this.options.handle ? !!a(b.target).closest(this.element.find(this.options.handle)).length : !0;
        },
        _setHandleClassName: function() {
            this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element, 
            this._addClass(this.handleElement, "ui-draggable-handle");
        },
        _removeHandleClassName: function() {
            this._removeClass(this.handleElement, "ui-draggable-handle");
        },
        _createHelper: function(b) {
            var c = this.options, d = a.isFunction(c.helper), e = d ? a(c.helper.apply(this.element[0], [ b ])) : "clone" === c.helper ? this.element.clone().removeAttr("id") : this.element;
            return e.parents("body").length || e.appendTo("parent" === c.appendTo ? this.element[0].parentNode : c.appendTo), 
            d && e[0] === this.element[0] && this._setPositionRelative(), e[0] === this.element[0] || /(fixed|absolute)/.test(e.css("position")) || e.css("position", "absolute"), 
            e;
        },
        _setPositionRelative: function() {
            /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative");
        },
        _adjustOffsetFromHelper: function(b) {
            "string" == typeof b && (b = b.split(" ")), a.isArray(b) && (b = {
                left: +b[0],
                top: +b[1] || 0
            }), "left" in b && (this.offset.click.left = b.left + this.margins.left), "right" in b && (this.offset.click.left = this.helperProportions.width - b.right + this.margins.left), 
            "top" in b && (this.offset.click.top = b.top + this.margins.top), "bottom" in b && (this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top);
        },
        _isRootNode: function(a) {
            return /(html|body)/i.test(a.tagName) || a === this.document[0];
        },
        _getParentOffset: function() {
            var b = this.offsetParent.offset(), c = this.document[0];
            return "absolute" === this.cssPosition && this.scrollParent[0] !== c && a.contains(this.scrollParent[0], this.offsetParent[0]) && (b.left += this.scrollParent.scrollLeft(), 
            b.top += this.scrollParent.scrollTop()), this._isRootNode(this.offsetParent[0]) && (b = {
                top: 0,
                left: 0
            }), {
                top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            };
        },
        _getRelativeOffset: function() {
            if ("relative" !== this.cssPosition) return {
                top: 0,
                left: 0
            };
            var a = this.element.position(), b = this._isRootNode(this.scrollParent[0]);
            return {
                top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + (b ? 0 : this.scrollParent.scrollTop()),
                left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + (b ? 0 : this.scrollParent.scrollLeft())
            };
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0,
                right: parseInt(this.element.css("marginRight"), 10) || 0,
                bottom: parseInt(this.element.css("marginBottom"), 10) || 0
            };
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            };
        },
        _setContainment: function() {
            var b, c, d, e = this.options, f = this.document[0];
            return this.relativeContainer = null, e.containment ? "window" === e.containment ? (this.containment = [ a(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, a(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, a(window).scrollLeft() + a(window).width() - this.helperProportions.width - this.margins.left, a(window).scrollTop() + (a(window).height() || f.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top ], 
            void 0) : "document" === e.containment ? (this.containment = [ 0, 0, a(f).width() - this.helperProportions.width - this.margins.left, (a(f).height() || f.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top ], 
            void 0) : e.containment.constructor === Array ? (this.containment = e.containment, 
            void 0) : ("parent" === e.containment && (e.containment = this.helper[0].parentNode), 
            c = a(e.containment), d = c[0], d && (b = /(scroll|auto)/.test(c.css("overflow")), 
            this.containment = [ (parseInt(c.css("borderLeftWidth"), 10) || 0) + (parseInt(c.css("paddingLeft"), 10) || 0), (parseInt(c.css("borderTopWidth"), 10) || 0) + (parseInt(c.css("paddingTop"), 10) || 0), (b ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(c.css("borderRightWidth"), 10) || 0) - (parseInt(c.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (b ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(c.css("borderBottomWidth"), 10) || 0) - (parseInt(c.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom ], 
            this.relativeContainer = c), void 0) : (this.containment = null, void 0);
        },
        _convertPositionTo: function(a, b) {
            b || (b = this.position);
            var c = "absolute" === a ? 1 : -1, d = this._isRootNode(this.scrollParent[0]);
            return {
                top: b.top + this.offset.relative.top * c + this.offset.parent.top * c - ("fixed" === this.cssPosition ? -this.offset.scroll.top : d ? 0 : this.offset.scroll.top) * c,
                left: b.left + this.offset.relative.left * c + this.offset.parent.left * c - ("fixed" === this.cssPosition ? -this.offset.scroll.left : d ? 0 : this.offset.scroll.left) * c
            };
        },
        _generatePosition: function(a, b) {
            var c, d, e, f, g = this.options, h = this._isRootNode(this.scrollParent[0]), i = a.pageX, j = a.pageY;
            return h && this.offset.scroll || (this.offset.scroll = {
                top: this.scrollParent.scrollTop(),
                left: this.scrollParent.scrollLeft()
            }), b && (this.containment && (this.relativeContainer ? (d = this.relativeContainer.offset(), 
            c = [ this.containment[0] + d.left, this.containment[1] + d.top, this.containment[2] + d.left, this.containment[3] + d.top ]) : c = this.containment, 
            a.pageX - this.offset.click.left < c[0] && (i = c[0] + this.offset.click.left), 
            a.pageY - this.offset.click.top < c[1] && (j = c[1] + this.offset.click.top), a.pageX - this.offset.click.left > c[2] && (i = c[2] + this.offset.click.left), 
            a.pageY - this.offset.click.top > c[3] && (j = c[3] + this.offset.click.top)), g.grid && (e = g.grid[1] ? this.originalPageY + Math.round((j - this.originalPageY) / g.grid[1]) * g.grid[1] : this.originalPageY, 
            j = c ? e - this.offset.click.top >= c[1] || e - this.offset.click.top > c[3] ? e : e - this.offset.click.top >= c[1] ? e - g.grid[1] : e + g.grid[1] : e, 
            f = g.grid[0] ? this.originalPageX + Math.round((i - this.originalPageX) / g.grid[0]) * g.grid[0] : this.originalPageX, 
            i = c ? f - this.offset.click.left >= c[0] || f - this.offset.click.left > c[2] ? f : f - this.offset.click.left >= c[0] ? f - g.grid[0] : f + g.grid[0] : f), 
            "y" === g.axis && (i = this.originalPageX), "x" === g.axis && (j = this.originalPageY)), 
            {
                top: j - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.offset.scroll.top : h ? 0 : this.offset.scroll.top),
                left: i - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.offset.scroll.left : h ? 0 : this.offset.scroll.left)
            };
        },
        _clear: function() {
            this._removeClass(this.helper, "ui-draggable-dragging"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), 
            this.helper = null, this.cancelHelperRemoval = !1, this.destroyOnClear && this.destroy();
        },
        _trigger: function(b, c, d) {
            return d = d || this._uiHash(), a.ui.plugin.call(this, b, [ c, d, this ], !0), /^(drag|start|stop)/.test(b) && (this.positionAbs = this._convertPositionTo("absolute"), 
            d.offset = this.positionAbs), a.Widget.prototype._trigger.call(this, b, c, d);
        },
        plugins: {},
        _uiHash: function() {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            };
        }
    }), a.ui.plugin.add("draggable", "connectToSortable", {
        start: function(b, c, d) {
            var e = a.extend({}, c, {
                item: d.element
            });
            d.sortables = [], a(d.options.connectToSortable).each(function() {
                var c = a(this).sortable("instance");
                c && !c.options.disabled && (d.sortables.push(c), c.refreshPositions(), c._trigger("activate", b, e));
            });
        },
        stop: function(b, c, d) {
            var e = a.extend({}, c, {
                item: d.element
            });
            d.cancelHelperRemoval = !1, a.each(d.sortables, function() {
                var a = this;
                a.isOver ? (a.isOver = 0, d.cancelHelperRemoval = !0, a.cancelHelperRemoval = !1, 
                a._storedCSS = {
                    position: a.placeholder.css("position"),
                    top: a.placeholder.css("top"),
                    left: a.placeholder.css("left")
                }, a._mouseStop(b), a.options.helper = a.options._helper) : (a.cancelHelperRemoval = !0, 
                a._trigger("deactivate", b, e));
            });
        },
        drag: function(b, c, d) {
            a.each(d.sortables, function() {
                var e = !1, f = this;
                f.positionAbs = d.positionAbs, f.helperProportions = d.helperProportions, f.offset.click = d.offset.click, 
                f._intersectsWith(f.containerCache) && (e = !0, a.each(d.sortables, function() {
                    return this.positionAbs = d.positionAbs, this.helperProportions = d.helperProportions, 
                    this.offset.click = d.offset.click, this !== f && this._intersectsWith(this.containerCache) && a.contains(f.element[0], this.element[0]) && (e = !1), 
                    e;
                })), e ? (f.isOver || (f.isOver = 1, d._parent = c.helper.parent(), f.currentItem = c.helper.appendTo(f.element).data("ui-sortable-item", !0), 
                f.options._helper = f.options.helper, f.options.helper = function() {
                    return c.helper[0];
                }, b.target = f.currentItem[0], f._mouseCapture(b, !0), f._mouseStart(b, !0, !0), 
                f.offset.click.top = d.offset.click.top, f.offset.click.left = d.offset.click.left, 
                f.offset.parent.left -= d.offset.parent.left - f.offset.parent.left, f.offset.parent.top -= d.offset.parent.top - f.offset.parent.top, 
                d._trigger("toSortable", b), d.dropped = f.element, a.each(d.sortables, function() {
                    this.refreshPositions();
                }), d.currentItem = d.element, f.fromOutside = d), f.currentItem && (f._mouseDrag(b), 
                c.position = f.position)) : f.isOver && (f.isOver = 0, f.cancelHelperRemoval = !0, 
                f.options._revert = f.options.revert, f.options.revert = !1, f._trigger("out", b, f._uiHash(f)), 
                f._mouseStop(b, !0), f.options.revert = f.options._revert, f.options.helper = f.options._helper, 
                f.placeholder && f.placeholder.remove(), c.helper.appendTo(d._parent), d._refreshOffsets(b), 
                c.position = d._generatePosition(b, !0), d._trigger("fromSortable", b), d.dropped = !1, 
                a.each(d.sortables, function() {
                    this.refreshPositions();
                }));
            });
        }
    }), a.ui.plugin.add("draggable", "cursor", {
        start: function(b, c, d) {
            var e = a("body"), f = d.options;
            e.css("cursor") && (f._cursor = e.css("cursor")), e.css("cursor", f.cursor);
        },
        stop: function(b, c, d) {
            var e = d.options;
            e._cursor && a("body").css("cursor", e._cursor);
        }
    }), a.ui.plugin.add("draggable", "opacity", {
        start: function(b, c, d) {
            var e = a(c.helper), f = d.options;
            e.css("opacity") && (f._opacity = e.css("opacity")), e.css("opacity", f.opacity);
        },
        stop: function(b, c, d) {
            var e = d.options;
            e._opacity && a(c.helper).css("opacity", e._opacity);
        }
    }), a.ui.plugin.add("draggable", "scroll", {
        start: function(a, b, c) {
            c.scrollParentNotHidden || (c.scrollParentNotHidden = c.helper.scrollParent(!1)), 
            c.scrollParentNotHidden[0] !== c.document[0] && "HTML" !== c.scrollParentNotHidden[0].tagName && (c.overflowOffset = c.scrollParentNotHidden.offset());
        },
        drag: function(b, c, d) {
            var e = d.options, f = !1, g = d.scrollParentNotHidden[0], h = d.document[0];
            g !== h && "HTML" !== g.tagName ? (e.axis && "x" === e.axis || (d.overflowOffset.top + g.offsetHeight - b.pageY < e.scrollSensitivity ? g.scrollTop = f = g.scrollTop + e.scrollSpeed : b.pageY - d.overflowOffset.top < e.scrollSensitivity && (g.scrollTop = f = g.scrollTop - e.scrollSpeed)), 
            e.axis && "y" === e.axis || (d.overflowOffset.left + g.offsetWidth - b.pageX < e.scrollSensitivity ? g.scrollLeft = f = g.scrollLeft + e.scrollSpeed : b.pageX - d.overflowOffset.left < e.scrollSensitivity && (g.scrollLeft = f = g.scrollLeft - e.scrollSpeed))) : (e.axis && "x" === e.axis || (b.pageY - a(h).scrollTop() < e.scrollSensitivity ? f = a(h).scrollTop(a(h).scrollTop() - e.scrollSpeed) : a(window).height() - (b.pageY - a(h).scrollTop()) < e.scrollSensitivity && (f = a(h).scrollTop(a(h).scrollTop() + e.scrollSpeed))), 
            e.axis && "y" === e.axis || (b.pageX - a(h).scrollLeft() < e.scrollSensitivity ? f = a(h).scrollLeft(a(h).scrollLeft() - e.scrollSpeed) : a(window).width() - (b.pageX - a(h).scrollLeft()) < e.scrollSensitivity && (f = a(h).scrollLeft(a(h).scrollLeft() + e.scrollSpeed)))), 
            f !== !1 && a.ui.ddmanager && !e.dropBehaviour && a.ui.ddmanager.prepareOffsets(d, b);
        }
    }), a.ui.plugin.add("draggable", "snap", {
        start: function(b, c, d) {
            var e = d.options;
            d.snapElements = [], a(e.snap.constructor !== String ? e.snap.items || ":data(ui-draggable)" : e.snap).each(function() {
                var b = a(this), c = b.offset();
                this !== d.element[0] && d.snapElements.push({
                    item: this,
                    width: b.outerWidth(),
                    height: b.outerHeight(),
                    top: c.top,
                    left: c.left
                });
            });
        },
        drag: function(b, c, d) {
            var e, f, g, h, i, j, k, l, m, n, o = d.options, p = o.snapTolerance, q = c.offset.left, r = q + d.helperProportions.width, s = c.offset.top, t = s + d.helperProportions.height;
            for (m = d.snapElements.length - 1; m >= 0; m--) i = d.snapElements[m].left - d.margins.left, 
            j = i + d.snapElements[m].width, k = d.snapElements[m].top - d.margins.top, l = k + d.snapElements[m].height, 
            i - p > r || q > j + p || k - p > t || s > l + p || !a.contains(d.snapElements[m].item.ownerDocument, d.snapElements[m].item) ? (d.snapElements[m].snapping && d.options.snap.release && d.options.snap.release.call(d.element, b, a.extend(d._uiHash(), {
                snapItem: d.snapElements[m].item
            })), d.snapElements[m].snapping = !1) : ("inner" !== o.snapMode && (e = p >= Math.abs(k - t), 
            f = p >= Math.abs(l - s), g = p >= Math.abs(i - r), h = p >= Math.abs(j - q), e && (c.position.top = d._convertPositionTo("relative", {
                top: k - d.helperProportions.height,
                left: 0
            }).top), f && (c.position.top = d._convertPositionTo("relative", {
                top: l,
                left: 0
            }).top), g && (c.position.left = d._convertPositionTo("relative", {
                top: 0,
                left: i - d.helperProportions.width
            }).left), h && (c.position.left = d._convertPositionTo("relative", {
                top: 0,
                left: j
            }).left)), n = e || f || g || h, "outer" !== o.snapMode && (e = p >= Math.abs(k - s), 
            f = p >= Math.abs(l - t), g = p >= Math.abs(i - q), h = p >= Math.abs(j - r), e && (c.position.top = d._convertPositionTo("relative", {
                top: k,
                left: 0
            }).top), f && (c.position.top = d._convertPositionTo("relative", {
                top: l - d.helperProportions.height,
                left: 0
            }).top), g && (c.position.left = d._convertPositionTo("relative", {
                top: 0,
                left: i
            }).left), h && (c.position.left = d._convertPositionTo("relative", {
                top: 0,
                left: j - d.helperProportions.width
            }).left)), !d.snapElements[m].snapping && (e || f || g || h || n) && d.options.snap.snap && d.options.snap.snap.call(d.element, b, a.extend(d._uiHash(), {
                snapItem: d.snapElements[m].item
            })), d.snapElements[m].snapping = e || f || g || h || n);
        }
    }), a.ui.plugin.add("draggable", "stack", {
        start: function(b, c, d) {
            var e, f = d.options, g = a.makeArray(a(f.stack)).sort(function(b, c) {
                return (parseInt(a(b).css("zIndex"), 10) || 0) - (parseInt(a(c).css("zIndex"), 10) || 0);
            });
            g.length && (e = parseInt(a(g[0]).css("zIndex"), 10) || 0, a(g).each(function(b) {
                a(this).css("zIndex", e + b);
            }), this.css("zIndex", e + g.length));
        }
    }), a.ui.plugin.add("draggable", "zIndex", {
        start: function(b, c, d) {
            var e = a(c.helper), f = d.options;
            e.css("zIndex") && (f._zIndex = e.css("zIndex")), e.css("zIndex", f.zIndex);
        },
        stop: function(b, c, d) {
            var e = d.options;
            e._zIndex && a(c.helper).css("zIndex", e._zIndex);
        }
    }), a.ui.draggable, a.widget("ui.resizable", a.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: !1,
            animate: !1,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: !1,
            autoHide: !1,
            classes: {
                "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se"
            },
            containment: !1,
            ghost: !1,
            grid: !1,
            handles: "e,s,se",
            helper: !1,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 90,
            resize: null,
            start: null,
            stop: null
        },
        _num: function(a) {
            return parseFloat(a) || 0;
        },
        _isNumber: function(a) {
            return !isNaN(parseFloat(a));
        },
        _hasScroll: function(b, c) {
            if ("hidden" === a(b).css("overflow")) return !1;
            var d = c && "left" === c ? "scrollLeft" : "scrollTop", e = !1;
            return b[d] > 0 ? !0 : (b[d] = 1, e = b[d] > 0, b[d] = 0, e);
        },
        _create: function() {
            var b, c = this.options, d = this;
            this._addClass("ui-resizable"), a.extend(this, {
                _aspectRatio: !!c.aspectRatio,
                aspectRatio: c.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: c.helper || c.ghost || c.animate ? c.helper || "ui-resizable-helper" : null
            }), this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i) && (this.element.wrap(a("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                position: this.element.css("position"),
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                top: this.element.css("top"),
                left: this.element.css("left")
            })), this.element = this.element.parent().data("ui-resizable", this.element.resizable("instance")), 
            this.elementIsWrapper = !0, b = {
                marginTop: this.originalElement.css("marginTop"),
                marginRight: this.originalElement.css("marginRight"),
                marginBottom: this.originalElement.css("marginBottom"),
                marginLeft: this.originalElement.css("marginLeft")
            }, this.element.css(b), this.originalElement.css("margin", 0), this.originalResizeStyle = this.originalElement.css("resize"), 
            this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({
                position: "static",
                zoom: 1,
                display: "block"
            })), this.originalElement.css(b), this._proportionallyResize()), this._setupHandles(), 
            c.autoHide && a(this.element).on("mouseenter", function() {
                c.disabled || (d._removeClass("ui-resizable-autohide"), d._handles.show());
            }).on("mouseleave", function() {
                c.disabled || d.resizing || (d._addClass("ui-resizable-autohide"), d._handles.hide());
            }), this._mouseInit();
        },
        _destroy: function() {
            this._mouseDestroy();
            var b, c = function(b) {
                a(b).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove();
            };
            return this.elementIsWrapper && (c(this.element), b = this.element, this.originalElement.css({
                position: b.css("position"),
                width: b.outerWidth(),
                height: b.outerHeight(),
                top: b.css("top"),
                left: b.css("left")
            }).insertAfter(b), b.remove()), this.originalElement.css("resize", this.originalResizeStyle), 
            c(this.originalElement), this;
        },
        _setOption: function(a, b) {
            switch (this._super(a, b), a) {
              case "handles":
                this._removeHandles(), this._setupHandles();
                break;

              default:
            }
        },
        _setupHandles: function() {
            var b, c, d, e, f, g = this.options, h = this;
            if (this.handles = g.handles || (a(".ui-resizable-handle", this.element).length ? {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            } : "e,s,se"), this._handles = a(), this.handles.constructor === String) for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"), 
            d = this.handles.split(","), this.handles = {}, c = 0; d.length > c; c++) b = a.trim(d[c]), 
            e = "ui-resizable-" + b, f = a("<div>"), this._addClass(f, "ui-resizable-handle " + e), 
            f.css({
                zIndex: g.zIndex
            }), this.handles[b] = ".ui-resizable-" + b, this.element.append(f);
            this._renderAxis = function(b) {
                var c, d, e, f;
                b = b || this.element;
                for (c in this.handles) this.handles[c].constructor === String ? this.handles[c] = this.element.children(this.handles[c]).first().show() : (this.handles[c].jquery || this.handles[c].nodeType) && (this.handles[c] = a(this.handles[c]), 
                this._on(this.handles[c], {
                    mousedown: h._mouseDown
                })), this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i) && (d = a(this.handles[c], this.element), 
                f = /sw|ne|nw|se|n|s/.test(c) ? d.outerHeight() : d.outerWidth(), e = [ "padding", /ne|nw|n/.test(c) ? "Top" : /se|sw|s/.test(c) ? "Bottom" : /^e$/.test(c) ? "Right" : "Left" ].join(""), 
                b.css(e, f), this._proportionallyResize()), this._handles = this._handles.add(this.handles[c]);
            }, this._renderAxis(this.element), this._handles = this._handles.add(this.element.find(".ui-resizable-handle")), 
            this._handles.disableSelection(), this._handles.on("mouseover", function() {
                h.resizing || (this.className && (f = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), 
                h.axis = f && f[1] ? f[1] : "se");
            }), g.autoHide && (this._handles.hide(), this._addClass("ui-resizable-autohide"));
        },
        _removeHandles: function() {
            this._handles.remove();
        },
        _mouseCapture: function(b) {
            var c, d, e = !1;
            for (c in this.handles) d = a(this.handles[c])[0], (d === b.target || a.contains(d, b.target)) && (e = !0);
            return !this.options.disabled && e;
        },
        _mouseStart: function(b) {
            var c, d, e, f = this.options, g = this.element;
            return this.resizing = !0, this._renderProxy(), c = this._num(this.helper.css("left")), 
            d = this._num(this.helper.css("top")), f.containment && (c += a(f.containment).scrollLeft() || 0, 
            d += a(f.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = {
                left: c,
                top: d
            }, this.size = this._helper ? {
                width: this.helper.width(),
                height: this.helper.height()
            } : {
                width: g.width(),
                height: g.height()
            }, this.originalSize = this._helper ? {
                width: g.outerWidth(),
                height: g.outerHeight()
            } : {
                width: g.width(),
                height: g.height()
            }, this.sizeDiff = {
                width: g.outerWidth() - g.width(),
                height: g.outerHeight() - g.height()
            }, this.originalPosition = {
                left: c,
                top: d
            }, this.originalMousePosition = {
                left: b.pageX,
                top: b.pageY
            }, this.aspectRatio = "number" == typeof f.aspectRatio ? f.aspectRatio : this.originalSize.width / this.originalSize.height || 1, 
            e = a(".ui-resizable-" + this.axis).css("cursor"), a("body").css("cursor", "auto" === e ? this.axis + "-resize" : e), 
            this._addClass("ui-resizable-resizing"), this._propagate("start", b), !0;
        },
        _mouseDrag: function(b) {
            var c, d, e = this.originalMousePosition, f = this.axis, g = b.pageX - e.left || 0, h = b.pageY - e.top || 0, i = this._change[f];
            return this._updatePrevProperties(), i ? (c = i.apply(this, [ b, g, h ]), this._updateVirtualBoundaries(b.shiftKey), 
            (this._aspectRatio || b.shiftKey) && (c = this._updateRatio(c, b)), c = this._respectSize(c, b), 
            this._updateCache(c), this._propagate("resize", b), d = this._applyChanges(), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), 
            a.isEmptyObject(d) || (this._updatePrevProperties(), this._trigger("resize", b, this.ui()), 
            this._applyChanges()), !1) : !1;
        },
        _mouseStop: function(b) {
            this.resizing = !1;
            var c, d, e, f, g, h, i, j = this.options, k = this;
            return this._helper && (c = this._proportionallyResizeElements, d = c.length && /textarea/i.test(c[0].nodeName), 
            e = d && this._hasScroll(c[0], "left") ? 0 : k.sizeDiff.height, f = d ? 0 : k.sizeDiff.width, 
            g = {
                width: k.helper.width() - f,
                height: k.helper.height() - e
            }, h = parseFloat(k.element.css("left")) + (k.position.left - k.originalPosition.left) || null, 
            i = parseFloat(k.element.css("top")) + (k.position.top - k.originalPosition.top) || null, 
            j.animate || this.element.css(a.extend(g, {
                top: i,
                left: h
            })), k.helper.height(k.size.height), k.helper.width(k.size.width), this._helper && !j.animate && this._proportionallyResize()), 
            a("body").css("cursor", "auto"), this._removeClass("ui-resizable-resizing"), this._propagate("stop", b), 
            this._helper && this.helper.remove(), !1;
        },
        _updatePrevProperties: function() {
            this.prevPosition = {
                top: this.position.top,
                left: this.position.left
            }, this.prevSize = {
                width: this.size.width,
                height: this.size.height
            };
        },
        _applyChanges: function() {
            var a = {};
            return this.position.top !== this.prevPosition.top && (a.top = this.position.top + "px"), 
            this.position.left !== this.prevPosition.left && (a.left = this.position.left + "px"), 
            this.size.width !== this.prevSize.width && (a.width = this.size.width + "px"), this.size.height !== this.prevSize.height && (a.height = this.size.height + "px"), 
            this.helper.css(a), a;
        },
        _updateVirtualBoundaries: function(a) {
            var b, c, d, e, f, g = this.options;
            f = {
                minWidth: this._isNumber(g.minWidth) ? g.minWidth : 0,
                maxWidth: this._isNumber(g.maxWidth) ? g.maxWidth : 1 / 0,
                minHeight: this._isNumber(g.minHeight) ? g.minHeight : 0,
                maxHeight: this._isNumber(g.maxHeight) ? g.maxHeight : 1 / 0
            }, (this._aspectRatio || a) && (b = f.minHeight * this.aspectRatio, d = f.minWidth / this.aspectRatio, 
            c = f.maxHeight * this.aspectRatio, e = f.maxWidth / this.aspectRatio, b > f.minWidth && (f.minWidth = b), 
            d > f.minHeight && (f.minHeight = d), f.maxWidth > c && (f.maxWidth = c), f.maxHeight > e && (f.maxHeight = e)), 
            this._vBoundaries = f;
        },
        _updateCache: function(a) {
            this.offset = this.helper.offset(), this._isNumber(a.left) && (this.position.left = a.left), 
            this._isNumber(a.top) && (this.position.top = a.top), this._isNumber(a.height) && (this.size.height = a.height), 
            this._isNumber(a.width) && (this.size.width = a.width);
        },
        _updateRatio: function(a) {
            var b = this.position, c = this.size, d = this.axis;
            return this._isNumber(a.height) ? a.width = a.height * this.aspectRatio : this._isNumber(a.width) && (a.height = a.width / this.aspectRatio), 
            "sw" === d && (a.left = b.left + (c.width - a.width), a.top = null), "nw" === d && (a.top = b.top + (c.height - a.height), 
            a.left = b.left + (c.width - a.width)), a;
        },
        _respectSize: function(a) {
            var b = this._vBoundaries, c = this.axis, d = this._isNumber(a.width) && b.maxWidth && b.maxWidth < a.width, e = this._isNumber(a.height) && b.maxHeight && b.maxHeight < a.height, f = this._isNumber(a.width) && b.minWidth && b.minWidth > a.width, g = this._isNumber(a.height) && b.minHeight && b.minHeight > a.height, h = this.originalPosition.left + this.originalSize.width, i = this.originalPosition.top + this.originalSize.height, j = /sw|nw|w/.test(c), k = /nw|ne|n/.test(c);
            return f && (a.width = b.minWidth), g && (a.height = b.minHeight), d && (a.width = b.maxWidth), 
            e && (a.height = b.maxHeight), f && j && (a.left = h - b.minWidth), d && j && (a.left = h - b.maxWidth), 
            g && k && (a.top = i - b.minHeight), e && k && (a.top = i - b.maxHeight), a.width || a.height || a.left || !a.top ? a.width || a.height || a.top || !a.left || (a.left = null) : a.top = null, 
            a;
        },
        _getPaddingPlusBorderDimensions: function(a) {
            for (var b = 0, c = [], d = [ a.css("borderTopWidth"), a.css("borderRightWidth"), a.css("borderBottomWidth"), a.css("borderLeftWidth") ], e = [ a.css("paddingTop"), a.css("paddingRight"), a.css("paddingBottom"), a.css("paddingLeft") ]; 4 > b; b++) c[b] = parseFloat(d[b]) || 0, 
            c[b] += parseFloat(e[b]) || 0;
            return {
                height: c[0] + c[2],
                width: c[1] + c[3]
            };
        },
        _proportionallyResize: function() {
            if (this._proportionallyResizeElements.length) for (var a, b = 0, c = this.helper || this.element; this._proportionallyResizeElements.length > b; b++) a = this._proportionallyResizeElements[b], 
            this.outerDimensions || (this.outerDimensions = this._getPaddingPlusBorderDimensions(a)), 
            a.css({
                height: c.height() - this.outerDimensions.height || 0,
                width: c.width() - this.outerDimensions.width || 0
            });
        },
        _renderProxy: function() {
            var b = this.element, c = this.options;
            this.elementOffset = b.offset(), this._helper ? (this.helper = this.helper || a("<div style='overflow:hidden;'></div>"), 
            this._addClass(this.helper, this._helper), this.helper.css({
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                position: "absolute",
                left: this.elementOffset.left + "px",
                top: this.elementOffset.top + "px",
                zIndex: ++c.zIndex
            }), this.helper.appendTo("body").disableSelection()) : this.helper = this.element;
        },
        _change: {
            e: function(a, b) {
                return {
                    width: this.originalSize.width + b
                };
            },
            w: function(a, b) {
                var c = this.originalSize, d = this.originalPosition;
                return {
                    left: d.left + b,
                    width: c.width - b
                };
            },
            n: function(a, b, c) {
                var d = this.originalSize, e = this.originalPosition;
                return {
                    top: e.top + c,
                    height: d.height - c
                };
            },
            s: function(a, b, c) {
                return {
                    height: this.originalSize.height + c
                };
            },
            se: function(b, c, d) {
                return a.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [ b, c, d ]));
            },
            sw: function(b, c, d) {
                return a.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [ b, c, d ]));
            },
            ne: function(b, c, d) {
                return a.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [ b, c, d ]));
            },
            nw: function(b, c, d) {
                return a.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [ b, c, d ]));
            }
        },
        _propagate: function(b, c) {
            a.ui.plugin.call(this, b, [ c, this.ui() ]), "resize" !== b && this._trigger(b, c, this.ui());
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            };
        }
    }), a.ui.plugin.add("resizable", "animate", {
        stop: function(b) {
            var c = a(this).resizable("instance"), d = c.options, e = c._proportionallyResizeElements, f = e.length && /textarea/i.test(e[0].nodeName), g = f && c._hasScroll(e[0], "left") ? 0 : c.sizeDiff.height, h = f ? 0 : c.sizeDiff.width, i = {
                width: c.size.width - h,
                height: c.size.height - g
            }, j = parseFloat(c.element.css("left")) + (c.position.left - c.originalPosition.left) || null, k = parseFloat(c.element.css("top")) + (c.position.top - c.originalPosition.top) || null;
            c.element.animate(a.extend(i, k && j ? {
                top: k,
                left: j
            } : {}), {
                duration: d.animateDuration,
                easing: d.animateEasing,
                step: function() {
                    var d = {
                        width: parseFloat(c.element.css("width")),
                        height: parseFloat(c.element.css("height")),
                        top: parseFloat(c.element.css("top")),
                        left: parseFloat(c.element.css("left"))
                    };
                    e && e.length && a(e[0]).css({
                        width: d.width,
                        height: d.height
                    }), c._updateCache(d), c._propagate("resize", b);
                }
            });
        }
    }), a.ui.plugin.add("resizable", "containment", {
        start: function() {
            var b, c, d, e, f, g, h, i = a(this).resizable("instance"), j = i.options, k = i.element, l = j.containment, m = l instanceof a ? l.get(0) : /parent/.test(l) ? k.parent().get(0) : l;
            m && (i.containerElement = a(m), /document/.test(l) || l === document ? (i.containerOffset = {
                left: 0,
                top: 0
            }, i.containerPosition = {
                left: 0,
                top: 0
            }, i.parentData = {
                element: a(document),
                left: 0,
                top: 0,
                width: a(document).width(),
                height: a(document).height() || document.body.parentNode.scrollHeight
            }) : (b = a(m), c = [], a([ "Top", "Right", "Left", "Bottom" ]).each(function(a, d) {
                c[a] = i._num(b.css("padding" + d));
            }), i.containerOffset = b.offset(), i.containerPosition = b.position(), i.containerSize = {
                height: b.innerHeight() - c[3],
                width: b.innerWidth() - c[1]
            }, d = i.containerOffset, e = i.containerSize.height, f = i.containerSize.width, 
            g = i._hasScroll(m, "left") ? m.scrollWidth : f, h = i._hasScroll(m) ? m.scrollHeight : e, 
            i.parentData = {
                element: m,
                left: d.left,
                top: d.top,
                width: g,
                height: h
            }));
        },
        resize: function(b) {
            var c, d, e, f, g = a(this).resizable("instance"), h = g.options, i = g.containerOffset, j = g.position, k = g._aspectRatio || b.shiftKey, l = {
                top: 0,
                left: 0
            }, m = g.containerElement, n = !0;
            m[0] !== document && /static/.test(m.css("position")) && (l = i), j.left < (g._helper ? i.left : 0) && (g.size.width = g.size.width + (g._helper ? g.position.left - i.left : g.position.left - l.left), 
            k && (g.size.height = g.size.width / g.aspectRatio, n = !1), g.position.left = h.helper ? i.left : 0), 
            j.top < (g._helper ? i.top : 0) && (g.size.height = g.size.height + (g._helper ? g.position.top - i.top : g.position.top), 
            k && (g.size.width = g.size.height * g.aspectRatio, n = !1), g.position.top = g._helper ? i.top : 0), 
            e = g.containerElement.get(0) === g.element.parent().get(0), f = /relative|absolute/.test(g.containerElement.css("position")), 
            e && f ? (g.offset.left = g.parentData.left + g.position.left, g.offset.top = g.parentData.top + g.position.top) : (g.offset.left = g.element.offset().left, 
            g.offset.top = g.element.offset().top), c = Math.abs(g.sizeDiff.width + (g._helper ? g.offset.left - l.left : g.offset.left - i.left)), 
            d = Math.abs(g.sizeDiff.height + (g._helper ? g.offset.top - l.top : g.offset.top - i.top)), 
            c + g.size.width >= g.parentData.width && (g.size.width = g.parentData.width - c, 
            k && (g.size.height = g.size.width / g.aspectRatio, n = !1)), d + g.size.height >= g.parentData.height && (g.size.height = g.parentData.height - d, 
            k && (g.size.width = g.size.height * g.aspectRatio, n = !1)), n || (g.position.left = g.prevPosition.left, 
            g.position.top = g.prevPosition.top, g.size.width = g.prevSize.width, g.size.height = g.prevSize.height);
        },
        stop: function() {
            var b = a(this).resizable("instance"), c = b.options, d = b.containerOffset, e = b.containerPosition, f = b.containerElement, g = a(b.helper), h = g.offset(), i = g.outerWidth() - b.sizeDiff.width, j = g.outerHeight() - b.sizeDiff.height;
            b._helper && !c.animate && /relative/.test(f.css("position")) && a(this).css({
                left: h.left - e.left - d.left,
                width: i,
                height: j
            }), b._helper && !c.animate && /static/.test(f.css("position")) && a(this).css({
                left: h.left - e.left - d.left,
                width: i,
                height: j
            });
        }
    }), a.ui.plugin.add("resizable", "alsoResize", {
        start: function() {
            var b = a(this).resizable("instance"), c = b.options;
            a(c.alsoResize).each(function() {
                var b = a(this);
                b.data("ui-resizable-alsoresize", {
                    width: parseFloat(b.width()),
                    height: parseFloat(b.height()),
                    left: parseFloat(b.css("left")),
                    top: parseFloat(b.css("top"))
                });
            });
        },
        resize: function(b, c) {
            var d = a(this).resizable("instance"), e = d.options, f = d.originalSize, g = d.originalPosition, h = {
                height: d.size.height - f.height || 0,
                width: d.size.width - f.width || 0,
                top: d.position.top - g.top || 0,
                left: d.position.left - g.left || 0
            };
            a(e.alsoResize).each(function() {
                var b = a(this), d = a(this).data("ui-resizable-alsoresize"), e = {}, f = b.parents(c.originalElement[0]).length ? [ "width", "height" ] : [ "width", "height", "top", "left" ];
                a.each(f, function(a, b) {
                    var c = (d[b] || 0) + (h[b] || 0);
                    c && c >= 0 && (e[b] = c || null);
                }), b.css(e);
            });
        },
        stop: function() {
            a(this).removeData("ui-resizable-alsoresize");
        }
    }), a.ui.plugin.add("resizable", "ghost", {
        start: function() {
            var b = a(this).resizable("instance"), c = b.size;
            b.ghost = b.originalElement.clone(), b.ghost.css({
                opacity: .25,
                display: "block",
                position: "relative",
                height: c.height,
                width: c.width,
                margin: 0,
                left: 0,
                top: 0
            }), b._addClass(b.ghost, "ui-resizable-ghost"), a.uiBackCompat !== !1 && "string" == typeof b.options.ghost && b.ghost.addClass(this.options.ghost), 
            b.ghost.appendTo(b.helper);
        },
        resize: function() {
            var b = a(this).resizable("instance");
            b.ghost && b.ghost.css({
                position: "relative",
                height: b.size.height,
                width: b.size.width
            });
        },
        stop: function() {
            var b = a(this).resizable("instance");
            b.ghost && b.helper && b.helper.get(0).removeChild(b.ghost.get(0));
        }
    }), a.ui.plugin.add("resizable", "grid", {
        resize: function() {
            var b, c = a(this).resizable("instance"), d = c.options, e = c.size, f = c.originalSize, g = c.originalPosition, h = c.axis, i = "number" == typeof d.grid ? [ d.grid, d.grid ] : d.grid, j = i[0] || 1, k = i[1] || 1, l = Math.round((e.width - f.width) / j) * j, m = Math.round((e.height - f.height) / k) * k, n = f.width + l, o = f.height + m, p = d.maxWidth && n > d.maxWidth, q = d.maxHeight && o > d.maxHeight, r = d.minWidth && d.minWidth > n, s = d.minHeight && d.minHeight > o;
            d.grid = i, r && (n += j), s && (o += k), p && (n -= j), q && (o -= k), /^(se|s|e)$/.test(h) ? (c.size.width = n, 
            c.size.height = o) : /^(ne)$/.test(h) ? (c.size.width = n, c.size.height = o, c.position.top = g.top - m) : /^(sw)$/.test(h) ? (c.size.width = n, 
            c.size.height = o, c.position.left = g.left - l) : ((0 >= o - k || 0 >= n - j) && (b = c._getPaddingPlusBorderDimensions(this)), 
            o - k > 0 ? (c.size.height = o, c.position.top = g.top - m) : (o = k - b.height, 
            c.size.height = o, c.position.top = g.top + f.height - o), n - j > 0 ? (c.size.width = n, 
            c.position.left = g.left - l) : (n = j - b.width, c.size.width = n, c.position.left = g.left + f.width - n));
        }
    }), a.ui.resizable, a.widget("ui.dialog", {
        version: "1.12.1",
        options: {
            appendTo: "body",
            autoOpen: !0,
            buttons: [],
            classes: {
                "ui-dialog": "ui-corner-all",
                "ui-dialog-titlebar": "ui-corner-all"
            },
            closeOnEscape: !0,
            closeText: "Close",
            draggable: !0,
            hide: null,
            height: "auto",
            maxHeight: null,
            maxWidth: null,
            minHeight: 150,
            minWidth: 150,
            modal: !1,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                using: function(b) {
                    var c = a(this).css(b).offset().top;
                    0 > c && a(this).css("top", b.top - c);
                }
            },
            resizable: !0,
            show: null,
            title: null,
            width: 300,
            beforeClose: null,
            close: null,
            drag: null,
            dragStart: null,
            dragStop: null,
            focus: null,
            open: null,
            resize: null,
            resizeStart: null,
            resizeStop: null
        },
        sizeRelatedOptions: {
            buttons: !0,
            height: !0,
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0,
            width: !0
        },
        resizableRelatedOptions: {
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0
        },
        _create: function() {
            this.originalCss = {
                display: this.element[0].style.display,
                width: this.element[0].style.width,
                minHeight: this.element[0].style.minHeight,
                maxHeight: this.element[0].style.maxHeight,
                height: this.element[0].style.height
            }, this.originalPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            }, this.originalTitle = this.element.attr("title"), null == this.options.title && null != this.originalTitle && (this.options.title = this.originalTitle), 
            this.options.disabled && (this.options.disabled = !1), this._createWrapper(), this.element.show().removeAttr("title").appendTo(this.uiDialog), 
            this._addClass("ui-dialog-content", "ui-widget-content"), this._createTitlebar(), 
            this._createButtonPane(), this.options.draggable && a.fn.draggable && this._makeDraggable(), 
            this.options.resizable && a.fn.resizable && this._makeResizable(), this._isOpen = !1, 
            this._trackFocus();
        },
        _init: function() {
            this.options.autoOpen && this.open();
        },
        _appendTo: function() {
            var b = this.options.appendTo;
            return b && (b.jquery || b.nodeType) ? a(b) : this.document.find(b || "body").eq(0);
        },
        _destroy: function() {
            var a, b = this.originalPosition;
            this._untrackInstance(), this._destroyOverlay(), this.element.removeUniqueId().css(this.originalCss).detach(), 
            this.uiDialog.remove(), this.originalTitle && this.element.attr("title", this.originalTitle), 
            a = b.parent.children().eq(b.index), a.length && a[0] !== this.element[0] ? a.before(this.element) : b.parent.append(this.element);
        },
        widget: function() {
            return this.uiDialog;
        },
        disable: a.noop,
        enable: a.noop,
        close: function(b) {
            var c = this;
            this._isOpen && this._trigger("beforeClose", b) !== !1 && (this._isOpen = !1, this._focusedElement = null, 
            this._destroyOverlay(), this._untrackInstance(), this.opener.filter(":focusable").trigger("focus").length || a.ui.safeBlur(a.ui.safeActiveElement(this.document[0])), 
            this._hide(this.uiDialog, this.options.hide, function() {
                c._trigger("close", b);
            }));
        },
        isOpen: function() {
            return this._isOpen;
        },
        moveToTop: function() {
            this._moveToTop();
        },
        _moveToTop: function(b, c) {
            var d = !1, e = this.uiDialog.siblings(".ui-front:visible").map(function() {
                return +a(this).css("z-index");
            }).get(), f = Math.max.apply(null, e);
            return f >= +this.uiDialog.css("z-index") && (this.uiDialog.css("z-index", f + 1), 
            d = !0), d && !c && this._trigger("focus", b), d;
        },
        open: function() {
            var b = this;
            return this._isOpen ? (this._moveToTop() && this._focusTabbable(), void 0) : (this._isOpen = !0, 
            this.opener = a(a.ui.safeActiveElement(this.document[0])), this._size(), this._position(), 
            this._createOverlay(), this._moveToTop(null, !0), this.overlay && this.overlay.css("z-index", this.uiDialog.css("z-index") - 1), 
            this._show(this.uiDialog, this.options.show, function() {
                b._focusTabbable(), b._trigger("focus");
            }), this._makeFocusTarget(), this._trigger("open"), void 0);
        },
        _focusTabbable: function() {
            var a = this._focusedElement;
            a || (a = this.element.find("[autofocus]")), a.length || (a = this.element.find(":tabbable")), 
            a.length || (a = this.uiDialogButtonPane.find(":tabbable")), a.length || (a = this.uiDialogTitlebarClose.filter(":tabbable")), 
            a.length || (a = this.uiDialog), a.eq(0).trigger("focus");
        },
        _keepFocus: function(b) {
            function c() {
                var b = a.ui.safeActiveElement(this.document[0]), c = this.uiDialog[0] === b || a.contains(this.uiDialog[0], b);
                c || this._focusTabbable();
            }
            b.preventDefault(), c.call(this), this._delay(c);
        },
        _createWrapper: function() {
            this.uiDialog = a("<div>").hide().attr({
                tabIndex: -1,
                role: "dialog"
            }).appendTo(this._appendTo()), this._addClass(this.uiDialog, "ui-dialog", "ui-widget ui-widget-content ui-front"), 
            this._on(this.uiDialog, {
                keydown: function(b) {
                    if (this.options.closeOnEscape && !b.isDefaultPrevented() && b.keyCode && b.keyCode === a.ui.keyCode.ESCAPE) return b.preventDefault(), 
                    this.close(b), void 0;
                    if (b.keyCode === a.ui.keyCode.TAB && !b.isDefaultPrevented()) {
                        var c = this.uiDialog.find(":tabbable"), d = c.filter(":first"), e = c.filter(":last");
                        b.target !== e[0] && b.target !== this.uiDialog[0] || b.shiftKey ? b.target !== d[0] && b.target !== this.uiDialog[0] || !b.shiftKey || (this._delay(function() {
                            e.trigger("focus");
                        }), b.preventDefault()) : (this._delay(function() {
                            d.trigger("focus");
                        }), b.preventDefault());
                    }
                },
                mousedown: function(a) {
                    this._moveToTop(a) && this._focusTabbable();
                }
            }), this.element.find("[aria-describedby]").length || this.uiDialog.attr({
                "aria-describedby": this.element.uniqueId().attr("id")
            });
        },
        _createTitlebar: function() {
            var b;
            this.uiDialogTitlebar = a("<div>"), this._addClass(this.uiDialogTitlebar, "ui-dialog-titlebar", "ui-widget-header ui-helper-clearfix"), 
            this._on(this.uiDialogTitlebar, {
                mousedown: function(b) {
                    a(b.target).closest(".ui-dialog-titlebar-close") || this.uiDialog.trigger("focus");
                }
            }), this.uiDialogTitlebarClose = a("<button type='button'></button>").button({
                label: a("<a>").text(this.options.closeText).html(),
                icon: "ui-icon-closethick",
                showLabel: !1
            }).appendTo(this.uiDialogTitlebar), this._addClass(this.uiDialogTitlebarClose, "ui-dialog-titlebar-close"), 
            this._on(this.uiDialogTitlebarClose, {
                click: function(a) {
                    a.preventDefault(), this.close(a);
                }
            }), b = a("<span>").uniqueId().prependTo(this.uiDialogTitlebar), this._addClass(b, "ui-dialog-title"), 
            this._title(b), this.uiDialogTitlebar.prependTo(this.uiDialog), this.uiDialog.attr({
                "aria-labelledby": b.attr("id")
            });
        },
        _title: function(a) {
            this.options.title ? a.text(this.options.title) : a.html("&#160;");
        },
        _createButtonPane: function() {
            this.uiDialogButtonPane = a("<div>"), this._addClass(this.uiDialogButtonPane, "ui-dialog-buttonpane", "ui-widget-content ui-helper-clearfix"), 
            this.uiButtonSet = a("<div>").appendTo(this.uiDialogButtonPane), this._addClass(this.uiButtonSet, "ui-dialog-buttonset"), 
            this._createButtons();
        },
        _createButtons: function() {
            var b = this, c = this.options.buttons;
            return this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), a.isEmptyObject(c) || a.isArray(c) && !c.length ? (this._removeClass(this.uiDialog, "ui-dialog-buttons"), 
            void 0) : (a.each(c, function(c, d) {
                var e, f;
                d = a.isFunction(d) ? {
                    click: d,
                    text: c
                } : d, d = a.extend({
                    type: "button"
                }, d), e = d.click, f = {
                    icon: d.icon,
                    iconPosition: d.iconPosition,
                    showLabel: d.showLabel,
                    icons: d.icons,
                    text: d.text
                }, delete d.click, delete d.icon, delete d.iconPosition, delete d.showLabel, delete d.icons, 
                "boolean" == typeof d.text && delete d.text, a("<button></button>", d).button(f).appendTo(b.uiButtonSet).on("click", function() {
                    e.apply(b.element[0], arguments);
                });
            }), this._addClass(this.uiDialog, "ui-dialog-buttons"), this.uiDialogButtonPane.appendTo(this.uiDialog), 
            void 0);
        },
        _makeDraggable: function() {
            function b(a) {
                return {
                    position: a.position,
                    offset: a.offset
                };
            }
            var c = this, d = this.options;
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function(d, e) {
                    c._addClass(a(this), "ui-dialog-dragging"), c._blockFrames(), c._trigger("dragStart", d, b(e));
                },
                drag: function(a, d) {
                    c._trigger("drag", a, b(d));
                },
                stop: function(e, f) {
                    var g = f.offset.left - c.document.scrollLeft(), h = f.offset.top - c.document.scrollTop();
                    d.position = {
                        my: "left top",
                        at: "left" + (g >= 0 ? "+" : "") + g + " " + "top" + (h >= 0 ? "+" : "") + h,
                        of: c.window
                    }, c._removeClass(a(this), "ui-dialog-dragging"), c._unblockFrames(), c._trigger("dragStop", e, b(f));
                }
            });
        },
        _makeResizable: function() {
            function b(a) {
                return {
                    originalPosition: a.originalPosition,
                    originalSize: a.originalSize,
                    position: a.position,
                    size: a.size
                };
            }
            var c = this, d = this.options, e = d.resizable, f = this.uiDialog.css("position"), g = "string" == typeof e ? e : "n,e,s,w,se,sw,ne,nw";
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: d.maxWidth,
                maxHeight: d.maxHeight,
                minWidth: d.minWidth,
                minHeight: this._minHeight(),
                handles: g,
                start: function(d, e) {
                    c._addClass(a(this), "ui-dialog-resizing"), c._blockFrames(), c._trigger("resizeStart", d, b(e));
                },
                resize: function(a, d) {
                    c._trigger("resize", a, b(d));
                },
                stop: function(e, f) {
                    var g = c.uiDialog.offset(), h = g.left - c.document.scrollLeft(), i = g.top - c.document.scrollTop();
                    d.height = c.uiDialog.height(), d.width = c.uiDialog.width(), d.position = {
                        my: "left top",
                        at: "left" + (h >= 0 ? "+" : "") + h + " " + "top" + (i >= 0 ? "+" : "") + i,
                        of: c.window
                    }, c._removeClass(a(this), "ui-dialog-resizing"), c._unblockFrames(), c._trigger("resizeStop", e, b(f));
                }
            }).css("position", f);
        },
        _trackFocus: function() {
            this._on(this.widget(), {
                focusin: function(b) {
                    this._makeFocusTarget(), this._focusedElement = a(b.target);
                }
            });
        },
        _makeFocusTarget: function() {
            this._untrackInstance(), this._trackingInstances().unshift(this);
        },
        _untrackInstance: function() {
            var b = this._trackingInstances(), c = a.inArray(this, b);
            -1 !== c && b.splice(c, 1);
        },
        _trackingInstances: function() {
            var a = this.document.data("ui-dialog-instances");
            return a || (a = [], this.document.data("ui-dialog-instances", a)), a;
        },
        _minHeight: function() {
            var a = this.options;
            return "auto" === a.height ? a.minHeight : Math.min(a.minHeight, a.height);
        },
        _position: function() {
            var a = this.uiDialog.is(":visible");
            a || this.uiDialog.show(), this.uiDialog.position(this.options.position), a || this.uiDialog.hide();
        },
        _setOptions: function(b) {
            var c = this, d = !1, e = {};
            a.each(b, function(a, b) {
                c._setOption(a, b), a in c.sizeRelatedOptions && (d = !0), a in c.resizableRelatedOptions && (e[a] = b);
            }), d && (this._size(), this._position()), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", e);
        },
        _setOption: function(b, c) {
            var d, e, f = this.uiDialog;
            "disabled" !== b && (this._super(b, c), "appendTo" === b && this.uiDialog.appendTo(this._appendTo()), 
            "buttons" === b && this._createButtons(), "closeText" === b && this.uiDialogTitlebarClose.button({
                label: a("<a>").text("" + this.options.closeText).html()
            }), "draggable" === b && (d = f.is(":data(ui-draggable)"), d && !c && f.draggable("destroy"), 
            !d && c && this._makeDraggable()), "position" === b && this._position(), "resizable" === b && (e = f.is(":data(ui-resizable)"), 
            e && !c && f.resizable("destroy"), e && "string" == typeof c && f.resizable("option", "handles", c), 
            e || c === !1 || this._makeResizable()), "title" === b && this._title(this.uiDialogTitlebar.find(".ui-dialog-title")));
        },
        _size: function() {
            var a, b, c, d = this.options;
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                maxHeight: "none",
                height: 0
            }), d.minWidth > d.width && (d.width = d.minWidth), a = this.uiDialog.css({
                height: "auto",
                width: d.width
            }).outerHeight(), b = Math.max(0, d.minHeight - a), c = "number" == typeof d.maxHeight ? Math.max(0, d.maxHeight - a) : "none", 
            "auto" === d.height ? this.element.css({
                minHeight: b,
                maxHeight: c,
                height: "auto"
            }) : this.element.height(Math.max(0, d.height - a)), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight());
        },
        _blockFrames: function() {
            this.iframeBlocks = this.document.find("iframe").map(function() {
                var b = a(this);
                return a("<div>").css({
                    position: "absolute",
                    width: b.outerWidth(),
                    height: b.outerHeight()
                }).appendTo(b.parent()).offset(b.offset())[0];
            });
        },
        _unblockFrames: function() {
            this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);
        },
        _allowInteraction: function(b) {
            return a(b.target).closest(".ui-dialog").length ? !0 : !!a(b.target).closest(".ui-datepicker").length;
        },
        _createOverlay: function() {
            if (this.options.modal) {
                var b = !0;
                this._delay(function() {
                    b = !1;
                }), this.document.data("ui-dialog-overlays") || this._on(this.document, {
                    focusin: function(a) {
                        b || this._allowInteraction(a) || (a.preventDefault(), this._trackingInstances()[0]._focusTabbable());
                    }
                }), this.overlay = a("<div>").appendTo(this._appendTo()), this._addClass(this.overlay, null, "ui-widget-overlay ui-front"), 
                this._on(this.overlay, {
                    mousedown: "_keepFocus"
                }), this.document.data("ui-dialog-overlays", (this.document.data("ui-dialog-overlays") || 0) + 1);
            }
        },
        _destroyOverlay: function() {
            if (this.options.modal && this.overlay) {
                var a = this.document.data("ui-dialog-overlays") - 1;
                a ? this.document.data("ui-dialog-overlays", a) : (this._off(this.document, "focusin"), 
                this.document.removeData("ui-dialog-overlays")), this.overlay.remove(), this.overlay = null;
            }
        }
    }), a.uiBackCompat !== !1 && a.widget("ui.dialog", a.ui.dialog, {
        options: {
            dialogClass: ""
        },
        _createWrapper: function() {
            this._super(), this.uiDialog.addClass(this.options.dialogClass);
        },
        _setOption: function(a, b) {
            "dialogClass" === a && this.uiDialog.removeClass(this.options.dialogClass).addClass(b), 
            this._superApply(arguments);
        }
    }), a.ui.dialog, a.widget("ui.droppable", {
        version: "1.12.1",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            addClasses: !0,
            greedy: !1,
            scope: "default",
            tolerance: "intersect",
            activate: null,
            deactivate: null,
            drop: null,
            out: null,
            over: null
        },
        _create: function() {
            var b, c = this.options, d = c.accept;
            this.isover = !1, this.isout = !0, this.accept = a.isFunction(d) ? d : function(a) {
                return a.is(d);
            }, this.proportions = function() {
                return arguments.length ? (b = arguments[0], void 0) : b ? b : b = {
                    width: this.element[0].offsetWidth,
                    height: this.element[0].offsetHeight
                };
            }, this._addToManager(c.scope), c.addClasses && this._addClass("ui-droppable");
        },
        _addToManager: function(b) {
            a.ui.ddmanager.droppables[b] = a.ui.ddmanager.droppables[b] || [], a.ui.ddmanager.droppables[b].push(this);
        },
        _splice: function(a) {
            for (var b = 0; a.length > b; b++) a[b] === this && a.splice(b, 1);
        },
        _destroy: function() {
            var b = a.ui.ddmanager.droppables[this.options.scope];
            this._splice(b);
        },
        _setOption: function(b, c) {
            if ("accept" === b) this.accept = a.isFunction(c) ? c : function(a) {
                return a.is(c);
            }; else if ("scope" === b) {
                var d = a.ui.ddmanager.droppables[this.options.scope];
                this._splice(d), this._addToManager(c);
            }
            this._super(b, c);
        },
        _activate: function(b) {
            var c = a.ui.ddmanager.current;
            this._addActiveClass(), c && this._trigger("activate", b, this.ui(c));
        },
        _deactivate: function(b) {
            var c = a.ui.ddmanager.current;
            this._removeActiveClass(), c && this._trigger("deactivate", b, this.ui(c));
        },
        _over: function(b) {
            var c = a.ui.ddmanager.current;
            c && (c.currentItem || c.element)[0] !== this.element[0] && this.accept.call(this.element[0], c.currentItem || c.element) && (this._addHoverClass(), 
            this._trigger("over", b, this.ui(c)));
        },
        _out: function(b) {
            var c = a.ui.ddmanager.current;
            c && (c.currentItem || c.element)[0] !== this.element[0] && this.accept.call(this.element[0], c.currentItem || c.element) && (this._removeHoverClass(), 
            this._trigger("out", b, this.ui(c)));
        },
        _drop: function(b, c) {
            var d = c || a.ui.ddmanager.current, e = !1;
            return d && (d.currentItem || d.element)[0] !== this.element[0] ? (this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function() {
                var c = a(this).droppable("instance");
                return c.options.greedy && !c.options.disabled && c.options.scope === d.options.scope && c.accept.call(c.element[0], d.currentItem || d.element) && s(d, a.extend(c, {
                    offset: c.element.offset()
                }), c.options.tolerance, b) ? (e = !0, !1) : void 0;
            }), e ? !1 : this.accept.call(this.element[0], d.currentItem || d.element) ? (this._removeActiveClass(), 
            this._removeHoverClass(), this._trigger("drop", b, this.ui(d)), this.element) : !1) : !1;
        },
        ui: function(a) {
            return {
                draggable: a.currentItem || a.element,
                helper: a.helper,
                position: a.position,
                offset: a.positionAbs
            };
        },
        _addHoverClass: function() {
            this._addClass("ui-droppable-hover");
        },
        _removeHoverClass: function() {
            this._removeClass("ui-droppable-hover");
        },
        _addActiveClass: function() {
            this._addClass("ui-droppable-active");
        },
        _removeActiveClass: function() {
            this._removeClass("ui-droppable-active");
        }
    });
    var s = a.ui.intersect = function() {
        function a(a, b, c) {
            return a >= b && b + c > a;
        }
        return function(b, c, d, e) {
            if (!c.offset) return !1;
            var f = (b.positionAbs || b.position.absolute).left + b.margins.left, g = (b.positionAbs || b.position.absolute).top + b.margins.top, h = f + b.helperProportions.width, i = g + b.helperProportions.height, j = c.offset.left, k = c.offset.top, l = j + c.proportions().width, m = k + c.proportions().height;
            switch (d) {
              case "fit":
                return f >= j && l >= h && g >= k && m >= i;

              case "intersect":
                return f + b.helperProportions.width / 2 > j && l > h - b.helperProportions.width / 2 && g + b.helperProportions.height / 2 > k && m > i - b.helperProportions.height / 2;

              case "pointer":
                return a(e.pageY, k, c.proportions().height) && a(e.pageX, j, c.proportions().width);

              case "touch":
                return (g >= k && m >= g || i >= k && m >= i || k > g && i > m) && (f >= j && l >= f || h >= j && l >= h || j > f && h > l);

              default:
                return !1;
            }
        };
    }();
    a.ui.ddmanager = {
        current: null,
        droppables: {
            default: []
        },
        prepareOffsets: function(b, c) {
            var d, e, f = a.ui.ddmanager.droppables[b.options.scope] || [], g = c ? c.type : null, h = (b.currentItem || b.element).find(":data(ui-droppable)").addBack();
            a: for (d = 0; f.length > d; d++) if (!(f[d].options.disabled || b && !f[d].accept.call(f[d].element[0], b.currentItem || b.element))) {
                for (e = 0; h.length > e; e++) if (h[e] === f[d].element[0]) {
                    f[d].proportions().height = 0;
                    continue a;
                }
                f[d].visible = "none" !== f[d].element.css("display"), f[d].visible && ("mousedown" === g && f[d]._activate.call(f[d], c), 
                f[d].offset = f[d].element.offset(), f[d].proportions({
                    width: f[d].element[0].offsetWidth,
                    height: f[d].element[0].offsetHeight
                }));
            }
        },
        drop: function(b, c) {
            var d = !1;
            return a.each((a.ui.ddmanager.droppables[b.options.scope] || []).slice(), function() {
                this.options && (!this.options.disabled && this.visible && s(b, this, this.options.tolerance, c) && (d = this._drop.call(this, c) || d), 
                !this.options.disabled && this.visible && this.accept.call(this.element[0], b.currentItem || b.element) && (this.isout = !0, 
                this.isover = !1, this._deactivate.call(this, c)));
            }), d;
        },
        dragStart: function(b, c) {
            b.element.parentsUntil("body").on("scroll.droppable", function() {
                b.options.refreshPositions || a.ui.ddmanager.prepareOffsets(b, c);
            });
        },
        drag: function(b, c) {
            b.options.refreshPositions && a.ui.ddmanager.prepareOffsets(b, c), a.each(a.ui.ddmanager.droppables[b.options.scope] || [], function() {
                if (!this.options.disabled && !this.greedyChild && this.visible) {
                    var d, e, f, g = s(b, this, this.options.tolerance, c), h = !g && this.isover ? "isout" : g && !this.isover ? "isover" : null;
                    h && (this.options.greedy && (e = this.options.scope, f = this.element.parents(":data(ui-droppable)").filter(function() {
                        return a(this).droppable("instance").options.scope === e;
                    }), f.length && (d = a(f[0]).droppable("instance"), d.greedyChild = "isover" === h)), 
                    d && "isover" === h && (d.isover = !1, d.isout = !0, d._out.call(d, c)), this[h] = !0, 
                    this["isout" === h ? "isover" : "isout"] = !1, this["isover" === h ? "_over" : "_out"].call(this, c), 
                    d && "isout" === h && (d.isout = !1, d.isover = !0, d._over.call(d, c)));
                }
            });
        },
        dragStop: function(b, c) {
            b.element.parentsUntil("body").off("scroll.droppable"), b.options.refreshPositions || a.ui.ddmanager.prepareOffsets(b, c);
        }
    }, a.uiBackCompat !== !1 && a.widget("ui.droppable", a.ui.droppable, {
        options: {
            hoverClass: !1,
            activeClass: !1
        },
        _addActiveClass: function() {
            this._super(), this.options.activeClass && this.element.addClass(this.options.activeClass);
        },
        _removeActiveClass: function() {
            this._super(), this.options.activeClass && this.element.removeClass(this.options.activeClass);
        },
        _addHoverClass: function() {
            this._super(), this.options.hoverClass && this.element.addClass(this.options.hoverClass);
        },
        _removeHoverClass: function() {
            this._super(), this.options.hoverClass && this.element.removeClass(this.options.hoverClass);
        }
    }), a.ui.droppable, a.widget("ui.progressbar", {
        version: "1.12.1",
        options: {
            classes: {
                "ui-progressbar": "ui-corner-all",
                "ui-progressbar-value": "ui-corner-left",
                "ui-progressbar-complete": "ui-corner-right"
            },
            max: 100,
            value: 0,
            change: null,
            complete: null
        },
        min: 0,
        _create: function() {
            this.oldValue = this.options.value = this._constrainedValue(), this.element.attr({
                role: "progressbar",
                "aria-valuemin": this.min
            }), this._addClass("ui-progressbar", "ui-widget ui-widget-content"), this.valueDiv = a("<div>").appendTo(this.element), 
            this._addClass(this.valueDiv, "ui-progressbar-value", "ui-widget-header"), this._refreshValue();
        },
        _destroy: function() {
            this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"), this.valueDiv.remove();
        },
        value: function(a) {
            return void 0 === a ? this.options.value : (this.options.value = this._constrainedValue(a), 
            this._refreshValue(), void 0);
        },
        _constrainedValue: function(a) {
            return void 0 === a && (a = this.options.value), this.indeterminate = a === !1, 
            "number" != typeof a && (a = 0), this.indeterminate ? !1 : Math.min(this.options.max, Math.max(this.min, a));
        },
        _setOptions: function(a) {
            var b = a.value;
            delete a.value, this._super(a), this.options.value = this._constrainedValue(b), 
            this._refreshValue();
        },
        _setOption: function(a, b) {
            "max" === a && (b = Math.max(this.min, b)), this._super(a, b);
        },
        _setOptionDisabled: function(a) {
            this._super(a), this.element.attr("aria-disabled", a), this._toggleClass(null, "ui-state-disabled", !!a);
        },
        _percentage: function() {
            return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min);
        },
        _refreshValue: function() {
            var b = this.options.value, c = this._percentage();
            this.valueDiv.toggle(this.indeterminate || b > this.min).width(c.toFixed(0) + "%"), 
            this._toggleClass(this.valueDiv, "ui-progressbar-complete", null, b === this.options.max)._toggleClass("ui-progressbar-indeterminate", null, this.indeterminate), 
            this.indeterminate ? (this.element.removeAttr("aria-valuenow"), this.overlayDiv || (this.overlayDiv = a("<div>").appendTo(this.valueDiv), 
            this._addClass(this.overlayDiv, "ui-progressbar-overlay"))) : (this.element.attr({
                "aria-valuemax": this.options.max,
                "aria-valuenow": b
            }), this.overlayDiv && (this.overlayDiv.remove(), this.overlayDiv = null)), this.oldValue !== b && (this.oldValue = b, 
            this._trigger("change")), b === this.options.max && this._trigger("complete");
        }
    }), a.widget("ui.selectable", a.ui.mouse, {
        version: "1.12.1",
        options: {
            appendTo: "body",
            autoRefresh: !0,
            distance: 0,
            filter: "*",
            tolerance: "touch",
            selected: null,
            selecting: null,
            start: null,
            stop: null,
            unselected: null,
            unselecting: null
        },
        _create: function() {
            var b = this;
            this._addClass("ui-selectable"), this.dragged = !1, this.refresh = function() {
                b.elementPos = a(b.element[0]).offset(), b.selectees = a(b.options.filter, b.element[0]), 
                b._addClass(b.selectees, "ui-selectee"), b.selectees.each(function() {
                    var c = a(this), d = c.offset(), e = {
                        left: d.left - b.elementPos.left,
                        top: d.top - b.elementPos.top
                    };
                    a.data(this, "selectable-item", {
                        element: this,
                        $element: c,
                        left: e.left,
                        top: e.top,
                        right: e.left + c.outerWidth(),
                        bottom: e.top + c.outerHeight(),
                        startselected: !1,
                        selected: c.hasClass("ui-selected"),
                        selecting: c.hasClass("ui-selecting"),
                        unselecting: c.hasClass("ui-unselecting")
                    });
                });
            }, this.refresh(), this._mouseInit(), this.helper = a("<div>"), this._addClass(this.helper, "ui-selectable-helper");
        },
        _destroy: function() {
            this.selectees.removeData("selectable-item"), this._mouseDestroy();
        },
        _mouseStart: function(b) {
            var c = this, d = this.options;
            this.opos = [ b.pageX, b.pageY ], this.elementPos = a(this.element[0]).offset(), 
            this.options.disabled || (this.selectees = a(d.filter, this.element[0]), this._trigger("start", b), 
            a(d.appendTo).append(this.helper), this.helper.css({
                left: b.pageX,
                top: b.pageY,
                width: 0,
                height: 0
            }), d.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function() {
                var d = a.data(this, "selectable-item");
                d.startselected = !0, b.metaKey || b.ctrlKey || (c._removeClass(d.$element, "ui-selected"), 
                d.selected = !1, c._addClass(d.$element, "ui-unselecting"), d.unselecting = !0, 
                c._trigger("unselecting", b, {
                    unselecting: d.element
                }));
            }), a(b.target).parents().addBack().each(function() {
                var d, e = a.data(this, "selectable-item");
                return e ? (d = !b.metaKey && !b.ctrlKey || !e.$element.hasClass("ui-selected"), 
                c._removeClass(e.$element, d ? "ui-unselecting" : "ui-selected")._addClass(e.$element, d ? "ui-selecting" : "ui-unselecting"), 
                e.unselecting = !d, e.selecting = d, e.selected = d, d ? c._trigger("selecting", b, {
                    selecting: e.element
                }) : c._trigger("unselecting", b, {
                    unselecting: e.element
                }), !1) : void 0;
            }));
        },
        _mouseDrag: function(b) {
            if (this.dragged = !0, !this.options.disabled) {
                var c, d = this, e = this.options, f = this.opos[0], g = this.opos[1], h = b.pageX, i = b.pageY;
                return f > h && (c = h, h = f, f = c), g > i && (c = i, i = g, g = c), this.helper.css({
                    left: f,
                    top: g,
                    width: h - f,
                    height: i - g
                }), this.selectees.each(function() {
                    var c = a.data(this, "selectable-item"), j = !1, k = {};
                    c && c.element !== d.element[0] && (k.left = c.left + d.elementPos.left, k.right = c.right + d.elementPos.left, 
                    k.top = c.top + d.elementPos.top, k.bottom = c.bottom + d.elementPos.top, "touch" === e.tolerance ? j = !(k.left > h || f > k.right || k.top > i || g > k.bottom) : "fit" === e.tolerance && (j = k.left > f && h > k.right && k.top > g && i > k.bottom), 
                    j ? (c.selected && (d._removeClass(c.$element, "ui-selected"), c.selected = !1), 
                    c.unselecting && (d._removeClass(c.$element, "ui-unselecting"), c.unselecting = !1), 
                    c.selecting || (d._addClass(c.$element, "ui-selecting"), c.selecting = !0, d._trigger("selecting", b, {
                        selecting: c.element
                    }))) : (c.selecting && ((b.metaKey || b.ctrlKey) && c.startselected ? (d._removeClass(c.$element, "ui-selecting"), 
                    c.selecting = !1, d._addClass(c.$element, "ui-selected"), c.selected = !0) : (d._removeClass(c.$element, "ui-selecting"), 
                    c.selecting = !1, c.startselected && (d._addClass(c.$element, "ui-unselecting"), 
                    c.unselecting = !0), d._trigger("unselecting", b, {
                        unselecting: c.element
                    }))), c.selected && (b.metaKey || b.ctrlKey || c.startselected || (d._removeClass(c.$element, "ui-selected"), 
                    c.selected = !1, d._addClass(c.$element, "ui-unselecting"), c.unselecting = !0, 
                    d._trigger("unselecting", b, {
                        unselecting: c.element
                    })))));
                }), !1;
            }
        },
        _mouseStop: function(b) {
            var c = this;
            return this.dragged = !1, a(".ui-unselecting", this.element[0]).each(function() {
                var d = a.data(this, "selectable-item");
                c._removeClass(d.$element, "ui-unselecting"), d.unselecting = !1, d.startselected = !1, 
                c._trigger("unselected", b, {
                    unselected: d.element
                });
            }), a(".ui-selecting", this.element[0]).each(function() {
                var d = a.data(this, "selectable-item");
                c._removeClass(d.$element, "ui-selecting")._addClass(d.$element, "ui-selected"), 
                d.selecting = !1, d.selected = !0, d.startselected = !0, c._trigger("selected", b, {
                    selected: d.element
                });
            }), this._trigger("stop", b), this.helper.remove(), !1;
        }
    }), a.widget("ui.selectmenu", [ a.ui.formResetMixin, {
        version: "1.12.1",
        defaultElement: "<select>",
        options: {
            appendTo: null,
            classes: {
                "ui-selectmenu-button-open": "ui-corner-top",
                "ui-selectmenu-button-closed": "ui-corner-all"
            },
            disabled: null,
            icons: {
                button: "ui-icon-triangle-1-s"
            },
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            width: !1,
            change: null,
            close: null,
            focus: null,
            open: null,
            select: null
        },
        _create: function() {
            var b = this.element.uniqueId().attr("id");
            this.ids = {
                element: b,
                button: b + "-button",
                menu: b + "-menu"
            }, this._drawButton(), this._drawMenu(), this._bindFormResetHandler(), this._rendered = !1, 
            this.menuItems = a();
        },
        _drawButton: function() {
            var b, c = this, d = this._parseOption(this.element.find("option:selected"), this.element[0].selectedIndex);
            this.labels = this.element.labels().attr("for", this.ids.button), this._on(this.labels, {
                click: function(a) {
                    this.button.focus(), a.preventDefault();
                }
            }), this.element.hide(), this.button = a("<span>", {
                tabindex: this.options.disabled ? -1 : 0,
                id: this.ids.button,
                role: "combobox",
                "aria-expanded": "false",
                "aria-autocomplete": "list",
                "aria-owns": this.ids.menu,
                "aria-haspopup": "true",
                title: this.element.attr("title")
            }).insertAfter(this.element), this._addClass(this.button, "ui-selectmenu-button ui-selectmenu-button-closed", "ui-button ui-widget"), 
            b = a("<span>").appendTo(this.button), this._addClass(b, "ui-selectmenu-icon", "ui-icon " + this.options.icons.button), 
            this.buttonItem = this._renderButtonItem(d).appendTo(this.button), this.options.width !== !1 && this._resizeButton(), 
            this._on(this.button, this._buttonEvents), this.button.one("focusin", function() {
                c._rendered || c._refreshMenu();
            });
        },
        _drawMenu: function() {
            var b = this;
            this.menu = a("<ul>", {
                "aria-hidden": "true",
                "aria-labelledby": this.ids.button,
                id: this.ids.menu
            }), this.menuWrap = a("<div>").append(this.menu), this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front"), 
            this.menuWrap.appendTo(this._appendTo()), this.menuInstance = this.menu.menu({
                classes: {
                    "ui-menu": "ui-corner-bottom"
                },
                role: "listbox",
                select: function(a, c) {
                    a.preventDefault(), b._setSelection(), b._select(c.item.data("ui-selectmenu-item"), a);
                },
                focus: function(a, c) {
                    var d = c.item.data("ui-selectmenu-item");
                    null != b.focusIndex && d.index !== b.focusIndex && (b._trigger("focus", a, {
                        item: d
                    }), b.isOpen || b._select(d, a)), b.focusIndex = d.index, b.button.attr("aria-activedescendant", b.menuItems.eq(d.index).attr("id"));
                }
            }).menu("instance"), this.menuInstance._off(this.menu, "mouseleave"), this.menuInstance._closeOnDocumentClick = function() {
                return !1;
            }, this.menuInstance._isDivider = function() {
                return !1;
            };
        },
        refresh: function() {
            this._refreshMenu(), this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item") || {})), 
            null === this.options.width && this._resizeButton();
        },
        _refreshMenu: function() {
            var a, b = this.element.find("option");
            this.menu.empty(), this._parseOptions(b), this._renderMenu(this.menu, this.items), 
            this.menuInstance.refresh(), this.menuItems = this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"), 
            this._rendered = !0, b.length && (a = this._getSelectedItem(), this.menuInstance.focus(null, a), 
            this._setAria(a.data("ui-selectmenu-item")), this._setOption("disabled", this.element.prop("disabled")));
        },
        open: function(a) {
            this.options.disabled || (this._rendered ? (this._removeClass(this.menu.find(".ui-state-active"), null, "ui-state-active"), 
            this.menuInstance.focus(null, this._getSelectedItem())) : this._refreshMenu(), this.menuItems.length && (this.isOpen = !0, 
            this._toggleAttr(), this._resizeMenu(), this._position(), this._on(this.document, this._documentClick), 
            this._trigger("open", a)));
        },
        _position: function() {
            this.menuWrap.position(a.extend({
                of: this.button
            }, this.options.position));
        },
        close: function(a) {
            this.isOpen && (this.isOpen = !1, this._toggleAttr(), this.range = null, this._off(this.document), 
            this._trigger("close", a));
        },
        widget: function() {
            return this.button;
        },
        menuWidget: function() {
            return this.menu;
        },
        _renderButtonItem: function(b) {
            var c = a("<span>");
            return this._setText(c, b.label), this._addClass(c, "ui-selectmenu-text"), c;
        },
        _renderMenu: function(b, c) {
            var d = this, e = "";
            a.each(c, function(c, f) {
                var g;
                f.optgroup !== e && (g = a("<li>", {
                    text: f.optgroup
                }), d._addClass(g, "ui-selectmenu-optgroup", "ui-menu-divider" + (f.element.parent("optgroup").prop("disabled") ? " ui-state-disabled" : "")), 
                g.appendTo(b), e = f.optgroup), d._renderItemData(b, f);
            });
        },
        _renderItemData: function(a, b) {
            return this._renderItem(a, b).data("ui-selectmenu-item", b);
        },
        _renderItem: function(b, c) {
            var d = a("<li>"), e = a("<div>", {
                title: c.element.attr("title")
            });
            return c.disabled && this._addClass(d, null, "ui-state-disabled"), this._setText(e, c.label), 
            d.append(e).appendTo(b);
        },
        _setText: function(a, b) {
            b ? a.text(b) : a.html("&#160;");
        },
        _move: function(a, b) {
            var c, d, e = ".ui-menu-item";
            this.isOpen ? c = this.menuItems.eq(this.focusIndex).parent("li") : (c = this.menuItems.eq(this.element[0].selectedIndex).parent("li"), 
            e += ":not(.ui-state-disabled)"), d = "first" === a || "last" === a ? c["first" === a ? "prevAll" : "nextAll"](e).eq(-1) : c[a + "All"](e).eq(0), 
            d.length && this.menuInstance.focus(b, d);
        },
        _getSelectedItem: function() {
            return this.menuItems.eq(this.element[0].selectedIndex).parent("li");
        },
        _toggle: function(a) {
            this[this.isOpen ? "close" : "open"](a);
        },
        _setSelection: function() {
            var a;
            this.range && (window.getSelection ? (a = window.getSelection(), a.removeAllRanges(), 
            a.addRange(this.range)) : this.range.select(), this.button.focus());
        },
        _documentClick: {
            mousedown: function(b) {
                this.isOpen && (a(b.target).closest(".ui-selectmenu-menu, #" + a.ui.escapeSelector(this.ids.button)).length || this.close(b));
            }
        },
        _buttonEvents: {
            mousedown: function() {
                var a;
                window.getSelection ? (a = window.getSelection(), a.rangeCount && (this.range = a.getRangeAt(0))) : this.range = document.selection.createRange();
            },
            click: function(a) {
                this._setSelection(), this._toggle(a);
            },
            keydown: function(b) {
                var c = !0;
                switch (b.keyCode) {
                  case a.ui.keyCode.TAB:
                  case a.ui.keyCode.ESCAPE:
                    this.close(b), c = !1;
                    break;

                  case a.ui.keyCode.ENTER:
                    this.isOpen && this._selectFocusedItem(b);
                    break;

                  case a.ui.keyCode.UP:
                    b.altKey ? this._toggle(b) : this._move("prev", b);
                    break;

                  case a.ui.keyCode.DOWN:
                    b.altKey ? this._toggle(b) : this._move("next", b);
                    break;

                  case a.ui.keyCode.SPACE:
                    this.isOpen ? this._selectFocusedItem(b) : this._toggle(b);
                    break;

                  case a.ui.keyCode.LEFT:
                    this._move("prev", b);
                    break;

                  case a.ui.keyCode.RIGHT:
                    this._move("next", b);
                    break;

                  case a.ui.keyCode.HOME:
                  case a.ui.keyCode.PAGE_UP:
                    this._move("first", b);
                    break;

                  case a.ui.keyCode.END:
                  case a.ui.keyCode.PAGE_DOWN:
                    this._move("last", b);
                    break;

                  default:
                    this.menu.trigger(b), c = !1;
                }
                c && b.preventDefault();
            }
        },
        _selectFocusedItem: function(a) {
            var b = this.menuItems.eq(this.focusIndex).parent("li");
            b.hasClass("ui-state-disabled") || this._select(b.data("ui-selectmenu-item"), a);
        },
        _select: function(a, b) {
            var c = this.element[0].selectedIndex;
            this.element[0].selectedIndex = a.index, this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(a)), 
            this._setAria(a), this._trigger("select", b, {
                item: a
            }), a.index !== c && this._trigger("change", b, {
                item: a
            }), this.close(b);
        },
        _setAria: function(a) {
            var b = this.menuItems.eq(a.index).attr("id");
            this.button.attr({
                "aria-labelledby": b,
                "aria-activedescendant": b
            }), this.menu.attr("aria-activedescendant", b);
        },
        _setOption: function(a, b) {
            if ("icons" === a) {
                var c = this.button.find("span.ui-icon");
                this._removeClass(c, null, this.options.icons.button)._addClass(c, null, b.button);
            }
            this._super(a, b), "appendTo" === a && this.menuWrap.appendTo(this._appendTo()), 
            "width" === a && this._resizeButton();
        },
        _setOptionDisabled: function(a) {
            this._super(a), this.menuInstance.option("disabled", a), this.button.attr("aria-disabled", a), 
            this._toggleClass(this.button, null, "ui-state-disabled", a), this.element.prop("disabled", a), 
            a ? (this.button.attr("tabindex", -1), this.close()) : this.button.attr("tabindex", 0);
        },
        _appendTo: function() {
            var b = this.options.appendTo;
            return b && (b = b.jquery || b.nodeType ? a(b) : this.document.find(b).eq(0)), b && b[0] || (b = this.element.closest(".ui-front, dialog")), 
            b.length || (b = this.document[0].body), b;
        },
        _toggleAttr: function() {
            this.button.attr("aria-expanded", this.isOpen), this._removeClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "closed" : "open"))._addClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "open" : "closed"))._toggleClass(this.menuWrap, "ui-selectmenu-open", null, this.isOpen), 
            this.menu.attr("aria-hidden", !this.isOpen);
        },
        _resizeButton: function() {
            var a = this.options.width;
            return a === !1 ? (this.button.css("width", ""), void 0) : (null === a && (a = this.element.show().outerWidth(), 
            this.element.hide()), this.button.outerWidth(a), void 0);
        },
        _resizeMenu: function() {
            this.menu.outerWidth(Math.max(this.button.outerWidth(), this.menu.width("").outerWidth() + 1));
        },
        _getCreateOptions: function() {
            var a = this._super();
            return a.disabled = this.element.prop("disabled"), a;
        },
        _parseOptions: function(b) {
            var c = this, d = [];
            b.each(function(b, e) {
                d.push(c._parseOption(a(e), b));
            }), this.items = d;
        },
        _parseOption: function(a, b) {
            var c = a.parent("optgroup");
            return {
                element: a,
                index: b,
                value: a.val(),
                label: a.text(),
                optgroup: c.attr("label") || "",
                disabled: c.prop("disabled") || a.prop("disabled")
            };
        },
        _destroy: function() {
            this._unbindFormResetHandler(), this.menuWrap.remove(), this.button.remove(), this.element.show(), 
            this.element.removeUniqueId(), this.labels.attr("for", this.ids.element);
        }
    } ]), a.widget("ui.slider", a.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "slide",
        options: {
            animate: !1,
            classes: {
                "ui-slider": "ui-corner-all",
                "ui-slider-handle": "ui-corner-all",
                "ui-slider-range": "ui-corner-all ui-widget-header"
            },
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: !1,
            step: 1,
            value: 0,
            values: null,
            change: null,
            slide: null,
            start: null,
            stop: null
        },
        numPages: 5,
        _create: function() {
            this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, 
            this._detectOrientation(), this._mouseInit(), this._calculateNewMax(), this._addClass("ui-slider ui-slider-" + this.orientation, "ui-widget ui-widget-content"), 
            this._refresh(), this._animateOff = !1;
        },
        _refresh: function() {
            this._createRange(), this._createHandles(), this._setupEvents(), this._refreshValue();
        },
        _createHandles: function() {
            var b, c, d = this.options, e = this.element.find(".ui-slider-handle"), f = "<span tabindex='0'></span>", g = [];
            for (c = d.values && d.values.length || 1, e.length > c && (e.slice(c).remove(), 
            e = e.slice(0, c)), b = e.length; c > b; b++) g.push(f);
            this.handles = e.add(a(g.join("")).appendTo(this.element)), this._addClass(this.handles, "ui-slider-handle", "ui-state-default"), 
            this.handle = this.handles.eq(0), this.handles.each(function(b) {
                a(this).data("ui-slider-handle-index", b).attr("tabIndex", 0);
            });
        },
        _createRange: function() {
            var b = this.options;
            b.range ? (b.range === !0 && (b.values ? b.values.length && 2 !== b.values.length ? b.values = [ b.values[0], b.values[0] ] : a.isArray(b.values) && (b.values = b.values.slice(0)) : b.values = [ this._valueMin(), this._valueMin() ]), 
            this.range && this.range.length ? (this._removeClass(this.range, "ui-slider-range-min ui-slider-range-max"), 
            this.range.css({
                left: "",
                bottom: ""
            })) : (this.range = a("<div>").appendTo(this.element), this._addClass(this.range, "ui-slider-range")), 
            ("min" === b.range || "max" === b.range) && this._addClass(this.range, "ui-slider-range-" + b.range)) : (this.range && this.range.remove(), 
            this.range = null);
        },
        _setupEvents: function() {
            this._off(this.handles), this._on(this.handles, this._handleEvents), this._hoverable(this.handles), 
            this._focusable(this.handles);
        },
        _destroy: function() {
            this.handles.remove(), this.range && this.range.remove(), this._mouseDestroy();
        },
        _mouseCapture: function(b) {
            var c, d, e, f, g, h, i, j, k = this, l = this.options;
            return l.disabled ? !1 : (this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            }, this.elementOffset = this.element.offset(), c = {
                x: b.pageX,
                y: b.pageY
            }, d = this._normValueFromMouse(c), e = this._valueMax() - this._valueMin() + 1, 
            this.handles.each(function(b) {
                var c = Math.abs(d - k.values(b));
                (e > c || e === c && (b === k._lastChangedValue || k.values(b) === l.min)) && (e = c, 
                f = a(this), g = b);
            }), h = this._start(b, g), h === !1 ? !1 : (this._mouseSliding = !0, this._handleIndex = g, 
            this._addClass(f, null, "ui-state-active"), f.trigger("focus"), i = f.offset(), 
            j = !a(b.target).parents().addBack().is(".ui-slider-handle"), this._clickOffset = j ? {
                left: 0,
                top: 0
            } : {
                left: b.pageX - i.left - f.width() / 2,
                top: b.pageY - i.top - f.height() / 2 - (parseInt(f.css("borderTopWidth"), 10) || 0) - (parseInt(f.css("borderBottomWidth"), 10) || 0) + (parseInt(f.css("marginTop"), 10) || 0)
            }, this.handles.hasClass("ui-state-hover") || this._slide(b, g, d), this._animateOff = !0, 
            !0));
        },
        _mouseStart: function() {
            return !0;
        },
        _mouseDrag: function(a) {
            var b = {
                x: a.pageX,
                y: a.pageY
            }, c = this._normValueFromMouse(b);
            return this._slide(a, this._handleIndex, c), !1;
        },
        _mouseStop: function(a) {
            return this._removeClass(this.handles, null, "ui-state-active"), this._mouseSliding = !1, 
            this._stop(a, this._handleIndex), this._change(a, this._handleIndex), this._handleIndex = null, 
            this._clickOffset = null, this._animateOff = !1, !1;
        },
        _detectOrientation: function() {
            this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal";
        },
        _normValueFromMouse: function(a) {
            var b, c, d, e, f;
            return "horizontal" === this.orientation ? (b = this.elementSize.width, c = a.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (b = this.elementSize.height, 
            c = a.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), 
            d = c / b, d > 1 && (d = 1), 0 > d && (d = 0), "vertical" === this.orientation && (d = 1 - d), 
            e = this._valueMax() - this._valueMin(), f = this._valueMin() + d * e, this._trimAlignValue(f);
        },
        _uiHash: function(a, b, c) {
            var d = {
                handle: this.handles[a],
                handleIndex: a,
                value: void 0 !== b ? b : this.value()
            };
            return this._hasMultipleValues() && (d.value = void 0 !== b ? b : this.values(a), 
            d.values = c || this.values()), d;
        },
        _hasMultipleValues: function() {
            return this.options.values && this.options.values.length;
        },
        _start: function(a, b) {
            return this._trigger("start", a, this._uiHash(b));
        },
        _slide: function(a, b, c) {
            var d, e, f = this.value(), g = this.values();
            this._hasMultipleValues() && (e = this.values(b ? 0 : 1), f = this.values(b), 2 === this.options.values.length && this.options.range === !0 && (c = 0 === b ? Math.min(e, c) : Math.max(e, c)), 
            g[b] = c), c !== f && (d = this._trigger("slide", a, this._uiHash(b, c, g)), d !== !1 && (this._hasMultipleValues() ? this.values(b, c) : this.value(c)));
        },
        _stop: function(a, b) {
            this._trigger("stop", a, this._uiHash(b));
        },
        _change: function(a, b) {
            this._keySliding || this._mouseSliding || (this._lastChangedValue = b, this._trigger("change", a, this._uiHash(b)));
        },
        value: function(a) {
            return arguments.length ? (this.options.value = this._trimAlignValue(a), this._refreshValue(), 
            this._change(null, 0), void 0) : this._value();
        },
        values: function(b, c) {
            var d, e, f;
            if (arguments.length > 1) return this.options.values[b] = this._trimAlignValue(c), 
            this._refreshValue(), this._change(null, b), void 0;
            if (!arguments.length) return this._values();
            if (!a.isArray(arguments[0])) return this._hasMultipleValues() ? this._values(b) : this.value();
            for (d = this.options.values, e = arguments[0], f = 0; d.length > f; f += 1) d[f] = this._trimAlignValue(e[f]), 
            this._change(null, f);
            this._refreshValue();
        },
        _setOption: function(b, c) {
            var d, e = 0;
            switch ("range" === b && this.options.range === !0 && ("min" === c ? (this.options.value = this._values(0), 
            this.options.values = null) : "max" === c && (this.options.value = this._values(this.options.values.length - 1), 
            this.options.values = null)), a.isArray(this.options.values) && (e = this.options.values.length), 
            this._super(b, c), b) {
              case "orientation":
                this._detectOrientation(), this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-" + this.orientation), 
                this._refreshValue(), this.options.range && this._refreshRange(c), this.handles.css("horizontal" === c ? "bottom" : "left", "");
                break;

              case "value":
                this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1;
                break;

              case "values":
                for (this._animateOff = !0, this._refreshValue(), d = e - 1; d >= 0; d--) this._change(null, d);
                this._animateOff = !1;
                break;

              case "step":
              case "min":
              case "max":
                this._animateOff = !0, this._calculateNewMax(), this._refreshValue(), this._animateOff = !1;
                break;

              case "range":
                this._animateOff = !0, this._refresh(), this._animateOff = !1;
            }
        },
        _setOptionDisabled: function(a) {
            this._super(a), this._toggleClass(null, "ui-state-disabled", !!a);
        },
        _value: function() {
            var a = this.options.value;
            return a = this._trimAlignValue(a);
        },
        _values: function(a) {
            var b, c, d;
            if (arguments.length) return b = this.options.values[a], b = this._trimAlignValue(b);
            if (this._hasMultipleValues()) {
                for (c = this.options.values.slice(), d = 0; c.length > d; d += 1) c[d] = this._trimAlignValue(c[d]);
                return c;
            }
            return [];
        },
        _trimAlignValue: function(a) {
            if (this._valueMin() >= a) return this._valueMin();
            if (a >= this._valueMax()) return this._valueMax();
            var b = this.options.step > 0 ? this.options.step : 1, c = (a - this._valueMin()) % b, d = a - c;
            return 2 * Math.abs(c) >= b && (d += c > 0 ? b : -b), parseFloat(d.toFixed(5));
        },
        _calculateNewMax: function() {
            var a = this.options.max, b = this._valueMin(), c = this.options.step, d = Math.round((a - b) / c) * c;
            a = d + b, a > this.options.max && (a -= c), this.max = parseFloat(a.toFixed(this._precision()));
        },
        _precision: function() {
            var a = this._precisionOf(this.options.step);
            return null !== this.options.min && (a = Math.max(a, this._precisionOf(this.options.min))), 
            a;
        },
        _precisionOf: function(a) {
            var b = "" + a, c = b.indexOf(".");
            return -1 === c ? 0 : b.length - c - 1;
        },
        _valueMin: function() {
            return this.options.min;
        },
        _valueMax: function() {
            return this.max;
        },
        _refreshRange: function(a) {
            "vertical" === a && this.range.css({
                width: "",
                left: ""
            }), "horizontal" === a && this.range.css({
                height: "",
                bottom: ""
            });
        },
        _refreshValue: function() {
            var b, c, d, e, f, g = this.options.range, h = this.options, i = this, j = this._animateOff ? !1 : h.animate, k = {};
            this._hasMultipleValues() ? this.handles.each(function(d) {
                c = 100 * ((i.values(d) - i._valueMin()) / (i._valueMax() - i._valueMin())), k["horizontal" === i.orientation ? "left" : "bottom"] = c + "%", 
                a(this).stop(1, 1)[j ? "animate" : "css"](k, h.animate), i.options.range === !0 && ("horizontal" === i.orientation ? (0 === d && i.range.stop(1, 1)[j ? "animate" : "css"]({
                    left: c + "%"
                }, h.animate), 1 === d && i.range[j ? "animate" : "css"]({
                    width: c - b + "%"
                }, {
                    queue: !1,
                    duration: h.animate
                })) : (0 === d && i.range.stop(1, 1)[j ? "animate" : "css"]({
                    bottom: c + "%"
                }, h.animate), 1 === d && i.range[j ? "animate" : "css"]({
                    height: c - b + "%"
                }, {
                    queue: !1,
                    duration: h.animate
                }))), b = c;
            }) : (d = this.value(), e = this._valueMin(), f = this._valueMax(), c = f !== e ? 100 * ((d - e) / (f - e)) : 0, 
            k["horizontal" === this.orientation ? "left" : "bottom"] = c + "%", this.handle.stop(1, 1)[j ? "animate" : "css"](k, h.animate), 
            "min" === g && "horizontal" === this.orientation && this.range.stop(1, 1)[j ? "animate" : "css"]({
                width: c + "%"
            }, h.animate), "max" === g && "horizontal" === this.orientation && this.range.stop(1, 1)[j ? "animate" : "css"]({
                width: 100 - c + "%"
            }, h.animate), "min" === g && "vertical" === this.orientation && this.range.stop(1, 1)[j ? "animate" : "css"]({
                height: c + "%"
            }, h.animate), "max" === g && "vertical" === this.orientation && this.range.stop(1, 1)[j ? "animate" : "css"]({
                height: 100 - c + "%"
            }, h.animate));
        },
        _handleEvents: {
            keydown: function(b) {
                var c, d, e, f, g = a(b.target).data("ui-slider-handle-index");
                switch (b.keyCode) {
                  case a.ui.keyCode.HOME:
                  case a.ui.keyCode.END:
                  case a.ui.keyCode.PAGE_UP:
                  case a.ui.keyCode.PAGE_DOWN:
                  case a.ui.keyCode.UP:
                  case a.ui.keyCode.RIGHT:
                  case a.ui.keyCode.DOWN:
                  case a.ui.keyCode.LEFT:
                    if (b.preventDefault(), !this._keySliding && (this._keySliding = !0, this._addClass(a(b.target), null, "ui-state-active"), 
                    c = this._start(b, g), c === !1)) return;
                }
                switch (f = this.options.step, d = e = this._hasMultipleValues() ? this.values(g) : this.value(), 
                b.keyCode) {
                  case a.ui.keyCode.HOME:
                    e = this._valueMin();
                    break;

                  case a.ui.keyCode.END:
                    e = this._valueMax();
                    break;

                  case a.ui.keyCode.PAGE_UP:
                    e = this._trimAlignValue(d + (this._valueMax() - this._valueMin()) / this.numPages);
                    break;

                  case a.ui.keyCode.PAGE_DOWN:
                    e = this._trimAlignValue(d - (this._valueMax() - this._valueMin()) / this.numPages);
                    break;

                  case a.ui.keyCode.UP:
                  case a.ui.keyCode.RIGHT:
                    if (d === this._valueMax()) return;
                    e = this._trimAlignValue(d + f);
                    break;

                  case a.ui.keyCode.DOWN:
                  case a.ui.keyCode.LEFT:
                    if (d === this._valueMin()) return;
                    e = this._trimAlignValue(d - f);
                }
                this._slide(b, g, e);
            },
            keyup: function(b) {
                var c = a(b.target).data("ui-slider-handle-index");
                this._keySliding && (this._keySliding = !1, this._stop(b, c), this._change(b, c), 
                this._removeClass(a(b.target), null, "ui-state-active"));
            }
        }
    }), a.widget("ui.sortable", a.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "sort",
        ready: !1,
        options: {
            appendTo: "parent",
            axis: !1,
            connectWith: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            dropOnEmpty: !0,
            forcePlaceholderSize: !1,
            forceHelperSize: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            items: "> *",
            opacity: !1,
            placeholder: !1,
            revert: !1,
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1e3,
            activate: null,
            beforeStop: null,
            change: null,
            deactivate: null,
            out: null,
            over: null,
            receive: null,
            remove: null,
            sort: null,
            start: null,
            stop: null,
            update: null
        },
        _isOverAxis: function(a, b, c) {
            return a >= b && b + c > a;
        },
        _isFloating: function(a) {
            return /left|right/.test(a.css("float")) || /inline|table-cell/.test(a.css("display"));
        },
        _create: function() {
            this.containerCache = {}, this._addClass("ui-sortable"), this.refresh(), this.offset = this.element.offset(), 
            this._mouseInit(), this._setHandleClassName(), this.ready = !0;
        },
        _setOption: function(a, b) {
            this._super(a, b), "handle" === a && this._setHandleClassName();
        },
        _setHandleClassName: function() {
            var b = this;
            this._removeClass(this.element.find(".ui-sortable-handle"), "ui-sortable-handle"), 
            a.each(this.items, function() {
                b._addClass(this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item, "ui-sortable-handle");
            });
        },
        _destroy: function() {
            this._mouseDestroy();
            for (var a = this.items.length - 1; a >= 0; a--) this.items[a].item.removeData(this.widgetName + "-item");
            return this;
        },
        _mouseCapture: function(b, c) {
            var d = null, e = !1, f = this;
            return this.reverting ? !1 : this.options.disabled || "static" === this.options.type ? !1 : (this._refreshItems(b), 
            a(b.target).parents().each(function() {
                return a.data(this, f.widgetName + "-item") === f ? (d = a(this), !1) : void 0;
            }), a.data(b.target, f.widgetName + "-item") === f && (d = a(b.target)), d ? !this.options.handle || c || (a(this.options.handle, d).find("*").addBack().each(function() {
                this === b.target && (e = !0);
            }), e) ? (this.currentItem = d, this._removeCurrentsFromItems(), !0) : !1 : !1);
        },
        _mouseStart: function(b, c, d) {
            var e, f, g = this.options;
            if (this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(b), 
            this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), 
            this.offset = this.currentItem.offset(), this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            }, a.extend(this.offset, {
                click: {
                    left: b.pageX - this.offset.left,
                    top: b.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), 
            this.originalPosition = this._generatePosition(b), this.originalPageX = b.pageX, 
            this.originalPageY = b.pageY, g.cursorAt && this._adjustOffsetFromHelper(g.cursorAt), 
            this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            }, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), 
            g.containment && this._setContainment(), g.cursor && "auto" !== g.cursor && (f = this.document.find("body"), 
            this.storedCursor = f.css("cursor"), f.css("cursor", g.cursor), this.storedStylesheet = a("<style>*{ cursor: " + g.cursor + " !important; }</style>").appendTo(f)), 
            g.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), 
            this.helper.css("opacity", g.opacity)), g.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), 
            this.helper.css("zIndex", g.zIndex)), this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), 
            this._trigger("start", b, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), 
            !d) for (e = this.containers.length - 1; e >= 0; e--) this.containers[e]._trigger("activate", b, this._uiHash(this));
            return a.ui.ddmanager && (a.ui.ddmanager.current = this), a.ui.ddmanager && !g.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b), 
            this.dragging = !0, this._addClass(this.helper, "ui-sortable-helper"), this._mouseDrag(b), 
            !0;
        },
        _mouseDrag: function(b) {
            var c, d, e, f, g = this.options, h = !1;
            for (this.position = this._generatePosition(b), this.positionAbs = this._convertPositionTo("absolute"), 
            this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs), this.options.scroll && (this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - b.pageY < g.scrollSensitivity ? this.scrollParent[0].scrollTop = h = this.scrollParent[0].scrollTop + g.scrollSpeed : b.pageY - this.overflowOffset.top < g.scrollSensitivity && (this.scrollParent[0].scrollTop = h = this.scrollParent[0].scrollTop - g.scrollSpeed), 
            this.overflowOffset.left + this.scrollParent[0].offsetWidth - b.pageX < g.scrollSensitivity ? this.scrollParent[0].scrollLeft = h = this.scrollParent[0].scrollLeft + g.scrollSpeed : b.pageX - this.overflowOffset.left < g.scrollSensitivity && (this.scrollParent[0].scrollLeft = h = this.scrollParent[0].scrollLeft - g.scrollSpeed)) : (b.pageY - this.document.scrollTop() < g.scrollSensitivity ? h = this.document.scrollTop(this.document.scrollTop() - g.scrollSpeed) : this.window.height() - (b.pageY - this.document.scrollTop()) < g.scrollSensitivity && (h = this.document.scrollTop(this.document.scrollTop() + g.scrollSpeed)), 
            b.pageX - this.document.scrollLeft() < g.scrollSensitivity ? h = this.document.scrollLeft(this.document.scrollLeft() - g.scrollSpeed) : this.window.width() - (b.pageX - this.document.scrollLeft()) < g.scrollSensitivity && (h = this.document.scrollLeft(this.document.scrollLeft() + g.scrollSpeed))), 
            h !== !1 && a.ui.ddmanager && !g.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b)), 
            this.positionAbs = this._convertPositionTo("absolute"), this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), 
            this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), 
            c = this.items.length - 1; c >= 0; c--) if (d = this.items[c], e = d.item[0], f = this._intersectsWithPointer(d), 
            f && d.instance === this.currentContainer && e !== this.currentItem[0] && this.placeholder[1 === f ? "next" : "prev"]()[0] !== e && !a.contains(this.placeholder[0], e) && ("semi-dynamic" === this.options.type ? !a.contains(this.element[0], e) : !0)) {
                if (this.direction = 1 === f ? "down" : "up", "pointer" !== this.options.tolerance && !this._intersectsWithSides(d)) break;
                this._rearrange(b, d), this._trigger("change", b, this._uiHash());
                break;
            }
            return this._contactContainers(b), a.ui.ddmanager && a.ui.ddmanager.drag(this, b), 
            this._trigger("sort", b, this._uiHash()), this.lastPositionAbs = this.positionAbs, 
            !1;
        },
        _mouseStop: function(b, c) {
            if (b) {
                if (a.ui.ddmanager && !this.options.dropBehaviour && a.ui.ddmanager.drop(this, b), 
                this.options.revert) {
                    var d = this, e = this.placeholder.offset(), f = this.options.axis, g = {};
                    f && "x" !== f || (g.left = e.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft)), 
                    f && "y" !== f || (g.top = e.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop)), 
                    this.reverting = !0, a(this.helper).animate(g, parseInt(this.options.revert, 10) || 500, function() {
                        d._clear(b);
                    });
                } else this._clear(b, c);
                return !1;
            }
        },
        cancel: function() {
            if (this.dragging) {
                this._mouseUp(new a.Event("mouseup", {
                    target: null
                })), "original" === this.options.helper ? (this.currentItem.css(this._storedCSS), 
                this._removeClass(this.currentItem, "ui-sortable-helper")) : this.currentItem.show();
                for (var b = this.containers.length - 1; b >= 0; b--) this.containers[b]._trigger("deactivate", null, this._uiHash(this)), 
                this.containers[b].containerCache.over && (this.containers[b]._trigger("out", null, this._uiHash(this)), 
                this.containers[b].containerCache.over = 0);
            }
            return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), 
            "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), 
            a.extend(this, {
                helper: null,
                dragging: !1,
                reverting: !1,
                _noFinalSort: null
            }), this.domPosition.prev ? a(this.domPosition.prev).after(this.currentItem) : a(this.domPosition.parent).prepend(this.currentItem)), 
            this;
        },
        serialize: function(b) {
            var c = this._getItemsAsjQuery(b && b.connected), d = [];
            return b = b || {}, a(c).each(function() {
                var c = (a(b.item || this).attr(b.attribute || "id") || "").match(b.expression || /(.+)[\-=_](.+)/);
                c && d.push((b.key || c[1] + "[]") + "=" + (b.key && b.expression ? c[1] : c[2]));
            }), !d.length && b.key && d.push(b.key + "="), d.join("&");
        },
        toArray: function(b) {
            var c = this._getItemsAsjQuery(b && b.connected), d = [];
            return b = b || {}, c.each(function() {
                d.push(a(b.item || this).attr(b.attribute || "id") || "");
            }), d;
        },
        _intersectsWith: function(a) {
            var b = this.positionAbs.left, c = b + this.helperProportions.width, d = this.positionAbs.top, e = d + this.helperProportions.height, f = a.left, g = f + a.width, h = a.top, i = h + a.height, j = this.offset.click.top, k = this.offset.click.left, l = "x" === this.options.axis || d + j > h && i > d + j, m = "y" === this.options.axis || b + k > f && g > b + k, n = l && m;
            return "pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > a[this.floating ? "width" : "height"] ? n : b + this.helperProportions.width / 2 > f && g > c - this.helperProportions.width / 2 && d + this.helperProportions.height / 2 > h && i > e - this.helperProportions.height / 2;
        },
        _intersectsWithPointer: function(a) {
            var b, c, d = "x" === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, a.top, a.height), e = "y" === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, a.left, a.width), f = d && e;
            return f ? (b = this._getDragVerticalDirection(), c = this._getDragHorizontalDirection(), 
            this.floating ? "right" === c || "down" === b ? 2 : 1 : b && ("down" === b ? 2 : 1)) : !1;
        },
        _intersectsWithSides: function(a) {
            var b = this._isOverAxis(this.positionAbs.top + this.offset.click.top, a.top + a.height / 2, a.height), c = this._isOverAxis(this.positionAbs.left + this.offset.click.left, a.left + a.width / 2, a.width), d = this._getDragVerticalDirection(), e = this._getDragHorizontalDirection();
            return this.floating && e ? "right" === e && c || "left" === e && !c : d && ("down" === d && b || "up" === d && !b);
        },
        _getDragVerticalDirection: function() {
            var a = this.positionAbs.top - this.lastPositionAbs.top;
            return 0 !== a && (a > 0 ? "down" : "up");
        },
        _getDragHorizontalDirection: function() {
            var a = this.positionAbs.left - this.lastPositionAbs.left;
            return 0 !== a && (a > 0 ? "right" : "left");
        },
        refresh: function(a) {
            return this._refreshItems(a), this._setHandleClassName(), this.refreshPositions(), 
            this;
        },
        _connectWith: function() {
            var a = this.options;
            return a.connectWith.constructor === String ? [ a.connectWith ] : a.connectWith;
        },
        _getItemsAsjQuery: function(b) {
            function c() {
                h.push(this);
            }
            var d, e, f, g, h = [], i = [], j = this._connectWith();
            if (j && b) for (d = j.length - 1; d >= 0; d--) for (f = a(j[d], this.document[0]), 
            e = f.length - 1; e >= 0; e--) g = a.data(f[e], this.widgetFullName), g && g !== this && !g.options.disabled && i.push([ a.isFunction(g.options.items) ? g.options.items.call(g.element) : a(g.options.items, g.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), g ]);
            for (i.push([ a.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                options: this.options,
                item: this.currentItem
            }) : a(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this ]), 
            d = i.length - 1; d >= 0; d--) i[d][0].each(c);
            return a(h);
        },
        _removeCurrentsFromItems: function() {
            var b = this.currentItem.find(":data(" + this.widgetName + "-item)");
            this.items = a.grep(this.items, function(a) {
                for (var c = 0; b.length > c; c++) if (b[c] === a.item[0]) return !1;
                return !0;
            });
        },
        _refreshItems: function(b) {
            this.items = [], this.containers = [ this ];
            var c, d, e, f, g, h, i, j, k = this.items, l = [ [ a.isFunction(this.options.items) ? this.options.items.call(this.element[0], b, {
                item: this.currentItem
            }) : a(this.options.items, this.element), this ] ], m = this._connectWith();
            if (m && this.ready) for (c = m.length - 1; c >= 0; c--) for (e = a(m[c], this.document[0]), 
            d = e.length - 1; d >= 0; d--) f = a.data(e[d], this.widgetFullName), f && f !== this && !f.options.disabled && (l.push([ a.isFunction(f.options.items) ? f.options.items.call(f.element[0], b, {
                item: this.currentItem
            }) : a(f.options.items, f.element), f ]), this.containers.push(f));
            for (c = l.length - 1; c >= 0; c--) for (g = l[c][1], h = l[c][0], d = 0, j = h.length; j > d; d++) i = a(h[d]), 
            i.data(this.widgetName + "-item", g), k.push({
                item: i,
                instance: g,
                width: 0,
                height: 0,
                left: 0,
                top: 0
            });
        },
        refreshPositions: function(b) {
            this.floating = this.items.length ? "x" === this.options.axis || this._isFloating(this.items[0].item) : !1, 
            this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
            var c, d, e, f;
            for (c = this.items.length - 1; c >= 0; c--) d = this.items[c], d.instance !== this.currentContainer && this.currentContainer && d.item[0] !== this.currentItem[0] || (e = this.options.toleranceElement ? a(this.options.toleranceElement, d.item) : d.item, 
            b || (d.width = e.outerWidth(), d.height = e.outerHeight()), f = e.offset(), d.left = f.left, 
            d.top = f.top);
            if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this); else for (c = this.containers.length - 1; c >= 0; c--) f = this.containers[c].element.offset(), 
            this.containers[c].containerCache.left = f.left, this.containers[c].containerCache.top = f.top, 
            this.containers[c].containerCache.width = this.containers[c].element.outerWidth(), 
            this.containers[c].containerCache.height = this.containers[c].element.outerHeight();
            return this;
        },
        _createPlaceholder: function(b) {
            b = b || this;
            var c, d = b.options;
            d.placeholder && d.placeholder.constructor !== String || (c = d.placeholder, d.placeholder = {
                element: function() {
                    var d = b.currentItem[0].nodeName.toLowerCase(), e = a("<" + d + ">", b.document[0]);
                    return b._addClass(e, "ui-sortable-placeholder", c || b.currentItem[0].className)._removeClass(e, "ui-sortable-helper"), 
                    "tbody" === d ? b._createTrPlaceholder(b.currentItem.find("tr").eq(0), a("<tr>", b.document[0]).appendTo(e)) : "tr" === d ? b._createTrPlaceholder(b.currentItem, e) : "img" === d && e.attr("src", b.currentItem.attr("src")), 
                    c || e.css("visibility", "hidden"), e;
                },
                update: function(a, e) {
                    (!c || d.forcePlaceholderSize) && (e.height() || e.height(b.currentItem.innerHeight() - parseInt(b.currentItem.css("paddingTop") || 0, 10) - parseInt(b.currentItem.css("paddingBottom") || 0, 10)), 
                    e.width() || e.width(b.currentItem.innerWidth() - parseInt(b.currentItem.css("paddingLeft") || 0, 10) - parseInt(b.currentItem.css("paddingRight") || 0, 10)));
                }
            }), b.placeholder = a(d.placeholder.element.call(b.element, b.currentItem)), b.currentItem.after(b.placeholder), 
            d.placeholder.update(b, b.placeholder);
        },
        _createTrPlaceholder: function(b, c) {
            var d = this;
            b.children().each(function() {
                a("<td>&#160;</td>", d.document[0]).attr("colspan", a(this).attr("colspan") || 1).appendTo(c);
            });
        },
        _contactContainers: function(b) {
            var c, d, e, f, g, h, i, j, k, l, m = null, n = null;
            for (c = this.containers.length - 1; c >= 0; c--) if (!a.contains(this.currentItem[0], this.containers[c].element[0])) if (this._intersectsWith(this.containers[c].containerCache)) {
                if (m && a.contains(this.containers[c].element[0], m.element[0])) continue;
                m = this.containers[c], n = c;
            } else this.containers[c].containerCache.over && (this.containers[c]._trigger("out", b, this._uiHash(this)), 
            this.containers[c].containerCache.over = 0);
            if (m) if (1 === this.containers.length) this.containers[n].containerCache.over || (this.containers[n]._trigger("over", b, this._uiHash(this)), 
            this.containers[n].containerCache.over = 1); else {
                for (e = 1e4, f = null, k = m.floating || this._isFloating(this.currentItem), g = k ? "left" : "top", 
                h = k ? "width" : "height", l = k ? "pageX" : "pageY", d = this.items.length - 1; d >= 0; d--) a.contains(this.containers[n].element[0], this.items[d].item[0]) && this.items[d].item[0] !== this.currentItem[0] && (i = this.items[d].item.offset()[g], 
                j = !1, b[l] - i > this.items[d][h] / 2 && (j = !0), e > Math.abs(b[l] - i) && (e = Math.abs(b[l] - i), 
                f = this.items[d], this.direction = j ? "up" : "down"));
                if (!f && !this.options.dropOnEmpty) return;
                if (this.currentContainer === this.containers[n]) return this.currentContainer.containerCache.over || (this.containers[n]._trigger("over", b, this._uiHash()), 
                this.currentContainer.containerCache.over = 1), void 0;
                f ? this._rearrange(b, f, null, !0) : this._rearrange(b, null, this.containers[n].element, !0), 
                this._trigger("change", b, this._uiHash()), this.containers[n]._trigger("change", b, this._uiHash(this)), 
                this.currentContainer = this.containers[n], this.options.placeholder.update(this.currentContainer, this.placeholder), 
                this.containers[n]._trigger("over", b, this._uiHash(this)), this.containers[n].containerCache.over = 1;
            }
        },
        _createHelper: function(b) {
            var c = this.options, d = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [ b, this.currentItem ])) : "clone" === c.helper ? this.currentItem.clone() : this.currentItem;
            return d.parents("body").length || a("parent" !== c.appendTo ? c.appendTo : this.currentItem[0].parentNode)[0].appendChild(d[0]), 
            d[0] === this.currentItem[0] && (this._storedCSS = {
                width: this.currentItem[0].style.width,
                height: this.currentItem[0].style.height,
                position: this.currentItem.css("position"),
                top: this.currentItem.css("top"),
                left: this.currentItem.css("left")
            }), (!d[0].style.width || c.forceHelperSize) && d.width(this.currentItem.width()), 
            (!d[0].style.height || c.forceHelperSize) && d.height(this.currentItem.height()), 
            d;
        },
        _adjustOffsetFromHelper: function(b) {
            "string" == typeof b && (b = b.split(" ")), a.isArray(b) && (b = {
                left: +b[0],
                top: +b[1] || 0
            }), "left" in b && (this.offset.click.left = b.left + this.margins.left), "right" in b && (this.offset.click.left = this.helperProportions.width - b.right + this.margins.left), 
            "top" in b && (this.offset.click.top = b.top + this.margins.top), "bottom" in b && (this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top);
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var b = this.offsetParent.offset();
            return "absolute" === this.cssPosition && this.scrollParent[0] !== this.document[0] && a.contains(this.scrollParent[0], this.offsetParent[0]) && (b.left += this.scrollParent.scrollLeft(), 
            b.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === this.document[0].body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && a.ui.ie) && (b = {
                top: 0,
                left: 0
            }), {
                top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            };
        },
        _getRelativeOffset: function() {
            if ("relative" === this.cssPosition) {
                var a = this.currentItem.position();
                return {
                    top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                };
            }
            return {
                top: 0,
                left: 0
            };
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
                top: parseInt(this.currentItem.css("marginTop"), 10) || 0
            };
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            };
        },
        _setContainment: function() {
            var b, c, d, e = this.options;
            "parent" === e.containment && (e.containment = this.helper[0].parentNode), ("document" === e.containment || "window" === e.containment) && (this.containment = [ 0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, "document" === e.containment ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, ("document" === e.containment ? this.document.height() || document.body.parentNode.scrollHeight : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top ]), 
            /^(document|window|parent)$/.test(e.containment) || (b = a(e.containment)[0], c = a(e.containment).offset(), 
            d = "hidden" !== a(b).css("overflow"), this.containment = [ c.left + (parseInt(a(b).css("borderLeftWidth"), 10) || 0) + (parseInt(a(b).css("paddingLeft"), 10) || 0) - this.margins.left, c.top + (parseInt(a(b).css("borderTopWidth"), 10) || 0) + (parseInt(a(b).css("paddingTop"), 10) || 0) - this.margins.top, c.left + (d ? Math.max(b.scrollWidth, b.offsetWidth) : b.offsetWidth) - (parseInt(a(b).css("borderLeftWidth"), 10) || 0) - (parseInt(a(b).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, c.top + (d ? Math.max(b.scrollHeight, b.offsetHeight) : b.offsetHeight) - (parseInt(a(b).css("borderTopWidth"), 10) || 0) - (parseInt(a(b).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top ]);
        },
        _convertPositionTo: function(b, c) {
            c || (c = this.position);
            var d = "absolute" === b ? 1 : -1, e = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && a.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, f = /(html|body)/i.test(e[0].tagName);
            return {
                top: c.top + this.offset.relative.top * d + this.offset.parent.top * d - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : f ? 0 : e.scrollTop()) * d,
                left: c.left + this.offset.relative.left * d + this.offset.parent.left * d - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : f ? 0 : e.scrollLeft()) * d
            };
        },
        _generatePosition: function(b) {
            var c, d, e = this.options, f = b.pageX, g = b.pageY, h = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && a.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, i = /(html|body)/i.test(h[0].tagName);
            return "relative" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), 
            this.originalPosition && (this.containment && (b.pageX - this.offset.click.left < this.containment[0] && (f = this.containment[0] + this.offset.click.left), 
            b.pageY - this.offset.click.top < this.containment[1] && (g = this.containment[1] + this.offset.click.top), 
            b.pageX - this.offset.click.left > this.containment[2] && (f = this.containment[2] + this.offset.click.left), 
            b.pageY - this.offset.click.top > this.containment[3] && (g = this.containment[3] + this.offset.click.top)), 
            e.grid && (c = this.originalPageY + Math.round((g - this.originalPageY) / e.grid[1]) * e.grid[1], 
            g = this.containment ? c - this.offset.click.top >= this.containment[1] && c - this.offset.click.top <= this.containment[3] ? c : c - this.offset.click.top >= this.containment[1] ? c - e.grid[1] : c + e.grid[1] : c, 
            d = this.originalPageX + Math.round((f - this.originalPageX) / e.grid[0]) * e.grid[0], 
            f = this.containment ? d - this.offset.click.left >= this.containment[0] && d - this.offset.click.left <= this.containment[2] ? d : d - this.offset.click.left >= this.containment[0] ? d - e.grid[0] : d + e.grid[0] : d)), 
            {
                top: g - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : i ? 0 : h.scrollTop()),
                left: f - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : i ? 0 : h.scrollLeft())
            };
        },
        _rearrange: function(a, b, c, d) {
            c ? c[0].appendChild(this.placeholder[0]) : b.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? b.item[0] : b.item[0].nextSibling), 
            this.counter = this.counter ? ++this.counter : 1;
            var e = this.counter;
            this._delay(function() {
                e === this.counter && this.refreshPositions(!d);
            });
        },
        _clear: function(a, b) {
            function c(a, b, c) {
                return function(d) {
                    c._trigger(a, d, b._uiHash(b));
                };
            }
            this.reverting = !1;
            var d, e = [];
            if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), 
            this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {
                for (d in this._storedCSS) ("auto" === this._storedCSS[d] || "static" === this._storedCSS[d]) && (this._storedCSS[d] = "");
                this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, "ui-sortable-helper");
            } else this.currentItem.show();
            for (this.fromOutside && !b && e.push(function(a) {
                this._trigger("receive", a, this._uiHash(this.fromOutside));
            }), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || b || e.push(function(a) {
                this._trigger("update", a, this._uiHash());
            }), this !== this.currentContainer && (b || (e.push(function(a) {
                this._trigger("remove", a, this._uiHash());
            }), e.push(function(a) {
                return function(b) {
                    a._trigger("receive", b, this._uiHash(this));
                };
            }.call(this, this.currentContainer)), e.push(function(a) {
                return function(b) {
                    a._trigger("update", b, this._uiHash(this));
                };
            }.call(this, this.currentContainer)))), d = this.containers.length - 1; d >= 0; d--) b || e.push(c("deactivate", this, this.containers[d])), 
            this.containers[d].containerCache.over && (e.push(c("out", this, this.containers[d])), 
            this.containers[d].containerCache.over = 0);
            if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), 
            this.storedStylesheet.remove()), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), 
            this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex), 
            this.dragging = !1, b || this._trigger("beforeStop", a, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), 
            this.cancelHelperRemoval || (this.helper[0] !== this.currentItem[0] && this.helper.remove(), 
            this.helper = null), !b) {
                for (d = 0; e.length > d; d++) e[d].call(this, a);
                this._trigger("stop", a, this._uiHash());
            }
            return this.fromOutside = !1, !this.cancelHelperRemoval;
        },
        _trigger: function() {
            a.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel();
        },
        _uiHash: function(b) {
            var c = b || this;
            return {
                helper: c.helper,
                placeholder: c.placeholder || a([]),
                position: c.position,
                originalPosition: c.originalPosition,
                offset: c.positionAbs,
                item: c.currentItem,
                sender: b ? b.element : null
            };
        }
    }), a.widget("ui.spinner", {
        version: "1.12.1",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            classes: {
                "ui-spinner": "ui-corner-all",
                "ui-spinner-down": "ui-corner-br",
                "ui-spinner-up": "ui-corner-tr"
            },
            culture: null,
            icons: {
                down: "ui-icon-triangle-1-s",
                up: "ui-icon-triangle-1-n"
            },
            incremental: !0,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,
            change: null,
            spin: null,
            start: null,
            stop: null
        },
        _create: function() {
            this._setOption("max", this.options.max), this._setOption("min", this.options.min), 
            this._setOption("step", this.options.step), "" !== this.value() && this._value(this.element.val(), !0), 
            this._draw(), this._on(this._events), this._refresh(), this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete");
                }
            });
        },
        _getCreateOptions: function() {
            var b = this._super(), c = this.element;
            return a.each([ "min", "max", "step" ], function(a, d) {
                var e = c.attr(d);
                null != e && e.length && (b[d] = e);
            }), b;
        },
        _events: {
            keydown: function(a) {
                this._start(a) && this._keydown(a) && a.preventDefault();
            },
            keyup: "_stop",
            focus: function() {
                this.previous = this.element.val();
            },
            blur: function(a) {
                return this.cancelBlur ? (delete this.cancelBlur, void 0) : (this._stop(), this._refresh(), 
                this.previous !== this.element.val() && this._trigger("change", a), void 0);
            },
            mousewheel: function(a, b) {
                if (b) {
                    if (!this.spinning && !this._start(a)) return !1;
                    this._spin((b > 0 ? 1 : -1) * this.options.step, a), clearTimeout(this.mousewheelTimer), 
                    this.mousewheelTimer = this._delay(function() {
                        this.spinning && this._stop(a);
                    }, 100), a.preventDefault();
                }
            },
            "mousedown .ui-spinner-button": function(b) {
                function c() {
                    var b = this.element[0] === a.ui.safeActiveElement(this.document[0]);
                    b || (this.element.trigger("focus"), this.previous = d, this._delay(function() {
                        this.previous = d;
                    }));
                }
                var d;
                d = this.element[0] === a.ui.safeActiveElement(this.document[0]) ? this.previous : this.element.val(), 
                b.preventDefault(), c.call(this), this.cancelBlur = !0, this._delay(function() {
                    delete this.cancelBlur, c.call(this);
                }), this._start(b) !== !1 && this._repeat(null, a(b.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, b);
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function(b) {
                return a(b.currentTarget).hasClass("ui-state-active") ? this._start(b) === !1 ? !1 : (this._repeat(null, a(b.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, b), 
                void 0) : void 0;
            },
            "mouseleave .ui-spinner-button": "_stop"
        },
        _enhance: function() {
            this.uiSpinner = this.element.attr("autocomplete", "off").wrap("<span>").parent().append("<a></a><a></a>");
        },
        _draw: function() {
            this._enhance(), this._addClass(this.uiSpinner, "ui-spinner", "ui-widget ui-widget-content"), 
            this._addClass("ui-spinner-input"), this.element.attr("role", "spinbutton"), this.buttons = this.uiSpinner.children("a").attr("tabIndex", -1).attr("aria-hidden", !0).button({
                classes: {
                    "ui-button": ""
                }
            }), this._removeClass(this.buttons, "ui-corner-all"), this._addClass(this.buttons.first(), "ui-spinner-button ui-spinner-up"), 
            this._addClass(this.buttons.last(), "ui-spinner-button ui-spinner-down"), this.buttons.first().button({
                icon: this.options.icons.up,
                showLabel: !1
            }), this.buttons.last().button({
                icon: this.options.icons.down,
                showLabel: !1
            }), this.buttons.height() > Math.ceil(.5 * this.uiSpinner.height()) && this.uiSpinner.height() > 0 && this.uiSpinner.height(this.uiSpinner.height());
        },
        _keydown: function(b) {
            var c = this.options, d = a.ui.keyCode;
            switch (b.keyCode) {
              case d.UP:
                return this._repeat(null, 1, b), !0;

              case d.DOWN:
                return this._repeat(null, -1, b), !0;

              case d.PAGE_UP:
                return this._repeat(null, c.page, b), !0;

              case d.PAGE_DOWN:
                return this._repeat(null, -c.page, b), !0;
            }
            return !1;
        },
        _start: function(a) {
            return this.spinning || this._trigger("start", a) !== !1 ? (this.counter || (this.counter = 1), 
            this.spinning = !0, !0) : !1;
        },
        _repeat: function(a, b, c) {
            a = a || 500, clearTimeout(this.timer), this.timer = this._delay(function() {
                this._repeat(40, b, c);
            }, a), this._spin(b * this.options.step, c);
        },
        _spin: function(a, b) {
            var c = this.value() || 0;
            this.counter || (this.counter = 1), c = this._adjustValue(c + a * this._increment(this.counter)), 
            this.spinning && this._trigger("spin", b, {
                value: c
            }) === !1 || (this._value(c), this.counter++);
        },
        _increment: function(b) {
            var c = this.options.incremental;
            return c ? a.isFunction(c) ? c(b) : Math.floor(b * b * b / 5e4 - b * b / 500 + 17 * b / 200 + 1) : 1;
        },
        _precision: function() {
            var a = this._precisionOf(this.options.step);
            return null !== this.options.min && (a = Math.max(a, this._precisionOf(this.options.min))), 
            a;
        },
        _precisionOf: function(a) {
            var b = "" + a, c = b.indexOf(".");
            return -1 === c ? 0 : b.length - c - 1;
        },
        _adjustValue: function(a) {
            var b, c, d = this.options;
            return b = null !== d.min ? d.min : 0, c = a - b, c = Math.round(c / d.step) * d.step, 
            a = b + c, a = parseFloat(a.toFixed(this._precision())), null !== d.max && a > d.max ? d.max : null !== d.min && d.min > a ? d.min : a;
        },
        _stop: function(a) {
            this.spinning && (clearTimeout(this.timer), clearTimeout(this.mousewheelTimer), 
            this.counter = 0, this.spinning = !1, this._trigger("stop", a));
        },
        _setOption: function(a, b) {
            var c, d, e;
            return "culture" === a || "numberFormat" === a ? (c = this._parse(this.element.val()), 
            this.options[a] = b, this.element.val(this._format(c)), void 0) : (("max" === a || "min" === a || "step" === a) && "string" == typeof b && (b = this._parse(b)), 
            "icons" === a && (d = this.buttons.first().find(".ui-icon"), this._removeClass(d, null, this.options.icons.up), 
            this._addClass(d, null, b.up), e = this.buttons.last().find(".ui-icon"), this._removeClass(e, null, this.options.icons.down), 
            this._addClass(e, null, b.down)), this._super(a, b), void 0);
        },
        _setOptionDisabled: function(a) {
            this._super(a), this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!a), 
            this.element.prop("disabled", !!a), this.buttons.button(a ? "disable" : "enable");
        },
        _setOptions: h(function(a) {
            this._super(a);
        }),
        _parse: function(a) {
            return "string" == typeof a && "" !== a && (a = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(a, 10, this.options.culture) : +a), 
            "" === a || isNaN(a) ? null : a;
        },
        _format: function(a) {
            return "" === a ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(a, this.options.numberFormat, this.options.culture) : a;
        },
        _refresh: function() {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._parse(this.element.val())
            });
        },
        isValid: function() {
            var a = this.value();
            return null === a ? !1 : a === this._adjustValue(a);
        },
        _value: function(a, b) {
            var c;
            "" !== a && (c = this._parse(a), null !== c && (b || (c = this._adjustValue(c)), 
            a = this._format(c))), this.element.val(a), this._refresh();
        },
        _destroy: function() {
            this.element.prop("disabled", !1).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"), 
            this.uiSpinner.replaceWith(this.element);
        },
        stepUp: h(function(a) {
            this._stepUp(a);
        }),
        _stepUp: function(a) {
            this._start() && (this._spin((a || 1) * this.options.step), this._stop());
        },
        stepDown: h(function(a) {
            this._stepDown(a);
        }),
        _stepDown: function(a) {
            this._start() && (this._spin((a || 1) * -this.options.step), this._stop());
        },
        pageUp: h(function(a) {
            this._stepUp((a || 1) * this.options.page);
        }),
        pageDown: h(function(a) {
            this._stepDown((a || 1) * this.options.page);
        }),
        value: function(a) {
            return arguments.length ? (h(this._value).call(this, a), void 0) : this._parse(this.element.val());
        },
        widget: function() {
            return this.uiSpinner;
        }
    }), a.uiBackCompat !== !1 && a.widget("ui.spinner", a.ui.spinner, {
        _enhance: function() {
            this.uiSpinner = this.element.attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
        },
        _uiSpinnerHtml: function() {
            return "<span>";
        },
        _buttonHtml: function() {
            return "<a></a><a></a>";
        }
    }), a.ui.spinner, a.widget("ui.tabs", {
        version: "1.12.1",
        delay: 300,
        options: {
            active: null,
            classes: {
                "ui-tabs": "ui-corner-all",
                "ui-tabs-nav": "ui-corner-all",
                "ui-tabs-panel": "ui-corner-bottom",
                "ui-tabs-tab": "ui-corner-top"
            },
            collapsible: !1,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null
        },
        _isLocal: function() {
            var a = /#.*$/;
            return function(b) {
                var c, d;
                c = b.href.replace(a, ""), d = location.href.replace(a, "");
                try {
                    c = decodeURIComponent(c);
                } catch (a) {}
                try {
                    d = decodeURIComponent(d);
                } catch (a) {}
                return b.hash.length > 1 && c === d;
            };
        }(),
        _create: function() {
            var b = this, c = this.options;
            this.running = !1, this._addClass("ui-tabs", "ui-widget ui-widget-content"), this._toggleClass("ui-tabs-collapsible", null, c.collapsible), 
            this._processTabs(), c.active = this._initialActive(), a.isArray(c.disabled) && (c.disabled = a.unique(c.disabled.concat(a.map(this.tabs.filter(".ui-state-disabled"), function(a) {
                return b.tabs.index(a);
            }))).sort()), this.active = this.options.active !== !1 && this.anchors.length ? this._findActive(c.active) : a(), 
            this._refresh(), this.active.length && this.load(c.active);
        },
        _initialActive: function() {
            var b = this.options.active, c = this.options.collapsible, d = location.hash.substring(1);
            return null === b && (d && this.tabs.each(function(c, e) {
                return a(e).attr("aria-controls") === d ? (b = c, !1) : void 0;
            }), null === b && (b = this.tabs.index(this.tabs.filter(".ui-tabs-active"))), (null === b || -1 === b) && (b = this.tabs.length ? 0 : !1)), 
            b !== !1 && (b = this.tabs.index(this.tabs.eq(b)), -1 === b && (b = c ? !1 : 0)), 
            !c && b === !1 && this.anchors.length && (b = 0), b;
        },
        _getCreateEventData: function() {
            return {
                tab: this.active,
                panel: this.active.length ? this._getPanelForTab(this.active) : a()
            };
        },
        _tabKeydown: function(b) {
            var c = a(a.ui.safeActiveElement(this.document[0])).closest("li"), d = this.tabs.index(c), e = !0;
            if (!this._handlePageNav(b)) {
                switch (b.keyCode) {
                  case a.ui.keyCode.RIGHT:
                  case a.ui.keyCode.DOWN:
                    d++;
                    break;

                  case a.ui.keyCode.UP:
                  case a.ui.keyCode.LEFT:
                    e = !1, d--;
                    break;

                  case a.ui.keyCode.END:
                    d = this.anchors.length - 1;
                    break;

                  case a.ui.keyCode.HOME:
                    d = 0;
                    break;

                  case a.ui.keyCode.SPACE:
                    return b.preventDefault(), clearTimeout(this.activating), this._activate(d), void 0;

                  case a.ui.keyCode.ENTER:
                    return b.preventDefault(), clearTimeout(this.activating), this._activate(d === this.options.active ? !1 : d), 
                    void 0;

                  default:
                    return;
                }
                b.preventDefault(), clearTimeout(this.activating), d = this._focusNextTab(d, e), 
                b.ctrlKey || b.metaKey || (c.attr("aria-selected", "false"), this.tabs.eq(d).attr("aria-selected", "true"), 
                this.activating = this._delay(function() {
                    this.option("active", d);
                }, this.delay));
            }
        },
        _panelKeydown: function(b) {
            this._handlePageNav(b) || b.ctrlKey && b.keyCode === a.ui.keyCode.UP && (b.preventDefault(), 
            this.active.trigger("focus"));
        },
        _handlePageNav: function(b) {
            return b.altKey && b.keyCode === a.ui.keyCode.PAGE_UP ? (this._activate(this._focusNextTab(this.options.active - 1, !1)), 
            !0) : b.altKey && b.keyCode === a.ui.keyCode.PAGE_DOWN ? (this._activate(this._focusNextTab(this.options.active + 1, !0)), 
            !0) : void 0;
        },
        _findNextTab: function(b, c) {
            function d() {
                return b > e && (b = 0), 0 > b && (b = e), b;
            }
            for (var e = this.tabs.length - 1; -1 !== a.inArray(d(), this.options.disabled); ) b = c ? b + 1 : b - 1;
            return b;
        },
        _focusNextTab: function(a, b) {
            return a = this._findNextTab(a, b), this.tabs.eq(a).trigger("focus"), a;
        },
        _setOption: function(a, b) {
            return "active" === a ? (this._activate(b), void 0) : (this._super(a, b), "collapsible" === a && (this._toggleClass("ui-tabs-collapsible", null, b), 
            b || this.options.active !== !1 || this._activate(0)), "event" === a && this._setupEvents(b), 
            "heightStyle" === a && this._setupHeightStyle(b), void 0);
        },
        _sanitizeSelector: function(a) {
            return a ? a.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : "";
        },
        refresh: function() {
            var b = this.options, c = this.tablist.children(":has(a[href])");
            b.disabled = a.map(c.filter(".ui-state-disabled"), function(a) {
                return c.index(a);
            }), this._processTabs(), b.active !== !1 && this.anchors.length ? this.active.length && !a.contains(this.tablist[0], this.active[0]) ? this.tabs.length === b.disabled.length ? (b.active = !1, 
            this.active = a()) : this._activate(this._findNextTab(Math.max(0, b.active - 1), !1)) : b.active = this.tabs.index(this.active) : (b.active = !1, 
            this.active = a()), this._refresh();
        },
        _refresh: function() {
            this._setOptionDisabled(this.options.disabled), this._setupEvents(this.options.event), 
            this._setupHeightStyle(this.options.heightStyle), this.tabs.not(this.active).attr({
                "aria-selected": "false",
                "aria-expanded": "false",
                tabIndex: -1
            }), this.panels.not(this._getPanelForTab(this.active)).hide().attr({
                "aria-hidden": "true"
            }), this.active.length ? (this.active.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            }), this._addClass(this.active, "ui-tabs-active", "ui-state-active"), this._getPanelForTab(this.active).show().attr({
                "aria-hidden": "false"
            })) : this.tabs.eq(0).attr("tabIndex", 0);
        },
        _processTabs: function() {
            var b = this, c = this.tabs, d = this.anchors, e = this.panels;
            this.tablist = this._getList().attr("role", "tablist"), this._addClass(this.tablist, "ui-tabs-nav", "ui-helper-reset ui-helper-clearfix ui-widget-header"), 
            this.tablist.on("mousedown" + this.eventNamespace, "> li", function(b) {
                a(this).is(".ui-state-disabled") && b.preventDefault();
            }).on("focus" + this.eventNamespace, ".ui-tabs-anchor", function() {
                a(this).closest("li").is(".ui-state-disabled") && this.blur();
            }), this.tabs = this.tablist.find("> li:has(a[href])").attr({
                role: "tab",
                tabIndex: -1
            }), this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default"), this.anchors = this.tabs.map(function() {
                return a("a", this)[0];
            }).attr({
                role: "presentation",
                tabIndex: -1
            }), this._addClass(this.anchors, "ui-tabs-anchor"), this.panels = a(), this.anchors.each(function(c, d) {
                var e, f, g, h = a(d).uniqueId().attr("id"), i = a(d).closest("li"), j = i.attr("aria-controls");
                b._isLocal(d) ? (e = d.hash, g = e.substring(1), f = b.element.find(b._sanitizeSelector(e))) : (g = i.attr("aria-controls") || a({}).uniqueId()[0].id, 
                e = "#" + g, f = b.element.find(e), f.length || (f = b._createPanel(g), f.insertAfter(b.panels[c - 1] || b.tablist)), 
                f.attr("aria-live", "polite")), f.length && (b.panels = b.panels.add(f)), j && i.data("ui-tabs-aria-controls", j), 
                i.attr({
                    "aria-controls": g,
                    "aria-labelledby": h
                }), f.attr("aria-labelledby", h);
            }), this.panels.attr("role", "tabpanel"), this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content"), 
            c && (this._off(c.not(this.tabs)), this._off(d.not(this.anchors)), this._off(e.not(this.panels)));
        },
        _getList: function() {
            return this.tablist || this.element.find("ol, ul").eq(0);
        },
        _createPanel: function(b) {
            return a("<div>").attr("id", b).data("ui-tabs-destroy", !0);
        },
        _setOptionDisabled: function(b) {
            var c, d, e;
            for (a.isArray(b) && (b.length ? b.length === this.anchors.length && (b = !0) : b = !1), 
            e = 0; d = this.tabs[e]; e++) c = a(d), b === !0 || -1 !== a.inArray(e, b) ? (c.attr("aria-disabled", "true"), 
            this._addClass(c, null, "ui-state-disabled")) : (c.removeAttr("aria-disabled"), 
            this._removeClass(c, null, "ui-state-disabled"));
            this.options.disabled = b, this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, b === !0);
        },
        _setupEvents: function(b) {
            var c = {};
            b && a.each(b.split(" "), function(a, b) {
                c[b] = "_eventHandler";
            }), this._off(this.anchors.add(this.tabs).add(this.panels)), this._on(!0, this.anchors, {
                click: function(a) {
                    a.preventDefault();
                }
            }), this._on(this.anchors, c), this._on(this.tabs, {
                keydown: "_tabKeydown"
            }), this._on(this.panels, {
                keydown: "_panelKeydown"
            }), this._focusable(this.tabs), this._hoverable(this.tabs);
        },
        _setupHeightStyle: function(b) {
            var c, d = this.element.parent();
            "fill" === b ? (c = d.height(), c -= this.element.outerHeight() - this.element.height(), 
            this.element.siblings(":visible").each(function() {
                var b = a(this), d = b.css("position");
                "absolute" !== d && "fixed" !== d && (c -= b.outerHeight(!0));
            }), this.element.children().not(this.panels).each(function() {
                c -= a(this).outerHeight(!0);
            }), this.panels.each(function() {
                a(this).height(Math.max(0, c - a(this).innerHeight() + a(this).height()));
            }).css("overflow", "auto")) : "auto" === b && (c = 0, this.panels.each(function() {
                c = Math.max(c, a(this).height("").height());
            }).height(c));
        },
        _eventHandler: function(b) {
            var c = this.options, d = this.active, e = a(b.currentTarget), f = e.closest("li"), g = f[0] === d[0], h = g && c.collapsible, i = h ? a() : this._getPanelForTab(f), j = d.length ? this._getPanelForTab(d) : a(), k = {
                oldTab: d,
                oldPanel: j,
                newTab: h ? a() : f,
                newPanel: i
            };
            b.preventDefault(), f.hasClass("ui-state-disabled") || f.hasClass("ui-tabs-loading") || this.running || g && !c.collapsible || this._trigger("beforeActivate", b, k) === !1 || (c.active = h ? !1 : this.tabs.index(f), 
            this.active = g ? a() : f, this.xhr && this.xhr.abort(), j.length || i.length || a.error("jQuery UI Tabs: Mismatching fragment identifier."), 
            i.length && this.load(this.tabs.index(f), b), this._toggle(b, k));
        },
        _toggle: function(b, c) {
            function d() {
                f.running = !1, f._trigger("activate", b, c);
            }
            function e() {
                f._addClass(c.newTab.closest("li"), "ui-tabs-active", "ui-state-active"), g.length && f.options.show ? f._show(g, f.options.show, d) : (g.show(), 
                d());
            }
            var f = this, g = c.newPanel, h = c.oldPanel;
            this.running = !0, h.length && this.options.hide ? this._hide(h, this.options.hide, function() {
                f._removeClass(c.oldTab.closest("li"), "ui-tabs-active", "ui-state-active"), e();
            }) : (this._removeClass(c.oldTab.closest("li"), "ui-tabs-active", "ui-state-active"), 
            h.hide(), e()), h.attr("aria-hidden", "true"), c.oldTab.attr({
                "aria-selected": "false",
                "aria-expanded": "false"
            }), g.length && h.length ? c.oldTab.attr("tabIndex", -1) : g.length && this.tabs.filter(function() {
                return 0 === a(this).attr("tabIndex");
            }).attr("tabIndex", -1), g.attr("aria-hidden", "false"), c.newTab.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            });
        },
        _activate: function(b) {
            var c, d = this._findActive(b);
            d[0] !== this.active[0] && (d.length || (d = this.active), c = d.find(".ui-tabs-anchor")[0], 
            this._eventHandler({
                target: c,
                currentTarget: c,
                preventDefault: a.noop
            }));
        },
        _findActive: function(b) {
            return b === !1 ? a() : this.tabs.eq(b);
        },
        _getIndex: function(b) {
            return "string" == typeof b && (b = this.anchors.index(this.anchors.filter("[href$='" + a.ui.escapeSelector(b) + "']"))), 
            b;
        },
        _destroy: function() {
            this.xhr && this.xhr.abort(), this.tablist.removeAttr("role").off(this.eventNamespace), 
            this.anchors.removeAttr("role tabIndex").removeUniqueId(), this.tabs.add(this.panels).each(function() {
                a.data(this, "ui-tabs-destroy") ? a(this).remove() : a(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded");
            }), this.tabs.each(function() {
                var b = a(this), c = b.data("ui-tabs-aria-controls");
                c ? b.attr("aria-controls", c).removeData("ui-tabs-aria-controls") : b.removeAttr("aria-controls");
            }), this.panels.show(), "content" !== this.options.heightStyle && this.panels.css("height", "");
        },
        enable: function(b) {
            var c = this.options.disabled;
            c !== !1 && (void 0 === b ? c = !1 : (b = this._getIndex(b), c = a.isArray(c) ? a.map(c, function(a) {
                return a !== b ? a : null;
            }) : a.map(this.tabs, function(a, c) {
                return c !== b ? c : null;
            })), this._setOptionDisabled(c));
        },
        disable: function(b) {
            var c = this.options.disabled;
            if (c !== !0) {
                if (void 0 === b) c = !0; else {
                    if (b = this._getIndex(b), -1 !== a.inArray(b, c)) return;
                    c = a.isArray(c) ? a.merge([ b ], c).sort() : [ b ];
                }
                this._setOptionDisabled(c);
            }
        },
        load: function(b, c) {
            b = this._getIndex(b);
            var d = this, e = this.tabs.eq(b), f = e.find(".ui-tabs-anchor"), g = this._getPanelForTab(e), h = {
                tab: e,
                panel: g
            }, i = function(a, b) {
                "abort" === b && d.panels.stop(!1, !0), d._removeClass(e, "ui-tabs-loading"), g.removeAttr("aria-busy"), 
                a === d.xhr && delete d.xhr;
            };
            this._isLocal(f[0]) || (this.xhr = a.ajax(this._ajaxSettings(f, c, h)), this.xhr && "canceled" !== this.xhr.statusText && (this._addClass(e, "ui-tabs-loading"), 
            g.attr("aria-busy", "true"), this.xhr.done(function(a, b, e) {
                setTimeout(function() {
                    g.html(a), d._trigger("load", c, h), i(e, b);
                }, 1);
            }).fail(function(a, b) {
                setTimeout(function() {
                    i(a, b);
                }, 1);
            })));
        },
        _ajaxSettings: function(b, c, d) {
            var e = this;
            return {
                url: b.attr("href").replace(/#.*$/, ""),
                beforeSend: function(b, f) {
                    return e._trigger("beforeLoad", c, a.extend({
                        jqXHR: b,
                        ajaxSettings: f
                    }, d));
                }
            };
        },
        _getPanelForTab: function(b) {
            var c = a(b).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + c));
        }
    }), a.uiBackCompat !== !1 && a.widget("ui.tabs", a.ui.tabs, {
        _processTabs: function() {
            this._superApply(arguments), this._addClass(this.tabs, "ui-tab");
        }
    }), a.ui.tabs, a.widget("ui.tooltip", {
        version: "1.12.1",
        options: {
            classes: {
                "ui-tooltip": "ui-corner-all ui-widget-shadow"
            },
            content: function() {
                var b = a(this).attr("title") || "";
                return a("<a>").text(b).html();
            },
            hide: !0,
            items: "[title]:not([disabled])",
            position: {
                my: "left top+15",
                at: "left bottom",
                collision: "flipfit flip"
            },
            show: !0,
            track: !1,
            close: null,
            open: null
        },
        _addDescribedBy: function(b, c) {
            var d = (b.attr("aria-describedby") || "").split(/\s+/);
            d.push(c), b.data("ui-tooltip-id", c).attr("aria-describedby", a.trim(d.join(" ")));
        },
        _removeDescribedBy: function(b) {
            var c = b.data("ui-tooltip-id"), d = (b.attr("aria-describedby") || "").split(/\s+/), e = a.inArray(c, d);
            -1 !== e && d.splice(e, 1), b.removeData("ui-tooltip-id"), d = a.trim(d.join(" ")), 
            d ? b.attr("aria-describedby", d) : b.removeAttr("aria-describedby");
        },
        _create: function() {
            this._on({
                mouseover: "open",
                focusin: "open"
            }), this.tooltips = {}, this.parents = {}, this.liveRegion = a("<div>").attr({
                role: "log",
                "aria-live": "assertive",
                "aria-relevant": "additions"
            }).appendTo(this.document[0].body), this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"), 
            this.disabledTitles = a([]);
        },
        _setOption: function(b, c) {
            var d = this;
            this._super(b, c), "content" === b && a.each(this.tooltips, function(a, b) {
                d._updateContent(b.element);
            });
        },
        _setOptionDisabled: function(a) {
            this[a ? "_disable" : "_enable"]();
        },
        _disable: function() {
            var b = this;
            a.each(this.tooltips, function(c, d) {
                var e = a.Event("blur");
                e.target = e.currentTarget = d.element[0], b.close(e, !0);
            }), this.disabledTitles = this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function() {
                var b = a(this);
                return b.is("[title]") ? b.data("ui-tooltip-title", b.attr("title")).removeAttr("title") : void 0;
            }));
        },
        _enable: function() {
            this.disabledTitles.each(function() {
                var b = a(this);
                b.data("ui-tooltip-title") && b.attr("title", b.data("ui-tooltip-title"));
            }), this.disabledTitles = a([]);
        },
        open: function(b) {
            var c = this, d = a(b ? b.target : this.element).closest(this.options.items);
            d.length && !d.data("ui-tooltip-id") && (d.attr("title") && d.data("ui-tooltip-title", d.attr("title")), 
            d.data("ui-tooltip-open", !0), b && "mouseover" === b.type && d.parents().each(function() {
                var b, d = a(this);
                d.data("ui-tooltip-open") && (b = a.Event("blur"), b.target = b.currentTarget = this, 
                c.close(b, !0)), d.attr("title") && (d.uniqueId(), c.parents[this.id] = {
                    element: this,
                    title: d.attr("title")
                }, d.attr("title", ""));
            }), this._registerCloseHandlers(b, d), this._updateContent(d, b));
        },
        _updateContent: function(a, b) {
            var c, d = this.options.content, e = this, f = b ? b.type : null;
            return "string" == typeof d || d.nodeType || d.jquery ? this._open(b, a, d) : (c = d.call(a[0], function(c) {
                e._delay(function() {
                    a.data("ui-tooltip-open") && (b && (b.type = f), this._open(b, a, c));
                });
            }), c && this._open(b, a, c), void 0);
        },
        _open: function(b, c, d) {
            function e(a) {
                j.of = a, g.is(":hidden") || g.position(j);
            }
            var f, g, h, i, j = a.extend({}, this.options.position);
            if (d) {
                if (f = this._find(c)) return f.tooltip.find(".ui-tooltip-content").html(d), void 0;
                c.is("[title]") && (b && "mouseover" === b.type ? c.attr("title", "") : c.removeAttr("title")), 
                f = this._tooltip(c), g = f.tooltip, this._addDescribedBy(c, g.attr("id")), g.find(".ui-tooltip-content").html(d), 
                this.liveRegion.children().hide(), i = a("<div>").html(g.find(".ui-tooltip-content").html()), 
                i.removeAttr("name").find("[name]").removeAttr("name"), i.removeAttr("id").find("[id]").removeAttr("id"), 
                i.appendTo(this.liveRegion), this.options.track && b && /^mouse/.test(b.type) ? (this._on(this.document, {
                    mousemove: e
                }), e(b)) : g.position(a.extend({
                    of: c
                }, this.options.position)), g.hide(), this._show(g, this.options.show), this.options.track && this.options.show && this.options.show.delay && (h = this.delayedShow = setInterval(function() {
                    g.is(":visible") && (e(j.of), clearInterval(h));
                }, a.fx.interval)), this._trigger("open", b, {
                    tooltip: g
                });
            }
        },
        _registerCloseHandlers: function(b, c) {
            var d = {
                keyup: function(b) {
                    if (b.keyCode === a.ui.keyCode.ESCAPE) {
                        var d = a.Event(b);
                        d.currentTarget = c[0], this.close(d, !0);
                    }
                }
            };
            c[0] !== this.element[0] && (d.remove = function() {
                this._removeTooltip(this._find(c).tooltip);
            }), b && "mouseover" !== b.type || (d.mouseleave = "close"), b && "focusin" !== b.type || (d.focusout = "close"), 
            this._on(!0, c, d);
        },
        close: function(b) {
            var c, d = this, e = a(b ? b.currentTarget : this.element), f = this._find(e);
            return f ? (c = f.tooltip, f.closing || (clearInterval(this.delayedShow), e.data("ui-tooltip-title") && !e.attr("title") && e.attr("title", e.data("ui-tooltip-title")), 
            this._removeDescribedBy(e), f.hiding = !0, c.stop(!0), this._hide(c, this.options.hide, function() {
                d._removeTooltip(a(this));
            }), e.removeData("ui-tooltip-open"), this._off(e, "mouseleave focusout keyup"), 
            e[0] !== this.element[0] && this._off(e, "remove"), this._off(this.document, "mousemove"), 
            b && "mouseleave" === b.type && a.each(this.parents, function(b, c) {
                a(c.element).attr("title", c.title), delete d.parents[b];
            }), f.closing = !0, this._trigger("close", b, {
                tooltip: c
            }), f.hiding || (f.closing = !1)), void 0) : (e.removeData("ui-tooltip-open"), void 0);
        },
        _tooltip: function(b) {
            var c = a("<div>").attr("role", "tooltip"), d = a("<div>").appendTo(c), e = c.uniqueId().attr("id");
            return this._addClass(d, "ui-tooltip-content"), this._addClass(c, "ui-tooltip", "ui-widget ui-widget-content"), 
            c.appendTo(this._appendTo(b)), this.tooltips[e] = {
                element: b,
                tooltip: c
            };
        },
        _find: function(a) {
            var b = a.data("ui-tooltip-id");
            return b ? this.tooltips[b] : null;
        },
        _removeTooltip: function(a) {
            a.remove(), delete this.tooltips[a.attr("id")];
        },
        _appendTo: function(a) {
            var b = a.closest(".ui-front, dialog");
            return b.length || (b = this.document[0].body), b;
        },
        _destroy: function() {
            var b = this;
            a.each(this.tooltips, function(c, d) {
                var e = a.Event("blur"), f = d.element;
                e.target = e.currentTarget = f[0], b.close(e, !0), a("#" + c).remove(), f.data("ui-tooltip-title") && (f.attr("title") || f.attr("title", f.data("ui-tooltip-title")), 
                f.removeData("ui-tooltip-title"));
            }), this.liveRegion.remove();
        }
    }), a.uiBackCompat !== !1 && a.widget("ui.tooltip", a.ui.tooltip, {
        options: {
            tooltipClass: null
        },
        _tooltip: function() {
            var a = this._superApply(arguments);
            return this.options.tooltipClass && a.tooltip.addClass(this.options.tooltipClass), 
            a;
        }
    }), a.ui.tooltip;
});

(function(a, b, c) {
    var d = a.requestAnimationFrame || a.webkitRequestAnimationFrame || a.mozRequestAnimationFrame || a.oRequestAnimationFrame || a.msRequestAnimationFrame || function(b) {
        a.setTimeout(b, 1e3 / 60);
    };
    var e = function() {
        var d = {};
        var e = b.createElement("div").style;
        var f = function() {
            var a = [ "t", "webkitT", "MozT", "msT", "OT" ], b, c = 0, d = a.length;
            for (;c < d; c++) {
                b = a[c] + "ransform";
                if (b in e) return a[c].substr(0, a[c].length - 1);
            }
            return false;
        }();
        function g(a) {
            if (f === false) return false;
            if (f === "") return a;
            return f + a.charAt(0).toUpperCase() + a.substr(1);
        }
        d.getTime = Date.now || function a() {
            return new Date().getTime();
        };
        d.extend = function(a, b) {
            for (var c in b) {
                a[c] = b[c];
            }
        };
        d.addEvent = function(a, b, c, d) {
            a.addEventListener(b, c, !!d);
        };
        d.removeEvent = function(a, b, c, d) {
            a.removeEventListener(b, c, !!d);
        };
        d.prefixPointerEvent = function(b) {
            return a.MSPointerEvent ? "MSPointer" + b.charAt(7).toUpperCase() + b.substr(8) : b;
        };
        d.momentum = function(a, b, d, e, f, g) {
            var h = a - b, i = c.abs(h) / d, j, k;
            g = g === undefined ? 6e-4 : g;
            j = a + i * i / (2 * g) * (h < 0 ? -1 : 1);
            k = i / g;
            if (j < e) {
                j = f ? e - f / 2.5 * (i / 8) : e;
                h = c.abs(j - a);
                k = h / i;
            } else if (j > 0) {
                j = f ? f / 2.5 * (i / 8) : 0;
                h = c.abs(a) + j;
                k = h / i;
            }
            return {
                destination: c.round(j),
                duration: k
            };
        };
        var h = g("transform");
        d.extend(d, {
            hasTransform: h !== false,
            hasPerspective: g("perspective") in e,
            hasTouch: "ontouchstart" in a,
            hasPointer: !!(a.PointerEvent || a.MSPointerEvent),
            hasTransition: g("transition") in e
        });
        d.isBadAndroid = function() {
            var b = a.navigator.appVersion;
            if (/Android/.test(b) && !/Chrome\/\d/.test(b)) {
                var c = b.match(/Safari\/(\d+.\d)/);
                if (c && typeof c === "object" && c.length >= 2) {
                    return parseFloat(c[1]) < 535.19;
                } else {
                    return true;
                }
            } else {
                return false;
            }
        }();
        d.extend(d.style = {}, {
            transform: h,
            transitionTimingFunction: g("transitionTimingFunction"),
            transitionDuration: g("transitionDuration"),
            transitionDelay: g("transitionDelay"),
            transformOrigin: g("transformOrigin")
        });
        d.hasClass = function(a, b) {
            var c = new RegExp("(^|\\s)" + b + "(\\s|$)");
            return c.test(a.className);
        };
        d.addClass = function(a, b) {
            if (d.hasClass(a, b)) {
                return;
            }
            var c = a.className.split(" ");
            c.push(b);
            a.className = c.join(" ");
        };
        d.removeClass = function(a, b) {
            if (!d.hasClass(a, b)) {
                return;
            }
            var c = new RegExp("(^|\\s)" + b + "(\\s|$)", "g");
            a.className = a.className.replace(c, " ");
        };
        d.offset = function(a) {
            var b = -a.offsetLeft, c = -a.offsetTop;
            while (a = a.offsetParent) {
                b -= a.offsetLeft;
                c -= a.offsetTop;
            }
            return {
                left: b,
                top: c
            };
        };
        d.preventDefaultException = function(a, b) {
            for (var c in b) {
                if (b[c].test(a[c])) {
                    return true;
                }
            }
            return false;
        };
        d.extend(d.eventType = {}, {
            touchstart: 1,
            touchmove: 1,
            touchend: 1,
            mousedown: 2,
            mousemove: 2,
            mouseup: 2,
            pointerdown: 3,
            pointermove: 3,
            pointerup: 3,
            MSPointerDown: 3,
            MSPointerMove: 3,
            MSPointerUp: 3
        });
        d.extend(d.ease = {}, {
            quadratic: {
                style: "cubic-bezier(0.25, 0.46, 0.45, 0.94)",
                fn: function(a) {
                    return a * (2 - a);
                }
            },
            circular: {
                style: "cubic-bezier(0.1, 0.57, 0.1, 1)",
                fn: function(a) {
                    return c.sqrt(1 - --a * a);
                }
            },
            back: {
                style: "cubic-bezier(0.175, 0.885, 0.32, 1.275)",
                fn: function(a) {
                    var b = 4;
                    return (a = a - 1) * a * ((b + 1) * a + b) + 1;
                }
            },
            bounce: {
                style: "",
                fn: function(a) {
                    if ((a /= 1) < 1 / 2.75) {
                        return 7.5625 * a * a;
                    } else if (a < 2 / 2.75) {
                        return 7.5625 * (a -= 1.5 / 2.75) * a + .75;
                    } else if (a < 2.5 / 2.75) {
                        return 7.5625 * (a -= 2.25 / 2.75) * a + .9375;
                    } else {
                        return 7.5625 * (a -= 2.625 / 2.75) * a + .984375;
                    }
                }
            },
            elastic: {
                style: "",
                fn: function(a) {
                    var b = .22, d = .4;
                    if (a === 0) {
                        return 0;
                    }
                    if (a == 1) {
                        return 1;
                    }
                    return d * c.pow(2, -10 * a) * c.sin((a - b / 4) * (2 * c.PI) / b) + 1;
                }
            }
        });
        d.tap = function(a, c) {
            var d = b.createEvent("Event");
            d.initEvent(c, true, true);
            d.pageX = a.pageX;
            d.pageY = a.pageY;
            a.target.dispatchEvent(d);
        };
        d.click = function(a) {
            var c = a.target, d;
            if (!/(SELECT|INPUT|TEXTAREA)/i.test(c.tagName)) {
                d = b.createEvent("MouseEvents");
                d.initMouseEvent("click", true, true, a.view, 1, c.screenX, c.screenY, c.clientX, c.clientY, a.ctrlKey, a.altKey, a.shiftKey, a.metaKey, 0, null);
                d._constructed = true;
                c.dispatchEvent(d);
            }
        };
        return d;
    }();
    function f(c, d) {
        this.wrapper = typeof c == "string" ? b.querySelector(c) : c;
        this.scroller = this.wrapper.children[0];
        this.scrollerStyle = this.scroller.style;
        this.options = {
            resizeScrollbars: true,
            mouseWheelSpeed: 20,
            snapThreshold: .334,
            disablePointer: !e.hasPointer,
            disableTouch: e.hasPointer || !e.hasTouch,
            disableMouse: e.hasPointer || e.hasTouch,
            startX: 0,
            startY: 0,
            scrollY: true,
            directionLockThreshold: 5,
            momentum: true,
            bounce: true,
            bounceTime: 600,
            bounceEasing: "",
            preventDefault: true,
            preventDefaultException: {
                tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/
            },
            HWCompositing: true,
            useTransition: true,
            useTransform: true,
            bindToWrapper: typeof a.onmousedown === "undefined"
        };
        for (var f in d) {
            this.options[f] = d[f];
        }
        this.translateZ = this.options.HWCompositing && e.hasPerspective ? " translateZ(0)" : "";
        this.options.useTransition = e.hasTransition && this.options.useTransition;
        this.options.useTransform = e.hasTransform && this.options.useTransform;
        this.options.eventPassthrough = this.options.eventPassthrough === true ? "vertical" : this.options.eventPassthrough;
        this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;
        this.options.scrollY = this.options.eventPassthrough == "vertical" ? false : this.options.scrollY;
        this.options.scrollX = this.options.eventPassthrough == "horizontal" ? false : this.options.scrollX;
        this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;
        this.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;
        this.options.bounceEasing = typeof this.options.bounceEasing == "string" ? e.ease[this.options.bounceEasing] || e.ease.circular : this.options.bounceEasing;
        this.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;
        if (this.options.tap === true) {
            this.options.tap = "tap";
        }
        if (this.options.shrinkScrollbars == "scale") {
            this.options.useTransition = false;
        }
        this.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;
        this.x = 0;
        this.y = 0;
        this.directionX = 0;
        this.directionY = 0;
        this._events = {};
        this._init();
        this.refresh();
        this.scrollTo(this.options.startX, this.options.startY);
        this.enable();
    }
    f.prototype = {
        version: "5.2.0",
        _init: function() {
            this._initEvents();
            if (this.options.scrollbars || this.options.indicators) {
                this._initIndicators();
            }
            if (this.options.mouseWheel) {
                this._initWheel();
            }
            if (this.options.snap) {
                this._initSnap();
            }
            if (this.options.keyBindings) {
                this._initKeys();
            }
        },
        destroy: function() {
            this._initEvents(true);
            clearTimeout(this.resizeTimeout);
            this.resizeTimeout = null;
            this._execEvent("destroy");
        },
        _transitionEnd: function(a) {
            if (a.target != this.scroller || !this.isInTransition) {
                return;
            }
            this._transitionTime();
            if (!this.resetPosition(this.options.bounceTime)) {
                this.isInTransition = false;
                this._execEvent("scrollEnd");
            }
        },
        _start: function(a) {
            if (e.eventType[a.type] != 1) {
                var b;
                if (!a.which) {
                    b = a.button < 2 ? 0 : a.button == 4 ? 1 : 2;
                } else {
                    b = a.button;
                }
                if (b !== 0) {
                    return;
                }
            }
            if (!this.enabled || this.initiated && e.eventType[a.type] !== this.initiated) {
                return;
            }
            if (this.options.preventDefault && !e.isBadAndroid && !e.preventDefaultException(a.target, this.options.preventDefaultException)) {
                a.preventDefault();
            }
            var d = a.touches ? a.touches[0] : a, f;
            this.initiated = e.eventType[a.type];
            this.moved = false;
            this.distX = 0;
            this.distY = 0;
            this.directionX = 0;
            this.directionY = 0;
            this.directionLocked = 0;
            this.startTime = e.getTime();
            if (this.options.useTransition && this.isInTransition) {
                this._transitionTime();
                this.isInTransition = false;
                f = this.getComputedPosition();
                this._translate(c.round(f.x), c.round(f.y));
                this._execEvent("scrollEnd");
            } else if (!this.options.useTransition && this.isAnimating) {
                this.isAnimating = false;
                this._execEvent("scrollEnd");
            }
            this.startX = this.x;
            this.startY = this.y;
            this.absStartX = this.x;
            this.absStartY = this.y;
            this.pointX = d.pageX;
            this.pointY = d.pageY;
            this._execEvent("beforeScrollStart");
        },
        _move: function(a) {
            if (!this.enabled || e.eventType[a.type] !== this.initiated) {
                return;
            }
            if (this.options.preventDefault) {
                a.preventDefault();
            }
            var b = a.touches ? a.touches[0] : a, d = b.pageX - this.pointX, f = b.pageY - this.pointY, g = e.getTime(), h, i, j, k;
            this.pointX = b.pageX;
            this.pointY = b.pageY;
            this.distX += d;
            this.distY += f;
            j = c.abs(this.distX);
            k = c.abs(this.distY);
            if (g - this.endTime > 300 && (j < 10 && k < 10)) {
                return;
            }
            if (!this.directionLocked && !this.options.freeScroll) {
                if (j > k + this.options.directionLockThreshold) {
                    this.directionLocked = "h";
                } else if (k >= j + this.options.directionLockThreshold) {
                    this.directionLocked = "v";
                } else {
                    this.directionLocked = "n";
                }
            }
            if (this.directionLocked == "h") {
                if (this.options.eventPassthrough == "vertical") {
                    a.preventDefault();
                } else if (this.options.eventPassthrough == "horizontal") {
                    this.initiated = false;
                    return;
                }
                f = 0;
            } else if (this.directionLocked == "v") {
                if (this.options.eventPassthrough == "horizontal") {
                    a.preventDefault();
                } else if (this.options.eventPassthrough == "vertical") {
                    this.initiated = false;
                    return;
                }
                d = 0;
            }
            d = this.hasHorizontalScroll ? d : 0;
            f = this.hasVerticalScroll ? f : 0;
            h = this.x + d;
            i = this.y + f;
            if (h > 0 || h < this.maxScrollX) {
                h = this.options.bounce ? this.x + d / 3 : h > 0 ? 0 : this.maxScrollX;
            }
            if (i > 0 || i < this.maxScrollY) {
                i = this.options.bounce ? this.y + f / 3 : i > 0 ? 0 : this.maxScrollY;
            }
            this.directionX = d > 0 ? -1 : d < 0 ? 1 : 0;
            this.directionY = f > 0 ? -1 : f < 0 ? 1 : 0;
            if (!this.moved) {
                this._execEvent("scrollStart");
            }
            this.moved = true;
            this._translate(h, i);
            if (g - this.startTime > 300) {
                this.startTime = g;
                this.startX = this.x;
                this.startY = this.y;
            }
        },
        _end: function(a) {
            if (!this.enabled || e.eventType[a.type] !== this.initiated) {
                return;
            }
            if (this.options.preventDefault && !e.preventDefaultException(a.target, this.options.preventDefaultException)) {
                a.preventDefault();
            }
            var b = a.changedTouches ? a.changedTouches[0] : a, d, f, g = e.getTime() - this.startTime, h = c.round(this.x), i = c.round(this.y), j = c.abs(h - this.startX), k = c.abs(i - this.startY), l = 0, m = "";
            this.isInTransition = 0;
            this.initiated = 0;
            this.endTime = e.getTime();
            if (this.resetPosition(this.options.bounceTime)) {
                return;
            }
            this.scrollTo(h, i);
            if (!this.moved) {
                if (this.options.tap) {
                    e.tap(a, this.options.tap);
                }
                if (this.options.click) {
                    e.click(a);
                }
                this._execEvent("scrollCancel");
                return;
            }
            if (this._events.flick && g < 200 && j < 100 && k < 100) {
                this._execEvent("flick");
                return;
            }
            if (this.options.momentum && g < 300) {
                d = this.hasHorizontalScroll ? e.momentum(this.x, this.startX, g, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : {
                    destination: h,
                    duration: 0
                };
                f = this.hasVerticalScroll ? e.momentum(this.y, this.startY, g, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : {
                    destination: i,
                    duration: 0
                };
                h = d.destination;
                i = f.destination;
                l = c.max(d.duration, f.duration);
                this.isInTransition = 1;
            }
            if (this.options.snap) {
                var n = this._nearestSnap(h, i);
                this.currentPage = n;
                l = this.options.snapSpeed || c.max(c.max(c.min(c.abs(h - n.x), 1e3), c.min(c.abs(i - n.y), 1e3)), 300);
                h = n.x;
                i = n.y;
                this.directionX = 0;
                this.directionY = 0;
                m = this.options.bounceEasing;
            }
            if (h != this.x || i != this.y) {
                if (h > 0 || h < this.maxScrollX || i > 0 || i < this.maxScrollY) {
                    m = e.ease.quadratic;
                }
                this.scrollTo(h, i, l, m);
                return;
            }
            this._execEvent("scrollEnd");
        },
        _resize: function() {
            var a = this;
            clearTimeout(this.resizeTimeout);
            this.resizeTimeout = setTimeout(function() {
                a.refresh();
            }, this.options.resizePolling);
        },
        resetPosition: function(a) {
            var b = this.x, c = this.y;
            a = a || 0;
            if (!this.hasHorizontalScroll || this.x > 0) {
                b = 0;
            } else if (this.x < this.maxScrollX) {
                b = this.maxScrollX;
            }
            if (!this.hasVerticalScroll || this.y > 0) {
                c = 0;
            } else if (this.y < this.maxScrollY) {
                c = this.maxScrollY;
            }
            if (b == this.x && c == this.y) {
                return false;
            }
            this.scrollTo(b, c, a, this.options.bounceEasing);
            return true;
        },
        disable: function() {
            this.enabled = false;
        },
        enable: function() {
            this.enabled = true;
        },
        refresh: function() {
            var a = this.wrapper.offsetHeight;
            this.wrapperWidth = this.wrapper.clientWidth;
            this.wrapperHeight = this.wrapper.clientHeight;
            this.scrollerWidth = this.scroller.offsetWidth;
            this.scrollerHeight = this.scroller.offsetHeight;
            this.maxScrollX = this.wrapperWidth - this.scrollerWidth;
            this.maxScrollY = this.wrapperHeight - this.scrollerHeight;
            this.hasHorizontalScroll = this.options.scrollX && this.maxScrollX < 0;
            this.hasVerticalScroll = this.options.scrollY && this.maxScrollY < 0;
            if (!this.hasHorizontalScroll) {
                this.maxScrollX = 0;
                this.scrollerWidth = this.wrapperWidth;
            }
            if (!this.hasVerticalScroll) {
                this.maxScrollY = 0;
                this.scrollerHeight = this.wrapperHeight;
            }
            this.endTime = 0;
            this.directionX = 0;
            this.directionY = 0;
            this.wrapperOffset = e.offset(this.wrapper);
            this._execEvent("refresh");
            this.resetPosition();
        },
        on: function(a, b) {
            if (!this._events[a]) {
                this._events[a] = [];
            }
            this._events[a].push(b);
        },
        off: function(a, b) {
            if (!this._events[a]) {
                return;
            }
            var c = this._events[a].indexOf(b);
            if (c > -1) {
                this._events[a].splice(c, 1);
            }
        },
        _execEvent: function(a) {
            if (!this._events[a]) {
                return;
            }
            var b = 0, c = this._events[a].length;
            if (!c) {
                return;
            }
            for (;b < c; b++) {
                this._events[a][b].apply(this, [].slice.call(arguments, 1));
            }
        },
        scrollBy: function(a, b, c, d) {
            a = this.x + a;
            b = this.y + b;
            c = c || 0;
            this.scrollTo(a, b, c, d);
        },
        scrollTo: function(a, b, c, d) {
            d = d || e.ease.circular;
            this.isInTransition = this.options.useTransition && c > 0;
            var f = this.options.useTransition && d.style;
            if (!c || f) {
                if (f) {
                    this._transitionTimingFunction(d.style);
                    this._transitionTime(c);
                }
                this._translate(a, b);
            } else {
                this._animate(a, b, c, d.fn);
            }
        },
        scrollToElement: function(a, b, d, f, g) {
            a = a.nodeType ? a : this.scroller.querySelector(a);
            if (!a) {
                return;
            }
            var h = e.offset(a);
            h.left -= this.wrapperOffset.left;
            h.top -= this.wrapperOffset.top;
            if (d === true) {
                d = c.round(a.offsetWidth / 2 - this.wrapper.offsetWidth / 2);
            }
            if (f === true) {
                f = c.round(a.offsetHeight / 2 - this.wrapper.offsetHeight / 2);
            }
            h.left -= d || 0;
            h.top -= f || 0;
            h.left = h.left > 0 ? 0 : h.left < this.maxScrollX ? this.maxScrollX : h.left;
            h.top = h.top > 0 ? 0 : h.top < this.maxScrollY ? this.maxScrollY : h.top;
            b = b === undefined || b === null || b === "auto" ? c.max(c.abs(this.x - h.left), c.abs(this.y - h.top)) : b;
            this.scrollTo(h.left, h.top, b, g);
        },
        _transitionTime: function(a) {
            a = a || 0;
            var b = e.style.transitionDuration;
            this.scrollerStyle[b] = a + "ms";
            if (!a && e.isBadAndroid) {
                this.scrollerStyle[b] = "0.0001ms";
                var c = this;
                d(function() {
                    if (c.scrollerStyle[b] === "0.0001ms") {
                        c.scrollerStyle[b] = "0s";
                    }
                });
            }
            if (this.indicators) {
                for (var f = this.indicators.length; f--; ) {
                    this.indicators[f].transitionTime(a);
                }
            }
        },
        _transitionTimingFunction: function(a) {
            this.scrollerStyle[e.style.transitionTimingFunction] = a;
            if (this.indicators) {
                for (var b = this.indicators.length; b--; ) {
                    this.indicators[b].transitionTimingFunction(a);
                }
            }
        },
        _translate: function(a, b) {
            if (this.options.useTransform) {
                this.scrollerStyle[e.style.transform] = "translate(" + a + "px," + b + "px)" + this.translateZ;
            } else {
                a = c.round(a);
                b = c.round(b);
                this.scrollerStyle.left = a + "px";
                this.scrollerStyle.top = b + "px";
            }
            this.x = a;
            this.y = b;
            if (this.indicators) {
                for (var d = this.indicators.length; d--; ) {
                    this.indicators[d].updatePosition();
                }
            }
        },
        _initEvents: function(b) {
            var c = b ? e.removeEvent : e.addEvent, d = this.options.bindToWrapper ? this.wrapper : a;
            c(a, "orientationchange", this);
            c(a, "resize", this);
            if (this.options.click) {
                c(this.wrapper, "click", this, true);
            }
            if (!this.options.disableMouse) {
                c(this.wrapper, "mousedown", this);
                c(d, "mousemove", this);
                c(d, "mousecancel", this);
                c(d, "mouseup", this);
            }
            if (e.hasPointer && !this.options.disablePointer) {
                c(this.wrapper, e.prefixPointerEvent("pointerdown"), this);
                c(d, e.prefixPointerEvent("pointermove"), this);
                c(d, e.prefixPointerEvent("pointercancel"), this);
                c(d, e.prefixPointerEvent("pointerup"), this);
            }
            if (e.hasTouch && !this.options.disableTouch) {
                c(this.wrapper, "touchstart", this);
                c(d, "touchmove", this);
                c(d, "touchcancel", this);
                c(d, "touchend", this);
            }
            c(this.scroller, "transitionend", this);
            c(this.scroller, "webkitTransitionEnd", this);
            c(this.scroller, "oTransitionEnd", this);
            c(this.scroller, "MSTransitionEnd", this);
        },
        getComputedPosition: function() {
            var b = a.getComputedStyle(this.scroller, null), c, d;
            if (this.options.useTransform) {
                b = b[e.style.transform].split(")")[0].split(", ");
                c = +(b[12] || b[4]);
                d = +(b[13] || b[5]);
            } else {
                c = +b.left.replace(/[^-\d.]/g, "");
                d = +b.top.replace(/[^-\d.]/g, "");
            }
            return {
                x: c,
                y: d
            };
        },
        _initIndicators: function() {
            var a = this.options.interactiveScrollbars, b = typeof this.options.scrollbars != "string", c = [], d;
            var e = this;
            this.indicators = [];
            if (this.options.scrollbars) {
                if (this.options.scrollY) {
                    d = {
                        el: g("v", a, this.options.scrollbars),
                        interactive: a,
                        defaultScrollbars: true,
                        customStyle: b,
                        resize: this.options.resizeScrollbars,
                        shrink: this.options.shrinkScrollbars,
                        fade: this.options.fadeScrollbars,
                        listenX: false
                    };
                    this.wrapper.appendChild(d.el);
                    c.push(d);
                }
                if (this.options.scrollX) {
                    d = {
                        el: g("h", a, this.options.scrollbars),
                        interactive: a,
                        defaultScrollbars: true,
                        customStyle: b,
                        resize: this.options.resizeScrollbars,
                        shrink: this.options.shrinkScrollbars,
                        fade: this.options.fadeScrollbars,
                        listenY: false
                    };
                    this.wrapper.appendChild(d.el);
                    c.push(d);
                }
            }
            if (this.options.indicators) {
                c = c.concat(this.options.indicators);
            }
            for (var f = c.length; f--; ) {
                this.indicators.push(new h(this, c[f]));
            }
            function i(a) {
                if (e.indicators) {
                    for (var b = e.indicators.length; b--; ) {
                        a.call(e.indicators[b]);
                    }
                }
            }
            if (this.options.fadeScrollbars) {
                this.on("scrollEnd", function() {
                    i(function() {
                        this.fade();
                    });
                });
                this.on("scrollCancel", function() {
                    i(function() {
                        this.fade();
                    });
                });
                this.on("scrollStart", function() {
                    i(function() {
                        this.fade(1);
                    });
                });
                this.on("beforeScrollStart", function() {
                    i(function() {
                        this.fade(1, true);
                    });
                });
            }
            this.on("refresh", function() {
                i(function() {
                    this.refresh();
                });
            });
            this.on("destroy", function() {
                i(function() {
                    this.destroy();
                });
                delete this.indicators;
            });
        },
        _initWheel: function() {
            e.addEvent(this.wrapper, "wheel", this);
            e.addEvent(this.wrapper, "mousewheel", this);
            e.addEvent(this.wrapper, "DOMMouseScroll", this);
            this.on("destroy", function() {
                clearTimeout(this.wheelTimeout);
                this.wheelTimeout = null;
                e.removeEvent(this.wrapper, "wheel", this);
                e.removeEvent(this.wrapper, "mousewheel", this);
                e.removeEvent(this.wrapper, "DOMMouseScroll", this);
            });
        },
        _wheel: function(a) {
            if (!this.enabled) {
                return;
            }
            a.preventDefault();
            var b, d, e, f, g = this;
            if (this.wheelTimeout === undefined) {
                g._execEvent("scrollStart");
            }
            clearTimeout(this.wheelTimeout);
            this.wheelTimeout = setTimeout(function() {
                if (!g.options.snap) {
                    g._execEvent("scrollEnd");
                }
                g.wheelTimeout = undefined;
            }, 400);
            if ("deltaX" in a) {
                if (a.deltaMode === 1) {
                    b = -a.deltaX * this.options.mouseWheelSpeed;
                    d = -a.deltaY * this.options.mouseWheelSpeed;
                } else {
                    b = -a.deltaX;
                    d = -a.deltaY;
                }
            } else if ("wheelDeltaX" in a) {
                b = a.wheelDeltaX / 120 * this.options.mouseWheelSpeed;
                d = a.wheelDeltaY / 120 * this.options.mouseWheelSpeed;
            } else if ("wheelDelta" in a) {
                b = d = a.wheelDelta / 120 * this.options.mouseWheelSpeed;
            } else if ("detail" in a) {
                b = d = -a.detail / 3 * this.options.mouseWheelSpeed;
            } else {
                return;
            }
            b *= this.options.invertWheelDirection;
            d *= this.options.invertWheelDirection;
            if (!this.hasVerticalScroll) {
                b = d;
                d = 0;
            }
            if (this.options.snap) {
                e = this.currentPage.pageX;
                f = this.currentPage.pageY;
                if (b > 0) {
                    e--;
                } else if (b < 0) {
                    e++;
                }
                if (d > 0) {
                    f--;
                } else if (d < 0) {
                    f++;
                }
                this.goToPage(e, f);
                return;
            }
            e = this.x + c.round(this.hasHorizontalScroll ? b : 0);
            f = this.y + c.round(this.hasVerticalScroll ? d : 0);
            this.directionX = b > 0 ? -1 : b < 0 ? 1 : 0;
            this.directionY = d > 0 ? -1 : d < 0 ? 1 : 0;
            if (e > 0) {
                e = 0;
            } else if (e < this.maxScrollX) {
                e = this.maxScrollX;
            }
            if (f > 0) {
                f = 0;
            } else if (f < this.maxScrollY) {
                f = this.maxScrollY;
            }
            this.scrollTo(e, f, 0);
        },
        _initSnap: function() {
            this.currentPage = {};
            if (typeof this.options.snap == "string") {
                this.options.snap = this.scroller.querySelectorAll(this.options.snap);
            }
            this.on("refresh", function() {
                var a = 0, b, d = 0, e, f, g, h = 0, i, j = this.options.snapStepX || this.wrapperWidth, k = this.options.snapStepY || this.wrapperHeight, l;
                this.pages = [];
                if (!this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight) {
                    return;
                }
                if (this.options.snap === true) {
                    f = c.round(j / 2);
                    g = c.round(k / 2);
                    while (h > -this.scrollerWidth) {
                        this.pages[a] = [];
                        b = 0;
                        i = 0;
                        while (i > -this.scrollerHeight) {
                            this.pages[a][b] = {
                                x: c.max(h, this.maxScrollX),
                                y: c.max(i, this.maxScrollY),
                                width: j,
                                height: k,
                                cx: h - f,
                                cy: i - g
                            };
                            i -= k;
                            b++;
                        }
                        h -= j;
                        a++;
                    }
                } else {
                    l = this.options.snap;
                    b = l.length;
                    e = -1;
                    for (;a < b; a++) {
                        if (a === 0 || l[a].offsetLeft <= l[a - 1].offsetLeft) {
                            d = 0;
                            e++;
                        }
                        if (!this.pages[d]) {
                            this.pages[d] = [];
                        }
                        h = c.max(-l[a].offsetLeft, this.maxScrollX);
                        i = c.max(-l[a].offsetTop, this.maxScrollY);
                        f = h - c.round(l[a].offsetWidth / 2);
                        g = i - c.round(l[a].offsetHeight / 2);
                        this.pages[d][e] = {
                            x: h,
                            y: i,
                            width: l[a].offsetWidth,
                            height: l[a].offsetHeight,
                            cx: f,
                            cy: g
                        };
                        if (h > this.maxScrollX) {
                            d++;
                        }
                    }
                }
                this.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);
                if (this.options.snapThreshold % 1 === 0) {
                    this.snapThresholdX = this.options.snapThreshold;
                    this.snapThresholdY = this.options.snapThreshold;
                } else {
                    this.snapThresholdX = c.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);
                    this.snapThresholdY = c.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);
                }
            });
            this.on("flick", function() {
                var a = this.options.snapSpeed || c.max(c.max(c.min(c.abs(this.x - this.startX), 1e3), c.min(c.abs(this.y - this.startY), 1e3)), 300);
                this.goToPage(this.currentPage.pageX + this.directionX, this.currentPage.pageY + this.directionY, a);
            });
        },
        _nearestSnap: function(a, b) {
            if (!this.pages.length) {
                return {
                    x: 0,
                    y: 0,
                    pageX: 0,
                    pageY: 0
                };
            }
            var d = 0, e = this.pages.length, f = 0;
            if (c.abs(a - this.absStartX) < this.snapThresholdX && c.abs(b - this.absStartY) < this.snapThresholdY) {
                return this.currentPage;
            }
            if (a > 0) {
                a = 0;
            } else if (a < this.maxScrollX) {
                a = this.maxScrollX;
            }
            if (b > 0) {
                b = 0;
            } else if (b < this.maxScrollY) {
                b = this.maxScrollY;
            }
            for (;d < e; d++) {
                if (a >= this.pages[d][0].cx) {
                    a = this.pages[d][0].x;
                    break;
                }
            }
            e = this.pages[d].length;
            for (;f < e; f++) {
                if (b >= this.pages[0][f].cy) {
                    b = this.pages[0][f].y;
                    break;
                }
            }
            if (d == this.currentPage.pageX) {
                d += this.directionX;
                if (d < 0) {
                    d = 0;
                } else if (d >= this.pages.length) {
                    d = this.pages.length - 1;
                }
                a = this.pages[d][0].x;
            }
            if (f == this.currentPage.pageY) {
                f += this.directionY;
                if (f < 0) {
                    f = 0;
                } else if (f >= this.pages[0].length) {
                    f = this.pages[0].length - 1;
                }
                b = this.pages[0][f].y;
            }
            return {
                x: a,
                y: b,
                pageX: d,
                pageY: f
            };
        },
        goToPage: function(a, b, d, e) {
            e = e || this.options.bounceEasing;
            if (a >= this.pages.length) {
                a = this.pages.length - 1;
            } else if (a < 0) {
                a = 0;
            }
            if (b >= this.pages[a].length) {
                b = this.pages[a].length - 1;
            } else if (b < 0) {
                b = 0;
            }
            var f = this.pages[a][b].x, g = this.pages[a][b].y;
            d = d === undefined ? this.options.snapSpeed || c.max(c.max(c.min(c.abs(f - this.x), 1e3), c.min(c.abs(g - this.y), 1e3)), 300) : d;
            this.currentPage = {
                x: f,
                y: g,
                pageX: a,
                pageY: b
            };
            this.scrollTo(f, g, d, e);
        },
        next: function(a, b) {
            var c = this.currentPage.pageX, d = this.currentPage.pageY;
            c++;
            if (c >= this.pages.length && this.hasVerticalScroll) {
                c = 0;
                d++;
            }
            this.goToPage(c, d, a, b);
        },
        prev: function(a, b) {
            var c = this.currentPage.pageX, d = this.currentPage.pageY;
            c--;
            if (c < 0 && this.hasVerticalScroll) {
                c = 0;
                d--;
            }
            this.goToPage(c, d, a, b);
        },
        _initKeys: function(b) {
            var c = {
                pageUp: 33,
                pageDown: 34,
                end: 35,
                home: 36,
                left: 37,
                up: 38,
                right: 39,
                down: 40
            };
            var d;
            if (typeof this.options.keyBindings == "object") {
                for (d in this.options.keyBindings) {
                    if (typeof this.options.keyBindings[d] == "string") {
                        this.options.keyBindings[d] = this.options.keyBindings[d].toUpperCase().charCodeAt(0);
                    }
                }
            } else {
                this.options.keyBindings = {};
            }
            for (d in c) {
                this.options.keyBindings[d] = this.options.keyBindings[d] || c[d];
            }
            e.addEvent(a, "keydown", this);
            this.on("destroy", function() {
                e.removeEvent(a, "keydown", this);
            });
        },
        _key: function(a) {
            if (!this.enabled) {
                return;
            }
            var b = this.options.snap, d = b ? this.currentPage.pageX : this.x, f = b ? this.currentPage.pageY : this.y, g = e.getTime(), h = this.keyTime || 0, i = .25, j;
            if (this.options.useTransition && this.isInTransition) {
                j = this.getComputedPosition();
                this._translate(c.round(j.x), c.round(j.y));
                this.isInTransition = false;
            }
            this.keyAcceleration = g - h < 200 ? c.min(this.keyAcceleration + i, 50) : 0;
            switch (a.keyCode) {
              case this.options.keyBindings.pageUp:
                if (this.hasHorizontalScroll && !this.hasVerticalScroll) {
                    d += b ? 1 : this.wrapperWidth;
                } else {
                    f += b ? 1 : this.wrapperHeight;
                }
                break;

              case this.options.keyBindings.pageDown:
                if (this.hasHorizontalScroll && !this.hasVerticalScroll) {
                    d -= b ? 1 : this.wrapperWidth;
                } else {
                    f -= b ? 1 : this.wrapperHeight;
                }
                break;

              case this.options.keyBindings.end:
                d = b ? this.pages.length - 1 : this.maxScrollX;
                f = b ? this.pages[0].length - 1 : this.maxScrollY;
                break;

              case this.options.keyBindings.home:
                d = 0;
                f = 0;
                break;

              case this.options.keyBindings.left:
                d += b ? -1 : 5 + this.keyAcceleration >> 0;
                break;

              case this.options.keyBindings.up:
                f += b ? 1 : 5 + this.keyAcceleration >> 0;
                break;

              case this.options.keyBindings.right:
                d -= b ? -1 : 5 + this.keyAcceleration >> 0;
                break;

              case this.options.keyBindings.down:
                f -= b ? 1 : 5 + this.keyAcceleration >> 0;
                break;

              default:
                return;
            }
            if (b) {
                this.goToPage(d, f);
                return;
            }
            if (d > 0) {
                d = 0;
                this.keyAcceleration = 0;
            } else if (d < this.maxScrollX) {
                d = this.maxScrollX;
                this.keyAcceleration = 0;
            }
            if (f > 0) {
                f = 0;
                this.keyAcceleration = 0;
            } else if (f < this.maxScrollY) {
                f = this.maxScrollY;
                this.keyAcceleration = 0;
            }
            this.scrollTo(d, f, 0);
            this.keyTime = g;
        },
        _animate: function(a, b, c, f) {
            var g = this, h = this.x, i = this.y, j = e.getTime(), k = j + c;
            function l() {
                var m = e.getTime(), n, o, p;
                if (m >= k) {
                    g.isAnimating = false;
                    g._translate(a, b);
                    if (!g.resetPosition(g.options.bounceTime)) {
                        g._execEvent("scrollEnd");
                    }
                    return;
                }
                m = (m - j) / c;
                p = f(m);
                n = (a - h) * p + h;
                o = (b - i) * p + i;
                g._translate(n, o);
                if (g.isAnimating) {
                    d(l);
                }
            }
            this.isAnimating = true;
            l();
        },
        handleEvent: function(a) {
            switch (a.type) {
              case "touchstart":
              case "pointerdown":
              case "MSPointerDown":
              case "mousedown":
                this._start(a);
                break;

              case "touchmove":
              case "pointermove":
              case "MSPointerMove":
              case "mousemove":
                this._move(a);
                break;

              case "touchend":
              case "pointerup":
              case "MSPointerUp":
              case "mouseup":
              case "touchcancel":
              case "pointercancel":
              case "MSPointerCancel":
              case "mousecancel":
                this._end(a);
                break;

              case "orientationchange":
              case "resize":
                this._resize();
                break;

              case "transitionend":
              case "webkitTransitionEnd":
              case "oTransitionEnd":
              case "MSTransitionEnd":
                this._transitionEnd(a);
                break;

              case "wheel":
              case "DOMMouseScroll":
              case "mousewheel":
                this._wheel(a);
                break;

              case "keydown":
                this._key(a);
                break;

              case "click":
                if (this.enabled && !a._constructed) {
                    a.preventDefault();
                    a.stopPropagation();
                }
                break;
            }
        }
    };
    function g(a, c, d) {
        var e = b.createElement("div"), f = b.createElement("div");
        if (d === true) {
            e.style.cssText = "position:absolute;z-index:9999";
            f.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px";
        }
        f.className = "iScrollIndicator";
        if (a == "h") {
            if (d === true) {
                e.style.cssText += ";height:7px;left:2px;right:2px;bottom:0";
                f.style.height = "100%";
            }
            e.className = "iScrollHorizontalScrollbar";
        } else {
            if (d === true) {
                e.style.cssText += ";width:7px;bottom:2px;top:2px;right:1px";
                f.style.width = "100%";
            }
            e.className = "iScrollVerticalScrollbar";
        }
        e.style.cssText += ";overflow:hidden";
        if (!c) {
            e.style.pointerEvents = "none";
        }
        e.appendChild(f);
        return e;
    }
    function h(c, f) {
        this.wrapper = typeof f.el == "string" ? b.querySelector(f.el) : f.el;
        this.wrapperStyle = this.wrapper.style;
        this.indicator = this.wrapper.children[0];
        this.indicatorStyle = this.indicator.style;
        this.scroller = c;
        this.options = {
            listenX: true,
            listenY: true,
            interactive: false,
            resize: true,
            defaultScrollbars: false,
            shrink: false,
            fade: false,
            speedRatioX: 0,
            speedRatioY: 0
        };
        for (var g in f) {
            this.options[g] = f[g];
        }
        this.sizeRatioX = 1;
        this.sizeRatioY = 1;
        this.maxPosX = 0;
        this.maxPosY = 0;
        if (this.options.interactive) {
            if (!this.options.disableTouch) {
                e.addEvent(this.indicator, "touchstart", this);
                e.addEvent(a, "touchend", this);
            }
            if (!this.options.disablePointer) {
                e.addEvent(this.indicator, e.prefixPointerEvent("pointerdown"), this);
                e.addEvent(a, e.prefixPointerEvent("pointerup"), this);
            }
            if (!this.options.disableMouse) {
                e.addEvent(this.indicator, "mousedown", this);
                e.addEvent(a, "mouseup", this);
            }
        }
        if (this.options.fade) {
            this.wrapperStyle[e.style.transform] = this.scroller.translateZ;
            var h = e.style.transitionDuration;
            this.wrapperStyle[h] = e.isBadAndroid ? "0.0001ms" : "0ms";
            var i = this;
            if (e.isBadAndroid) {
                d(function() {
                    if (i.wrapperStyle[h] === "0.0001ms") {
                        i.wrapperStyle[h] = "0s";
                    }
                });
            }
            this.wrapperStyle.opacity = "0";
        }
    }
    h.prototype = {
        handleEvent: function(a) {
            switch (a.type) {
              case "touchstart":
              case "pointerdown":
              case "MSPointerDown":
              case "mousedown":
                this._start(a);
                break;

              case "touchmove":
              case "pointermove":
              case "MSPointerMove":
              case "mousemove":
                this._move(a);
                break;

              case "touchend":
              case "pointerup":
              case "MSPointerUp":
              case "mouseup":
              case "touchcancel":
              case "pointercancel":
              case "MSPointerCancel":
              case "mousecancel":
                this._end(a);
                break;
            }
        },
        destroy: function() {
            if (this.options.fadeScrollbars) {
                clearTimeout(this.fadeTimeout);
                this.fadeTimeout = null;
            }
            if (this.options.interactive) {
                e.removeEvent(this.indicator, "touchstart", this);
                e.removeEvent(this.indicator, e.prefixPointerEvent("pointerdown"), this);
                e.removeEvent(this.indicator, "mousedown", this);
                e.removeEvent(a, "touchmove", this);
                e.removeEvent(a, e.prefixPointerEvent("pointermove"), this);
                e.removeEvent(a, "mousemove", this);
                e.removeEvent(a, "touchend", this);
                e.removeEvent(a, e.prefixPointerEvent("pointerup"), this);
                e.removeEvent(a, "mouseup", this);
            }
            if (this.options.defaultScrollbars) {
                this.wrapper.parentNode.removeChild(this.wrapper);
            }
        },
        _start: function(b) {
            var c = b.touches ? b.touches[0] : b;
            b.preventDefault();
            b.stopPropagation();
            this.transitionTime();
            this.initiated = true;
            this.moved = false;
            this.lastPointX = c.pageX;
            this.lastPointY = c.pageY;
            this.startTime = e.getTime();
            if (!this.options.disableTouch) {
                e.addEvent(a, "touchmove", this);
            }
            if (!this.options.disablePointer) {
                e.addEvent(a, e.prefixPointerEvent("pointermove"), this);
            }
            if (!this.options.disableMouse) {
                e.addEvent(a, "mousemove", this);
            }
            this.scroller._execEvent("beforeScrollStart");
        },
        _move: function(a) {
            var b = a.touches ? a.touches[0] : a, c, d, f, g, h = e.getTime();
            if (!this.moved) {
                this.scroller._execEvent("scrollStart");
            }
            this.moved = true;
            c = b.pageX - this.lastPointX;
            this.lastPointX = b.pageX;
            d = b.pageY - this.lastPointY;
            this.lastPointY = b.pageY;
            f = this.x + c;
            g = this.y + d;
            this._pos(f, g);
            a.preventDefault();
            a.stopPropagation();
        },
        _end: function(b) {
            if (!this.initiated) {
                return;
            }
            this.initiated = false;
            b.preventDefault();
            b.stopPropagation();
            e.removeEvent(a, "touchmove", this);
            e.removeEvent(a, e.prefixPointerEvent("pointermove"), this);
            e.removeEvent(a, "mousemove", this);
            if (this.scroller.options.snap) {
                var d = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);
                var f = this.options.snapSpeed || c.max(c.max(c.min(c.abs(this.scroller.x - d.x), 1e3), c.min(c.abs(this.scroller.y - d.y), 1e3)), 300);
                if (this.scroller.x != d.x || this.scroller.y != d.y) {
                    this.scroller.directionX = 0;
                    this.scroller.directionY = 0;
                    this.scroller.currentPage = d;
                    this.scroller.scrollTo(d.x, d.y, f, this.scroller.options.bounceEasing);
                }
            }
            if (this.moved) {
                this.scroller._execEvent("scrollEnd");
            }
        },
        transitionTime: function(a) {
            a = a || 0;
            var b = e.style.transitionDuration;
            this.indicatorStyle[b] = a + "ms";
            if (!a && e.isBadAndroid) {
                this.indicatorStyle[b] = "0.0001ms";
                var c = this;
                d(function() {
                    if (c.indicatorStyle[b] === "0.0001ms") {
                        c.indicatorStyle[b] = "0s";
                    }
                });
            }
        },
        transitionTimingFunction: function(a) {
            this.indicatorStyle[e.style.transitionTimingFunction] = a;
        },
        refresh: function() {
            this.transitionTime();
            if (this.options.listenX && !this.options.listenY) {
                this.indicatorStyle.display = this.scroller.hasHorizontalScroll ? "block" : "none";
            } else if (this.options.listenY && !this.options.listenX) {
                this.indicatorStyle.display = this.scroller.hasVerticalScroll ? "block" : "none";
            } else {
                this.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? "block" : "none";
            }
            if (this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll) {
                e.addClass(this.wrapper, "iScrollBothScrollbars");
                e.removeClass(this.wrapper, "iScrollLoneScrollbar");
                if (this.options.defaultScrollbars && this.options.customStyle) {
                    if (this.options.listenX) {
                        this.wrapper.style.right = "8px";
                    } else {
                        this.wrapper.style.bottom = "8px";
                    }
                }
            } else {
                e.removeClass(this.wrapper, "iScrollBothScrollbars");
                e.addClass(this.wrapper, "iScrollLoneScrollbar");
                if (this.options.defaultScrollbars && this.options.customStyle) {
                    if (this.options.listenX) {
                        this.wrapper.style.right = "2px";
                    } else {
                        this.wrapper.style.bottom = "2px";
                    }
                }
            }
            var a = this.wrapper.offsetHeight;
            if (this.options.listenX) {
                this.wrapperWidth = this.wrapper.clientWidth;
                if (this.options.resize) {
                    this.indicatorWidth = c.max(c.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);
                    this.indicatorStyle.width = this.indicatorWidth + "px";
                } else {
                    this.indicatorWidth = this.indicator.clientWidth;
                }
                this.maxPosX = this.wrapperWidth - this.indicatorWidth;
                if (this.options.shrink == "clip") {
                    this.minBoundaryX = -this.indicatorWidth + 8;
                    this.maxBoundaryX = this.wrapperWidth - 8;
                } else {
                    this.minBoundaryX = 0;
                    this.maxBoundaryX = this.maxPosX;
                }
                this.sizeRatioX = this.options.speedRatioX || this.scroller.maxScrollX && this.maxPosX / this.scroller.maxScrollX;
            }
            if (this.options.listenY) {
                this.wrapperHeight = this.wrapper.clientHeight;
                if (this.options.resize) {
                    this.indicatorHeight = c.max(c.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);
                    this.indicatorStyle.height = this.indicatorHeight + "px";
                } else {
                    this.indicatorHeight = this.indicator.clientHeight;
                }
                this.maxPosY = this.wrapperHeight - this.indicatorHeight;
                if (this.options.shrink == "clip") {
                    this.minBoundaryY = -this.indicatorHeight + 8;
                    this.maxBoundaryY = this.wrapperHeight - 8;
                } else {
                    this.minBoundaryY = 0;
                    this.maxBoundaryY = this.maxPosY;
                }
                this.maxPosY = this.wrapperHeight - this.indicatorHeight;
                this.sizeRatioY = this.options.speedRatioY || this.scroller.maxScrollY && this.maxPosY / this.scroller.maxScrollY;
            }
            this.updatePosition();
        },
        updatePosition: function() {
            var a = this.options.listenX && c.round(this.sizeRatioX * this.scroller.x) || 0, b = this.options.listenY && c.round(this.sizeRatioY * this.scroller.y) || 0;
            if (!this.options.ignoreBoundaries) {
                if (a < this.minBoundaryX) {
                    if (this.options.shrink == "scale") {
                        this.width = c.max(this.indicatorWidth + a, 8);
                        this.indicatorStyle.width = this.width + "px";
                    }
                    a = this.minBoundaryX;
                } else if (a > this.maxBoundaryX) {
                    if (this.options.shrink == "scale") {
                        this.width = c.max(this.indicatorWidth - (a - this.maxPosX), 8);
                        this.indicatorStyle.width = this.width + "px";
                        a = this.maxPosX + this.indicatorWidth - this.width;
                    } else {
                        a = this.maxBoundaryX;
                    }
                } else if (this.options.shrink == "scale" && this.width != this.indicatorWidth) {
                    this.width = this.indicatorWidth;
                    this.indicatorStyle.width = this.width + "px";
                }
                if (b < this.minBoundaryY) {
                    if (this.options.shrink == "scale") {
                        this.height = c.max(this.indicatorHeight + b * 3, 8);
                        this.indicatorStyle.height = this.height + "px";
                    }
                    b = this.minBoundaryY;
                } else if (b > this.maxBoundaryY) {
                    if (this.options.shrink == "scale") {
                        this.height = c.max(this.indicatorHeight - (b - this.maxPosY) * 3, 8);
                        this.indicatorStyle.height = this.height + "px";
                        b = this.maxPosY + this.indicatorHeight - this.height;
                    } else {
                        b = this.maxBoundaryY;
                    }
                } else if (this.options.shrink == "scale" && this.height != this.indicatorHeight) {
                    this.height = this.indicatorHeight;
                    this.indicatorStyle.height = this.height + "px";
                }
            }
            this.x = a;
            this.y = b;
            if (this.scroller.options.useTransform) {
                this.indicatorStyle[e.style.transform] = "translate(" + a + "px," + b + "px)" + this.scroller.translateZ;
            } else {
                this.indicatorStyle.left = a + "px";
                this.indicatorStyle.top = b + "px";
            }
        },
        _pos: function(a, b) {
            if (a < 0) {
                a = 0;
            } else if (a > this.maxPosX) {
                a = this.maxPosX;
            }
            if (b < 0) {
                b = 0;
            } else if (b > this.maxPosY) {
                b = this.maxPosY;
            }
            a = this.options.listenX ? c.round(a / this.sizeRatioX) : this.scroller.x;
            b = this.options.listenY ? c.round(b / this.sizeRatioY) : this.scroller.y;
            this.scroller.scrollTo(a, b);
        },
        fade: function(a, b) {
            if (b && !this.visible) {
                return;
            }
            clearTimeout(this.fadeTimeout);
            this.fadeTimeout = null;
            var c = a ? 250 : 500, d = a ? 0 : 300;
            a = a ? "1" : "0";
            this.wrapperStyle[e.style.transitionDuration] = c + "ms";
            this.fadeTimeout = setTimeout(function(a) {
                this.wrapperStyle.opacity = a;
                this.visible = +a;
            }.bind(this, a), d);
        }
    };
    f.utils = e;
    if (typeof module != "undefined" && module.exports) {
        module.exports = f;
    } else if (typeof define == "function" && define.amd) {
        define(function() {
            return f;
        });
    } else {
        a.IScroll = f;
    }
})(window, document, Math);

(function(a, b) {
    "use strict";
    var c = "3.0.3";
    function d(b) {
        if (a.fn.cycle.debug) e(b);
    }
    function e() {
        if (window.console && console.log) console.log("[cycle] " + Array.prototype.join.call(arguments, " "));
    }
    a.expr[":"].paused = function(a) {
        return a.cyclePause;
    };
    a.fn.cycle = function(b, c) {
        var f = {
            s: this.selector,
            c: this.context
        };
        if (this.length === 0 && b != "stop") {
            if (!a.isReady && f.s) {
                e("DOM not ready, queuing slideshow");
                a(function() {
                    a(f.s, f.c).cycle(b, c);
                });
                return this;
            }
            e("terminating; zero elements found by selector" + (a.isReady ? "" : " (DOM not ready)"));
            return this;
        }
        return this.each(function() {
            var h = g(this, b, c);
            if (h === false) return;
            h.updateActivePagerLink = h.updateActivePagerLink || a.fn.cycle.updateActivePagerLink;
            if (this.cycleTimeout) clearTimeout(this.cycleTimeout);
            this.cycleTimeout = this.cyclePause = 0;
            this.cycleStop = 0;
            var i = a(this);
            var k = h.slideExpr ? a(h.slideExpr, this) : i.children();
            var l = k.get();
            if (l.length < 2) {
                e("terminating; too few slides: " + l.length);
                return;
            }
            var m = j(i, k, l, h, f);
            if (m === false) return;
            var p = m.continuous ? 10 : o(l[m.currSlide], l[m.nextSlide], m, !m.backwards);
            if (p) {
                p += m.delay || 0;
                if (p < 10) p = 10;
                d("first timeout: " + p);
                this.cycleTimeout = setTimeout(function() {
                    n(l, m, 0, !h.backwards);
                }, p);
            }
        });
    };
    function f(b, c, d) {
        var e = a(b).data("cycle.opts");
        if (!e) return;
        var f = !!b.cyclePause;
        if (f && e.paused) e.paused(b, e, c, d); else if (!f && e.resumed) e.resumed(b, e, c, d);
    }
    function g(c, d, g) {
        if (c.cycleStop === b) c.cycleStop = 0;
        if (d === b || d === null) d = {};
        if (d.constructor == String) {
            switch (d) {
              case "destroy":
              case "stop":
                var h = a(c).data("cycle.opts");
                if (!h) return false;
                c.cycleStop++;
                if (c.cycleTimeout) clearTimeout(c.cycleTimeout);
                c.cycleTimeout = 0;
                if (h.elements) a(h.elements).stop();
                a(c).removeData("cycle.opts");
                if (d == "destroy") i(c, h);
                return false;

              case "toggle":
                c.cyclePause = c.cyclePause === 1 ? 0 : 1;
                k(c.cyclePause, g, c);
                f(c);
                return false;

              case "pause":
                c.cyclePause = 1;
                f(c);
                return false;

              case "resume":
                c.cyclePause = 0;
                k(false, g, c);
                f(c);
                return false;

              case "prev":
              case "next":
                h = a(c).data("cycle.opts");
                if (!h) {
                    e('options not found, "prev/next" ignored');
                    return false;
                }
                if (typeof g == "string") h.oneTimeFx = g;
                a.fn.cycle[d](h);
                return false;

              default:
                d = {
                    fx: d
                };
            }
            return d;
        } else if (d.constructor == Number) {
            var j = d;
            d = a(c).data("cycle.opts");
            if (!d) {
                e("options not found, can not advance slide");
                return false;
            }
            if (j < 0 || j >= d.elements.length) {
                e("invalid slide index: " + j);
                return false;
            }
            d.nextSlide = j;
            if (c.cycleTimeout) {
                clearTimeout(c.cycleTimeout);
                c.cycleTimeout = 0;
            }
            if (typeof g == "string") d.oneTimeFx = g;
            n(d.elements, d, 1, j >= d.currSlide);
            return false;
        }
        return d;
        function k(b, c, d) {
            if (!b && c === true) {
                var f = a(d).data("cycle.opts");
                if (!f) {
                    e("options not found, can not resume");
                    return false;
                }
                if (d.cycleTimeout) {
                    clearTimeout(d.cycleTimeout);
                    d.cycleTimeout = 0;
                }
                n(f.elements, f, 1, !f.backwards);
            }
        }
    }
    function h(b, c) {
        if (!a.support.opacity && c.cleartype && b.style.filter) {
            try {
                b.style.removeAttribute("filter");
            } catch (a) {}
        }
    }
    function i(b, c) {
        if (c.next) a(c.next).unbind(c.prevNextEvent);
        if (c.prev) a(c.prev).unbind(c.prevNextEvent);
        if (c.pager || c.pagerAnchorBuilder) a.each(c.pagerAnchors || [], function() {
            this.unbind().remove();
        });
        c.pagerAnchors = null;
        a(b).unbind("mouseenter.cycle mouseleave.cycle");
        if (c.destroy) c.destroy(c);
    }
    function j(c, d, g, i, j) {
        var o;
        var s = a.extend({}, a.fn.cycle.defaults, i || {}, a.metadata ? c.metadata() : a.meta ? c.data() : {});
        var t = a.isFunction(c.data) ? c.data(s.metaAttr) : null;
        if (t) s = a.extend(s, t);
        if (s.autostop) s.countdown = s.autostopCount || g.length;
        var u = c[0];
        c.data("cycle.opts", s);
        s.$cont = c;
        s.stopCount = u.cycleStop;
        s.elements = g;
        s.before = s.before ? [ s.before ] : [];
        s.after = s.after ? [ s.after ] : [];
        if (!a.support.opacity && s.cleartype) s.after.push(function() {
            h(this, s);
        });
        if (s.continuous) s.after.push(function() {
            n(g, s, 0, !s.backwards);
        });
        k(s);
        if (!a.support.opacity && s.cleartype && !s.cleartypeNoBg) r(d);
        if (c.css("position") == "static") c.css("position", "relative");
        if (s.width) c.width(s.width);
        if (s.height && s.height != "auto") c.height(s.height);
        if (s.startingSlide !== b) {
            s.startingSlide = parseInt(s.startingSlide, 10);
            if (s.startingSlide >= g.length || s.startSlide < 0) s.startingSlide = 0; else o = true;
        } else if (s.backwards) s.startingSlide = g.length - 1; else s.startingSlide = 0;
        if (s.random) {
            s.randomMap = [];
            for (var v = 0; v < g.length; v++) s.randomMap.push(v);
            s.randomMap.sort(function(a, b) {
                return Math.random() - .5;
            });
            if (o) {
                for (var w = 0; w < g.length; w++) {
                    if (s.startingSlide == s.randomMap[w]) {
                        s.randomIndex = w;
                    }
                }
            } else {
                s.randomIndex = 1;
                s.startingSlide = s.randomMap[1];
            }
        } else if (s.startingSlide >= g.length) s.startingSlide = 0;
        s.currSlide = s.startingSlide || 0;
        var x = s.startingSlide;
        d.css({
            position: "absolute",
            top: 0,
            left: 0
        }).hide().each(function(b) {
            var c;
            if (s.backwards) c = x ? b <= x ? g.length + (b - x) : x - b : g.length - b; else c = x ? b >= x ? g.length - (b - x) : x - b : g.length - b;
            a(this).css("z-index", c);
        });
        a(g[x]).css("opacity", 1).show();
        h(g[x], s);
        if (s.fit) {
            if (!s.aspect) {
                if (s.width) d.width(s.width);
                if (s.height && s.height != "auto") d.height(s.height);
            } else {
                d.each(function() {
                    var b = a(this);
                    var c = s.aspect === true ? b.width() / b.height() : s.aspect;
                    if (s.width && b.width() != s.width) {
                        b.width(s.width);
                        b.height(s.width / c);
                    }
                    if (s.height && b.height() < s.height) {
                        b.height(s.height);
                        b.width(s.height * c);
                    }
                });
            }
        }
        if (s.center && (!s.fit || s.aspect)) {
            d.each(function() {
                var b = a(this);
                b.css({
                    "margin-left": s.width ? (s.width - b.width()) / 2 + "px" : 0,
                    "margin-top": s.height ? (s.height - b.height()) / 2 + "px" : 0
                });
            });
        }
        if (s.center && !s.fit && !s.slideResize) {
            d.each(function() {
                var b = a(this);
                b.css({
                    "margin-left": s.width ? (s.width - b.width()) / 2 + "px" : 0,
                    "margin-top": s.height ? (s.height - b.height()) / 2 + "px" : 0
                });
            });
        }
        var y = (s.containerResize || s.containerResizeHeight) && c.innerHeight() < 1;
        if (y) {
            var z = 0, A = 0;
            for (var B = 0; B < g.length; B++) {
                var C = a(g[B]), D = C[0], E = C.outerWidth(), F = C.outerHeight();
                if (!E) E = D.offsetWidth || D.width || C.attr("width");
                if (!F) F = D.offsetHeight || D.height || C.attr("height");
                z = E > z ? E : z;
                A = F > A ? F : A;
            }
            if (s.containerResize && z > 0 && A > 0) c.css({
                width: z + "px",
                height: A + "px"
            });
            if (s.containerResizeHeight && A > 0) c.css({
                height: A + "px"
            });
        }
        var G = false;
        if (s.pause) c.bind("mouseenter.cycle", function() {
            G = true;
            this.cyclePause++;
            f(u, true);
        }).bind("mouseleave.cycle", function() {
            if (G) this.cyclePause--;
            f(u, true);
        });
        if (l(s) === false) return false;
        var H = false;
        i.requeueAttempts = i.requeueAttempts || 0;
        d.each(function() {
            var b = a(this);
            this.cycleH = s.fit && s.height ? s.height : b.height() || this.offsetHeight || this.height || b.attr("height") || 0;
            this.cycleW = s.fit && s.width ? s.width : b.width() || this.offsetWidth || this.width || b.attr("width") || 0;
            if (b.is("img")) {
                var c = this.cycleH === 0 && this.cycleW === 0 && !this.complete;
                if (c) {
                    if (j.s && s.requeueOnImageNotLoaded && ++i.requeueAttempts < 100) {
                        e(i.requeueAttempts, " - img slide not loaded, requeuing slideshow: ", this.src, this.cycleW, this.cycleH);
                        setTimeout(function() {
                            a(j.s, j.c).cycle(i);
                        }, s.requeueTimeout);
                        H = true;
                        return false;
                    } else {
                        e("could not determine size of image: " + this.src, this.cycleW, this.cycleH);
                    }
                }
            }
            return true;
        });
        if (H) return false;
        s.cssBefore = s.cssBefore || {};
        s.cssAfter = s.cssAfter || {};
        s.cssFirst = s.cssFirst || {};
        s.animIn = s.animIn || {};
        s.animOut = s.animOut || {};
        d.not(":eq(" + x + ")").css(s.cssBefore);
        a(d[x]).css(s.cssFirst);
        if (s.timeout) {
            s.timeout = parseInt(s.timeout, 10);
            if (s.speed.constructor == String) s.speed = a.fx.speeds[s.speed] || parseInt(s.speed, 10);
            if (!s.sync) s.speed = s.speed / 2;
            var I = s.fx == "none" ? 0 : s.fx == "shuffle" ? 500 : 250;
            while (s.timeout - s.speed < I) s.timeout += s.speed;
        }
        if (s.easing) s.easeIn = s.easeOut = s.easing;
        if (!s.speedIn) s.speedIn = s.speed;
        if (!s.speedOut) s.speedOut = s.speed;
        s.slideCount = g.length;
        s.currSlide = s.lastSlide = x;
        if (s.random) {
            if (++s.randomIndex == g.length) s.randomIndex = 0;
            s.nextSlide = s.randomMap[s.randomIndex];
        } else if (s.backwards) s.nextSlide = s.startingSlide === 0 ? g.length - 1 : s.startingSlide - 1; else s.nextSlide = s.startingSlide >= g.length - 1 ? 0 : s.startingSlide + 1;
        if (!s.multiFx) {
            var J = a.fn.cycle.transitions[s.fx];
            if (a.isFunction(J)) J(c, d, s); else if (s.fx != "custom" && !s.multiFx) {
                e("unknown transition: " + s.fx, "; slideshow terminating");
                return false;
            }
        }
        var K = d[x];
        if (!s.skipInitializationCallbacks) {
            if (s.before.length) s.before[0].apply(K, [ K, K, s, true ]);
            if (s.after.length) s.after[0].apply(K, [ K, K, s, true ]);
        }
        if (s.next) a(s.next).bind(s.prevNextEvent, function() {
            return p(s, 1);
        });
        if (s.prev) a(s.prev).bind(s.prevNextEvent, function() {
            return p(s, 0);
        });
        if (s.pager || s.pagerAnchorBuilder) q(g, s);
        m(s, g);
        return s;
    }
    function k(b) {
        b.original = {
            before: [],
            after: []
        };
        b.original.cssBefore = a.extend({}, b.cssBefore);
        b.original.cssAfter = a.extend({}, b.cssAfter);
        b.original.animIn = a.extend({}, b.animIn);
        b.original.animOut = a.extend({}, b.animOut);
        a.each(b.before, function() {
            b.original.before.push(this);
        });
        a.each(b.after, function() {
            b.original.after.push(this);
        });
    }
    function l(b) {
        var c, f, g = a.fn.cycle.transitions;
        if (b.fx.indexOf(",") > 0) {
            b.multiFx = true;
            b.fxs = b.fx.replace(/\s*/g, "").split(",");
            for (c = 0; c < b.fxs.length; c++) {
                var h = b.fxs[c];
                f = g[h];
                if (!f || !g.hasOwnProperty(h) || !a.isFunction(f)) {
                    e("discarding unknown transition: ", h);
                    b.fxs.splice(c, 1);
                    c--;
                }
            }
            if (!b.fxs.length) {
                e("No valid transitions named; slideshow terminating.");
                return false;
            }
        } else if (b.fx == "all") {
            b.multiFx = true;
            b.fxs = [];
            for (var i in g) {
                if (g.hasOwnProperty(i)) {
                    f = g[i];
                    if (g.hasOwnProperty(i) && a.isFunction(f)) b.fxs.push(i);
                }
            }
        }
        if (b.multiFx && b.randomizeEffects) {
            var j = Math.floor(Math.random() * 20) + 30;
            for (c = 0; c < j; c++) {
                var k = Math.floor(Math.random() * b.fxs.length);
                b.fxs.push(b.fxs.splice(k, 1)[0]);
            }
            d("randomized fx sequence: ", b.fxs);
        }
        return true;
    }
    function m(b, c) {
        b.addSlide = function(d, e) {
            var f = a(d), g = f[0];
            if (!b.autostopCount) b.countdown++;
            c[e ? "unshift" : "push"](g);
            if (b.els) b.els[e ? "unshift" : "push"](g);
            b.slideCount = c.length;
            if (b.random) {
                b.randomMap.push(b.slideCount - 1);
                b.randomMap.sort(function(a, b) {
                    return Math.random() - .5;
                });
            }
            f.css("position", "absolute");
            f[e ? "prependTo" : "appendTo"](b.$cont);
            if (e) {
                b.currSlide++;
                b.nextSlide++;
            }
            if (!a.support.opacity && b.cleartype && !b.cleartypeNoBg) r(f);
            if (b.fit && b.width) f.width(b.width);
            if (b.fit && b.height && b.height != "auto") f.height(b.height);
            g.cycleH = b.fit && b.height ? b.height : f.height();
            g.cycleW = b.fit && b.width ? b.width : f.width();
            f.css(b.cssBefore);
            if (b.pager || b.pagerAnchorBuilder) a.fn.cycle.createPagerAnchor(c.length - 1, g, a(b.pager), c, b);
            if (a.isFunction(b.onAddSlide)) b.onAddSlide(f); else f.hide();
        };
    }
    a.fn.cycle.resetState = function(b, c) {
        c = c || b.fx;
        b.before = [];
        b.after = [];
        b.cssBefore = a.extend({}, b.original.cssBefore);
        b.cssAfter = a.extend({}, b.original.cssAfter);
        b.animIn = a.extend({}, b.original.animIn);
        b.animOut = a.extend({}, b.original.animOut);
        b.fxFn = null;
        a.each(b.original.before, function() {
            b.before.push(this);
        });
        a.each(b.original.after, function() {
            b.after.push(this);
        });
        var d = a.fn.cycle.transitions[c];
        if (a.isFunction(d)) d(b.$cont, a(b.elements), b);
    };
    function n(c, e, f, g) {
        var h = e.$cont[0], i = c[e.currSlide], j = c[e.nextSlide];
        if (f && e.busy && e.manualTrump) {
            d("manualTrump in go(), stopping active transition");
            a(c).stop(true, true);
            e.busy = 0;
            clearTimeout(h.cycleTimeout);
        }
        if (e.busy) {
            d("transition active, ignoring new tx request");
            return;
        }
        if (h.cycleStop != e.stopCount || h.cycleTimeout === 0 && !f) return;
        if (!f && !h.cyclePause && !e.bounce && (e.autostop && --e.countdown <= 0 || e.nowrap && !e.random && e.nextSlide < e.currSlide)) {
            if (e.end) e.end(e);
            return;
        }
        var k = false;
        if ((f || !h.cyclePause) && e.nextSlide != e.currSlide) {
            k = true;
            var l = e.fx;
            i.cycleH = i.cycleH || a(i).height();
            i.cycleW = i.cycleW || a(i).width();
            j.cycleH = j.cycleH || a(j).height();
            j.cycleW = j.cycleW || a(j).width();
            if (e.multiFx) {
                if (g && (e.lastFx === b || ++e.lastFx >= e.fxs.length)) e.lastFx = 0; else if (!g && (e.lastFx === b || --e.lastFx < 0)) e.lastFx = e.fxs.length - 1;
                l = e.fxs[e.lastFx];
            }
            if (e.oneTimeFx) {
                l = e.oneTimeFx;
                e.oneTimeFx = null;
            }
            a.fn.cycle.resetState(e, l);
            if (e.before.length) a.each(e.before, function(a, b) {
                if (h.cycleStop != e.stopCount) return;
                b.apply(j, [ i, j, e, g ]);
            });
            var m = function() {
                e.busy = 0;
                a.each(e.after, function(a, b) {
                    if (h.cycleStop != e.stopCount) return;
                    b.apply(j, [ i, j, e, g ]);
                });
                if (!h.cycleStop) {
                    q();
                }
            };
            d("tx firing(" + l + "); currSlide: " + e.currSlide + "; nextSlide: " + e.nextSlide);
            e.busy = 1;
            if (e.fxFn) e.fxFn(i, j, e, m, g, f && e.fastOnEvent); else if (a.isFunction(a.fn.cycle[e.fx])) a.fn.cycle[e.fx](i, j, e, m, g, f && e.fastOnEvent); else a.fn.cycle.custom(i, j, e, m, g, f && e.fastOnEvent);
        } else {
            q();
        }
        if (k || e.nextSlide == e.currSlide) {
            var p;
            e.lastSlide = e.currSlide;
            if (e.random) {
                e.currSlide = e.nextSlide;
                if (++e.randomIndex == c.length) {
                    e.randomIndex = 0;
                    e.randomMap.sort(function(a, b) {
                        return Math.random() - .5;
                    });
                }
                e.nextSlide = e.randomMap[e.randomIndex];
                if (e.nextSlide == e.currSlide) e.nextSlide = e.currSlide == e.slideCount - 1 ? 0 : e.currSlide + 1;
            } else if (e.backwards) {
                p = e.nextSlide - 1 < 0;
                if (p && e.bounce) {
                    e.backwards = !e.backwards;
                    e.nextSlide = 1;
                    e.currSlide = 0;
                } else {
                    e.nextSlide = p ? c.length - 1 : e.nextSlide - 1;
                    e.currSlide = p ? 0 : e.nextSlide + 1;
                }
            } else {
                p = e.nextSlide + 1 == c.length;
                if (p && e.bounce) {
                    e.backwards = !e.backwards;
                    e.nextSlide = c.length - 2;
                    e.currSlide = c.length - 1;
                } else {
                    e.nextSlide = p ? 0 : e.nextSlide + 1;
                    e.currSlide = p ? c.length - 1 : e.nextSlide - 1;
                }
            }
        }
        if (k && e.pager) e.updateActivePagerLink(e.pager, e.currSlide, e.activePagerClass);
        function q() {
            var a = 0, b = e.timeout;
            if (e.timeout && !e.continuous) {
                a = o(c[e.currSlide], c[e.nextSlide], e, g);
                if (e.fx == "shuffle") a -= e.speedOut;
            } else if (e.continuous && h.cyclePause) a = 10;
            if (a > 0) h.cycleTimeout = setTimeout(function() {
                n(c, e, 0, !e.backwards);
            }, a);
        }
    }
    a.fn.cycle.updateActivePagerLink = function(b, c, d) {
        a(b).each(function() {
            a(this).children().removeClass(d).eq(c).addClass(d);
        });
    };
    function o(a, b, c, e) {
        if (c.timeoutFn) {
            var f = c.timeoutFn.call(a, a, b, c, e);
            while (c.fx != "none" && f - c.speed < 250) f += c.speed;
            d("calculated timeout: " + f + "; speed: " + c.speed);
            if (f !== false) return f;
        }
        return c.timeout;
    }
    a.fn.cycle.next = function(a) {
        p(a, 1);
    };
    a.fn.cycle.prev = function(a) {
        p(a, 0);
    };
    function p(b, c) {
        var d = c ? 1 : -1;
        var e = b.elements;
        var f = b.$cont[0], g = f.cycleTimeout;
        if (g) {
            clearTimeout(g);
            f.cycleTimeout = 0;
        }
        if (b.random && d < 0) {
            b.randomIndex--;
            if (--b.randomIndex == -2) b.randomIndex = e.length - 2; else if (b.randomIndex == -1) b.randomIndex = e.length - 1;
            b.nextSlide = b.randomMap[b.randomIndex];
        } else if (b.random) {
            b.nextSlide = b.randomMap[b.randomIndex];
        } else {
            b.nextSlide = b.currSlide + d;
            if (b.nextSlide < 0) {
                if (b.nowrap) return false;
                b.nextSlide = e.length - 1;
            } else if (b.nextSlide >= e.length) {
                if (b.nowrap) return false;
                b.nextSlide = 0;
            }
        }
        var h = b.onPrevNextEvent || b.prevNextClick;
        if (a.isFunction(h)) h(d > 0, b.nextSlide, e[b.nextSlide]);
        n(e, b, 1, c);
        return false;
    }
    function q(b, c) {
        var d = a(c.pager);
        a.each(b, function(e, f) {
            a.fn.cycle.createPagerAnchor(e, f, d, b, c);
        });
        c.updateActivePagerLink(c.pager, c.startingSlide, c.activePagerClass);
    }
    a.fn.cycle.createPagerAnchor = function(b, c, e, g, h) {
        var i;
        if (a.isFunction(h.pagerAnchorBuilder)) {
            i = h.pagerAnchorBuilder(b, c);
            d("pagerAnchorBuilder(" + b + ", el) returned: " + i);
        } else i = '<a href="#">' + (b + 1) + "</a>";
        if (!i) return;
        var j = a(i);
        if (j.parents("body").length === 0) {
            var k = [];
            if (e.length > 1) {
                e.each(function() {
                    var b = j.clone(true);
                    a(this).append(b);
                    k.push(b[0]);
                });
                j = a(k);
            } else {
                j.appendTo(e);
            }
        }
        h.pagerAnchors = h.pagerAnchors || [];
        h.pagerAnchors.push(j);
        var l = function(c) {
            c.preventDefault();
            h.nextSlide = b;
            var d = h.$cont[0], e = d.cycleTimeout;
            if (e) {
                clearTimeout(e);
                d.cycleTimeout = 0;
            }
            var f = h.onPagerEvent || h.pagerClick;
            if (a.isFunction(f)) f(h.nextSlide, g[h.nextSlide]);
            n(g, h, 1, h.currSlide < b);
        };
        if (/mouseenter|mouseover/i.test(h.pagerEvent)) {
            j.hover(l, function() {});
        } else {
            j.bind(h.pagerEvent, l);
        }
        if (!/^click/.test(h.pagerEvent) && !h.allowPagerClickBubble) j.bind("click.cycle", function() {
            return false;
        });
        var m = h.$cont[0];
        var o = false;
        if (h.pauseOnPagerHover) {
            j.hover(function() {
                o = true;
                m.cyclePause++;
                f(m, true, true);
            }, function() {
                if (o) m.cyclePause--;
                f(m, true, true);
            });
        }
    };
    a.fn.cycle.hopsFromLast = function(a, b) {
        var c, d = a.lastSlide, e = a.currSlide;
        if (b) c = e > d ? e - d : a.slideCount - d; else c = e < d ? d - e : d + a.slideCount - e;
        return c;
    };
    function r(b) {
        d("applying clearType background-color hack");
        function c(a) {
            a = parseInt(a, 10).toString(16);
            return a.length < 2 ? "0" + a : a;
        }
        function e(b) {
            for (;b && b.nodeName.toLowerCase() != "html"; b = b.parentNode) {
                var d = a.css(b, "background-color");
                if (d && d.indexOf("rgb") >= 0) {
                    var e = d.match(/\d+/g);
                    return "#" + c(e[0]) + c(e[1]) + c(e[2]);
                }
                if (d && d != "transparent") return d;
            }
            return "#ffffff";
        }
        b.each(function() {
            a(this).css("background-color", e(this));
        });
    }
    a.fn.cycle.commonReset = function(b, c, d, e, f, g) {
        a(d.elements).not(b).hide();
        if (typeof d.cssBefore.opacity == "undefined") d.cssBefore.opacity = 1;
        d.cssBefore.display = "block";
        if (d.slideResize && e !== false && c.cycleW > 0) d.cssBefore.width = c.cycleW;
        if (d.slideResize && f !== false && c.cycleH > 0) d.cssBefore.height = c.cycleH;
        d.cssAfter = d.cssAfter || {};
        d.cssAfter.display = "none";
        a(b).css("zIndex", d.slideCount + (g === true ? 1 : 0));
        a(c).css("zIndex", d.slideCount + (g === true ? 0 : 1));
    };
    a.fn.cycle.custom = function(b, c, d, e, f, g) {
        var h = a(b), i = a(c);
        var j = d.speedIn, k = d.speedOut, l = d.easeIn, m = d.easeOut, n = d.animInDelay, o = d.animOutDelay;
        i.css(d.cssBefore);
        if (g) {
            if (typeof g == "number") j = k = g; else j = k = 1;
            l = m = null;
        }
        var p = function() {
            i.delay(n).animate(d.animIn, j, l, function() {
                e();
            });
        };
        h.delay(o).animate(d.animOut, k, m, function() {
            h.css(d.cssAfter);
            if (!d.sync) p();
        });
        if (d.sync) p();
    };
    a.fn.cycle.transitions = {
        fade: function(b, c, d) {
            c.not(":eq(" + d.currSlide + ")").css("opacity", 0);
            d.before.push(function(b, c, d) {
                a.fn.cycle.commonReset(b, c, d);
                d.cssBefore.opacity = 0;
            });
            d.animIn = {
                opacity: 1
            };
            d.animOut = {
                opacity: 0
            };
            d.cssBefore = {
                top: 0,
                left: 0
            };
        }
    };
    a.fn.cycle.ver = function() {
        return c;
    };
    a.fn.cycle.defaults = {
        activePagerClass: "activeSlide",
        after: null,
        allowPagerClickBubble: false,
        animIn: null,
        animInDelay: 0,
        animOut: null,
        animOutDelay: 0,
        aspect: false,
        autostop: 0,
        autostopCount: 0,
        backwards: false,
        before: null,
        center: null,
        cleartype: !a.support.opacity,
        cleartypeNoBg: false,
        containerResize: 1,
        containerResizeHeight: 0,
        continuous: 0,
        cssAfter: null,
        cssBefore: null,
        delay: 0,
        easeIn: null,
        easeOut: null,
        easing: null,
        end: null,
        fastOnEvent: 0,
        fit: 0,
        fx: "fade",
        fxFn: null,
        height: "auto",
        manualTrump: true,
        metaAttr: "cycle",
        next: null,
        nowrap: 0,
        onPagerEvent: null,
        onPrevNextEvent: null,
        pager: null,
        pagerAnchorBuilder: null,
        pagerEvent: "click.cycle",
        pause: 0,
        pauseOnPagerHover: 0,
        prev: null,
        prevNextEvent: "click.cycle",
        random: 0,
        randomizeEffects: 1,
        requeueOnImageNotLoaded: true,
        requeueTimeout: 250,
        rev: 0,
        shuffle: null,
        skipInitializationCallbacks: false,
        slideExpr: null,
        slideResize: 1,
        speed: 1e3,
        speedIn: null,
        speedOut: null,
        startingSlide: b,
        sync: 1,
        timeout: 4e3,
        timeoutFn: null,
        updateActivePagerLink: null,
        width: null
    };
})(jQuery);

(function(a) {
    "use strict";
    a.fn.cycle.transitions.none = function(b, c, d) {
        d.fxFn = function(b, c, d, e) {
            a(c).show();
            a(b).hide();
            e();
        };
    };
    a.fn.cycle.transitions.fadeout = function(b, c, d) {
        c.not(":eq(" + d.currSlide + ")").css({
            display: "block",
            opacity: 1
        });
        d.before.push(function(b, c, d, e, f, g) {
            a(b).css("zIndex", d.slideCount + (g !== true ? 1 : 0));
            a(c).css("zIndex", d.slideCount + (g !== true ? 0 : 1));
        });
        d.animIn.opacity = 1;
        d.animOut.opacity = 0;
        d.cssBefore.opacity = 1;
        d.cssBefore.display = "block";
        d.cssAfter.zIndex = 0;
    };
    a.fn.cycle.transitions.scrollUp = function(b, c, d) {
        b.css("overflow", "hidden");
        d.before.push(a.fn.cycle.commonReset);
        var e = b.height();
        d.cssBefore.top = e;
        d.cssBefore.left = 0;
        d.cssFirst.top = 0;
        d.animIn.top = 0;
        d.animOut.top = -e;
    };
    a.fn.cycle.transitions.scrollDown = function(b, c, d) {
        b.css("overflow", "hidden");
        d.before.push(a.fn.cycle.commonReset);
        var e = b.height();
        d.cssFirst.top = 0;
        d.cssBefore.top = -e;
        d.cssBefore.left = 0;
        d.animIn.top = 0;
        d.animOut.top = e;
    };
    a.fn.cycle.transitions.scrollLeft = function(b, c, d) {
        b.css("overflow", "hidden");
        d.before.push(a.fn.cycle.commonReset);
        var e = b.width();
        d.cssFirst.left = 0;
        d.cssBefore.left = e;
        d.cssBefore.top = 0;
        d.animIn.left = 0;
        d.animOut.left = 0 - e;
    };
    a.fn.cycle.transitions.scrollRight = function(b, c, d) {
        b.css("overflow", "hidden");
        d.before.push(a.fn.cycle.commonReset);
        var e = b.width();
        d.cssFirst.left = 0;
        d.cssBefore.left = -e;
        d.cssBefore.top = 0;
        d.animIn.left = 0;
        d.animOut.left = e;
    };
    a.fn.cycle.transitions.scrollHorz = function(b, c, d) {
        b.css("overflow", "hidden").width();
        d.before.push(function(b, c, d, e) {
            if (d.rev) e = !e;
            a.fn.cycle.commonReset(b, c, d);
            d.cssBefore.left = e ? c.cycleW - 1 : 1 - c.cycleW;
            d.animOut.left = e ? -b.cycleW : b.cycleW;
        });
        d.cssFirst.left = 0;
        d.cssBefore.top = 0;
        d.animIn.left = 0;
        d.animOut.top = 0;
    };
    a.fn.cycle.transitions.scrollVert = function(b, c, d) {
        b.css("overflow", "hidden");
        d.before.push(function(b, c, d, e) {
            if (d.rev) e = !e;
            a.fn.cycle.commonReset(b, c, d);
            d.cssBefore.top = e ? 1 - c.cycleH : c.cycleH - 1;
            d.animOut.top = e ? b.cycleH : -b.cycleH;
        });
        d.cssFirst.top = 0;
        d.cssBefore.left = 0;
        d.animIn.top = 0;
        d.animOut.left = 0;
    };
    a.fn.cycle.transitions.slideX = function(b, c, d) {
        d.before.push(function(b, c, d) {
            a(d.elements).not(b).hide();
            a.fn.cycle.commonReset(b, c, d, false, true);
            d.animIn.width = c.cycleW;
        });
        d.cssBefore.left = 0;
        d.cssBefore.top = 0;
        d.cssBefore.width = 0;
        d.animIn.width = "show";
        d.animOut.width = 0;
    };
    a.fn.cycle.transitions.slideY = function(b, c, d) {
        d.before.push(function(b, c, d) {
            a(d.elements).not(b).hide();
            a.fn.cycle.commonReset(b, c, d, true, false);
            d.animIn.height = c.cycleH;
        });
        d.cssBefore.left = 0;
        d.cssBefore.top = 0;
        d.cssBefore.height = 0;
        d.animIn.height = "show";
        d.animOut.height = 0;
    };
    a.fn.cycle.transitions.shuffle = function(b, c, d) {
        var e, f = b.css("overflow", "visible").width();
        c.css({
            left: 0,
            top: 0
        });
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, true, true, true);
        });
        if (!d.speedAdjusted) {
            d.speed = d.speed / 2;
            d.speedAdjusted = true;
        }
        d.random = 0;
        d.shuffle = d.shuffle || {
            left: -f,
            top: 15
        };
        d.els = [];
        for (e = 0; e < c.length; e++) d.els.push(c[e]);
        for (e = 0; e < d.currSlide; e++) d.els.push(d.els.shift());
        d.fxFn = function(b, c, d, e, f) {
            if (d.rev) f = !f;
            var g = f ? a(b) : a(c);
            a(c).css(d.cssBefore);
            var h = d.slideCount;
            g.animate(d.shuffle, d.speedIn, d.easeIn, function() {
                var c = a.fn.cycle.hopsFromLast(d, f);
                for (var i = 0; i < c; i++) {
                    if (f) d.els.push(d.els.shift()); else d.els.unshift(d.els.pop());
                }
                if (f) {
                    for (var j = 0, k = d.els.length; j < k; j++) a(d.els[j]).css("z-index", k - j + h);
                } else {
                    var l = a(b).css("z-index");
                    g.css("z-index", parseInt(l, 10) + 1 + h);
                }
                g.animate({
                    left: 0,
                    top: 0
                }, d.speedOut, d.easeOut, function() {
                    a(f ? this : b).hide();
                    if (e) e();
                });
            });
        };
        a.extend(d.cssBefore, {
            display: "block",
            opacity: 1,
            top: 0,
            left: 0
        });
    };
    a.fn.cycle.transitions.turnUp = function(b, c, d) {
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, true, false);
            d.cssBefore.top = c.cycleH;
            d.animIn.height = c.cycleH;
            d.animOut.width = c.cycleW;
        });
        d.cssFirst.top = 0;
        d.cssBefore.left = 0;
        d.cssBefore.height = 0;
        d.animIn.top = 0;
        d.animOut.height = 0;
    };
    a.fn.cycle.transitions.turnDown = function(b, c, d) {
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, true, false);
            d.animIn.height = c.cycleH;
            d.animOut.top = b.cycleH;
        });
        d.cssFirst.top = 0;
        d.cssBefore.left = 0;
        d.cssBefore.top = 0;
        d.cssBefore.height = 0;
        d.animOut.height = 0;
    };
    a.fn.cycle.transitions.turnLeft = function(b, c, d) {
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, false, true);
            d.cssBefore.left = c.cycleW;
            d.animIn.width = c.cycleW;
        });
        d.cssBefore.top = 0;
        d.cssBefore.width = 0;
        d.animIn.left = 0;
        d.animOut.width = 0;
    };
    a.fn.cycle.transitions.turnRight = function(b, c, d) {
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, false, true);
            d.animIn.width = c.cycleW;
            d.animOut.left = b.cycleW;
        });
        a.extend(d.cssBefore, {
            top: 0,
            left: 0,
            width: 0
        });
        d.animIn.left = 0;
        d.animOut.width = 0;
    };
    a.fn.cycle.transitions.zoom = function(b, c, d) {
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, false, false, true);
            d.cssBefore.top = c.cycleH / 2;
            d.cssBefore.left = c.cycleW / 2;
            a.extend(d.animIn, {
                top: 0,
                left: 0,
                width: c.cycleW,
                height: c.cycleH
            });
            a.extend(d.animOut, {
                width: 0,
                height: 0,
                top: b.cycleH / 2,
                left: b.cycleW / 2
            });
        });
        d.cssFirst.top = 0;
        d.cssFirst.left = 0;
        d.cssBefore.width = 0;
        d.cssBefore.height = 0;
    };
    a.fn.cycle.transitions.fadeZoom = function(b, c, d) {
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, false, false);
            d.cssBefore.left = c.cycleW / 2;
            d.cssBefore.top = c.cycleH / 2;
            a.extend(d.animIn, {
                top: 0,
                left: 0,
                width: c.cycleW,
                height: c.cycleH
            });
        });
        d.cssBefore.width = 0;
        d.cssBefore.height = 0;
        d.animOut.opacity = 0;
    };
    a.fn.cycle.transitions.blindX = function(b, c, d) {
        var e = b.css("overflow", "hidden").width();
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d);
            d.animIn.width = c.cycleW;
            d.animOut.left = b.cycleW;
        });
        d.cssBefore.left = e;
        d.cssBefore.top = 0;
        d.animIn.left = 0;
        d.animOut.left = e;
    };
    a.fn.cycle.transitions.blindY = function(b, c, d) {
        var e = b.css("overflow", "hidden").height();
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d);
            d.animIn.height = c.cycleH;
            d.animOut.top = b.cycleH;
        });
        d.cssBefore.top = e;
        d.cssBefore.left = 0;
        d.animIn.top = 0;
        d.animOut.top = e;
    };
    a.fn.cycle.transitions.blindZ = function(b, c, d) {
        var e = b.css("overflow", "hidden").height();
        var f = b.width();
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d);
            d.animIn.height = c.cycleH;
            d.animOut.top = b.cycleH;
        });
        d.cssBefore.top = e;
        d.cssBefore.left = f;
        d.animIn.top = 0;
        d.animIn.left = 0;
        d.animOut.top = e;
        d.animOut.left = f;
    };
    a.fn.cycle.transitions.growX = function(b, c, d) {
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, false, true);
            d.cssBefore.left = this.cycleW / 2;
            d.animIn.left = 0;
            d.animIn.width = this.cycleW;
            d.animOut.left = 0;
        });
        d.cssBefore.top = 0;
        d.cssBefore.width = 0;
    };
    a.fn.cycle.transitions.growY = function(b, c, d) {
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, true, false);
            d.cssBefore.top = this.cycleH / 2;
            d.animIn.top = 0;
            d.animIn.height = this.cycleH;
            d.animOut.top = 0;
        });
        d.cssBefore.height = 0;
        d.cssBefore.left = 0;
    };
    a.fn.cycle.transitions.curtainX = function(b, c, d) {
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, false, true, true);
            d.cssBefore.left = c.cycleW / 2;
            d.animIn.left = 0;
            d.animIn.width = this.cycleW;
            d.animOut.left = b.cycleW / 2;
            d.animOut.width = 0;
        });
        d.cssBefore.top = 0;
        d.cssBefore.width = 0;
    };
    a.fn.cycle.transitions.curtainY = function(b, c, d) {
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, true, false, true);
            d.cssBefore.top = c.cycleH / 2;
            d.animIn.top = 0;
            d.animIn.height = c.cycleH;
            d.animOut.top = b.cycleH / 2;
            d.animOut.height = 0;
        });
        d.cssBefore.height = 0;
        d.cssBefore.left = 0;
    };
    a.fn.cycle.transitions.cover = function(b, c, d) {
        var e = d.direction || "left";
        var f = b.css("overflow", "hidden").width();
        var g = b.height();
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d);
            d.cssAfter.display = "";
            if (e == "right") d.cssBefore.left = -f; else if (e == "up") d.cssBefore.top = g; else if (e == "down") d.cssBefore.top = -g; else d.cssBefore.left = f;
        });
        d.animIn.left = 0;
        d.animIn.top = 0;
        d.cssBefore.top = 0;
        d.cssBefore.left = 0;
    };
    a.fn.cycle.transitions.uncover = function(b, c, d) {
        var e = d.direction || "left";
        var f = b.css("overflow", "hidden").width();
        var g = b.height();
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, true, true, true);
            if (e == "right") d.animOut.left = f; else if (e == "up") d.animOut.top = -g; else if (e == "down") d.animOut.top = g; else d.animOut.left = -f;
        });
        d.animIn.left = 0;
        d.animIn.top = 0;
        d.cssBefore.top = 0;
        d.cssBefore.left = 0;
    };
    a.fn.cycle.transitions.toss = function(b, c, d) {
        var e = b.css("overflow", "visible").width();
        var f = b.height();
        d.before.push(function(b, c, d) {
            a.fn.cycle.commonReset(b, c, d, true, true, true);
            if (!d.animOut.left && !d.animOut.top) a.extend(d.animOut, {
                left: e * 2,
                top: -f / 2,
                opacity: 0
            }); else d.animOut.opacity = 0;
        });
        d.cssBefore.left = 0;
        d.cssBefore.top = 0;
        d.animIn.left = 0;
    };
    a.fn.cycle.transitions.wipe = function(b, c, d) {
        var e = b.css("overflow", "hidden").width();
        var f = b.height();
        d.cssBefore = d.cssBefore || {};
        var g;
        if (d.clip) {
            if (/l2r/.test(d.clip)) g = "rect(0px 0px " + f + "px 0px)"; else if (/r2l/.test(d.clip)) g = "rect(0px " + e + "px " + f + "px " + e + "px)"; else if (/t2b/.test(d.clip)) g = "rect(0px " + e + "px 0px 0px)"; else if (/b2t/.test(d.clip)) g = "rect(" + f + "px " + e + "px " + f + "px 0px)"; else if (/zoom/.test(d.clip)) {
                var h = parseInt(f / 2, 10);
                var i = parseInt(e / 2, 10);
                g = "rect(" + h + "px " + i + "px " + h + "px " + i + "px)";
            }
        }
        d.cssBefore.clip = d.cssBefore.clip || g || "rect(0px 0px 0px 0px)";
        var j = d.cssBefore.clip.match(/(\d+)/g);
        var k = parseInt(j[0], 10), l = parseInt(j[1], 10), m = parseInt(j[2], 10), n = parseInt(j[3], 10);
        d.before.push(function(b, c, d) {
            if (b == c) return;
            var g = a(b), h = a(c);
            a.fn.cycle.commonReset(b, c, d, true, true, false);
            d.cssAfter.display = "block";
            var i = 1, j = parseInt(d.speedIn / 13, 10) - 1;
            (function a() {
                var b = k ? k - parseInt(i * (k / j), 10) : 0;
                var c = n ? n - parseInt(i * (n / j), 10) : 0;
                var d = m < f ? m + parseInt(i * ((f - m) / j || 1), 10) : f;
                var o = l < e ? l + parseInt(i * ((e - l) / j || 1), 10) : e;
                h.css({
                    clip: "rect(" + b + "px " + o + "px " + d + "px " + c + "px)"
                });
                i++ <= j ? setTimeout(a, 13) : g.css("display", "none");
            })();
        });
        a.extend(d.cssBefore, {
            display: "block",
            opacity: 1,
            top: 0,
            left: 0
        });
        d.animIn = {
            left: 0
        };
        d.animOut = {
            left: 0
        };
    };
})(jQuery);

(function(a) {
    "use strict";
    function b(a, b) {
        b = b || Error;
        return function() {
            var c = 2;
            var d = arguments, e = d[0], f = "[" + (a ? a + ":" : "") + e + "] ", g = d[1], h, i;
            f += g.replace(/\{\d+\}/g, function(a) {
                var b = +a.slice(1, -1), e = b + c;
                if (e < d.length) {
                    return eb(d[e]);
                }
                return a;
            });
            f += "\nhttp://errors.angularjs.org/1.6.2/" + (a ? a + "/" : "") + e;
            for (i = c, h = "?"; i < d.length; i++, h = "&") {
                f += h + "p" + (i - c) + "=" + encodeURIComponent(eb(d[i]));
            }
            return new b(f);
        };
    }
    var c = /^\/(.+)\/([a-z]*)$/;
    var d = "validity";
    var e = Object.prototype.hasOwnProperty;
    var f = function(a) {
        return P(a) ? a.toLowerCase() : a;
    };
    var g = function(a) {
        return P(a) ? a.toUpperCase() : a;
    };
    var h = function(a) {
        return P(a) ? a.replace(/[A-Z]/g, function(a) {
            return String.fromCharCode(a.charCodeAt(0) | 32);
        }) : a;
    };
    var i = function(a) {
        return P(a) ? a.replace(/[a-z]/g, function(a) {
            return String.fromCharCode(a.charCodeAt(0) & ~32);
        }) : a;
    };
    if ("i" !== "I".toLowerCase()) {
        f = h;
        g = i;
    }
    var j, k, l, m = [].slice, n = [].splice, o = [].push, p = Object.prototype.toString, q = Object.getPrototypeOf, r = b("ng"), s = a.angular || (a.angular = {}), t, u = 0;
    j = a.document.documentMode;
    function v(a) {
        if (a == null || V(a)) return false;
        if (S(a) || P(a) || k && a instanceof k) return true;
        var b = "length" in Object(a) && a.length;
        return Q(b) && (b >= 0 && (b - 1 in a || a instanceof Array) || typeof a.item === "function");
    }
    function w(a, b, c) {
        var d, f;
        if (a) {
            if (T(a)) {
                for (d in a) {
                    if (d !== "prototype" && d !== "length" && d !== "name" && a.hasOwnProperty(d)) {
                        b.call(c, a[d], d, a);
                    }
                }
            } else if (S(a) || v(a)) {
                var g = typeof a !== "object";
                for (d = 0, f = a.length; d < f; d++) {
                    if (g || d in a) {
                        b.call(c, a[d], d, a);
                    }
                }
            } else if (a.forEach && a.forEach !== w) {
                a.forEach(b, c, a);
            } else if (O(a)) {
                for (d in a) {
                    b.call(c, a[d], d, a);
                }
            } else if (typeof a.hasOwnProperty === "function") {
                for (d in a) {
                    if (a.hasOwnProperty(d)) {
                        b.call(c, a[d], d, a);
                    }
                }
            } else {
                for (d in a) {
                    if (e.call(a, d)) {
                        b.call(c, a[d], d, a);
                    }
                }
            }
        }
        return a;
    }
    function x(a, b, c) {
        var d = Object.keys(a).sort();
        for (var e = 0; e < d.length; e++) {
            b.call(c, a[d[e]], d[e]);
        }
        return d;
    }
    function y(a) {
        return function(b, c) {
            a(c, b);
        };
    }
    function z() {
        return ++u;
    }
    function A(a, b) {
        if (b) {
            a.$$hashKey = b;
        } else {
            delete a.$$hashKey;
        }
    }
    function B(a, b, c) {
        var d = a.$$hashKey;
        for (var e = 0, f = b.length; e < f; ++e) {
            var g = b[e];
            if (!N(g) && !T(g)) continue;
            var h = Object.keys(g);
            for (var i = 0, j = h.length; i < j; i++) {
                var k = h[i];
                var l = g[k];
                if (c && N(l)) {
                    if (R(l)) {
                        a[k] = new Date(l.valueOf());
                    } else if (U(l)) {
                        a[k] = new RegExp(l);
                    } else if (l.nodeName) {
                        a[k] = l.cloneNode(true);
                    } else if (fa(l)) {
                        a[k] = l.clone();
                    } else {
                        if (!N(a[k])) a[k] = S(l) ? [] : {};
                        B(a[k], [ l ], true);
                    }
                } else {
                    a[k] = l;
                }
            }
        }
        A(a, d);
        return a;
    }
    function C(a) {
        return B(a, m.call(arguments, 1), false);
    }
    function D(a) {
        return B(a, m.call(arguments, 1), true);
    }
    function E(a) {
        return parseInt(a, 10);
    }
    var F = Number.isNaN || function a(b) {
        return b !== b;
    };
    function G(a, b) {
        return C(Object.create(a), b);
    }
    function H() {}
    H.$inject = [];
    function I(a) {
        return a;
    }
    I.$inject = [];
    function J(a) {
        return function b() {
            return a;
        };
    }
    function K(a) {
        return T(a.toString) && a.toString !== p;
    }
    function L(a) {
        return typeof a === "undefined";
    }
    function M(a) {
        return typeof a !== "undefined";
    }
    function N(a) {
        return a !== null && typeof a === "object";
    }
    function O(a) {
        return a !== null && typeof a === "object" && !q(a);
    }
    function P(a) {
        return typeof a === "string";
    }
    function Q(a) {
        return typeof a === "number";
    }
    function R(a) {
        return p.call(a) === "[object Date]";
    }
    var S = Array.isArray;
    function T(a) {
        return typeof a === "function";
    }
    function U(a) {
        return p.call(a) === "[object RegExp]";
    }
    function V(a) {
        return a && a.window === a;
    }
    function W(a) {
        return a && a.$evalAsync && a.$watch;
    }
    function X(a) {
        return p.call(a) === "[object File]";
    }
    function Y(a) {
        return p.call(a) === "[object FormData]";
    }
    function Z(a) {
        return p.call(a) === "[object Blob]";
    }
    function $(a) {
        return typeof a === "boolean";
    }
    function _(a) {
        return a && T(a.then);
    }
    var aa = /^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array]$/;
    function ba(a) {
        return a && Q(a.length) && aa.test(p.call(a));
    }
    function ca(a) {
        return p.call(a) === "[object ArrayBuffer]";
    }
    var da = function(a) {
        return P(a) ? a.trim() : a;
    };
    var ea = function(a) {
        return a.replace(/([-()[\]{}+?*.$^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
    };
    function fa(a) {
        return !!(a && (a.nodeName || a.prop && a.attr && a.find));
    }
    function ga(a) {
        var b = {}, c = a.split(","), d;
        for (d = 0; d < c.length; d++) {
            b[c[d]] = true;
        }
        return b;
    }
    function ha(a) {
        return f(a.nodeName || a[0] && a[0].nodeName);
    }
    function ia(a, b) {
        return Array.prototype.indexOf.call(a, b) !== -1;
    }
    function ja(a, b) {
        var c = a.indexOf(b);
        if (c >= 0) {
            a.splice(c, 1);
        }
        return c;
    }
    function ka(a, b) {
        var c = [];
        var d = [];
        if (b) {
            if (ba(b) || ca(b)) {
                throw r("cpta", "Can't copy! TypedArray destination cannot be mutated.");
            }
            if (a === b) {
                throw r("cpi", "Can't copy! Source and destination are identical.");
            }
            if (S(b)) {
                b.length = 0;
            } else {
                w(b, function(a, c) {
                    if (c !== "$$hashKey") {
                        delete b[c];
                    }
                });
            }
            c.push(a);
            d.push(b);
            return f(a, b);
        }
        return g(a);
        function f(a, b) {
            var c = b.$$hashKey;
            var d;
            if (S(a)) {
                for (var f = 0, h = a.length; f < h; f++) {
                    b.push(g(a[f]));
                }
            } else if (O(a)) {
                for (d in a) {
                    b[d] = g(a[d]);
                }
            } else if (a && typeof a.hasOwnProperty === "function") {
                for (d in a) {
                    if (a.hasOwnProperty(d)) {
                        b[d] = g(a[d]);
                    }
                }
            } else {
                for (d in a) {
                    if (e.call(a, d)) {
                        b[d] = g(a[d]);
                    }
                }
            }
            A(b, c);
            return b;
        }
        function g(a) {
            if (!N(a)) {
                return a;
            }
            var b = c.indexOf(a);
            if (b !== -1) {
                return d[b];
            }
            if (V(a) || W(a)) {
                throw r("cpws", "Can't copy! Making copies of Window or Scope instances is not supported.");
            }
            var e = false;
            var g = h(a);
            if (g === undefined) {
                g = S(a) ? [] : Object.create(q(a));
                e = true;
            }
            c.push(a);
            d.push(g);
            return e ? f(a, g) : g;
        }
        function h(a) {
            switch (p.call(a)) {
              case "[object Int8Array]":
              case "[object Int16Array]":
              case "[object Int32Array]":
              case "[object Float32Array]":
              case "[object Float64Array]":
              case "[object Uint8Array]":
              case "[object Uint8ClampedArray]":
              case "[object Uint16Array]":
              case "[object Uint32Array]":
                return new a.constructor(g(a.buffer), a.byteOffset, a.length);

              case "[object ArrayBuffer]":
                if (!a.slice) {
                    var b = new ArrayBuffer(a.byteLength);
                    new Uint8Array(b).set(new Uint8Array(a));
                    return b;
                }
                return a.slice(0);

              case "[object Boolean]":
              case "[object Number]":
              case "[object String]":
              case "[object Date]":
                return new a.constructor(a.valueOf());

              case "[object RegExp]":
                var c = new RegExp(a.source, a.toString().match(/[^\/]*$/)[0]);
                c.lastIndex = a.lastIndex;
                return c;

              case "[object Blob]":
                return new a.constructor([ a ], {
                    type: a.type
                });
            }
            if (T(a.cloneNode)) {
                return a.cloneNode(true);
            }
        }
    }
    function la(a, b) {
        if (a === b) return true;
        if (a === null || b === null) return false;
        if (a !== a && b !== b) return true;
        var c = typeof a, d = typeof b, e, f, g;
        if (c === d && c === "object") {
            if (S(a)) {
                if (!S(b)) return false;
                if ((e = a.length) === b.length) {
                    for (f = 0; f < e; f++) {
                        if (!la(a[f], b[f])) return false;
                    }
                    return true;
                }
            } else if (R(a)) {
                if (!R(b)) return false;
                return la(a.getTime(), b.getTime());
            } else if (U(a)) {
                if (!U(b)) return false;
                return a.toString() === b.toString();
            } else {
                if (W(a) || W(b) || V(a) || V(b) || S(b) || R(b) || U(b)) return false;
                g = Va();
                for (f in a) {
                    if (f.charAt(0) === "$" || T(a[f])) continue;
                    if (!la(a[f], b[f])) return false;
                    g[f] = true;
                }
                for (f in b) {
                    if (!(f in g) && f.charAt(0) !== "$" && M(b[f]) && !T(b[f])) return false;
                }
                return true;
            }
        }
        return false;
    }
    var ma = function() {
        if (!M(ma.rules)) {
            var b = a.document.querySelector("[ng-csp]") || a.document.querySelector("[data-ng-csp]");
            if (b) {
                var c = b.getAttribute("ng-csp") || b.getAttribute("data-ng-csp");
                ma.rules = {
                    noUnsafeEval: !c || c.indexOf("no-unsafe-eval") !== -1,
                    noInlineStyle: !c || c.indexOf("no-inline-style") !== -1
                };
            } else {
                ma.rules = {
                    noUnsafeEval: d(),
                    noInlineStyle: false
                };
            }
        }
        return ma.rules;
        function d() {
            try {
                new Function("");
                return false;
            } catch (a) {
                return true;
            }
        }
    };
    var na = function() {
        if (M(na.name_)) return na.name_;
        var b;
        var c, d = Ea.length, e, f;
        for (c = 0; c < d; ++c) {
            e = Ea[c];
            b = a.document.querySelector("[" + e.replace(":", "\\:") + "jq]");
            if (b) {
                f = b.getAttribute(e + "jq");
                break;
            }
        }
        return na.name_ = f;
    };
    function oa(a, b, c) {
        return a.concat(m.call(b, c));
    }
    function pa(a, b) {
        return m.call(a, b || 0);
    }
    function qa(a, b) {
        var c = arguments.length > 2 ? pa(arguments, 2) : [];
        if (T(b) && !(b instanceof RegExp)) {
            return c.length ? function() {
                return arguments.length ? b.apply(a, oa(c, arguments, 0)) : b.apply(a, c);
            } : function() {
                return arguments.length ? b.apply(a, arguments) : b.call(a);
            };
        } else {
            return b;
        }
    }
    function ra(b, c) {
        var d = c;
        if (typeof b === "string" && b.charAt(0) === "$" && b.charAt(1) === "$") {
            d = undefined;
        } else if (V(c)) {
            d = "$WINDOW";
        } else if (c && a.document === c) {
            d = "$DOCUMENT";
        } else if (W(c)) {
            d = "$SCOPE";
        }
        return d;
    }
    function sa(a, b) {
        if (L(a)) return undefined;
        if (!Q(b)) {
            b = b ? 2 : null;
        }
        return JSON.stringify(a, ra, b);
    }
    function ta(a) {
        return P(a) ? JSON.parse(a) : a;
    }
    var ua = /:/g;
    function va(a, b) {
        a = a.replace(ua, "");
        var c = Date.parse("Jan 01, 1970 00:00:00 " + a) / 6e4;
        return F(c) ? b : c;
    }
    function wa(a, b) {
        a = new Date(a.getTime());
        a.setMinutes(a.getMinutes() + b);
        return a;
    }
    function xa(a, b, c) {
        c = c ? -1 : 1;
        var d = a.getTimezoneOffset();
        var e = va(b, d);
        return wa(a, c * (e - d));
    }
    function ya(a) {
        a = k(a).clone();
        try {
            a.empty();
        } catch (a) {}
        var b = k("<div>").append(a).html();
        try {
            return a[0].nodeType === Za ? f(b) : b.match(/^(<[^>]+>)/)[1].replace(/^<([\w-]+)/, function(a, b) {
                return "<" + f(b);
            });
        } catch (a) {
            return f(b);
        }
    }
    function za(a) {
        try {
            return decodeURIComponent(a);
        } catch (a) {}
    }
    function Aa(a) {
        var b = {};
        w((a || "").split("&"), function(a) {
            var c, d, f;
            if (a) {
                d = a = a.replace(/\+/g, "%20");
                c = a.indexOf("=");
                if (c !== -1) {
                    d = a.substring(0, c);
                    f = a.substring(c + 1);
                }
                d = za(d);
                if (M(d)) {
                    f = M(f) ? za(f) : true;
                    if (!e.call(b, d)) {
                        b[d] = f;
                    } else if (S(b[d])) {
                        b[d].push(f);
                    } else {
                        b[d] = [ b[d], f ];
                    }
                }
            }
        });
        return b;
    }
    function Ba(a) {
        var b = [];
        w(a, function(a, c) {
            if (S(a)) {
                w(a, function(a) {
                    b.push(Da(c, true) + (a === true ? "" : "=" + Da(a, true)));
                });
            } else {
                b.push(Da(c, true) + (a === true ? "" : "=" + Da(a, true)));
            }
        });
        return b.length ? b.join("&") : "";
    }
    function Ca(a) {
        return Da(a, true).replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(/%2B/gi, "+");
    }
    function Da(a, b) {
        return encodeURIComponent(a).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%3B/gi, ";").replace(/%20/g, b ? "%20" : "+");
    }
    var Ea = [ "ng-", "data-ng-", "ng:", "x-ng-" ];
    function Fa(a, b) {
        var c, d, e = Ea.length;
        for (d = 0; d < e; ++d) {
            c = Ea[d] + b;
            if (P(c = a.getAttribute(c))) {
                return c;
            }
        }
        return null;
    }
    function Ga(a) {
        var b = a.currentScript;
        var c = b && b.getAttribute("src");
        if (!c) {
            return true;
        }
        var d = a.createElement("a");
        d.href = c;
        if (a.location.origin === d.origin) {
            return true;
        }
        switch (d.protocol) {
          case "http:":
          case "https:":
          case "ftp:":
          case "blob:":
          case "file:":
          case "data:":
            return true;

          default:
            return false;
        }
    }
    var Ha = Ga(a.document);
    function Ia(b, c) {
        var d, e, f = {};
        w(Ea, function(a) {
            var c = a + "app";
            if (!d && b.hasAttribute && b.hasAttribute(c)) {
                d = b;
                e = b.getAttribute(c);
            }
        });
        w(Ea, function(a) {
            var c = a + "app";
            var f;
            if (!d && (f = b.querySelector("[" + c.replace(":", "\\:") + "]"))) {
                d = f;
                e = f.getAttribute(c);
            }
        });
        if (d) {
            if (!Ha) {
                a.console.error("Angular: disabling automatic bootstrap. <script> protocol indicates " + "an extension, document.location.href does not match.");
                return;
            }
            f.strictDi = Fa(d, "strict-di") !== null;
            c(d, e ? [ e ] : [], f);
        }
    }
    function Ja(b, c, d) {
        if (!N(d)) d = {};
        var e = {
            strictDi: false
        };
        d = C(e, d);
        var f = function() {
            b = k(b);
            if (b.injector()) {
                var e = b[0] === a.document ? "document" : ya(b);
                throw r("btstrpd", "App already bootstrapped with this element '{0}'", e.replace(/</, "&lt;").replace(/>/, "&gt;"));
            }
            c = c || [];
            c.unshift([ "$provide", function(a) {
                a.value("$rootElement", b);
            } ]);
            if (d.debugInfoEnabled) {
                c.push([ "$compileProvider", function(a) {
                    a.debugInfoEnabled(true);
                } ]);
            }
            c.unshift("ng");
            var f = sc(c, d.strictDi);
            f.invoke([ "$rootScope", "$rootElement", "$compile", "$injector", function a(b, c, d, e) {
                b.$apply(function() {
                    c.data("$injector", e);
                    d(c)(b);
                });
            } ]);
            return f;
        };
        var g = /^NG_ENABLE_DEBUG_INFO!/;
        var h = /^NG_DEFER_BOOTSTRAP!/;
        if (a && g.test(a.name)) {
            d.debugInfoEnabled = true;
            a.name = a.name.replace(g, "");
        }
        if (a && !h.test(a.name)) {
            return f();
        }
        a.name = a.name.replace(h, "");
        s.resumeBootstrap = function(a) {
            w(a, function(a) {
                c.push(a);
            });
            return f();
        };
        if (T(s.resumeDeferredBootstrap)) {
            s.resumeDeferredBootstrap();
        }
    }
    function Ka() {
        a.name = "NG_ENABLE_DEBUG_INFO!" + a.name;
        a.location.reload();
    }
    function La(a) {
        var b = s.element(a).injector();
        if (!b) {
            throw r("test", "no injector found for element argument to getTestability");
        }
        return b.get("$$testability");
    }
    var Ma = /[A-Z]/g;
    function Na(a, b) {
        b = b || "_";
        return a.replace(Ma, function(a, c) {
            return (c ? b : "") + a.toLowerCase();
        });
    }
    var Oa = false;
    function Pa() {
        var b;
        if (Oa) {
            return;
        }
        var c = na();
        l = L(c) ? a.jQuery : !c ? undefined : a[c];
        if (l && l.fn.on) {
            k = l;
            C(l.fn, {
                scope: Vb.scope,
                isolateScope: Vb.isolateScope,
                controller: Vb.controller,
                injector: Vb.injector,
                inheritedData: Vb.inheritedData
            });
            b = l.cleanData;
            l.cleanData = function(a) {
                var c;
                for (var d = 0, e; (e = a[d]) != null; d++) {
                    c = l._data(e, "events");
                    if (c && c.$destroy) {
                        l(e).triggerHandler("$destroy");
                    }
                }
                b(a);
            };
        } else {
            k = Eb;
        }
        s.element = k;
        Oa = true;
    }
    function Qa(a, b, c) {
        if (!a) {
            throw r("areq", "Argument '{0}' is {1}", b || "?", c || "required");
        }
        return a;
    }
    function Ra(a, b, c) {
        if (c && S(a)) {
            a = a[a.length - 1];
        }
        Qa(T(a), b, "not a function, got " + (a && typeof a === "object" ? a.constructor.name || "Object" : typeof a));
        return a;
    }
    function Sa(a, b) {
        if (a === "hasOwnProperty") {
            throw r("badname", "hasOwnProperty is not a valid {0} name", b);
        }
    }
    function Ta(a, b, c) {
        if (!b) return a;
        var d = b.split(".");
        var e;
        var f = a;
        var g = d.length;
        for (var h = 0; h < g; h++) {
            e = d[h];
            if (a) {
                a = (f = a)[e];
            }
        }
        if (!c && T(a)) {
            return qa(f, a);
        }
        return a;
    }
    function Ua(a) {
        var b = a[0];
        var c = a[a.length - 1];
        var d;
        for (var e = 1; b !== c && (b = b.nextSibling); e++) {
            if (d || a[e] !== b) {
                if (!d) {
                    d = k(m.call(a, 0, e));
                }
                d.push(b);
            }
        }
        return d || a;
    }
    function Va() {
        return Object.create(null);
    }
    function Wa(a) {
        if (a == null) {
            return "";
        }
        switch (typeof a) {
          case "string":
            break;

          case "number":
            a = "" + a;
            break;

          default:
            if (K(a) && !S(a) && !R(a)) {
                a = a.toString();
            } else {
                a = sa(a);
            }
        }
        return a;
    }
    var Xa = 1;
    var Ya = 2;
    var Za = 3;
    var $a = 8;
    var _a = 9;
    var ab = 11;
    function bb(a) {
        var c = b("$injector");
        var d = b("ng");
        function e(a, b, c) {
            return a[b] || (a[b] = c());
        }
        var f = e(a, "angular", Object);
        f.$$minErr = f.$$minErr || b;
        return e(f, "module", function() {
            var a = {};
            return function b(f, g, h) {
                var i = function(a, b) {
                    if (a === "hasOwnProperty") {
                        throw d("badname", "hasOwnProperty is not a valid {0} name", b);
                    }
                };
                i(f, "module");
                if (g && a.hasOwnProperty(f)) {
                    a[f] = null;
                }
                return e(a, f, function() {
                    if (!g) {
                        throw c("nomod", "Module '{0}' is not available! You either misspelled " + "the module name or forgot to load it. If registering a module ensure that you " + "specify the dependencies as the second argument.", f);
                    }
                    var a = [];
                    var b = [];
                    var d = [];
                    var e = j("$injector", "invoke", "push", b);
                    var i = {
                        _invokeQueue: a,
                        _configBlocks: b,
                        _runBlocks: d,
                        requires: g,
                        name: f,
                        provider: k("$provide", "provider"),
                        factory: k("$provide", "factory"),
                        service: k("$provide", "service"),
                        value: j("$provide", "value"),
                        constant: j("$provide", "constant", "unshift"),
                        decorator: k("$provide", "decorator", b),
                        animation: k("$animateProvider", "register"),
                        filter: k("$filterProvider", "register"),
                        controller: k("$controllerProvider", "register"),
                        directive: k("$compileProvider", "directive"),
                        component: k("$compileProvider", "component"),
                        config: e,
                        run: function(a) {
                            d.push(a);
                            return this;
                        }
                    };
                    if (h) {
                        e(h);
                    }
                    return i;
                    function j(b, c, d, e) {
                        if (!e) e = a;
                        return function() {
                            e[d || "push"]([ b, c, arguments ]);
                            return i;
                        };
                    }
                    function k(b, c, d) {
                        if (!d) d = a;
                        return function(a, e) {
                            if (e && T(e)) e.$$moduleName = f;
                            d.push([ b, c, arguments ]);
                            return i;
                        };
                    }
                });
            };
        });
    }
    function cb(a, b) {
        if (S(a)) {
            b = b || [];
            for (var c = 0, d = a.length; c < d; c++) {
                b[c] = a[c];
            }
        } else if (N(a)) {
            b = b || {};
            for (var e in a) {
                if (!(e.charAt(0) === "$" && e.charAt(1) === "$")) {
                    b[e] = a[e];
                }
            }
        }
        return b || a;
    }
    function db(a) {
        var b = [];
        return JSON.stringify(a, function(a, c) {
            c = ra(a, c);
            if (N(c)) {
                if (b.indexOf(c) >= 0) return "...";
                b.push(c);
            }
            return c;
        });
    }
    function eb(a) {
        if (typeof a === "function") {
            return a.toString().replace(/ \{[\s\S]*$/, "");
        } else if (L(a)) {
            return "undefined";
        } else if (typeof a !== "string") {
            return db(a);
        }
        return a;
    }
    var fb = {
        full: "1.6.2",
        major: 1,
        minor: 6,
        dot: 2,
        codeName: "llamacorn-lovehug"
    };
    function gb(c) {
        C(c, {
            bootstrap: Ja,
            copy: ka,
            extend: C,
            merge: D,
            equals: la,
            element: k,
            forEach: w,
            injector: sc,
            noop: H,
            bind: qa,
            toJson: sa,
            fromJson: ta,
            identity: I,
            isUndefined: L,
            isDefined: M,
            isString: P,
            isFunction: T,
            isObject: N,
            isNumber: Q,
            isElement: fa,
            isArray: S,
            version: fb,
            isDate: R,
            lowercase: f,
            uppercase: g,
            callbacks: {
                $$counter: 0
            },
            getTestability: La,
            reloadWithDebugInfo: Ka,
            $$minErr: b,
            $$csp: ma,
            $$encodeUriSegment: Ca,
            $$encodeUriQuery: Da,
            $$stringify: Wa
        });
        t = bb(a);
        t("ng", [ "ngLocale" ], [ "$provide", function a(b) {
            b.provider({
                $$sanitizeUri: te
            });
            b.provider("$compile", Oc).directive({
                a: vf,
                input: lg,
                textarea: lg,
                form: Df,
                script: kh,
                select: nh,
                option: oh,
                ngBind: og,
                ngBindHtml: qg,
                ngBindTemplate: pg,
                ngClass: tg,
                ngClassEven: vg,
                ngClassOdd: ug,
                ngCloak: wg,
                ngController: xg,
                ngForm: Ef,
                ngHide: dh,
                ngIf: Ag,
                ngInclude: Bg,
                ngInit: Dg,
                ngNonBindable: Wg,
                ngPluralize: $g,
                ngRepeat: _g,
                ngShow: ch,
                ngStyle: eh,
                ngSwitch: fh,
                ngSwitchWhen: gh,
                ngSwitchDefault: hh,
                ngOptions: Zg,
                ngTransclude: jh,
                ngModel: Qg,
                ngList: Eg,
                ngChange: rg,
                pattern: qh,
                ngPattern: qh,
                required: ph,
                ngRequired: ph,
                minlength: sh,
                ngMinlength: sh,
                maxlength: rh,
                ngMaxlength: rh,
                ngValue: ng,
                ngModelOptions: Ug
            }).directive({
                ngInclude: Cg
            }).directive(wf).directive(yg);
            b.provider({
                $anchorScroll: tc,
                $animate: Dc,
                $animateCss: Gc,
                $$animateJs: Bc,
                $$animateQueue: Cc,
                $$AnimateRunner: Fc,
                $$animateAsyncRun: Ec,
                $browser: Ic,
                $cacheFactory: Jc,
                $controller: $c,
                $document: _c,
                $$isDocumentHidden: ad,
                $exceptionHandler: bd,
                $filter: Oe,
                $$forceReflow: cd,
                $interpolate: xd,
                $interval: yd,
                $http: sd,
                $httpParamSerializer: kd,
                $httpParamSerializerJQLike: ld,
                $httpBackend: ud,
                $xhrFactory: td,
                $jsonpCallbacks: zd,
                $location: Td,
                $log: Ud,
                $parse: ne,
                $rootScope: se,
                $q: oe,
                $$q: pe,
                $sce: Be,
                $sceDelegate: Ae,
                $sniffer: Ce,
                $templateCache: Kc,
                $templateRequest: Ee,
                $$testability: Fe,
                $timeout: Ge,
                $window: Le,
                $$rAF: re,
                $$jqLite: cc,
                $$Map: hc,
                $$cookieReader: Ne
            });
        } ]);
    }
    Eb.expando = "ng339";
    var hb = Eb.cache = {}, ib = 1;
    Eb._data = function(a) {
        return this.cache[a[this.expando]] || {};
    };
    function jb() {
        return ++ib;
    }
    var kb = /-([a-z])/g;
    var lb = /^-ms-/;
    var mb = {
        mouseleave: "mouseout",
        mouseenter: "mouseover"
    };
    var nb = b("jqLite");
    function ob(a) {
        return qb(a.replace(lb, "ms-"));
    }
    function pb(a, b) {
        return b.toUpperCase();
    }
    function qb(a) {
        return a.replace(kb, pb);
    }
    var rb = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/;
    var sb = /<|&#?\w+;/;
    var tb = /<([\w:-]+)/;
    var ub = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi;
    var vb = {
        option: [ 1, '<select multiple="multiple">', "</select>" ],
        thead: [ 1, "<table>", "</table>" ],
        col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
        td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
        _default: [ 0, "", "" ]
    };
    vb.optgroup = vb.option;
    vb.tbody = vb.tfoot = vb.colgroup = vb.caption = vb.thead;
    vb.th = vb.td;
    function wb(a) {
        return !sb.test(a);
    }
    function xb(a) {
        var b = a.nodeType;
        return b === Xa || !b || b === _a;
    }
    function yb(a) {
        for (var b in hb[a.ng339]) {
            return true;
        }
        return false;
    }
    function zb(a) {
        for (var b = 0, c = a.length; b < c; b++) {
            Ib(a[b]);
        }
    }
    function Ab(a, b) {
        var c, d, e, f = b.createDocumentFragment(), g = [], h;
        if (wb(a)) {
            g.push(b.createTextNode(a));
        } else {
            c = f.appendChild(b.createElement("div"));
            d = (tb.exec(a) || [ "", "" ])[1].toLowerCase();
            e = vb[d] || vb._default;
            c.innerHTML = e[1] + a.replace(ub, "<$1></$2>") + e[2];
            h = e[0];
            while (h--) {
                c = c.lastChild;
            }
            g = oa(g, c.childNodes);
            c = f.firstChild;
            c.textContent = "";
        }
        f.textContent = "";
        f.innerHTML = "";
        w(g, function(a) {
            f.appendChild(a);
        });
        return f;
    }
    function Bb(b, c) {
        c = c || a.document;
        var d;
        if (d = rb.exec(b)) {
            return [ c.createElement(d[1]) ];
        }
        if (d = Ab(b, c)) {
            return d.childNodes;
        }
        return [];
    }
    function Cb(a, b) {
        var c = a.parentNode;
        if (c) {
            c.replaceChild(b, a);
        }
        b.appendChild(a);
    }
    var Db = a.Node.prototype.contains || function(a) {
        return !!(this.compareDocumentPosition(a) & 16);
    };
    function Eb(a) {
        if (a instanceof Eb) {
            return a;
        }
        var b;
        if (P(a)) {
            a = da(a);
            b = true;
        }
        if (!(this instanceof Eb)) {
            if (b && a.charAt(0) !== "<") {
                throw nb("nosel", "Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element");
            }
            return new Eb(a);
        }
        if (b) {
            Ob(this, Bb(a));
        } else if (T(a)) {
            Ub(a);
        } else {
            Ob(this, a);
        }
    }
    function Fb(a) {
        return a.cloneNode(true);
    }
    function Gb(a, b) {
        if (!b) Ib(a);
        if (a.querySelectorAll) {
            var c = a.querySelectorAll("*");
            for (var d = 0, e = c.length; d < e; d++) {
                Ib(c[d]);
            }
        }
    }
    function Hb(a, b, c, d) {
        if (M(d)) throw nb("offargs", "jqLite#off() does not support the `selector` argument");
        var e = Jb(a);
        var f = e && e.events;
        var g = e && e.handle;
        if (!g) return;
        if (!b) {
            for (b in f) {
                if (b !== "$destroy") {
                    a.removeEventListener(b, g);
                }
                delete f[b];
            }
        } else {
            var h = function(b) {
                var d = f[b];
                if (M(c)) {
                    ja(d || [], c);
                }
                if (!(M(c) && d && d.length > 0)) {
                    a.removeEventListener(b, g);
                    delete f[b];
                }
            };
            w(b.split(" "), function(a) {
                h(a);
                if (mb[a]) {
                    h(mb[a]);
                }
            });
        }
    }
    function Ib(a, b) {
        var c = a.ng339;
        var d = c && hb[c];
        if (d) {
            if (b) {
                delete d.data[b];
                return;
            }
            if (d.handle) {
                if (d.events.$destroy) {
                    d.handle({}, "$destroy");
                }
                Hb(a);
            }
            delete hb[c];
            a.ng339 = undefined;
        }
    }
    function Jb(a, b) {
        var c = a.ng339, d = c && hb[c];
        if (b && !d) {
            a.ng339 = c = jb();
            d = hb[c] = {
                events: {},
                data: {},
                handle: undefined
            };
        }
        return d;
    }
    function Kb(a, b, c) {
        if (xb(a)) {
            var d;
            var e = M(c);
            var f = !e && b && !N(b);
            var g = !b;
            var h = Jb(a, !f);
            var i = h && h.data;
            if (e) {
                i[qb(b)] = c;
            } else {
                if (g) {
                    return i;
                } else {
                    if (f) {
                        return i && i[qb(b)];
                    } else {
                        for (d in b) {
                            i[qb(d)] = b[d];
                        }
                    }
                }
            }
        }
    }
    function Lb(a, b) {
        if (!a.getAttribute) return false;
        return (" " + (a.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").indexOf(" " + b + " ") > -1;
    }
    function Mb(a, b) {
        if (b && a.setAttribute) {
            w(b.split(" "), function(b) {
                a.setAttribute("class", da((" " + (a.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").replace(" " + da(b) + " ", " ")));
            });
        }
    }
    function Nb(a, b) {
        if (b && a.setAttribute) {
            var c = (" " + (a.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ");
            w(b.split(" "), function(a) {
                a = da(a);
                if (c.indexOf(" " + a + " ") === -1) {
                    c += a + " ";
                }
            });
            a.setAttribute("class", da(c));
        }
    }
    function Ob(a, b) {
        if (b) {
            if (b.nodeType) {
                a[a.length++] = b;
            } else {
                var c = b.length;
                if (typeof c === "number" && b.window !== b) {
                    if (c) {
                        for (var d = 0; d < c; d++) {
                            a[a.length++] = b[d];
                        }
                    }
                } else {
                    a[a.length++] = b;
                }
            }
        }
    }
    function Pb(a, b) {
        return Qb(a, "$" + (b || "ngController") + "Controller");
    }
    function Qb(a, b, c) {
        if (a.nodeType === _a) {
            a = a.documentElement;
        }
        var d = S(b) ? b : [ b ];
        while (a) {
            for (var e = 0, f = d.length; e < f; e++) {
                if (M(c = k.data(a, d[e]))) return c;
            }
            a = a.parentNode || a.nodeType === ab && a.host;
        }
    }
    function Rb(a) {
        Gb(a, true);
        while (a.firstChild) {
            a.removeChild(a.firstChild);
        }
    }
    function Sb(a, b) {
        if (!b) Gb(a);
        var c = a.parentNode;
        if (c) c.removeChild(a);
    }
    function Tb(b, c) {
        c = c || a;
        if (c.document.readyState === "complete") {
            c.setTimeout(b);
        } else {
            k(c).on("load", b);
        }
    }
    function Ub(b) {
        function c() {
            a.document.removeEventListener("DOMContentLoaded", c);
            a.removeEventListener("load", c);
            b();
        }
        if (a.document.readyState === "complete") {
            a.setTimeout(b);
        } else {
            a.document.addEventListener("DOMContentLoaded", c);
            a.addEventListener("load", c);
        }
    }
    var Vb = Eb.prototype = {
        ready: Ub,
        toString: function() {
            var a = [];
            w(this, function(b) {
                a.push("" + b);
            });
            return "[" + a.join(", ") + "]";
        },
        eq: function(a) {
            return a >= 0 ? k(this[a]) : k(this[this.length + a]);
        },
        length: 0,
        push: o,
        sort: [].sort,
        splice: [].splice
    };
    var Wb = {};
    w("multiple,selected,checked,disabled,readOnly,required,open".split(","), function(a) {
        Wb[f(a)] = a;
    });
    var Xb = {};
    w("input,select,option,textarea,button,form,details".split(","), function(a) {
        Xb[a] = true;
    });
    var Yb = {
        ngMinlength: "minlength",
        ngMaxlength: "maxlength",
        ngMin: "min",
        ngMax: "max",
        ngPattern: "pattern",
        ngStep: "step"
    };
    function Zb(a, b) {
        var c = Wb[b.toLowerCase()];
        return c && Xb[ha(a)] && c;
    }
    function $b(a) {
        return Yb[a];
    }
    w({
        data: Kb,
        removeData: Ib,
        hasData: yb,
        cleanData: zb
    }, function(a, b) {
        Eb[b] = a;
    });
    w({
        data: Kb,
        inheritedData: Qb,
        scope: function(a) {
            return k.data(a, "$scope") || Qb(a.parentNode || a, [ "$isolateScope", "$scope" ]);
        },
        isolateScope: function(a) {
            return k.data(a, "$isolateScope") || k.data(a, "$isolateScopeNoTemplate");
        },
        controller: Pb,
        injector: function(a) {
            return Qb(a, "$injector");
        },
        removeAttr: function(a, b) {
            a.removeAttribute(b);
        },
        hasClass: Lb,
        css: function(a, b, c) {
            b = ob(b);
            if (M(c)) {
                a.style[b] = c;
            } else {
                return a.style[b];
            }
        },
        attr: function(a, b, c) {
            var d;
            var e = a.nodeType;
            if (e === Za || e === Ya || e === $a || !a.getAttribute) {
                return;
            }
            var g = f(b);
            var h = Wb[g];
            if (M(c)) {
                if (c === null || c === false && h) {
                    a.removeAttribute(b);
                } else {
                    a.setAttribute(b, h ? g : c);
                }
            } else {
                d = a.getAttribute(b);
                if (h && d !== null) {
                    d = g;
                }
                return d === null ? undefined : d;
            }
        },
        prop: function(a, b, c) {
            if (M(c)) {
                a[b] = c;
            } else {
                return a[b];
            }
        },
        text: function() {
            a.$dv = "";
            return a;
            function a(a, b) {
                if (L(b)) {
                    var c = a.nodeType;
                    return c === Xa || c === Za ? a.textContent : "";
                }
                a.textContent = b;
            }
        }(),
        val: function(a, b) {
            if (L(b)) {
                if (a.multiple && ha(a) === "select") {
                    var c = [];
                    w(a.options, function(a) {
                        if (a.selected) {
                            c.push(a.value || a.text);
                        }
                    });
                    return c;
                }
                return a.value;
            }
            a.value = b;
        },
        html: function(a, b) {
            if (L(b)) {
                return a.innerHTML;
            }
            Gb(a, true);
            a.innerHTML = b;
        },
        empty: Rb
    }, function(a, b) {
        Eb.prototype[b] = function(b, c) {
            var d, e;
            var f = this.length;
            if (a !== Rb && L(a.length === 2 && (a !== Lb && a !== Pb) ? b : c)) {
                if (N(b)) {
                    for (d = 0; d < f; d++) {
                        if (a === Kb) {
                            a(this[d], b);
                        } else {
                            for (e in b) {
                                a(this[d], e, b[e]);
                            }
                        }
                    }
                    return this;
                } else {
                    var g = a.$dv;
                    var h = L(g) ? Math.min(f, 1) : f;
                    for (var i = 0; i < h; i++) {
                        var j = a(this[i], b, c);
                        g = g ? g + j : j;
                    }
                    return g;
                }
            } else {
                for (d = 0; d < f; d++) {
                    a(this[d], b, c);
                }
                return this;
            }
        };
    });
    function _b(a, b) {
        var c = function(c, d) {
            c.isDefaultPrevented = function() {
                return c.defaultPrevented;
            };
            var e = b[d || c.type];
            var f = e ? e.length : 0;
            if (!f) return;
            if (L(c.immediatePropagationStopped)) {
                var g = c.stopImmediatePropagation;
                c.stopImmediatePropagation = function() {
                    c.immediatePropagationStopped = true;
                    if (c.stopPropagation) {
                        c.stopPropagation();
                    }
                    if (g) {
                        g.call(c);
                    }
                };
            }
            c.isImmediatePropagationStopped = function() {
                return c.immediatePropagationStopped === true;
            };
            var h = e.specialHandlerWrapper || ac;
            if (f > 1) {
                e = cb(e);
            }
            for (var i = 0; i < f; i++) {
                if (!c.isImmediatePropagationStopped()) {
                    h(a, c, e[i]);
                }
            }
        };
        c.elem = a;
        return c;
    }
    function ac(a, b, c) {
        c.call(a, b);
    }
    function bc(a, b, c) {
        var d = b.relatedTarget;
        if (!d || d !== a && !Db.call(a, d)) {
            c.call(a, b);
        }
    }
    w({
        removeData: Ib,
        on: function a(b, c, d, e) {
            if (M(e)) throw nb("onargs", "jqLite#on() does not support the `selector` or `eventData` parameters");
            if (!xb(b)) {
                return;
            }
            var f = Jb(b, true);
            var g = f.events;
            var h = f.handle;
            if (!h) {
                h = f.handle = _b(b, g);
            }
            var i = c.indexOf(" ") >= 0 ? c.split(" ") : [ c ];
            var j = i.length;
            var k = function(a, c, e) {
                var f = g[a];
                if (!f) {
                    f = g[a] = [];
                    f.specialHandlerWrapper = c;
                    if (a !== "$destroy" && !e) {
                        b.addEventListener(a, h);
                    }
                }
                f.push(d);
            };
            while (j--) {
                c = i[j];
                if (mb[c]) {
                    k(mb[c], bc);
                    k(c, undefined, true);
                } else {
                    k(c);
                }
            }
        },
        off: Hb,
        one: function(a, b, c) {
            a = k(a);
            a.on(b, function d() {
                a.off(b, c);
                a.off(b, d);
            });
            a.on(b, c);
        },
        replaceWith: function(a, b) {
            var c, d = a.parentNode;
            Gb(a);
            w(new Eb(b), function(b) {
                if (c) {
                    d.insertBefore(b, c.nextSibling);
                } else {
                    d.replaceChild(b, a);
                }
                c = b;
            });
        },
        children: function(a) {
            var b = [];
            w(a.childNodes, function(a) {
                if (a.nodeType === Xa) {
                    b.push(a);
                }
            });
            return b;
        },
        contents: function(a) {
            return a.contentDocument || a.childNodes || [];
        },
        append: function(a, b) {
            var c = a.nodeType;
            if (c !== Xa && c !== ab) return;
            b = new Eb(b);
            for (var d = 0, e = b.length; d < e; d++) {
                var f = b[d];
                a.appendChild(f);
            }
        },
        prepend: function(a, b) {
            if (a.nodeType === Xa) {
                var c = a.firstChild;
                w(new Eb(b), function(b) {
                    a.insertBefore(b, c);
                });
            }
        },
        wrap: function(a, b) {
            Cb(a, k(b).eq(0).clone()[0]);
        },
        remove: Sb,
        detach: function(a) {
            Sb(a, true);
        },
        after: function(a, b) {
            var c = a, d = a.parentNode;
            if (d) {
                b = new Eb(b);
                for (var e = 0, f = b.length; e < f; e++) {
                    var g = b[e];
                    d.insertBefore(g, c.nextSibling);
                    c = g;
                }
            }
        },
        addClass: Nb,
        removeClass: Mb,
        toggleClass: function(a, b, c) {
            if (b) {
                w(b.split(" "), function(b) {
                    var d = c;
                    if (L(d)) {
                        d = !Lb(a, b);
                    }
                    (d ? Nb : Mb)(a, b);
                });
            }
        },
        parent: function(a) {
            var b = a.parentNode;
            return b && b.nodeType !== ab ? b : null;
        },
        next: function(a) {
            return a.nextElementSibling;
        },
        find: function(a, b) {
            if (a.getElementsByTagName) {
                return a.getElementsByTagName(b);
            } else {
                return [];
            }
        },
        clone: Fb,
        triggerHandler: function(a, b, c) {
            var d, e, f;
            var g = b.type || b;
            var h = Jb(a);
            var i = h && h.events;
            var j = i && i[g];
            if (j) {
                d = {
                    preventDefault: function() {
                        this.defaultPrevented = true;
                    },
                    isDefaultPrevented: function() {
                        return this.defaultPrevented === true;
                    },
                    stopImmediatePropagation: function() {
                        this.immediatePropagationStopped = true;
                    },
                    isImmediatePropagationStopped: function() {
                        return this.immediatePropagationStopped === true;
                    },
                    stopPropagation: H,
                    type: g,
                    target: a
                };
                if (b.type) {
                    d = C(d, b);
                }
                e = cb(j);
                f = c ? [ d ].concat(c) : [ d ];
                w(e, function(b) {
                    if (!d.isImmediatePropagationStopped()) {
                        b.apply(a, f);
                    }
                });
            }
        }
    }, function(a, b) {
        Eb.prototype[b] = function(b, c, d) {
            var e;
            for (var f = 0, g = this.length; f < g; f++) {
                if (L(e)) {
                    e = a(this[f], b, c, d);
                    if (M(e)) {
                        e = k(e);
                    }
                } else {
                    Ob(e, a(this[f], b, c, d));
                }
            }
            return M(e) ? e : this;
        };
    });
    Eb.prototype.bind = Eb.prototype.on;
    Eb.prototype.unbind = Eb.prototype.off;
    function cc() {
        this.$get = function a() {
            return C(Eb, {
                hasClass: function(a, b) {
                    if (a.attr) a = a[0];
                    return Lb(a, b);
                },
                addClass: function(a, b) {
                    if (a.attr) a = a[0];
                    return Nb(a, b);
                },
                removeClass: function(a, b) {
                    if (a.attr) a = a[0];
                    return Mb(a, b);
                }
            });
        };
    }
    function dc(a, b) {
        var c = a && a.$$hashKey;
        if (c) {
            if (typeof c === "function") {
                c = a.$$hashKey();
            }
            return c;
        }
        var d = typeof a;
        if (d === "function" || d === "object" && a !== null) {
            c = a.$$hashKey = d + ":" + (b || z)();
        } else {
            c = d + ":" + a;
        }
        return c;
    }
    var ec = Object.create(null);
    function fc() {
        this._keys = [];
        this._values = [];
        this._lastKey = NaN;
        this._lastIndex = -1;
    }
    fc.prototype = {
        _idx: function(a) {
            if (a === this._lastKey) {
                return this._lastIndex;
            }
            this._lastKey = a;
            this._lastIndex = this._keys.indexOf(a);
            return this._lastIndex;
        },
        _transformKey: function(a) {
            return F(a) ? ec : a;
        },
        get: function(a) {
            a = this._transformKey(a);
            var b = this._idx(a);
            if (b !== -1) {
                return this._values[b];
            }
        },
        set: function(a, b) {
            a = this._transformKey(a);
            var c = this._idx(a);
            if (c === -1) {
                c = this._lastIndex = this._keys.length;
            }
            this._keys[c] = a;
            this._values[c] = b;
        },
        delete: function(a) {
            a = this._transformKey(a);
            var b = this._idx(a);
            if (b === -1) {
                return false;
            }
            this._keys.splice(b, 1);
            this._values.splice(b, 1);
            this._lastKey = NaN;
            this._lastIndex = -1;
            return true;
        }
    };
    var gc = fc;
    var hc = [ function() {
        this.$get = [ function() {
            return gc;
        } ];
    } ];
    var ic = /^([^(]+?)=>/;
    var jc = /^[^(]*\(\s*([^)]*)\)/m;
    var kc = /,/;
    var lc = /^\s*(_?)(\S+?)\1\s*$/;
    var mc = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm;
    var nc = b("$injector");
    function oc(a) {
        return Function.prototype.toString.call(a);
    }
    function pc(a) {
        var b = oc(a).replace(mc, ""), c = b.match(ic) || b.match(jc);
        return c;
    }
    function qc(a) {
        var b = pc(a);
        if (b) {
            return "function(" + (b[1] || "").replace(/[\s\r\n]+/, " ") + ")";
        }
        return "fn";
    }
    function rc(a, b, c) {
        var d, e, f;
        if (typeof a === "function") {
            if (!(d = a.$inject)) {
                d = [];
                if (a.length) {
                    if (b) {
                        if (!P(c) || !c) {
                            c = a.name || qc(a);
                        }
                        throw nc("strictdi", "{0} is not using explicit annotation and cannot be invoked in strict mode", c);
                    }
                    e = pc(a);
                    w(e[1].split(kc), function(a) {
                        a.replace(lc, function(a, b, c) {
                            d.push(c);
                        });
                    });
                }
                a.$inject = d;
            }
        } else if (S(a)) {
            f = a.length - 1;
            Ra(a[f], "fn");
            d = a.slice(0, f);
        } else {
            Ra(a, "fn", true);
        }
        return d;
    }
    function sc(a, b) {
        b = b === true;
        var c = {}, d = "Provider", e = [], f = new gc(), g = {
            $provide: {
                provider: n(o),
                factory: n(q),
                service: n(r),
                value: n(u),
                constant: n(v),
                decorator: x
            }
        }, h = g.$injector = A(g, function(a, b) {
            if (s.isString(b)) {
                e.push(b);
            }
            throw nc("unpr", "Unknown provider: {0}", e.join(" <- "));
        }), i = {}, k = A(i, function(a, b) {
            var c = h.get(a + d, b);
            return l.invoke(c.$get, c, undefined, a);
        }), l = k;
        g["$injector" + d] = {
            $get: J(k)
        };
        var m = z(a);
        l = k.get("$injector");
        l.strictDi = b;
        w(m, function(a) {
            if (a) l.invoke(a);
        });
        return l;
        function n(a) {
            return function(b, c) {
                if (N(b)) {
                    w(b, y(a));
                } else {
                    return a(b, c);
                }
            };
        }
        function o(a, b) {
            Sa(a, "service");
            if (T(b) || S(b)) {
                b = h.instantiate(b);
            }
            if (!b.$get) {
                throw nc("pget", "Provider '{0}' must define $get factory method.", a);
            }
            return g[a + d] = b;
        }
        function p(a, b) {
            return function c() {
                var d = l.invoke(b, this);
                if (L(d)) {
                    throw nc("undef", "Provider '{0}' must return a value from $get factory method.", a);
                }
                return d;
            };
        }
        function q(a, b, c) {
            return o(a, {
                $get: c !== false ? p(a, b) : b
            });
        }
        function r(a, b) {
            return q(a, [ "$injector", function(a) {
                return a.instantiate(b);
            } ]);
        }
        function u(a, b) {
            return q(a, J(b), false);
        }
        function v(a, b) {
            Sa(a, "constant");
            g[a] = b;
            i[a] = b;
        }
        function x(a, b) {
            var c = h.get(a + d), e = c.$get;
            c.$get = function() {
                var a = l.invoke(e, c);
                return l.invoke(b, null, {
                    $delegate: a
                });
            };
        }
        function z(a) {
            Qa(L(a) || S(a), "modulesToLoad", "not an array");
            var b = [], c;
            w(a, function(a) {
                if (f.get(a)) return;
                f.set(a, true);
                function d(a) {
                    var b, c;
                    for (b = 0, c = a.length; b < c; b++) {
                        var d = a[b], e = h.get(d[0]);
                        e[d[1]].apply(e, d[2]);
                    }
                }
                try {
                    if (P(a)) {
                        c = t(a);
                        b = b.concat(z(c.requires)).concat(c._runBlocks);
                        d(c._invokeQueue);
                        d(c._configBlocks);
                    } else if (T(a)) {
                        b.push(h.invoke(a));
                    } else if (S(a)) {
                        b.push(h.invoke(a));
                    } else {
                        Ra(a, "module");
                    }
                } catch (b) {
                    if (S(a)) {
                        a = a[a.length - 1];
                    }
                    if (b.message && b.stack && b.stack.indexOf(b.message) === -1) {
                        b = b.message + "\n" + b.stack;
                    }
                    throw nc("modulerr", "Failed to instantiate module {0} due to:\n{1}", a, b.stack || b.message || b);
                }
            });
            return b;
        }
        function A(a, f) {
            function h(b, d) {
                if (a.hasOwnProperty(b)) {
                    if (a[b] === c) {
                        throw nc("cdep", "Circular dependency found: {0}", b + " <- " + e.join(" <- "));
                    }
                    return a[b];
                } else {
                    try {
                        e.unshift(b);
                        a[b] = c;
                        a[b] = f(b, d);
                        return a[b];
                    } catch (d) {
                        if (a[b] === c) {
                            delete a[b];
                        }
                        throw d;
                    } finally {
                        e.shift();
                    }
                }
            }
            function i(a, c, d) {
                var e = [], f = sc.$$annotate(a, b, d);
                for (var g = 0, i = f.length; g < i; g++) {
                    var j = f[g];
                    if (typeof j !== "string") {
                        throw nc("itkn", "Incorrect injection token! Expected service name as string, got {0}", j);
                    }
                    e.push(c && c.hasOwnProperty(j) ? c[j] : h(j, d));
                }
                return e;
            }
            function k(a) {
                if (j || typeof a !== "function") {
                    return false;
                }
                var b = a.$$ngIsClass;
                if (!$(b)) {
                    b = a.$$ngIsClass = /^(?:class\b|constructor\()/.test(oc(a));
                }
                return b;
            }
            function l(a, b, c, d) {
                if (typeof c === "string") {
                    d = c;
                    c = null;
                }
                var e = i(a, c, d);
                if (S(a)) {
                    a = a[a.length - 1];
                }
                if (!k(a)) {
                    return a.apply(b, e);
                } else {
                    e.unshift(null);
                    return new (Function.prototype.bind.apply(a, e))();
                }
            }
            function m(a, b, c) {
                var d = S(a) ? a[a.length - 1] : a;
                var e = i(a, b, c);
                e.unshift(null);
                return new (Function.prototype.bind.apply(d, e))();
            }
            return {
                invoke: l,
                instantiate: m,
                get: h,
                annotate: sc.$$annotate,
                has: function(b) {
                    return g.hasOwnProperty(b + d) || a.hasOwnProperty(b);
                }
            };
        }
    }
    sc.$$annotate = rc;
    function tc() {
        var a = true;
        this.disableAutoScrolling = function() {
            a = false;
        };
        this.$get = [ "$window", "$location", "$rootScope", function(b, c, d) {
            var e = b.document;
            function f(a) {
                var b = null;
                Array.prototype.some.call(a, function(a) {
                    if (ha(a) === "a") {
                        b = a;
                        return true;
                    }
                });
                return b;
            }
            function g() {
                var a = i.yOffset;
                if (T(a)) {
                    a = a();
                } else if (fa(a)) {
                    var c = a[0];
                    var d = b.getComputedStyle(c);
                    if (d.position !== "fixed") {
                        a = 0;
                    } else {
                        a = c.getBoundingClientRect().bottom;
                    }
                } else if (!Q(a)) {
                    a = 0;
                }
                return a;
            }
            function h(a) {
                if (a) {
                    a.scrollIntoView();
                    var c = g();
                    if (c) {
                        var d = a.getBoundingClientRect().top;
                        b.scrollBy(0, d - c);
                    }
                } else {
                    b.scrollTo(0, 0);
                }
            }
            function i(a) {
                a = P(a) ? a : Q(a) ? a.toString() : c.hash();
                var b;
                if (!a) h(null); else if (b = e.getElementById(a)) h(b); else if (b = f(e.getElementsByName(a))) h(b); else if (a === "top") h(null);
            }
            if (a) {
                d.$watch(function a() {
                    return c.hash();
                }, function a(b, c) {
                    if (b === c && b === "") return;
                    Tb(function() {
                        d.$evalAsync(i);
                    });
                });
            }
            return i;
        } ];
    }
    var uc = b("$animate");
    var vc = 1;
    var wc = "ng-animate";
    function xc(a, b) {
        if (!a && !b) return "";
        if (!a) return b;
        if (!b) return a;
        if (S(a)) a = a.join(" ");
        if (S(b)) b = b.join(" ");
        return a + " " + b;
    }
    function yc(a) {
        for (var b = 0; b < a.length; b++) {
            var c = a[b];
            if (c.nodeType === vc) {
                return c;
            }
        }
    }
    function zc(a) {
        if (P(a)) {
            a = a.split(" ");
        }
        var b = Va();
        w(a, function(a) {
            if (a.length) {
                b[a] = true;
            }
        });
        return b;
    }
    function Ac(a) {
        return N(a) ? a : {};
    }
    var Bc = function() {
        this.$get = H;
    };
    var Cc = function() {
        var a = new gc();
        var b = [];
        this.$get = [ "$$AnimateRunner", "$rootScope", function(c, d) {
            return {
                enabled: H,
                on: H,
                off: H,
                pin: H,
                push: function(a, b, d, e) {
                    if (e) {
                        e();
                    }
                    d = d || {};
                    if (d.from) {
                        a.css(d.from);
                    }
                    if (d.to) {
                        a.css(d.to);
                    }
                    if (d.addClass || d.removeClass) {
                        g(a, d.addClass, d.removeClass);
                    }
                    var f = new c();
                    f.complete();
                    return f;
                }
            };
            function e(a, b, c) {
                var d = false;
                if (b) {
                    b = P(b) ? b.split(" ") : S(b) ? b : [];
                    w(b, function(b) {
                        if (b) {
                            d = true;
                            a[b] = c;
                        }
                    });
                }
                return d;
            }
            function f() {
                w(b, function(b) {
                    var c = a.get(b);
                    if (c) {
                        var d = zc(b.attr("class"));
                        var e = "";
                        var f = "";
                        w(c, function(a, b) {
                            var c = !!d[b];
                            if (a !== c) {
                                if (a) {
                                    e += (e.length ? " " : "") + b;
                                } else {
                                    f += (f.length ? " " : "") + b;
                                }
                            }
                        });
                        w(b, function(a) {
                            if (e) {
                                Nb(a, e);
                            }
                            if (f) {
                                Mb(a, f);
                            }
                        });
                        a.delete(b);
                    }
                });
                b.length = 0;
            }
            function g(c, g, h) {
                var i = a.get(c) || {};
                var j = e(i, g, true);
                var k = e(i, h, false);
                if (j || k) {
                    a.set(c, i);
                    b.push(c);
                    if (b.length === 1) {
                        d.$$postDigest(f);
                    }
                }
            }
        } ];
    };
    var Dc = [ "$provide", function(a) {
        var b = this;
        this.$$registeredAnimations = Object.create(null);
        this.register = function(c, d) {
            if (c && c.charAt(0) !== ".") {
                throw uc("notcsel", "Expecting class selector starting with '.' got '{0}'.", c);
            }
            var e = c + "-animation";
            b.$$registeredAnimations[c.substr(1)] = e;
            a.factory(e, d);
        };
        this.classNameFilter = function(a) {
            if (arguments.length === 1) {
                this.$$classNameFilter = a instanceof RegExp ? a : null;
                if (this.$$classNameFilter) {
                    var b = new RegExp("(\\s+|\\/)" + wc + "(\\s+|\\/)");
                    if (b.test(this.$$classNameFilter.toString())) {
                        throw uc("nongcls", '$animateProvider.classNameFilter(regex) prohibits accepting a regex value which matches/contains the "{0}" CSS class.', wc);
                    }
                }
            }
            return this.$$classNameFilter;
        };
        this.$get = [ "$$animateQueue", function(a) {
            function b(a, b, c) {
                if (c) {
                    var d = yc(c);
                    if (d && !d.parentNode && !d.previousElementSibling) {
                        c = null;
                    }
                }
                if (c) {
                    c.after(a);
                } else {
                    b.prepend(a);
                }
            }
            return {
                on: a.on,
                off: a.off,
                pin: a.pin,
                enabled: a.enabled,
                cancel: function(a) {
                    if (a.end) {
                        a.end();
                    }
                },
                enter: function(c, d, e, f) {
                    d = d && k(d);
                    e = e && k(e);
                    d = d || e.parent();
                    b(c, d, e);
                    return a.push(c, "enter", Ac(f));
                },
                move: function(c, d, e, f) {
                    d = d && k(d);
                    e = e && k(e);
                    d = d || e.parent();
                    b(c, d, e);
                    return a.push(c, "move", Ac(f));
                },
                leave: function(b, c) {
                    return a.push(b, "leave", Ac(c), function() {
                        b.remove();
                    });
                },
                addClass: function(b, c, d) {
                    d = Ac(d);
                    d.addClass = xc(d.addclass, c);
                    return a.push(b, "addClass", d);
                },
                removeClass: function(b, c, d) {
                    d = Ac(d);
                    d.removeClass = xc(d.removeClass, c);
                    return a.push(b, "removeClass", d);
                },
                setClass: function(b, c, d, e) {
                    e = Ac(e);
                    e.addClass = xc(e.addClass, c);
                    e.removeClass = xc(e.removeClass, d);
                    return a.push(b, "setClass", e);
                },
                animate: function(b, c, d, e, f) {
                    f = Ac(f);
                    f.from = f.from ? C(f.from, c) : c;
                    f.to = f.to ? C(f.to, d) : d;
                    e = e || "ng-inline-animate";
                    f.tempClasses = xc(f.tempClasses, e);
                    return a.push(b, "animate", f);
                }
            };
        } ];
    } ];
    var Ec = function() {
        this.$get = [ "$$rAF", function(a) {
            var b = [];
            function c(c) {
                b.push(c);
                if (b.length > 1) return;
                a(function() {
                    for (var a = 0; a < b.length; a++) {
                        b[a]();
                    }
                    b = [];
                });
            }
            return function() {
                var a = false;
                c(function() {
                    a = true;
                });
                return function(b) {
                    if (a) {
                        b();
                    } else {
                        c(b);
                    }
                };
            };
        } ];
    };
    var Fc = function() {
        this.$get = [ "$q", "$sniffer", "$$animateAsyncRun", "$$isDocumentHidden", "$timeout", function(a, b, c, d, e) {
            var f = 0;
            var g = 1;
            var h = 2;
            i.chain = function(a, b) {
                var c = 0;
                d();
                function d() {
                    if (c === a.length) {
                        b(true);
                        return;
                    }
                    a[c](function(a) {
                        if (a === false) {
                            b(false);
                            return;
                        }
                        c++;
                        d();
                    });
                }
            };
            i.all = function(a, b) {
                var c = 0;
                var d = true;
                w(a, function(a) {
                    a.done(e);
                });
                function e(e) {
                    d = d && e;
                    if (++c === a.length) {
                        b(d);
                    }
                }
            };
            function i(a) {
                this.setHost(a);
                var b = c();
                var f = function(a) {
                    e(a, 0, false);
                };
                this._doneCallbacks = [];
                this._tick = function(a) {
                    if (d()) {
                        f(a);
                    } else {
                        b(a);
                    }
                };
                this._state = 0;
            }
            i.prototype = {
                setHost: function(a) {
                    this.host = a || {};
                },
                done: function(a) {
                    if (this._state === h) {
                        a();
                    } else {
                        this._doneCallbacks.push(a);
                    }
                },
                progress: H,
                getPromise: function() {
                    if (!this.promise) {
                        var b = this;
                        this.promise = a(function(a, c) {
                            b.done(function(b) {
                                if (b === false) {
                                    c();
                                } else {
                                    a();
                                }
                            });
                        });
                    }
                    return this.promise;
                },
                then: function(a, b) {
                    return this.getPromise().then(a, b);
                },
                catch: function(a) {
                    return this.getPromise()["catch"](a);
                },
                finally: function(a) {
                    return this.getPromise()["finally"](a);
                },
                pause: function() {
                    if (this.host.pause) {
                        this.host.pause();
                    }
                },
                resume: function() {
                    if (this.host.resume) {
                        this.host.resume();
                    }
                },
                end: function() {
                    if (this.host.end) {
                        this.host.end();
                    }
                    this._resolve(true);
                },
                cancel: function() {
                    if (this.host.cancel) {
                        this.host.cancel();
                    }
                    this._resolve(false);
                },
                complete: function(a) {
                    var b = this;
                    if (b._state === f) {
                        b._state = g;
                        b._tick(function() {
                            b._resolve(a);
                        });
                    }
                },
                _resolve: function(a) {
                    if (this._state !== h) {
                        w(this._doneCallbacks, function(b) {
                            b(a);
                        });
                        this._doneCallbacks.length = 0;
                        this._state = h;
                    }
                }
            };
            return i;
        } ];
    };
    var Gc = function() {
        this.$get = [ "$$rAF", "$q", "$$AnimateRunner", function(a, b, c) {
            return function(b, d) {
                var e = d || {};
                if (!e.$$prepared) {
                    e = ka(e);
                }
                if (e.cleanupStyles) {
                    e.from = e.to = null;
                }
                if (e.from) {
                    b.css(e.from);
                    e.from = null;
                }
                var f, g = new c();
                return {
                    start: h,
                    end: h
                };
                function h() {
                    a(function() {
                        i();
                        if (!f) {
                            g.complete();
                        }
                        f = true;
                    });
                    return g;
                }
                function i() {
                    if (e.addClass) {
                        b.addClass(e.addClass);
                        e.addClass = null;
                    }
                    if (e.removeClass) {
                        b.removeClass(e.removeClass);
                        e.removeClass = null;
                    }
                    if (e.to) {
                        b.css(e.to);
                        e.to = null;
                    }
                }
            };
        } ];
    };
    function Hc(a, b, c, d) {
        var e = this, f = a.location, g = a.history, h = a.setTimeout, i = a.clearTimeout, j = {};
        e.isMock = false;
        var l = 0;
        var m = [];
        e.$$completeOutstandingRequest = n;
        e.$$incOutstandingRequestCount = function() {
            l++;
        };
        function n(a) {
            try {
                a.apply(null, pa(arguments, 1));
            } finally {
                l--;
                if (l === 0) {
                    while (m.length) {
                        try {
                            m.pop()();
                        } catch (a) {
                            c.error(a);
                        }
                    }
                }
            }
        }
        function o(a) {
            var b = a.indexOf("#");
            return b === -1 ? "" : a.substr(b);
        }
        e.notifyWhenNoOutstandingRequests = function(a) {
            if (l === 0) {
                a();
            } else {
                m.push(a);
            }
        };
        var p, q, r = f.href, s = b.find("base"), t = null, u = !d.history ? H : function a() {
            try {
                return g.state;
            } catch (a) {}
        };
        A();
        e.url = function(b, c, h) {
            if (L(h)) {
                h = null;
            }
            if (f !== a.location) f = a.location;
            if (g !== a.history) g = a.history;
            if (b) {
                var i = q === h;
                if (r === b && (!d.history || i)) {
                    return e;
                }
                var j = r && Jd(r) === Jd(b);
                r = b;
                q = h;
                if (d.history && (!j || !i)) {
                    g[c ? "replaceState" : "pushState"](h, "", b);
                    A();
                } else {
                    if (!j) {
                        t = b;
                    }
                    if (c) {
                        f.replace(b);
                    } else if (!j) {
                        f.href = b;
                    } else {
                        f.hash = o(b);
                    }
                    if (f.href !== b) {
                        t = b;
                    }
                }
                if (t) {
                    t = b;
                }
                return e;
            } else {
                return t || f.href.replace(/%27/g, "'");
            }
        };
        e.state = function() {
            return p;
        };
        var v = [], x = false;
        function y() {
            t = null;
            B();
        }
        var z = null;
        function A() {
            p = u();
            p = L(p) ? null : p;
            if (la(p, z)) {
                p = z;
            }
            z = p;
            q = p;
        }
        function B() {
            var a = q;
            A();
            if (r === e.url() && a === p) {
                return;
            }
            r = e.url();
            q = p;
            w(v, function(a) {
                a(e.url(), p);
            });
        }
        e.onUrlChange = function(b) {
            if (!x) {
                if (d.history) k(a).on("popstate", y);
                k(a).on("hashchange", y);
                x = true;
            }
            v.push(b);
            return b;
        };
        e.$$applicationDestroyed = function() {
            k(a).off("hashchange popstate", y);
        };
        e.$$checkUrlChange = B;
        e.baseHref = function() {
            var a = s.attr("href");
            return a ? a.replace(/^(https?:)?\/\/[^\/]*/, "") : "";
        };
        e.defer = function(a, b) {
            var c;
            l++;
            c = h(function() {
                delete j[c];
                n(a);
            }, b || 0);
            j[c] = true;
            return c;
        };
        e.defer.cancel = function(a) {
            if (j[a]) {
                delete j[a];
                i(a);
                n(H);
                return true;
            }
            return false;
        };
    }
    function Ic() {
        this.$get = [ "$window", "$log", "$sniffer", "$document", function(a, b, c, d) {
            return new Hc(a, d, b, c);
        } ];
    }
    function Jc() {
        this.$get = function() {
            var a = {};
            function c(c, d) {
                if (c in a) {
                    throw b("$cacheFactory")("iid", "CacheId '{0}' is already taken!", c);
                }
                var e = 0, f = C({}, d, {
                    id: c
                }), g = Va(), h = d && d.capacity || Number.MAX_VALUE, i = Va(), j = null, k = null;
                return a[c] = {
                    put: function(a, b) {
                        if (L(b)) return;
                        if (h < Number.MAX_VALUE) {
                            var c = i[a] || (i[a] = {
                                key: a
                            });
                            l(c);
                        }
                        if (!(a in g)) e++;
                        g[a] = b;
                        if (e > h) {
                            this.remove(k.key);
                        }
                        return b;
                    },
                    get: function(a) {
                        if (h < Number.MAX_VALUE) {
                            var b = i[a];
                            if (!b) return;
                            l(b);
                        }
                        return g[a];
                    },
                    remove: function(a) {
                        if (h < Number.MAX_VALUE) {
                            var b = i[a];
                            if (!b) return;
                            if (b === j) j = b.p;
                            if (b === k) k = b.n;
                            m(b.n, b.p);
                            delete i[a];
                        }
                        if (!(a in g)) return;
                        delete g[a];
                        e--;
                    },
                    removeAll: function() {
                        g = Va();
                        e = 0;
                        i = Va();
                        j = k = null;
                    },
                    destroy: function() {
                        g = null;
                        f = null;
                        i = null;
                        delete a[c];
                    },
                    info: function() {
                        return C({}, f, {
                            size: e
                        });
                    }
                };
                function l(a) {
                    if (a !== j) {
                        if (!k) {
                            k = a;
                        } else if (k === a) {
                            k = a.n;
                        }
                        m(a.n, a.p);
                        m(a, j);
                        j = a;
                        j.n = null;
                    }
                }
                function m(a, b) {
                    if (a !== b) {
                        if (a) a.p = b;
                        if (b) b.n = a;
                    }
                }
            }
            c.info = function() {
                var b = {};
                w(a, function(a, c) {
                    b[c] = a.info();
                });
                return b;
            };
            c.get = function(b) {
                return a[b];
            };
            return c;
        };
    }
    function Kc() {
        this.$get = [ "$cacheFactory", function(a) {
            return a("templates");
        } ];
    }
    var Lc = b("$compile");
    function Mc() {}
    var Nc = new Mc();
    Oc.$inject = [ "$provide", "$$sanitizeUriProvider" ];
    function Oc(b, c) {
        var d = {}, g = "Directive", h = /^\s*directive:\s*([\w-]+)\s+(.*)$/, i = /(([\w-]+)(?::([^;]+))?;?)/, l = ga("ngSrc,ngSrcset,src,srcset"), m = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/;
        var n = /^(on[a-z]+|formaction)$/;
        var o = Va();
        function q(a, b, c) {
            var d = /^\s*([@&<]|=(\*?))(\??)\s*([\w$]*)\s*$/;
            var e = Va();
            w(a, function(a, f) {
                if (a in o) {
                    e[f] = o[a];
                    return;
                }
                var g = a.match(d);
                if (!g) {
                    throw Lc("iscp", "Invalid {3} for directive '{0}'." + " Definition: {... {1}: '{2}' ...}", b, f, a, c ? "controller bindings definition" : "isolate scope definition");
                }
                e[f] = {
                    mode: g[1][0],
                    collection: g[2] === "*",
                    optional: g[3] === "?",
                    attrName: g[4] || f
                };
                if (g[4]) {
                    o[a] = e[f];
                }
            });
            return e;
        }
        function r(a, b) {
            var c = {
                isolateScope: null,
                bindToController: null
            };
            if (N(a.scope)) {
                if (a.bindToController === true) {
                    c.bindToController = q(a.scope, b, true);
                    c.isolateScope = {};
                } else {
                    c.isolateScope = q(a.scope, b, false);
                }
            }
            if (N(a.bindToController)) {
                c.bindToController = q(a.bindToController, b, true);
            }
            if (c.bindToController && !a.controller) {
                throw Lc("noctrl", "Cannot bind to controller without directive '{0}'s controller.", b);
            }
            return c;
        }
        function s(a) {
            var b = a.charAt(0);
            if (!b || b !== f(b)) {
                throw Lc("baddir", "Directive/Component name '{0}' is invalid. The first character must be a lowercase letter", a);
            }
            if (a !== a.trim()) {
                throw Lc("baddir", "Directive/Component name '{0}' is invalid. The name should not contain leading or trailing whitespaces", a);
            }
        }
        function t(a) {
            var b = a.require || a.controller && a.name;
            if (!S(b) && N(b)) {
                w(b, function(a, c) {
                    var d = a.match(m);
                    var e = a.substring(d[0].length);
                    if (!e) b[c] = d[0] + c;
                });
            }
            return b;
        }
        function u(a, b) {
            if (a && !(P(a) && /[EACM]/.test(a))) {
                throw Lc("badrestrict", "Restrict property '{0}' of directive '{1}' is invalid", a, b);
            }
            return a || "EA";
        }
        this.directive = function a(c, e) {
            Qa(c, "name");
            Sa(c, "directive");
            if (P(c)) {
                s(c);
                Qa(e, "directiveFactory");
                if (!d.hasOwnProperty(c)) {
                    d[c] = [];
                    b.factory(c + g, [ "$injector", "$exceptionHandler", function(a, b) {
                        var e = [];
                        w(d[c], function(d, f) {
                            try {
                                var g = a.invoke(d);
                                if (T(g)) {
                                    g = {
                                        compile: J(g)
                                    };
                                } else if (!g.compile && g.link) {
                                    g.compile = J(g.link);
                                }
                                g.priority = g.priority || 0;
                                g.index = f;
                                g.name = g.name || c;
                                g.require = t(g);
                                g.restrict = u(g.restrict, c);
                                g.$$moduleName = d.$$moduleName;
                                e.push(g);
                            } catch (a) {
                                b(a);
                            }
                        });
                        return e;
                    } ]);
                }
                d[c].push(e);
            } else {
                w(c, y(a));
            }
            return this;
        };
        this.component = function a(b, c) {
            var d = c.controller || function() {};
            function e(a) {
                function b(b) {
                    if (T(b) || S(b)) {
                        return function(c, d) {
                            return a.invoke(b, this, {
                                $element: c,
                                $attrs: d
                            });
                        };
                    } else {
                        return b;
                    }
                }
                var e = !c.template && !c.templateUrl ? "" : c.template;
                var f = {
                    controller: d,
                    controllerAs: Zc(c.controller) || c.controllerAs || "$ctrl",
                    template: b(e),
                    templateUrl: b(c.templateUrl),
                    transclude: c.transclude,
                    scope: {},
                    bindToController: c.bindings || {},
                    restrict: "E",
                    require: c.require
                };
                w(c, function(a, b) {
                    if (b.charAt(0) === "$") f[b] = a;
                });
                return f;
            }
            w(c, function(a, b) {
                if (b.charAt(0) === "$") {
                    e[b] = a;
                    if (T(d)) d[b] = a;
                }
            });
            e.$inject = [ "$injector" ];
            return this.directive(b, e);
        };
        this.aHrefSanitizationWhitelist = function(a) {
            if (M(a)) {
                c.aHrefSanitizationWhitelist(a);
                return this;
            } else {
                return c.aHrefSanitizationWhitelist();
            }
        };
        this.imgSrcSanitizationWhitelist = function(a) {
            if (M(a)) {
                c.imgSrcSanitizationWhitelist(a);
                return this;
            } else {
                return c.imgSrcSanitizationWhitelist();
            }
        };
        var v = true;
        this.debugInfoEnabled = function(a) {
            if (M(a)) {
                v = a;
                return this;
            }
            return v;
        };
        var x = false;
        this.preAssignBindingsEnabled = function(a) {
            if (M(a)) {
                x = a;
                return this;
            }
            return x;
        };
        var z = 10;
        this.onChangesTtl = function(a) {
            if (arguments.length) {
                z = a;
                return this;
            }
            return z;
        };
        var A = true;
        this.commentDirectivesEnabled = function(a) {
            if (arguments.length) {
                A = a;
                return this;
            }
            return A;
        };
        var B = true;
        this.cssClassDirectivesEnabled = function(a) {
            if (arguments.length) {
                B = a;
                return this;
            }
            return B;
        };
        this.$get = [ "$injector", "$interpolate", "$exceptionHandler", "$templateRequest", "$parse", "$controller", "$rootScope", "$sce", "$animate", "$$sanitizeUri", function(b, c, o, q, s, t, u, y, D, E) {
            var F = /^\w/;
            var J = a.document.createElement("div");
            var K = A;
            var O = B;
            var Q = z;
            var R;
            function U() {
                try {
                    if (!--Q) {
                        R = undefined;
                        throw Lc("infchng", "{0} $onChanges() iterations reached. Aborting!\n", z);
                    }
                    u.$apply(function() {
                        var a = [];
                        for (var b = 0, c = R.length; b < c; ++b) {
                            try {
                                R[b]();
                            } catch (b) {
                                a.push(b);
                            }
                        }
                        R = undefined;
                        if (a.length) {
                            throw a;
                        }
                    });
                } finally {
                    Q++;
                }
            }
            function V(a, b) {
                if (b) {
                    var c = Object.keys(b);
                    var d, e, f;
                    for (d = 0, e = c.length; d < e; d++) {
                        f = c[d];
                        this[f] = b[f];
                    }
                } else {
                    this.$attr = {};
                }
                this.$$element = a;
            }
            V.prototype = {
                $normalize: Sc,
                $addClass: function(a) {
                    if (a && a.length > 0) {
                        D.addClass(this.$$element, a);
                    }
                },
                $removeClass: function(a) {
                    if (a && a.length > 0) {
                        D.removeClass(this.$$element, a);
                    }
                },
                $updateClass: function(a, b) {
                    var c = Vc(a, b);
                    if (c && c.length) {
                        D.addClass(this.$$element, c);
                    }
                    var d = Vc(b, a);
                    if (d && d.length) {
                        D.removeClass(this.$$element, d);
                    }
                },
                $set: function(a, b, c, d) {
                    var e = this.$$element[0], f = Zb(e, a), g = $b(a), h = a, i;
                    if (f) {
                        this.$$element.prop(a, b);
                        d = f;
                    } else if (g) {
                        this[g] = b;
                        h = g;
                    }
                    this[a] = b;
                    if (d) {
                        this.$attr[a] = d;
                    } else {
                        d = this.$attr[a];
                        if (!d) {
                            this.$attr[a] = d = Na(a, "-");
                        }
                    }
                    i = ha(this.$$element);
                    if (i === "a" && (a === "href" || a === "xlinkHref") || i === "img" && a === "src") {
                        this[a] = b = E(b, a === "src");
                    } else if (i === "img" && a === "srcset" && M(b)) {
                        var j = "";
                        var k = da(b);
                        var l = /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/;
                        var m = /\s/.test(k) ? l : /(,)/;
                        var n = k.split(m);
                        var p = Math.floor(n.length / 2);
                        for (var q = 0; q < p; q++) {
                            var r = q * 2;
                            j += E(da(n[r]), true);
                            j += " " + da(n[r + 1]);
                        }
                        var s = da(n[q * 2]).split(/\s/);
                        j += E(da(s[0]), true);
                        if (s.length === 2) {
                            j += " " + da(s[1]);
                        }
                        this[a] = b = j;
                    }
                    if (c !== false) {
                        if (b === null || L(b)) {
                            this.$$element.removeAttr(d);
                        } else {
                            if (F.test(d)) {
                                this.$$element.attr(d, b);
                            } else {
                                X(this.$$element[0], d, b);
                            }
                        }
                    }
                    var t = this.$$observers;
                    if (t) {
                        w(t[h], function(a) {
                            try {
                                a(b);
                            } catch (a) {
                                o(a);
                            }
                        });
                    }
                },
                $observe: function(a, b) {
                    var c = this, d = c.$$observers || (c.$$observers = Va()), e = d[a] || (d[a] = []);
                    e.push(b);
                    u.$evalAsync(function() {
                        if (!e.$$inter && c.hasOwnProperty(a) && !L(c[a])) {
                            b(c[a]);
                        }
                    });
                    return function() {
                        ja(e, b);
                    };
                }
            };
            function X(a, b, c) {
                J.innerHTML = "<span " + b + ">";
                var d = J.firstChild.attributes;
                var e = d[0];
                d.removeNamedItem(e.name);
                e.value = c;
                a.attributes.setNamedItem(e);
            }
            function Y(a, b) {
                try {
                    a.addClass(b);
                } catch (a) {}
            }
            var Z = c.startSymbol(), _ = c.endSymbol(), aa = Z === "{{" && _ === "}}" ? I : function a(b) {
                return b.replace(/\{\{/g, Z).replace(/}}/g, _);
            }, ba = /^ngAttr[A-Z]/;
            var ca = /^(.+)Start$/;
            ea.$$addBindingInfo = v ? function a(b, c) {
                var d = b.data("$binding") || [];
                if (S(c)) {
                    d = d.concat(c);
                } else {
                    d.push(c);
                }
                b.data("$binding", d);
            } : H;
            ea.$$addBindingClass = v ? function a(b) {
                Y(b, "ng-binding");
            } : H;
            ea.$$addScopeInfo = v ? function a(b, c, d, e) {
                var f = d ? e ? "$isolateScopeNoTemplate" : "$isolateScope" : "$scope";
                b.data(f, c);
            } : H;
            ea.$$addScopeClass = v ? function a(b, c) {
                Y(b, c ? "ng-isolate-scope" : "ng-scope");
            } : H;
            ea.$$createComment = function(b, c) {
                var d = "";
                if (v) {
                    d = " " + (b || "") + ": ";
                    if (c) d += c + " ";
                }
                return a.document.createComment(d);
            };
            return ea;
            function ea(a, b, c, d, e) {
                if (!(a instanceof k)) {
                    a = k(a);
                }
                var f = ga(a, b, a, c, d, e);
                ea.$$addScopeClass(a);
                var g = null;
                return function b(c, d, h) {
                    if (!a) {
                        throw Lc("multilink", "This element has already been linked.");
                    }
                    Qa(c, "scope");
                    if (e && e.needsNewScope) {
                        c = c.$parent.$new();
                    }
                    h = h || {};
                    var i = h.parentBoundTranscludeFn, j = h.transcludeControllers, l = h.futureParentElement;
                    if (i && i.$$boundTransclude) {
                        i = i.$$boundTransclude;
                    }
                    if (!g) {
                        g = fa(l);
                    }
                    var m;
                    if (g !== "html") {
                        m = k(Fa(g, k("<div>").append(a).html()));
                    } else if (d) {
                        m = Vb.clone.call(a);
                    } else {
                        m = a;
                    }
                    if (j) {
                        for (var n in j) {
                            m.data("$" + n + "Controller", j[n].instance);
                        }
                    }
                    ea.$$addScopeInfo(m, c);
                    if (d) d(m, c);
                    if (f) f(c, m, m, i);
                    if (!d) {
                        a = f = null;
                    }
                    return m;
                };
            }
            function fa(a) {
                var b = a && a[0];
                if (!b) {
                    return "html";
                } else {
                    return ha(b) !== "foreignobject" && p.call(b).match(/SVG/) ? "svg" : "html";
                }
            }
            function ga(a, b, c, d, e, f) {
                var g = [], h = S(a) || a instanceof k, i, l, m, n, o, p, q;
                for (var r = 0; r < a.length; r++) {
                    i = new V();
                    if (j === 11) {
                        ia(a, r, h);
                    }
                    l = ma(a[r], [], i, r === 0 ? d : undefined, e);
                    m = l.length ? ta(l, a[r], i, b, c, null, [], [], f) : null;
                    if (m && m.scope) {
                        ea.$$addScopeClass(i.$$element);
                    }
                    o = m && m.terminal || !(n = a[r].childNodes) || !n.length ? null : ga(n, m ? (m.transcludeOnThisElement || !m.templateOnThisElement) && m.transclude : b);
                    if (m || o) {
                        g.push(r, m, o);
                        p = true;
                        q = q || m;
                    }
                    f = null;
                }
                return p ? s : null;
                function s(a, c, d, e) {
                    var f, h, i, j, l, m, n, o;
                    var p;
                    if (q) {
                        var r = c.length;
                        p = new Array(r);
                        for (l = 0; l < g.length; l += 3) {
                            n = g[l];
                            p[n] = c[n];
                        }
                    } else {
                        p = c;
                    }
                    for (l = 0, m = g.length; l < m; ) {
                        i = p[g[l++]];
                        f = g[l++];
                        h = g[l++];
                        if (f) {
                            if (f.scope) {
                                j = a.$new();
                                ea.$$addScopeInfo(k(i), j);
                            } else {
                                j = a;
                            }
                            if (f.transcludeOnThisElement) {
                                o = ka(a, f.transclude, e);
                            } else if (!f.templateOnThisElement && e) {
                                o = e;
                            } else if (!e && b) {
                                o = ka(a, b);
                            } else {
                                o = null;
                            }
                            f(h, j, i, d, o);
                        } else if (h) {
                            h(a, i.childNodes, undefined, e);
                        }
                    }
                }
            }
            function ia(a, b, c) {
                var d = a[b];
                var e = d.parentNode;
                var f;
                if (d.nodeType !== Za) {
                    return;
                }
                while (true) {
                    f = e ? d.nextSibling : a[b + 1];
                    if (!f || f.nodeType !== Za) {
                        break;
                    }
                    d.nodeValue = d.nodeValue + f.nodeValue;
                    if (f.parentNode) {
                        f.parentNode.removeChild(f);
                    }
                    if (c && f === a[b + 1]) {
                        a.splice(b + 1, 1);
                    }
                }
            }
            function ka(a, b, c) {
                function d(d, e, f, g, h) {
                    if (!d) {
                        d = a.$new(false, h);
                        d.$$transcluded = true;
                    }
                    return b(d, e, {
                        parentBoundTranscludeFn: c,
                        transcludeControllers: f,
                        futureParentElement: g
                    });
                }
                var e = d.$$slots = Va();
                for (var f in b.$$slots) {
                    if (b.$$slots[f]) {
                        e[f] = ka(a, b.$$slots[f], c);
                    } else {
                        e[f] = null;
                    }
                }
                return d;
            }
            function ma(a, b, c, d, e) {
                var f = a.nodeType, g = c.$attr, h, j, k;
                switch (f) {
                  case Xa:
                    j = ha(a);
                    xa(b, Sc(j), "E", d, e);
                    for (var l, m, n, o, p, q, r = a.attributes, s = 0, t = r && r.length; s < t; s++) {
                        var u = false;
                        var v = false;
                        l = r[s];
                        m = l.name;
                        p = l.value;
                        o = Sc(m);
                        q = ba.test(o);
                        if (q) {
                            m = m.replace(Qc, "").substr(8).replace(/_(.)/g, function(a, b) {
                                return b.toUpperCase();
                            });
                        }
                        var w = o.match(ca);
                        if (w && za(w[1])) {
                            u = m;
                            v = m.substr(0, m.length - 5) + "end";
                            m = m.substr(0, m.length - 6);
                        }
                        n = Sc(m.toLowerCase());
                        g[n] = m;
                        if (q || !c.hasOwnProperty(n)) {
                            c[n] = p;
                            if (Zb(a, n)) {
                                c[n] = true;
                            }
                        }
                        Ha(a, b, p, n, q);
                        xa(b, n, "A", d, e, u, v);
                    }
                    if (j === "input" && a.getAttribute("type") === "hidden") {
                        a.setAttribute("autocomplete", "off");
                    }
                    if (!O) break;
                    k = a.className;
                    if (N(k)) {
                        k = k.animVal;
                    }
                    if (P(k) && k !== "") {
                        while (h = i.exec(k)) {
                            n = Sc(h[2]);
                            if (xa(b, n, "C", d, e)) {
                                c[n] = da(h[3]);
                            }
                            k = k.substr(h.index + h[0].length);
                        }
                    }
                    break;

                  case Za:
                    Ea(b, a.nodeValue);
                    break;

                  case $a:
                    if (!K) break;
                    na(a, b, c, d, e);
                    break;
                }
                b.sort(Ca);
                return b;
            }
            function na(a, b, c, d, e) {
                try {
                    var f = h.exec(a.nodeValue);
                    if (f) {
                        var g = Sc(f[1]);
                        if (xa(b, g, "M", d, e)) {
                            c[g] = da(f[2]);
                        }
                    }
                } catch (a) {}
            }
            function oa(a, b, c) {
                var d = [];
                var e = 0;
                if (b && a.hasAttribute && a.hasAttribute(b)) {
                    do {
                        if (!a) {
                            throw Lc("uterdir", "Unterminated attribute, found '{0}' but no matching '{1}' found.", b, c);
                        }
                        if (a.nodeType === Xa) {
                            if (a.hasAttribute(b)) e++;
                            if (a.hasAttribute(c)) e--;
                        }
                        d.push(a);
                        a = a.nextSibling;
                    } while (e > 0);
                } else {
                    d.push(a);
                }
                return k(d);
            }
            function ra(a, b, c) {
                return function d(e, f, g, h, i) {
                    f = oa(f[0], b, c);
                    return a(e, f, g, h, i);
                };
            }
            function sa(a, b, c, d, e, f) {
                var g;
                if (a) {
                    return ea(b, c, d, e, f);
                }
                return function a() {
                    if (!g) {
                        g = ea(b, c, d, e, f);
                        b = c = f = null;
                    }
                    return g.apply(this, arguments);
                };
            }
            function ta(a, b, c, d, e, f, g, h, i) {
                i = i || {};
                var j = -Number.MAX_VALUE, l = i.newScopeDirective, m = i.controllerDirectives, n = i.newIsolateScopeDirective, p = i.templateDirective, q = i.nonTlbTranscludeDirective, r = false, s = false, t = i.hasElementTranscludeDirective, u = c.$$element = k(b), v, y, z, A = f, B = d, D, E = false, F = false, G;
                for (var H = 0, I = a.length; H < I; H++) {
                    v = a[H];
                    var J = v.$$start;
                    var K = v.$$end;
                    if (J) {
                        u = oa(b, J, K);
                    }
                    z = undefined;
                    if (j > v.priority) {
                        break;
                    }
                    G = v.scope;
                    if (G) {
                        if (!v.templateUrl) {
                            if (N(G)) {
                                Da("new/isolated scope", n || l, v, u);
                                n = v;
                            } else {
                                Da("new/isolated scope", n, v, u);
                            }
                        }
                        l = l || v;
                    }
                    y = v.name;
                    if (!E && (v.replace && (v.templateUrl || v.template) || v.transclude && !v.$$tlb)) {
                        var M;
                        for (var O = H + 1; M = a[O++]; ) {
                            if (M.transclude && !M.$$tlb || M.replace && (M.templateUrl || M.template)) {
                                F = true;
                                break;
                            }
                        }
                        E = true;
                    }
                    if (!v.templateUrl && v.controller) {
                        m = m || Va();
                        Da("'" + y + "' controller", m[y], v, u);
                        m[y] = v;
                    }
                    G = v.transclude;
                    if (G) {
                        r = true;
                        if (!v.$$tlb) {
                            Da("transclusion", q, v, u);
                            q = v;
                        }
                        if (G === "element") {
                            t = true;
                            j = v.priority;
                            z = u;
                            u = c.$$element = k(ea.$$createComment(y, c[y]));
                            b = u[0];
                            Ia(e, pa(z), b);
                            z[0].$$parentNode = z[0].parentNode;
                            B = sa(F, z, d, j, A && A.name, {
                                nonTlbTranscludeDirective: q
                            });
                        } else {
                            var P = Va();
                            if (!N(G)) {
                                z = k(Fb(b)).contents();
                            } else {
                                z = [];
                                var Q = Va();
                                var R = Va();
                                w(G, function(a, b) {
                                    var c = a.charAt(0) === "?";
                                    a = c ? a.substring(1) : a;
                                    Q[a] = b;
                                    P[b] = null;
                                    R[b] = c;
                                });
                                w(u.contents(), function(a) {
                                    var b = Q[Sc(ha(a))];
                                    if (b) {
                                        R[b] = true;
                                        P[b] = P[b] || [];
                                        P[b].push(a);
                                    } else {
                                        z.push(a);
                                    }
                                });
                                w(R, function(a, b) {
                                    if (!a) {
                                        throw Lc("reqslot", "Required transclusion slot `{0}` was not filled.", b);
                                    }
                                });
                                for (var U in P) {
                                    if (P[U]) {
                                        P[U] = sa(F, P[U], d);
                                    }
                                }
                            }
                            u.empty();
                            B = sa(F, z, d, undefined, undefined, {
                                needsNewScope: v.$$isolateScope || v.$$newScope
                            });
                            B.$$slots = P;
                        }
                    }
                    if (v.template) {
                        s = true;
                        Da("template", p, v, u);
                        p = v;
                        G = T(v.template) ? v.template(u, c) : v.template;
                        G = aa(G);
                        if (v.replace) {
                            A = v;
                            if (wb(G)) {
                                z = [];
                            } else {
                                z = Wc(Fa(v.templateNamespace, da(G)));
                            }
                            b = z[0];
                            if (z.length !== 1 || b.nodeType !== Xa) {
                                throw Lc("tplrt", "Template for directive '{0}' must have exactly one root element. {1}", y, "");
                            }
                            Ia(e, u, b);
                            var X = {
                                $attr: {}
                            };
                            var Y = ma(b, [], X);
                            var Z = a.splice(H + 1, a.length - (H + 1));
                            if (n || l) {
                                wa(Y, n, l);
                            }
                            a = a.concat(Y).concat(Z);
                            Aa(c, X);
                            I = a.length;
                        } else {
                            u.html(G);
                        }
                    }
                    if (v.templateUrl) {
                        s = true;
                        Da("template", p, v, u);
                        p = v;
                        if (v.replace) {
                            A = v;
                        }
                        ba = Ba(a.splice(H, a.length - H), u, c, e, r && B, g, h, {
                            controllerDirectives: m,
                            newScopeDirective: l !== v && l,
                            newIsolateScopeDirective: n,
                            templateDirective: p,
                            nonTlbTranscludeDirective: q
                        });
                        I = a.length;
                    } else if (v.compile) {
                        try {
                            D = v.compile(u, c, B);
                            var $ = v.$$originalDirective || v;
                            if (T(D)) {
                                _(null, qa($, D), J, K);
                            } else if (D) {
                                _(qa($, D.pre), qa($, D.post), J, K);
                            }
                        } catch (a) {
                            o(a, ya(u));
                        }
                    }
                    if (v.terminal) {
                        ba.terminal = true;
                        j = Math.max(j, v.priority);
                    }
                }
                ba.scope = l && l.scope === true;
                ba.transcludeOnThisElement = r;
                ba.templateOnThisElement = s;
                ba.transclude = B;
                i.hasElementTranscludeDirective = t;
                return ba;
                function _(a, b, c, d) {
                    if (a) {
                        if (c) a = ra(a, c, d);
                        a.require = v.require;
                        a.directiveName = y;
                        if (n === v || v.$$isolateScope) {
                            a = Ja(a, {
                                isolateScope: true
                            });
                        }
                        g.push(a);
                    }
                    if (b) {
                        if (c) b = ra(b, c, d);
                        b.require = v.require;
                        b.directiveName = y;
                        if (n === v || v.$$isolateScope) {
                            b = Ja(b, {
                                isolateScope: true
                            });
                        }
                        h.push(b);
                    }
                }
                function ba(a, d, e, f, i) {
                    var j, q, r, s, u, v, y, z, A, B;
                    if (b === e) {
                        A = c;
                        z = c.$$element;
                    } else {
                        z = k(e);
                        A = new V(z, c);
                    }
                    u = d;
                    if (n) {
                        s = d.$new(true);
                    } else if (l) {
                        u = d.$parent;
                    }
                    if (i) {
                        y = J;
                        y.$$boundTransclude = i;
                        y.isSlotFilled = function(a) {
                            return !!i.$$slots[a];
                        };
                    }
                    if (m) {
                        v = va(z, A, y, m, s, d, n);
                    }
                    if (n) {
                        ea.$$addScopeInfo(z, s, true, !(p && (p === n || p === n.$$originalDirective)));
                        ea.$$addScopeClass(z, true);
                        s.$$isolateBindings = n.$$isolateBindings;
                        B = La(d, A, s, s.$$isolateBindings, n);
                        if (B.removeWatches) {
                            s.$on("$destroy", B.removeWatches);
                        }
                    }
                    for (var D in v) {
                        var E = m[D];
                        var F = v[D];
                        var G = E.$$bindings.bindToController;
                        if (x) {
                            if (G) {
                                F.bindingInfo = La(u, A, F.instance, G, E);
                            } else {
                                F.bindingInfo = {};
                            }
                            var H = F();
                            if (H !== F.instance) {
                                F.instance = H;
                                z.data("$" + E.name + "Controller", H);
                                if (F.bindingInfo.removeWatches) {
                                    F.bindingInfo.removeWatches();
                                }
                                F.bindingInfo = La(u, A, F.instance, G, E);
                            }
                        } else {
                            F.instance = F();
                            z.data("$" + E.name + "Controller", F.instance);
                            F.bindingInfo = La(u, A, F.instance, G, E);
                        }
                    }
                    w(m, function(a, b) {
                        var c = a.require;
                        if (a.bindToController && !S(c) && N(c)) {
                            C(v[b].instance, ua(b, c, z, v));
                        }
                    });
                    w(v, function(a) {
                        var b = a.instance;
                        if (T(b.$onChanges)) {
                            try {
                                b.$onChanges(a.bindingInfo.initialChanges);
                            } catch (a) {
                                o(a);
                            }
                        }
                        if (T(b.$onInit)) {
                            try {
                                b.$onInit();
                            } catch (a) {
                                o(a);
                            }
                        }
                        if (T(b.$doCheck)) {
                            u.$watch(function() {
                                b.$doCheck();
                            });
                            b.$doCheck();
                        }
                        if (T(b.$onDestroy)) {
                            u.$on("$destroy", function a() {
                                b.$onDestroy();
                            });
                        }
                    });
                    for (j = 0, q = g.length; j < q; j++) {
                        r = g[j];
                        Ka(r, r.isolateScope ? s : d, z, A, r.require && ua(r.directiveName, r.require, z, v), y);
                    }
                    var I = d;
                    if (n && (n.template || n.templateUrl === null)) {
                        I = s;
                    }
                    if (a) {
                        a(I, e.childNodes, undefined, i);
                    }
                    for (j = h.length - 1; j >= 0; j--) {
                        r = h[j];
                        Ka(r, r.isolateScope ? s : d, z, A, r.require && ua(r.directiveName, r.require, z, v), y);
                    }
                    w(v, function(a) {
                        var b = a.instance;
                        if (T(b.$postLink)) {
                            b.$postLink();
                        }
                    });
                    function J(a, b, c, d) {
                        var e;
                        if (!W(a)) {
                            d = c;
                            c = b;
                            b = a;
                            a = undefined;
                        }
                        if (t) {
                            e = v;
                        }
                        if (!c) {
                            c = t ? z.parent() : z;
                        }
                        if (d) {
                            var f = i.$$slots[d];
                            if (f) {
                                return f(a, b, e, c, I);
                            } else if (L(f)) {
                                throw Lc("noslot", 'No parent directive that requires a transclusion with slot name "{0}". ' + "Element: {1}", d, ya(z));
                            }
                        } else {
                            return i(a, b, e, c, I);
                        }
                    }
                }
            }
            function ua(a, b, c, d) {
                var e;
                if (P(b)) {
                    var f = b.match(m);
                    var g = b.substring(f[0].length);
                    var h = f[1] || f[3];
                    var i = f[2] === "?";
                    if (h === "^^") {
                        c = c.parent();
                    } else {
                        e = d && d[g];
                        e = e && e.instance;
                    }
                    if (!e) {
                        var j = "$" + g + "Controller";
                        e = h ? c.inheritedData(j) : c.data(j);
                    }
                    if (!e && !i) {
                        throw Lc("ctreq", "Controller '{0}', required by directive '{1}', can't be found!", g, a);
                    }
                } else if (S(b)) {
                    e = [];
                    for (var k = 0, l = b.length; k < l; k++) {
                        e[k] = ua(a, b[k], c, d);
                    }
                } else if (N(b)) {
                    e = {};
                    w(b, function(b, f) {
                        e[f] = ua(a, b, c, d);
                    });
                }
                return e || null;
            }
            function va(a, b, c, d, e, f, g) {
                var h = Va();
                for (var i in d) {
                    var j = d[i];
                    var k = {
                        $scope: j === g || j.$$isolateScope ? e : f,
                        $element: a,
                        $attrs: b,
                        $transclude: c
                    };
                    var l = j.controller;
                    if (l === "@") {
                        l = b[j.name];
                    }
                    var m = t(l, k, true, j.controllerAs);
                    h[j.name] = m;
                    a.data("$" + j.name + "Controller", m.instance);
                }
                return h;
            }
            function wa(a, b, c) {
                for (var d = 0, e = a.length; d < e; d++) {
                    a[d] = G(a[d], {
                        $$isolateScope: b,
                        $$newScope: c
                    });
                }
            }
            function xa(a, c, e, f, h, i, j) {
                if (c === h) return null;
                var k = null;
                if (d.hasOwnProperty(c)) {
                    for (var l, m = b.get(c + g), n = 0, o = m.length; n < o; n++) {
                        l = m[n];
                        if ((L(f) || f > l.priority) && l.restrict.indexOf(e) !== -1) {
                            if (i) {
                                l = G(l, {
                                    $$start: i,
                                    $$end: j
                                });
                            }
                            if (!l.$$bindings) {
                                var p = l.$$bindings = r(l, l.name);
                                if (N(p.isolateScope)) {
                                    l.$$isolateBindings = p.isolateScope;
                                }
                            }
                            a.push(l);
                            k = l;
                        }
                    }
                }
                return k;
            }
            function za(a) {
                if (d.hasOwnProperty(a)) {
                    for (var c, e = b.get(a + g), f = 0, h = e.length; f < h; f++) {
                        c = e[f];
                        if (c.multiElement) {
                            return true;
                        }
                    }
                }
                return false;
            }
            function Aa(a, b) {
                var c = b.$attr, d = a.$attr;
                w(a, function(d, e) {
                    if (e.charAt(0) !== "$") {
                        if (b[e] && b[e] !== d) {
                            if (d.length) {
                                d += (e === "style" ? ";" : " ") + b[e];
                            } else {
                                d = b[e];
                            }
                        }
                        a.$set(e, d, true, c[e]);
                    }
                });
                w(b, function(b, e) {
                    if (!a.hasOwnProperty(e) && e.charAt(0) !== "$") {
                        a[e] = b;
                        if (e !== "class" && e !== "style") {
                            d[e] = c[e];
                        }
                    }
                });
            }
            function Ba(a, b, c, d, e, f, g, h) {
                var i = [], j, l, m = b[0], n = a.shift(), p = G(n, {
                    templateUrl: null,
                    transclude: null,
                    replace: null,
                    $$originalDirective: n
                }), r = T(n.templateUrl) ? n.templateUrl(b, c) : n.templateUrl, s = n.templateNamespace;
                b.empty();
                q(r).then(function(o) {
                    var q, t, u, v;
                    o = aa(o);
                    if (n.replace) {
                        if (wb(o)) {
                            u = [];
                        } else {
                            u = Wc(Fa(s, da(o)));
                        }
                        q = u[0];
                        if (u.length !== 1 || q.nodeType !== Xa) {
                            throw Lc("tplrt", "Template for directive '{0}' must have exactly one root element. {1}", n.name, r);
                        }
                        t = {
                            $attr: {}
                        };
                        Ia(d, b, q);
                        var x = ma(q, [], t);
                        if (N(n.scope)) {
                            wa(x, true);
                        }
                        a = x.concat(a);
                        Aa(c, t);
                    } else {
                        q = m;
                        b.html(o);
                    }
                    a.unshift(p);
                    j = ta(a, q, c, e, b, n, f, g, h);
                    w(d, function(a, c) {
                        if (a === q) {
                            d[c] = b[0];
                        }
                    });
                    l = ga(b[0].childNodes, e);
                    while (i.length) {
                        var y = i.shift(), z = i.shift(), A = i.shift(), B = i.shift(), C = b[0];
                        if (y.$$destroyed) continue;
                        if (z !== m) {
                            var D = z.className;
                            if (!(h.hasElementTranscludeDirective && n.replace)) {
                                C = Fb(q);
                            }
                            Ia(A, k(z), C);
                            Y(k(C), D);
                        }
                        if (j.transcludeOnThisElement) {
                            v = ka(y, j.transclude, B);
                        } else {
                            v = B;
                        }
                        j(l, y, C, d, v);
                    }
                    i = null;
                }).catch(function(a) {
                    if (a instanceof Error) {
                        o(a);
                    }
                });
                return function a(b, c, d, e, f) {
                    var g = f;
                    if (c.$$destroyed) return;
                    if (i) {
                        i.push(c, d, e, g);
                    } else {
                        if (j.transcludeOnThisElement) {
                            g = ka(c, j.transclude, f);
                        }
                        j(l, c, d, e, g);
                    }
                };
            }
            function Ca(a, b) {
                var c = b.priority - a.priority;
                if (c !== 0) return c;
                if (a.name !== b.name) return a.name < b.name ? -1 : 1;
                return a.index - b.index;
            }
            function Da(a, b, c, d) {
                function e(a) {
                    return a ? " (module: " + a + ")" : "";
                }
                if (b) {
                    throw Lc("multidir", "Multiple directives [{0}{1}, {2}{3}] asking for {4} on: {5}", b.name, e(b.$$moduleName), c.name, e(c.$$moduleName), a, ya(d));
                }
            }
            function Ea(a, b) {
                var d = c(b, true);
                if (d) {
                    a.push({
                        priority: 0,
                        compile: function a(b) {
                            var c = b.parent(), e = !!c.length;
                            if (e) ea.$$addBindingClass(c);
                            return function a(b, c) {
                                var f = c.parent();
                                if (!e) ea.$$addBindingClass(f);
                                ea.$$addBindingInfo(f, d.expressions);
                                b.$watch(d, function a(b) {
                                    c[0].nodeValue = b;
                                });
                            };
                        }
                    });
                }
            }
            function Fa(b, c) {
                b = f(b || "html");
                switch (b) {
                  case "svg":
                  case "math":
                    var d = a.document.createElement("div");
                    d.innerHTML = "<" + b + ">" + c + "</" + b + ">";
                    return d.childNodes[0].childNodes;

                  default:
                    return c;
                }
            }
            function Ga(a, b) {
                if (b === "srcdoc") {
                    return y.HTML;
                }
                var c = ha(a);
                if (b === "src" || b === "ngSrc") {
                    if ([ "img", "video", "audio", "source", "track" ].indexOf(c) === -1) {
                        return y.RESOURCE_URL;
                    }
                } else if (b === "xlinkHref" || c === "form" && b === "action" || c === "link" && b === "href") {
                    return y.RESOURCE_URL;
                }
            }
            function Ha(a, b, d, e, f) {
                var g = Ga(a, e);
                var h = !f;
                var i = l[e] || f;
                var j = c(d, h, g, i);
                if (!j) return;
                if (e === "multiple" && ha(a) === "select") {
                    throw Lc("selmulti", "Binding to the 'multiple' attribute is not supported. Element: {0}", ya(a));
                }
                if (n.test(e)) {
                    throw Lc("nodomevents", "Interpolations for HTML DOM event attributes are disallowed.  Please use the " + "ng- versions (such as ng-click instead of onclick) instead.");
                }
                b.push({
                    priority: 100,
                    compile: function() {
                        return {
                            pre: function a(b, f, h) {
                                var k = h.$$observers || (h.$$observers = Va());
                                var l = h[e];
                                if (l !== d) {
                                    j = l && c(l, true, g, i);
                                    d = l;
                                }
                                if (!j) return;
                                h[e] = j(b);
                                (k[e] || (k[e] = [])).$$inter = true;
                                (h.$$observers && h.$$observers[e].$$scope || b).$watch(j, function a(b, c) {
                                    if (e === "class" && b !== c) {
                                        h.$updateClass(b, c);
                                    } else {
                                        h.$set(e, b);
                                    }
                                });
                            }
                        };
                    }
                });
            }
            function Ia(b, c, d) {
                var e = c[0], f = c.length, g = e.parentNode, h, i;
                if (b) {
                    for (h = 0, i = b.length; h < i; h++) {
                        if (b[h] === e) {
                            b[h++] = d;
                            for (var j = h, l = j + f - 1, m = b.length; j < m; j++, l++) {
                                if (l < m) {
                                    b[j] = b[l];
                                } else {
                                    delete b[j];
                                }
                            }
                            b.length -= f - 1;
                            if (b.context === e) {
                                b.context = d;
                            }
                            break;
                        }
                    }
                }
                if (g) {
                    g.replaceChild(d, e);
                }
                var n = a.document.createDocumentFragment();
                for (h = 0; h < f; h++) {
                    n.appendChild(c[h]);
                }
                if (k.hasData(e)) {
                    k.data(d, k.data(e));
                    k(e).off("$destroy");
                }
                k.cleanData(n.querySelectorAll("*"));
                for (h = 1; h < f; h++) {
                    delete c[h];
                }
                c[0] = d;
                c.length = 1;
            }
            function Ja(a, b) {
                return C(function() {
                    return a.apply(null, arguments);
                }, a, b);
            }
            function Ka(a, b, c, d, e, f) {
                try {
                    a(b, c, d, e, f);
                } catch (a) {
                    o(a, ya(c));
                }
            }
            function La(a, b, d, f, g) {
                var h = [];
                var i = {};
                var j;
                w(f, function f(j, l) {
                    var m = j.attrName, n = j.optional, o = j.mode, p, q, r, t, u;
                    switch (o) {
                      case "@":
                        if (!n && !e.call(b, m)) {
                            d[l] = b[m] = undefined;
                        }
                        u = b.$observe(m, function(a) {
                            if (P(a) || $(a)) {
                                var b = d[l];
                                k(l, a, b);
                                d[l] = a;
                            }
                        });
                        b.$$observers[m].$$scope = a;
                        p = b[m];
                        if (P(p)) {
                            d[l] = c(p)(a);
                        } else if ($(p)) {
                            d[l] = p;
                        }
                        i[l] = new Pc(Nc, d[l]);
                        h.push(u);
                        break;

                      case "=":
                        if (!e.call(b, m)) {
                            if (n) break;
                            b[m] = undefined;
                        }
                        if (n && !b[m]) break;
                        q = s(b[m]);
                        if (q.literal) {
                            t = la;
                        } else {
                            t = function a(b, c) {
                                return b === c || b !== b && c !== c;
                            };
                        }
                        r = q.assign || function() {
                            p = d[l] = q(a);
                            throw Lc("nonassign", "Expression '{0}' in attribute '{1}' used with directive '{2}' is non-assignable!", b[m], m, g.name);
                        };
                        p = d[l] = q(a);
                        var v = function b(c) {
                            if (!t(c, d[l])) {
                                if (!t(c, p)) {
                                    d[l] = c;
                                } else {
                                    r(a, c = d[l]);
                                }
                            }
                            p = c;
                            return p;
                        };
                        v.$stateful = true;
                        if (j.collection) {
                            u = a.$watchCollection(b[m], v);
                        } else {
                            u = a.$watch(s(b[m], v), null, q.literal);
                        }
                        h.push(u);
                        break;

                      case "<":
                        if (!e.call(b, m)) {
                            if (n) break;
                            b[m] = undefined;
                        }
                        if (n && !b[m]) break;
                        q = s(b[m]);
                        var w = q.literal;
                        var x = d[l] = q(a);
                        i[l] = new Pc(Nc, d[l]);
                        u = a.$watch(q, function a(b, c) {
                            if (c === b) {
                                if (c === x || w && la(c, x)) {
                                    return;
                                }
                                c = x;
                            }
                            k(l, b, c);
                            d[l] = b;
                        }, w);
                        h.push(u);
                        break;

                      case "&":
                        q = b.hasOwnProperty(m) ? s(b[m]) : H;
                        if (q === H && n) break;
                        d[l] = function(b) {
                            return q(a, b);
                        };
                        break;
                    }
                });
                function k(b, c, e) {
                    if (T(d.$onChanges) && c !== e && (c === c || e === e)) {
                        if (!R) {
                            a.$$postDigest(U);
                            R = [];
                        }
                        if (!j) {
                            j = {};
                            R.push(l);
                        }
                        if (j[b]) {
                            e = j[b].previousValue;
                        }
                        j[b] = new Pc(e, c);
                    }
                }
                function l() {
                    d.$onChanges(j);
                    j = undefined;
                }
                return {
                    initialChanges: i,
                    removeWatches: h.length && function a() {
                        for (var b = 0, c = h.length; b < c; ++b) {
                            h[b]();
                        }
                    }
                };
            }
        } ];
    }
    function Pc(a, b) {
        this.previousValue = a;
        this.currentValue = b;
    }
    Pc.prototype.isFirstChange = function() {
        return this.previousValue === Nc;
    };
    var Qc = /^((?:x|data)[:\-_])/i;
    var Rc = /[:\-_]+(.)/g;
    function Sc(a) {
        return a.replace(Qc, "").replace(Rc, pb);
    }
    function Tc(a, b, c, d) {}
    function Uc(a, b, c, d, e) {}
    function Vc(a, b) {
        var c = "", d = a.split(/\s+/), e = b.split(/\s+/);
        a: for (var f = 0; f < d.length; f++) {
            var g = d[f];
            for (var h = 0; h < e.length; h++) {
                if (g === e[h]) continue a;
            }
            c += (c.length > 0 ? " " : "") + g;
        }
        return c;
    }
    function Wc(a) {
        a = k(a);
        var b = a.length;
        if (b <= 1) {
            return a;
        }
        while (b--) {
            var c = a[b];
            if (c.nodeType === $a || c.nodeType === Za && c.nodeValue.trim() === "") {
                n.call(a, b, 1);
            }
        }
        return a;
    }
    var Xc = b("$controller");
    var Yc = /^(\S+)(\s+as\s+([\w$]+))?$/;
    function Zc(a, b) {
        if (b && P(b)) return b;
        if (P(a)) {
            var c = Yc.exec(a);
            if (c) return c[3];
        }
    }
    function $c() {
        var a = {}, c = false;
        this.has = function(b) {
            return a.hasOwnProperty(b);
        };
        this.register = function(b, c) {
            Sa(b, "controller");
            if (N(b)) {
                C(a, b);
            } else {
                a[b] = c;
            }
        };
        this.allowGlobals = function() {
            c = true;
        };
        this.$get = [ "$injector", "$window", function(d, e) {
            return function b(g, h, i, j) {
                var k, l, m, n;
                i = i === true;
                if (j && P(j)) {
                    n = j;
                }
                if (P(g)) {
                    l = g.match(Yc);
                    if (!l) {
                        throw Xc("ctrlfmt", "Badly formed controller string '{0}'. " + "Must match `__name__ as __id__` or `__name__`.", g);
                    }
                    m = l[1];
                    n = n || l[3];
                    g = a.hasOwnProperty(m) ? a[m] : Ta(h.$scope, m, true) || (c ? Ta(e, m, true) : undefined);
                    if (!g) {
                        throw Xc("ctrlreg", "The controller with the name '{0}' is not registered.", m);
                    }
                    Ra(g, m, true);
                }
                if (i) {
                    var o = (S(g) ? g[g.length - 1] : g).prototype;
                    k = Object.create(o || null);
                    if (n) {
                        f(h, n, k, m || g.name);
                    }
                    return C(function a() {
                        var b = d.invoke(g, k, h, m);
                        if (b !== k && (N(b) || T(b))) {
                            k = b;
                            if (n) {
                                f(h, n, k, m || g.name);
                            }
                        }
                        return k;
                    }, {
                        instance: k,
                        identifier: n
                    });
                }
                k = d.instantiate(g, h, m);
                if (n) {
                    f(h, n, k, m || g.name);
                }
                return k;
            };
            function f(a, c, d, e) {
                if (!(a && N(a.$scope))) {
                    throw b("$controller")("noscp", "Cannot export controller '{0}' as '{1}'! No $scope object provided via `locals`.", e, c);
                }
                a.$scope[c] = d;
            }
        } ];
    }
    function _c() {
        this.$get = [ "$window", function(a) {
            return k(a.document);
        } ];
    }
    function ad() {
        this.$get = [ "$document", "$rootScope", function(a, b) {
            var c = a[0];
            var d = c && c.hidden;
            a.on("visibilitychange", e);
            b.$on("$destroy", function() {
                a.off("visibilitychange", e);
            });
            function e() {
                d = c.hidden;
            }
            return function() {
                return d;
            };
        } ];
    }
    function bd() {
        this.$get = [ "$log", function(a) {
            return function(b, c) {
                a.error.apply(a, arguments);
            };
        } ];
    }
    var cd = function() {
        this.$get = [ "$document", function(a) {
            return function(b) {
                if (b) {
                    if (!b.nodeType && b instanceof k) {
                        b = b[0];
                    }
                } else {
                    b = a[0].body;
                }
                return b.offsetWidth + 1;
            };
        } ];
    };
    var dd = "application/json";
    var ed = {
        "Content-Type": dd + ";charset=utf-8"
    };
    var fd = /^\[|^\{(?!\{)/;
    var gd = {
        "[": /]$/,
        "{": /}$/
    };
    var hd = /^\)]\}',?\n/;
    var id = b("$http");
    function jd(a) {
        if (N(a)) {
            return R(a) ? a.toISOString() : sa(a);
        }
        return a;
    }
    function kd() {
        this.$get = function() {
            return function a(b) {
                if (!b) return "";
                var c = [];
                x(b, function(a, b) {
                    if (a === null || L(a)) return;
                    if (S(a)) {
                        w(a, function(a) {
                            c.push(Da(b) + "=" + Da(jd(a)));
                        });
                    } else {
                        c.push(Da(b) + "=" + Da(jd(a)));
                    }
                });
                return c.join("&");
            };
        };
    }
    function ld() {
        this.$get = function() {
            return function a(b) {
                if (!b) return "";
                var c = [];
                d(b, "", true);
                return c.join("&");
                function d(a, b, e) {
                    if (a === null || L(a)) return;
                    if (S(a)) {
                        w(a, function(a, c) {
                            d(a, b + "[" + (N(a) ? c : "") + "]");
                        });
                    } else if (N(a) && !R(a)) {
                        x(a, function(a, c) {
                            d(a, b + (e ? "" : "[") + c + (e ? "" : "]"));
                        });
                    } else {
                        c.push(Da(b) + "=" + Da(jd(a)));
                    }
                }
            };
        };
    }
    function md(a, b) {
        if (P(a)) {
            var c = a.replace(hd, "").trim();
            if (c) {
                var d = b("Content-Type");
                if (d && d.indexOf(dd) === 0 || nd(c)) {
                    a = ta(c);
                }
            }
        }
        return a;
    }
    function nd(a) {
        var b = a.match(fd);
        return b && gd[b[0]].test(a);
    }
    function od(a) {
        var b = Va(), c;
        function d(a, c) {
            if (a) {
                b[a] = b[a] ? b[a] + ", " + c : c;
            }
        }
        if (P(a)) {
            w(a.split("\n"), function(a) {
                c = a.indexOf(":");
                d(f(da(a.substr(0, c))), da(a.substr(c + 1)));
            });
        } else if (N(a)) {
            w(a, function(a, b) {
                d(f(b), da(a));
            });
        }
        return b;
    }
    function pd(a) {
        var b;
        return function(c) {
            if (!b) b = od(a);
            if (c) {
                var d = b[f(c)];
                if (d === undefined) {
                    d = null;
                }
                return d;
            }
            return b;
        };
    }
    function qd(a, b, c, d) {
        if (T(d)) {
            return d(a, b, c);
        }
        w(d, function(d) {
            a = d(a, b, c);
        });
        return a;
    }
    function rd(a) {
        return 200 <= a && a < 300;
    }
    function sd() {
        var a = this.defaults = {
            transformResponse: [ md ],
            transformRequest: [ function(a) {
                return N(a) && !X(a) && !Z(a) && !Y(a) ? sa(a) : a;
            } ],
            headers: {
                common: {
                    Accept: "application/json, text/plain, */*"
                },
                post: cb(ed),
                put: cb(ed),
                patch: cb(ed)
            },
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            paramSerializer: "$httpParamSerializer",
            jsonpCallbackParam: "callback"
        };
        var c = false;
        this.useApplyAsync = function(a) {
            if (M(a)) {
                c = !!a;
                return this;
            }
            return c;
        };
        var d = this.interceptors = [];
        this.$get = [ "$browser", "$httpBackend", "$$cookieReader", "$cacheFactory", "$rootScope", "$q", "$injector", "$sce", function(e, h, i, j, k, l, m, n) {
            var o = j("$http");
            a.paramSerializer = P(a.paramSerializer) ? m.get(a.paramSerializer) : a.paramSerializer;
            var p = [];
            w(d, function(a) {
                p.unshift(P(a) ? m.get(a) : m.invoke(a));
            });
            function q(c) {
                if (!N(c)) {
                    throw b("$http")("badreq", "Http request configuration must be an object.  Received: {0}", c);
                }
                if (!P(n.valueOf(c.url))) {
                    throw b("$http")("badreq", "Http request configuration url must be a string or a $sce trusted object.  Received: {0}", c.url);
                }
                var d = C({
                    method: "get",
                    transformRequest: a.transformRequest,
                    transformResponse: a.transformResponse,
                    paramSerializer: a.paramSerializer,
                    jsonpCallbackParam: a.jsonpCallbackParam
                }, c);
                d.headers = r(c);
                d.method = g(d.method);
                d.paramSerializer = P(d.paramSerializer) ? m.get(d.paramSerializer) : d.paramSerializer;
                e.$$incOutstandingRequestCount();
                var h = [];
                var i = [];
                var j = l.resolve(d);
                w(p, function(a) {
                    if (a.request || a.requestError) {
                        h.unshift(a.request, a.requestError);
                    }
                    if (a.response || a.responseError) {
                        i.push(a.response, a.responseError);
                    }
                });
                j = k(j, h);
                j = j.then(s);
                j = k(j, i);
                j = j.finally(o);
                return j;
                function k(a, b) {
                    for (var c = 0, d = b.length; c < d; ) {
                        var e = b[c++];
                        var f = b[c++];
                        a = a.then(e, f);
                    }
                    b.length = 0;
                    return a;
                }
                function o() {
                    e.$$completeOutstandingRequest(H);
                }
                function q(a, b) {
                    var c, d = {};
                    w(a, function(a, e) {
                        if (T(a)) {
                            c = a(b);
                            if (c != null) {
                                d[e] = c;
                            }
                        } else {
                            d[e] = a;
                        }
                    });
                    return d;
                }
                function r(b) {
                    var c = a.headers, d = C({}, b.headers), e, g, h;
                    c = C({}, c.common, c[f(b.method)]);
                    a: for (e in c) {
                        g = f(e);
                        for (h in d) {
                            if (f(h) === g) {
                                continue a;
                            }
                        }
                        d[e] = c[e];
                    }
                    return q(d, cb(b));
                }
                function s(b) {
                    var c = b.headers;
                    var d = qd(b.data, pd(c), undefined, b.transformRequest);
                    if (L(d)) {
                        w(c, function(a, b) {
                            if (f(b) === "content-type") {
                                delete c[b];
                            }
                        });
                    }
                    if (L(b.withCredentials) && !L(a.withCredentials)) {
                        b.withCredentials = a.withCredentials;
                    }
                    return t(b, d).then(u, u);
                }
                function u(a) {
                    var b = C({}, a);
                    b.data = qd(a.data, a.headers, a.status, d.transformResponse);
                    return rd(a.status) ? b : l.reject(b);
                }
            }
            q.pendingRequests = [];
            r("get", "delete", "head", "jsonp");
            s("post", "put", "patch");
            q.defaults = a;
            return q;
            function r(a) {
                w(arguments, function(a) {
                    q[a] = function(b, c) {
                        return q(C({}, c || {}, {
                            method: a,
                            url: b
                        }));
                    };
                });
            }
            function s(a) {
                w(arguments, function(a) {
                    q[a] = function(b, c, d) {
                        return q(C({}, d || {}, {
                            method: a,
                            url: b,
                            data: c
                        }));
                    };
                });
            }
            function t(b, d) {
                var e = l.defer(), g = e.promise, j, m, p = b.headers, r = f(b.method) === "jsonp", s = b.url;
                if (r) {
                    s = n.getTrustedResourceUrl(s);
                } else if (!P(s)) {
                    s = n.valueOf(s);
                }
                s = u(s, b.paramSerializer(b.params));
                if (r) {
                    s = v(s, b.jsonpCallbackParam);
                }
                q.pendingRequests.push(b);
                g.then(B, B);
                if ((b.cache || a.cache) && b.cache !== false && (b.method === "GET" || b.method === "JSONP")) {
                    j = N(b.cache) ? b.cache : N(a.cache) ? a.cache : o;
                }
                if (j) {
                    m = j.get(s);
                    if (M(m)) {
                        if (_(m)) {
                            m.then(A, A);
                        } else {
                            if (S(m)) {
                                z(m[1], m[0], cb(m[2]), m[3]);
                            } else {
                                z(m, 200, {}, "OK");
                            }
                        }
                    } else {
                        j.put(s, g);
                    }
                }
                if (L(m)) {
                    var t = Ke(b.url) ? i()[b.xsrfCookieName || a.xsrfCookieName] : undefined;
                    if (t) {
                        p[b.xsrfHeaderName || a.xsrfHeaderName] = t;
                    }
                    h(b.method, s, d, y, p, b.timeout, b.withCredentials, b.responseType, x(b.eventHandlers), x(b.uploadEventHandlers));
                }
                return g;
                function x(a) {
                    if (a) {
                        var b = {};
                        w(a, function(a, d) {
                            b[d] = function(b) {
                                if (c) {
                                    k.$applyAsync(d);
                                } else if (k.$$phase) {
                                    d();
                                } else {
                                    k.$apply(d);
                                }
                                function d() {
                                    a(b);
                                }
                            };
                        });
                        return b;
                    }
                }
                function y(a, b, d, e) {
                    if (j) {
                        if (rd(a)) {
                            j.put(s, [ a, b, od(d), e ]);
                        } else {
                            j.remove(s);
                        }
                    }
                    function f() {
                        z(b, a, d, e);
                    }
                    if (c) {
                        k.$applyAsync(f);
                    } else {
                        f();
                        if (!k.$$phase) k.$apply();
                    }
                }
                function z(a, c, d, f) {
                    c = c >= -1 ? c : 0;
                    (rd(c) ? e.resolve : e.reject)({
                        data: a,
                        status: c,
                        headers: pd(d),
                        config: b,
                        statusText: f
                    });
                }
                function A(a) {
                    z(a.data, a.status, cb(a.headers()), a.statusText);
                }
                function B() {
                    var a = q.pendingRequests.indexOf(b);
                    if (a !== -1) q.pendingRequests.splice(a, 1);
                }
            }
            function u(a, b) {
                if (b.length > 0) {
                    a += (a.indexOf("?") === -1 ? "?" : "&") + b;
                }
                return a;
            }
            function v(a, b) {
                if (/[&?][^=]+=JSON_CALLBACK/.test(a)) {
                    throw id("badjsonp", 'Illegal use of JSON_CALLBACK in url, "{0}"', a);
                }
                var c = new RegExp("[&?]" + b + "=");
                if (c.test(a)) {
                    throw id("badjsonp", 'Illegal use of callback param, "{0}", in url, "{1}"', b, a);
                }
                a += (a.indexOf("?") === -1 ? "?" : "&") + b + "=JSON_CALLBACK";
                return a;
            }
        } ];
    }
    function td() {
        this.$get = function() {
            return function b() {
                return new a.XMLHttpRequest();
            };
        };
    }
    function ud() {
        this.$get = [ "$browser", "$jsonpCallbacks", "$document", "$xhrFactory", function(a, b, c, d) {
            return vd(a, d, a.defer, b, c[0]);
        } ];
    }
    function vd(a, b, c, d, e) {
        return function(e, h, i, j, k, l, m, n, o, p) {
            h = h || a.url();
            if (f(e) === "jsonp") {
                var q = d.createCallback(h);
                var r = g(h, q, function(a, b) {
                    var c = a === 200 && d.getResponse(q);
                    x(j, a, c, "", b);
                    d.removeCallback(q);
                });
            } else {
                var s = b(e, h);
                s.open(e, h, true);
                w(k, function(a, b) {
                    if (M(a)) {
                        s.setRequestHeader(b, a);
                    }
                });
                s.onload = function a() {
                    var b = s.statusText || "";
                    var c = "response" in s ? s.response : s.responseText;
                    var d = s.status === 1223 ? 204 : s.status;
                    if (d === 0) {
                        d = c ? 200 : Je(h).protocol === "file" ? 404 : 0;
                    }
                    x(j, d, c, s.getAllResponseHeaders(), b);
                };
                var t = function() {
                    x(j, -1, null, null, "");
                };
                s.onerror = t;
                s.onabort = t;
                s.ontimeout = t;
                w(o, function(a, b) {
                    s.addEventListener(b, a);
                });
                w(p, function(a, b) {
                    s.upload.addEventListener(b, a);
                });
                if (m) {
                    s.withCredentials = true;
                }
                if (n) {
                    try {
                        s.responseType = n;
                    } catch (a) {
                        if (n !== "json") {
                            throw a;
                        }
                    }
                }
                s.send(L(i) ? null : i);
            }
            if (l > 0) {
                var u = c(v, l);
            } else if (_(l)) {
                l.then(v);
            }
            function v() {
                if (r) {
                    r();
                }
                if (s) {
                    s.abort();
                }
            }
            function x(a, b, d, e, f) {
                if (M(u)) {
                    c.cancel(u);
                }
                r = s = null;
                a(b, d, e, f);
            }
        };
        function g(a, b, c) {
            a = a.replace("JSON_CALLBACK", b);
            var f = e.createElement("script"), g = null;
            f.type = "text/javascript";
            f.src = a;
            f.async = true;
            g = function(a) {
                f.removeEventListener("load", g);
                f.removeEventListener("error", g);
                e.body.removeChild(f);
                f = null;
                var h = -1;
                var i = "unknown";
                if (a) {
                    if (a.type === "load" && !d.wasCalled(b)) {
                        a = {
                            type: "error"
                        };
                    }
                    i = a.type;
                    h = a.type === "error" ? 404 : 200;
                }
                if (c) {
                    c(h, i);
                }
            };
            f.addEventListener("load", g);
            f.addEventListener("error", g);
            e.body.appendChild(f);
            return g;
        }
    }
    var wd = s.$interpolateMinErr = b("$interpolate");
    wd.throwNoconcat = function(a) {
        throw wd("noconcat", "Error while interpolating: {0}\nStrict Contextual Escaping disallows " + "interpolations that concatenate multiple expressions when a trusted value is " + "required.  See http://docs.angularjs.org/api/ng.$sce", a);
    };
    wd.interr = function(a, b) {
        return wd("interr", "Can't interpolate: {0}\n{1}", a, b.toString());
    };
    function xd() {
        var a = "{{";
        var b = "}}";
        this.startSymbol = function(b) {
            if (b) {
                a = b;
                return this;
            } else {
                return a;
            }
        };
        this.endSymbol = function(a) {
            if (a) {
                b = a;
                return this;
            } else {
                return b;
            }
        };
        this.$get = [ "$parse", "$exceptionHandler", "$sce", function(c, d, e) {
            var f = a.length, g = b.length, h = new RegExp(a.replace(/./g, j), "g"), i = new RegExp(b.replace(/./g, j), "g");
            function j(a) {
                return "\\\\\\" + a;
            }
            function k(c) {
                return c.replace(h, a).replace(i, b);
            }
            function l(a, b, c, d) {
                var e = a.$watch(function a(b) {
                    e();
                    return d(b);
                }, b, c);
                return e;
            }
            function m(h, i, j, m) {
                if (!h.length || h.indexOf(a) === -1) {
                    var n;
                    if (!i) {
                        var o = k(h);
                        n = J(o);
                        n.exp = h;
                        n.expressions = [];
                        n.$$watchDelegate = l;
                    }
                    return n;
                }
                m = !!m;
                var p, q, r = 0, s = [], t = [], u = h.length, v, w = [], x = [];
                while (r < u) {
                    if ((p = h.indexOf(a, r)) !== -1 && (q = h.indexOf(b, p + f)) !== -1) {
                        if (r !== p) {
                            w.push(k(h.substring(r, p)));
                        }
                        v = h.substring(p + f, q);
                        s.push(v);
                        t.push(c(v, A));
                        r = q + g;
                        x.push(w.length);
                        w.push("");
                    } else {
                        if (r !== u) {
                            w.push(k(h.substring(r)));
                        }
                        break;
                    }
                }
                if (j && w.length > 1) {
                    wd.throwNoconcat(h);
                }
                if (!i || s.length) {
                    var y = function(a) {
                        for (var b = 0, c = s.length; b < c; b++) {
                            if (m && L(a[b])) return;
                            w[x[b]] = a[b];
                        }
                        return w.join("");
                    };
                    var z = function(a) {
                        return j ? e.getTrusted(j, a) : e.valueOf(a);
                    };
                    return C(function a(b) {
                        var c = 0;
                        var e = s.length;
                        var f = new Array(e);
                        try {
                            for (;c < e; c++) {
                                f[c] = t[c](b);
                            }
                            return y(f);
                        } catch (a) {
                            d(wd.interr(h, a));
                        }
                    }, {
                        exp: h,
                        expressions: s,
                        $$watchDelegate: function(a, b) {
                            var c;
                            return a.$watchGroup(t, function d(e, f) {
                                var g = y(e);
                                if (T(b)) {
                                    b.call(this, g, e !== f ? c : g, a);
                                }
                                c = g;
                            });
                        }
                    });
                }
                function A(a) {
                    try {
                        a = z(a);
                        return m && !M(a) ? a : Wa(a);
                    } catch (a) {
                        d(wd.interr(h, a));
                    }
                }
            }
            m.startSymbol = function() {
                return a;
            };
            m.endSymbol = function() {
                return b;
            };
            return m;
        } ];
    }
    function yd() {
        this.$get = [ "$rootScope", "$window", "$q", "$$q", "$browser", function(a, b, c, d, e) {
            var f = {};
            function g(g, h, i, j) {
                var k = arguments.length > 4, l = k ? pa(arguments, 4) : [], m = b.setInterval, n = b.clearInterval, o = 0, p = M(j) && !j, q = (p ? d : c).defer(), r = q.promise;
                i = M(i) ? i : 0;
                r.$$intervalId = m(function b() {
                    if (p) {
                        e.defer(s);
                    } else {
                        a.$evalAsync(s);
                    }
                    q.notify(o++);
                    if (i > 0 && o >= i) {
                        q.resolve(o);
                        n(r.$$intervalId);
                        delete f[r.$$intervalId];
                    }
                    if (!p) a.$apply();
                }, h);
                f[r.$$intervalId] = q;
                return r;
                function s() {
                    if (!k) {
                        g(o);
                    } else {
                        g.apply(null, l);
                    }
                }
            }
            g.cancel = function(a) {
                if (a && a.$$intervalId in f) {
                    f[a.$$intervalId].promise.catch(H);
                    f[a.$$intervalId].reject("canceled");
                    b.clearInterval(a.$$intervalId);
                    delete f[a.$$intervalId];
                    return true;
                }
                return false;
            };
            return g;
        } ];
    }
    var zd = function() {
        this.$get = [ "$window", function(a) {
            var b = a.angular.callbacks;
            var c = {};
            function d(a) {
                var b = function(a) {
                    b.data = a;
                    b.called = true;
                };
                b.id = a;
                return b;
            }
            return {
                createCallback: function(a) {
                    var e = "_" + (b.$$counter++).toString(36);
                    var f = "angular.callbacks." + e;
                    var g = d(e);
                    c[f] = b[e] = g;
                    return f;
                },
                wasCalled: function(a) {
                    return c[a].called;
                },
                getResponse: function(a) {
                    return c[a].data;
                },
                removeCallback: function(a) {
                    var d = c[a];
                    delete b[d.id];
                    delete c[a];
                }
            };
        } ];
    };
    var Ad = /^([^?#]*)(\?([^#]*))?(#(.*))?$/, Bd = {
        http: 80,
        https: 443,
        ftp: 21
    };
    var Cd = b("$location");
    function Dd(a) {
        var b = a.split("/"), c = b.length;
        while (c--) {
            b[c] = Ca(b[c]);
        }
        return b.join("/");
    }
    function Ed(a, b) {
        var c = Je(a);
        b.$$protocol = c.protocol;
        b.$$host = c.hostname;
        b.$$port = E(c.port) || Bd[c.protocol] || null;
    }
    var Fd = /^\s*[\\/]{2,}/;
    function Gd(a, b) {
        if (Fd.test(a)) {
            throw Cd("badpath", 'Invalid url "{0}".', a);
        }
        var c = a.charAt(0) !== "/";
        if (c) {
            a = "/" + a;
        }
        var d = Je(a);
        b.$$path = decodeURIComponent(c && d.pathname.charAt(0) === "/" ? d.pathname.substring(1) : d.pathname);
        b.$$search = Aa(d.search);
        b.$$hash = decodeURIComponent(d.hash);
        if (b.$$path && b.$$path.charAt(0) !== "/") {
            b.$$path = "/" + b.$$path;
        }
    }
    function Hd(a, b) {
        return a.slice(0, b.length) === b;
    }
    function Id(a, b) {
        if (Hd(b, a)) {
            return b.substr(a.length);
        }
    }
    function Jd(a) {
        var b = a.indexOf("#");
        return b === -1 ? a : a.substr(0, b);
    }
    function Kd(a) {
        return a.replace(/(#.+)|#$/, "$1");
    }
    function Ld(a) {
        return a.substr(0, Jd(a).lastIndexOf("/") + 1);
    }
    function Md(a) {
        return a.substring(0, a.indexOf("/", a.indexOf("//") + 2));
    }
    function Nd(a, b, c) {
        this.$$html5 = true;
        c = c || "";
        Ed(a, this);
        this.$$parse = function(a) {
            var c = Id(b, a);
            if (!P(c)) {
                throw Cd("ipthprfx", 'Invalid url "{0}", missing path prefix "{1}".', a, b);
            }
            Gd(c, this);
            if (!this.$$path) {
                this.$$path = "/";
            }
            this.$$compose();
        };
        this.$$compose = function() {
            var a = Ba(this.$$search), c = this.$$hash ? "#" + Ca(this.$$hash) : "";
            this.$$url = Dd(this.$$path) + (a ? "?" + a : "") + c;
            this.$$absUrl = b + this.$$url.substr(1);
            this.$$urlUpdatedByLocation = true;
        };
        this.$$parseLinkUrl = function(d, e) {
            if (e && e[0] === "#") {
                this.hash(e.slice(1));
                return true;
            }
            var f, g;
            var h;
            if (M(f = Id(a, d))) {
                g = f;
                if (c && M(f = Id(c, f))) {
                    h = b + (Id("/", f) || f);
                } else {
                    h = a + g;
                }
            } else if (M(f = Id(b, d))) {
                h = b + f;
            } else if (b === d + "/") {
                h = b;
            }
            if (h) {
                this.$$parse(h);
            }
            return !!h;
        };
    }
    function Od(a, b, c) {
        Ed(a, this);
        this.$$parse = function(d) {
            var e = Id(a, d) || Id(b, d);
            var f;
            if (!L(e) && e.charAt(0) === "#") {
                f = Id(c, e);
                if (L(f)) {
                    f = e;
                }
            } else {
                if (this.$$html5) {
                    f = e;
                } else {
                    f = "";
                    if (L(e)) {
                        a = d;
                        this.replace();
                    }
                }
            }
            Gd(f, this);
            this.$$path = g(this.$$path, f, a);
            this.$$compose();
            function g(a, b, c) {
                var d = /^\/[A-Z]:(\/.*)/;
                var e;
                if (Hd(b, c)) {
                    b = b.replace(c, "");
                }
                if (d.exec(b)) {
                    return a;
                }
                e = d.exec(a);
                return e ? e[1] : a;
            }
        };
        this.$$compose = function() {
            var b = Ba(this.$$search), d = this.$$hash ? "#" + Ca(this.$$hash) : "";
            this.$$url = Dd(this.$$path) + (b ? "?" + b : "") + d;
            this.$$absUrl = a + (this.$$url ? c + this.$$url : "");
            this.$$urlUpdatedByLocation = true;
        };
        this.$$parseLinkUrl = function(b, c) {
            if (Jd(a) === Jd(b)) {
                this.$$parse(b);
                return true;
            }
            return false;
        };
    }
    function Pd(a, b, c) {
        this.$$html5 = true;
        Od.apply(this, arguments);
        this.$$parseLinkUrl = function(d, e) {
            if (e && e[0] === "#") {
                this.hash(e.slice(1));
                return true;
            }
            var f;
            var g;
            if (a === Jd(d)) {
                f = d;
            } else if (g = Id(b, d)) {
                f = a + c + g;
            } else if (b === d + "/") {
                f = b;
            }
            if (f) {
                this.$$parse(f);
            }
            return !!f;
        };
        this.$$compose = function() {
            var b = Ba(this.$$search), d = this.$$hash ? "#" + Ca(this.$$hash) : "";
            this.$$url = Dd(this.$$path) + (b ? "?" + b : "") + d;
            this.$$absUrl = a + c + this.$$url;
            this.$$urlUpdatedByLocation = true;
        };
    }
    var Qd = {
        $$absUrl: "",
        $$html5: false,
        $$replace: false,
        absUrl: Rd("$$absUrl"),
        url: function(a) {
            if (L(a)) {
                return this.$$url;
            }
            var b = Ad.exec(a);
            if (b[1] || a === "") this.path(decodeURIComponent(b[1]));
            if (b[2] || b[1] || a === "") this.search(b[3] || "");
            this.hash(b[5] || "");
            return this;
        },
        protocol: Rd("$$protocol"),
        host: Rd("$$host"),
        port: Rd("$$port"),
        path: Sd("$$path", function(a) {
            a = a !== null ? a.toString() : "";
            return a.charAt(0) === "/" ? a : "/" + a;
        }),
        search: function(a, b) {
            switch (arguments.length) {
              case 0:
                return this.$$search;

              case 1:
                if (P(a) || Q(a)) {
                    a = a.toString();
                    this.$$search = Aa(a);
                } else if (N(a)) {
                    a = ka(a, {});
                    w(a, function(b, c) {
                        if (b == null) delete a[c];
                    });
                    this.$$search = a;
                } else {
                    throw Cd("isrcharg", "The first argument of the `$location#search()` call must be a string or an object.");
                }
                break;

              default:
                if (L(b) || b === null) {
                    delete this.$$search[a];
                } else {
                    this.$$search[a] = b;
                }
            }
            this.$$compose();
            return this;
        },
        hash: Sd("$$hash", function(a) {
            return a !== null ? a.toString() : "";
        }),
        replace: function() {
            this.$$replace = true;
            return this;
        }
    };
    w([ Pd, Od, Nd ], function(a) {
        a.prototype = Object.create(Qd);
        a.prototype.state = function(b) {
            if (!arguments.length) {
                return this.$$state;
            }
            if (a !== Nd || !this.$$html5) {
                throw Cd("nostate", "History API state support is available only " + "in HTML5 mode and only in browsers supporting HTML5 History API");
            }
            this.$$state = L(b) ? null : b;
            this.$$urlUpdatedByLocation = true;
            return this;
        };
    });
    function Rd(a) {
        return function() {
            return this[a];
        };
    }
    function Sd(a, b) {
        return function(c) {
            if (L(c)) {
                return this[a];
            }
            this[a] = b(c);
            this.$$compose();
            return this;
        };
    }
    function Td() {
        var a = "!", b = {
            enabled: false,
            requireBase: true,
            rewriteLinks: true
        };
        this.hashPrefix = function(b) {
            if (M(b)) {
                a = b;
                return this;
            } else {
                return a;
            }
        };
        this.html5Mode = function(a) {
            if ($(a)) {
                b.enabled = a;
                return this;
            } else if (N(a)) {
                if ($(a.enabled)) {
                    b.enabled = a.enabled;
                }
                if ($(a.requireBase)) {
                    b.requireBase = a.requireBase;
                }
                if ($(a.rewriteLinks) || P(a.rewriteLinks)) {
                    b.rewriteLinks = a.rewriteLinks;
                }
                return this;
            } else {
                return b;
            }
        };
        this.$get = [ "$rootScope", "$browser", "$sniffer", "$rootElement", "$window", function(c, d, e, f, g) {
            var h, i, j = d.baseHref(), l = d.url(), m;
            if (b.enabled) {
                if (!j && b.requireBase) {
                    throw Cd("nobase", "$location in HTML5 mode requires a <base> tag to be present!");
                }
                m = Md(l) + (j || "/");
                i = e.history ? Nd : Pd;
            } else {
                m = Jd(l);
                i = Od;
            }
            var n = Ld(m);
            h = new i(m, n, "#" + a);
            h.$$parseLinkUrl(l, l);
            h.$$state = d.state();
            var o = /^\s*(javascript|mailto):/i;
            function p(a, b, c) {
                var e = h.url();
                var f = h.$$state;
                try {
                    d.url(a, b, c);
                    h.$$state = d.state();
                } catch (a) {
                    h.url(e);
                    h.$$state = f;
                    throw a;
                }
            }
            f.on("click", function(a) {
                var e = b.rewriteLinks;
                if (!e || a.ctrlKey || a.metaKey || a.shiftKey || a.which === 2 || a.button === 2) return;
                var i = k(a.target);
                while (ha(i[0]) !== "a") {
                    if (i[0] === f[0] || !(i = i.parent())[0]) return;
                }
                if (P(e) && L(i.attr(e))) return;
                var j = i.prop("href");
                var l = i.attr("href") || i.attr("xlink:href");
                if (N(j) && j.toString() === "[object SVGAnimatedString]") {
                    j = Je(j.animVal).href;
                }
                if (o.test(j)) return;
                if (j && !i.attr("target") && !a.isDefaultPrevented()) {
                    if (h.$$parseLinkUrl(j, l)) {
                        a.preventDefault();
                        if (h.absUrl() !== d.url()) {
                            c.$apply();
                            g.angular["ff-684208-preventDefault"] = true;
                        }
                    }
                }
            });
            if (Kd(h.absUrl()) !== Kd(l)) {
                d.url(h.absUrl(), true);
            }
            var q = true;
            d.onUrlChange(function(a, b) {
                if (!Hd(a, n)) {
                    g.location.href = a;
                    return;
                }
                c.$evalAsync(function() {
                    var d = h.absUrl();
                    var e = h.$$state;
                    var f;
                    a = Kd(a);
                    h.$$parse(a);
                    h.$$state = b;
                    f = c.$broadcast("$locationChangeStart", a, d, b, e).defaultPrevented;
                    if (h.absUrl() !== a) return;
                    if (f) {
                        h.$$parse(d);
                        h.$$state = e;
                        p(d, false, e);
                    } else {
                        q = false;
                        r(d, e);
                    }
                });
                if (!c.$$phase) c.$digest();
            });
            c.$watch(function a() {
                if (q || h.$$urlUpdatedByLocation) {
                    h.$$urlUpdatedByLocation = false;
                    var b = Kd(d.url());
                    var f = Kd(h.absUrl());
                    var g = d.state();
                    var i = h.$$replace;
                    var j = b !== f || h.$$html5 && e.history && g !== h.$$state;
                    if (q || j) {
                        q = false;
                        c.$evalAsync(function() {
                            var a = h.absUrl();
                            var d = c.$broadcast("$locationChangeStart", a, b, h.$$state, g).defaultPrevented;
                            if (h.absUrl() !== a) return;
                            if (d) {
                                h.$$parse(b);
                                h.$$state = g;
                            } else {
                                if (j) {
                                    p(a, i, g === h.$$state ? null : h.$$state);
                                }
                                r(b, g);
                            }
                        });
                    }
                }
                h.$$replace = false;
            });
            return h;
            function r(a, b) {
                c.$broadcast("$locationChangeSuccess", h.absUrl(), a, h.$$state, b);
            }
        } ];
    }
    function Ud() {
        var a = true, b = this;
        this.debugEnabled = function(b) {
            if (M(b)) {
                a = b;
                return this;
            } else {
                return a;
            }
        };
        this.$get = [ "$window", function(c) {
            return {
                log: e("log"),
                info: e("info"),
                warn: e("warn"),
                error: e("error"),
                debug: function() {
                    var c = e("debug");
                    return function() {
                        if (a) {
                            c.apply(b, arguments);
                        }
                    };
                }()
            };
            function d(a) {
                if (a instanceof Error) {
                    if (a.stack) {
                        a = a.message && a.stack.indexOf(a.message) === -1 ? "Error: " + a.message + "\n" + a.stack : a.stack;
                    } else if (a.sourceURL) {
                        a = a.message + "\n" + a.sourceURL + ":" + a.line;
                    }
                }
                return a;
            }
            function e(a) {
                var b = c.console || {}, e = b[a] || b.log || H, f = false;
                try {
                    f = !!e.apply;
                } catch (a) {}
                if (f) {
                    return function() {
                        var a = [];
                        w(arguments, function(b) {
                            a.push(d(b));
                        });
                        return e.apply(b, a);
                    };
                }
                return function(a, b) {
                    e(a, b == null ? "" : b);
                };
            }
        } ];
    }
    var Vd = b("$parse");
    var Wd = {}.constructor.prototype.valueOf;
    function Xd(a) {
        return a + "";
    }
    var Yd = Va();
    w("+ - * / % === !== == != < > <= >= && || ! = |".split(" "), function(a) {
        Yd[a] = true;
    });
    var Zd = {
        n: "\n",
        f: "\f",
        r: "\r",
        t: "\t",
        v: "\v",
        "'": "'",
        '"': '"'
    };
    var $d = function a(b) {
        this.options = b;
    };
    $d.prototype = {
        constructor: $d,
        lex: function(a) {
            this.text = a;
            this.index = 0;
            this.tokens = [];
            while (this.index < this.text.length) {
                var b = this.text.charAt(this.index);
                if (b === '"' || b === "'") {
                    this.readString(b);
                } else if (this.isNumber(b) || b === "." && this.isNumber(this.peek())) {
                    this.readNumber();
                } else if (this.isIdentifierStart(this.peekMultichar())) {
                    this.readIdent();
                } else if (this.is(b, "(){}[].,;:?")) {
                    this.tokens.push({
                        index: this.index,
                        text: b
                    });
                    this.index++;
                } else if (this.isWhitespace(b)) {
                    this.index++;
                } else {
                    var c = b + this.peek();
                    var d = c + this.peek(2);
                    var e = Yd[b];
                    var f = Yd[c];
                    var g = Yd[d];
                    if (e || f || g) {
                        var h = g ? d : f ? c : b;
                        this.tokens.push({
                            index: this.index,
                            text: h,
                            operator: true
                        });
                        this.index += h.length;
                    } else {
                        this.throwError("Unexpected next character ", this.index, this.index + 1);
                    }
                }
            }
            return this.tokens;
        },
        is: function(a, b) {
            return b.indexOf(a) !== -1;
        },
        peek: function(a) {
            var b = a || 1;
            return this.index + b < this.text.length ? this.text.charAt(this.index + b) : false;
        },
        isNumber: function(a) {
            return "0" <= a && a <= "9" && typeof a === "string";
        },
        isWhitespace: function(a) {
            return a === " " || a === "\r" || a === "\t" || a === "\n" || a === "\v" || a === " ";
        },
        isIdentifierStart: function(a) {
            return this.options.isIdentifierStart ? this.options.isIdentifierStart(a, this.codePointAt(a)) : this.isValidIdentifierStart(a);
        },
        isValidIdentifierStart: function(a) {
            return "a" <= a && a <= "z" || "A" <= a && a <= "Z" || "_" === a || a === "$";
        },
        isIdentifierContinue: function(a) {
            return this.options.isIdentifierContinue ? this.options.isIdentifierContinue(a, this.codePointAt(a)) : this.isValidIdentifierContinue(a);
        },
        isValidIdentifierContinue: function(a, b) {
            return this.isValidIdentifierStart(a, b) || this.isNumber(a);
        },
        codePointAt: function(a) {
            if (a.length === 1) return a.charCodeAt(0);
            return (a.charCodeAt(0) << 10) + a.charCodeAt(1) - 56613888;
        },
        peekMultichar: function() {
            var a = this.text.charAt(this.index);
            var b = this.peek();
            if (!b) {
                return a;
            }
            var c = a.charCodeAt(0);
            var d = b.charCodeAt(0);
            if (c >= 55296 && c <= 56319 && d >= 56320 && d <= 57343) {
                return a + b;
            }
            return a;
        },
        isExpOperator: function(a) {
            return a === "-" || a === "+" || this.isNumber(a);
        },
        throwError: function(a, b, c) {
            c = c || this.index;
            var d = M(b) ? "s " + b + "-" + this.index + " [" + this.text.substring(b, c) + "]" : " " + c;
            throw Vd("lexerr", "Lexer Error: {0} at column{1} in expression [{2}].", a, d, this.text);
        },
        readNumber: function() {
            var a = "";
            var b = this.index;
            while (this.index < this.text.length) {
                var c = f(this.text.charAt(this.index));
                if (c === "." || this.isNumber(c)) {
                    a += c;
                } else {
                    var d = this.peek();
                    if (c === "e" && this.isExpOperator(d)) {
                        a += c;
                    } else if (this.isExpOperator(c) && d && this.isNumber(d) && a.charAt(a.length - 1) === "e") {
                        a += c;
                    } else if (this.isExpOperator(c) && (!d || !this.isNumber(d)) && a.charAt(a.length - 1) === "e") {
                        this.throwError("Invalid exponent");
                    } else {
                        break;
                    }
                }
                this.index++;
            }
            this.tokens.push({
                index: b,
                text: a,
                constant: true,
                value: Number(a)
            });
        },
        readIdent: function() {
            var a = this.index;
            this.index += this.peekMultichar().length;
            while (this.index < this.text.length) {
                var b = this.peekMultichar();
                if (!this.isIdentifierContinue(b)) {
                    break;
                }
                this.index += b.length;
            }
            this.tokens.push({
                index: a,
                text: this.text.slice(a, this.index),
                identifier: true
            });
        },
        readString: function(a) {
            var b = this.index;
            this.index++;
            var c = "";
            var d = a;
            var e = false;
            while (this.index < this.text.length) {
                var f = this.text.charAt(this.index);
                d += f;
                if (e) {
                    if (f === "u") {
                        var g = this.text.substring(this.index + 1, this.index + 5);
                        if (!g.match(/[\da-f]{4}/i)) {
                            this.throwError("Invalid unicode escape [\\u" + g + "]");
                        }
                        this.index += 4;
                        c += String.fromCharCode(parseInt(g, 16));
                    } else {
                        var h = Zd[f];
                        c = c + (h || f);
                    }
                    e = false;
                } else if (f === "\\") {
                    e = true;
                } else if (f === a) {
                    this.index++;
                    this.tokens.push({
                        index: b,
                        text: d,
                        constant: true,
                        value: c
                    });
                    return;
                } else {
                    c += f;
                }
                this.index++;
            }
            this.throwError("Unterminated quote", b);
        }
    };
    var _d = function a(b, c) {
        this.lexer = b;
        this.options = c;
    };
    _d.Program = "Program";
    _d.ExpressionStatement = "ExpressionStatement";
    _d.AssignmentExpression = "AssignmentExpression";
    _d.ConditionalExpression = "ConditionalExpression";
    _d.LogicalExpression = "LogicalExpression";
    _d.BinaryExpression = "BinaryExpression";
    _d.UnaryExpression = "UnaryExpression";
    _d.CallExpression = "CallExpression";
    _d.MemberExpression = "MemberExpression";
    _d.Identifier = "Identifier";
    _d.Literal = "Literal";
    _d.ArrayExpression = "ArrayExpression";
    _d.Property = "Property";
    _d.ObjectExpression = "ObjectExpression";
    _d.ThisExpression = "ThisExpression";
    _d.LocalsExpression = "LocalsExpression";
    _d.NGValueParameter = "NGValueParameter";
    _d.prototype = {
        ast: function(a) {
            this.text = a;
            this.tokens = this.lexer.lex(a);
            var b = this.program();
            if (this.tokens.length !== 0) {
                this.throwError("is an unexpected token", this.tokens[0]);
            }
            return b;
        },
        program: function() {
            var a = [];
            while (true) {
                if (this.tokens.length > 0 && !this.peek("}", ")", ";", "]")) a.push(this.expressionStatement());
                if (!this.expect(";")) {
                    return {
                        type: _d.Program,
                        body: a
                    };
                }
            }
        },
        expressionStatement: function() {
            return {
                type: _d.ExpressionStatement,
                expression: this.filterChain()
            };
        },
        filterChain: function() {
            var a = this.expression();
            while (this.expect("|")) {
                a = this.filter(a);
            }
            return a;
        },
        expression: function() {
            return this.assignment();
        },
        assignment: function() {
            var a = this.ternary();
            if (this.expect("=")) {
                if (!fe(a)) {
                    throw Vd("lval", "Trying to assign a value to a non l-value");
                }
                a = {
                    type: _d.AssignmentExpression,
                    left: a,
                    right: this.assignment(),
                    operator: "="
                };
            }
            return a;
        },
        ternary: function() {
            var a = this.logicalOR();
            var b;
            var c;
            if (this.expect("?")) {
                b = this.expression();
                if (this.consume(":")) {
                    c = this.expression();
                    return {
                        type: _d.ConditionalExpression,
                        test: a,
                        alternate: b,
                        consequent: c
                    };
                }
            }
            return a;
        },
        logicalOR: function() {
            var a = this.logicalAND();
            while (this.expect("||")) {
                a = {
                    type: _d.LogicalExpression,
                    operator: "||",
                    left: a,
                    right: this.logicalAND()
                };
            }
            return a;
        },
        logicalAND: function() {
            var a = this.equality();
            while (this.expect("&&")) {
                a = {
                    type: _d.LogicalExpression,
                    operator: "&&",
                    left: a,
                    right: this.equality()
                };
            }
            return a;
        },
        equality: function() {
            var a = this.relational();
            var b;
            while (b = this.expect("==", "!=", "===", "!==")) {
                a = {
                    type: _d.BinaryExpression,
                    operator: b.text,
                    left: a,
                    right: this.relational()
                };
            }
            return a;
        },
        relational: function() {
            var a = this.additive();
            var b;
            while (b = this.expect("<", ">", "<=", ">=")) {
                a = {
                    type: _d.BinaryExpression,
                    operator: b.text,
                    left: a,
                    right: this.additive()
                };
            }
            return a;
        },
        additive: function() {
            var a = this.multiplicative();
            var b;
            while (b = this.expect("+", "-")) {
                a = {
                    type: _d.BinaryExpression,
                    operator: b.text,
                    left: a,
                    right: this.multiplicative()
                };
            }
            return a;
        },
        multiplicative: function() {
            var a = this.unary();
            var b;
            while (b = this.expect("*", "/", "%")) {
                a = {
                    type: _d.BinaryExpression,
                    operator: b.text,
                    left: a,
                    right: this.unary()
                };
            }
            return a;
        },
        unary: function() {
            var a;
            if (a = this.expect("+", "-", "!")) {
                return {
                    type: _d.UnaryExpression,
                    operator: a.text,
                    prefix: true,
                    argument: this.unary()
                };
            } else {
                return this.primary();
            }
        },
        primary: function() {
            var a;
            if (this.expect("(")) {
                a = this.filterChain();
                this.consume(")");
            } else if (this.expect("[")) {
                a = this.arrayDeclaration();
            } else if (this.expect("{")) {
                a = this.object();
            } else if (this.selfReferential.hasOwnProperty(this.peek().text)) {
                a = ka(this.selfReferential[this.consume().text]);
            } else if (this.options.literals.hasOwnProperty(this.peek().text)) {
                a = {
                    type: _d.Literal,
                    value: this.options.literals[this.consume().text]
                };
            } else if (this.peek().identifier) {
                a = this.identifier();
            } else if (this.peek().constant) {
                a = this.constant();
            } else {
                this.throwError("not a primary expression", this.peek());
            }
            var b;
            while (b = this.expect("(", "[", ".")) {
                if (b.text === "(") {
                    a = {
                        type: _d.CallExpression,
                        callee: a,
                        arguments: this.parseArguments()
                    };
                    this.consume(")");
                } else if (b.text === "[") {
                    a = {
                        type: _d.MemberExpression,
                        object: a,
                        property: this.expression(),
                        computed: true
                    };
                    this.consume("]");
                } else if (b.text === ".") {
                    a = {
                        type: _d.MemberExpression,
                        object: a,
                        property: this.identifier(),
                        computed: false
                    };
                } else {
                    this.throwError("IMPOSSIBLE");
                }
            }
            return a;
        },
        filter: function(a) {
            var b = [ a ];
            var c = {
                type: _d.CallExpression,
                callee: this.identifier(),
                arguments: b,
                filter: true
            };
            while (this.expect(":")) {
                b.push(this.expression());
            }
            return c;
        },
        parseArguments: function() {
            var a = [];
            if (this.peekToken().text !== ")") {
                do {
                    a.push(this.filterChain());
                } while (this.expect(","));
            }
            return a;
        },
        identifier: function() {
            var a = this.consume();
            if (!a.identifier) {
                this.throwError("is not a valid identifier", a);
            }
            return {
                type: _d.Identifier,
                name: a.text
            };
        },
        constant: function() {
            return {
                type: _d.Literal,
                value: this.consume().value
            };
        },
        arrayDeclaration: function() {
            var a = [];
            if (this.peekToken().text !== "]") {
                do {
                    if (this.peek("]")) {
                        break;
                    }
                    a.push(this.expression());
                } while (this.expect(","));
            }
            this.consume("]");
            return {
                type: _d.ArrayExpression,
                elements: a
            };
        },
        object: function() {
            var a = [], b;
            if (this.peekToken().text !== "}") {
                do {
                    if (this.peek("}")) {
                        break;
                    }
                    b = {
                        type: _d.Property,
                        kind: "init"
                    };
                    if (this.peek().constant) {
                        b.key = this.constant();
                        b.computed = false;
                        this.consume(":");
                        b.value = this.expression();
                    } else if (this.peek().identifier) {
                        b.key = this.identifier();
                        b.computed = false;
                        if (this.peek(":")) {
                            this.consume(":");
                            b.value = this.expression();
                        } else {
                            b.value = b.key;
                        }
                    } else if (this.peek("[")) {
                        this.consume("[");
                        b.key = this.expression();
                        this.consume("]");
                        b.computed = true;
                        this.consume(":");
                        b.value = this.expression();
                    } else {
                        this.throwError("invalid key", this.peek());
                    }
                    a.push(b);
                } while (this.expect(","));
            }
            this.consume("}");
            return {
                type: _d.ObjectExpression,
                properties: a
            };
        },
        throwError: function(a, b) {
            throw Vd("syntax", "Syntax Error: Token '{0}' {1} at column {2} of the expression [{3}] starting at [{4}].", b.text, a, b.index + 1, this.text, this.text.substring(b.index));
        },
        consume: function(a) {
            if (this.tokens.length === 0) {
                throw Vd("ueoe", "Unexpected end of expression: {0}", this.text);
            }
            var b = this.expect(a);
            if (!b) {
                this.throwError("is unexpected, expecting [" + a + "]", this.peek());
            }
            return b;
        },
        peekToken: function() {
            if (this.tokens.length === 0) {
                throw Vd("ueoe", "Unexpected end of expression: {0}", this.text);
            }
            return this.tokens[0];
        },
        peek: function(a, b, c, d) {
            return this.peekAhead(0, a, b, c, d);
        },
        peekAhead: function(a, b, c, d, e) {
            if (this.tokens.length > a) {
                var f = this.tokens[a];
                var g = f.text;
                if (g === b || g === c || g === d || g === e || !b && !c && !d && !e) {
                    return f;
                }
            }
            return false;
        },
        expect: function(a, b, c, d) {
            var e = this.peek(a, b, c, d);
            if (e) {
                this.tokens.shift();
                return e;
            }
            return false;
        },
        selfReferential: {
            this: {
                type: _d.ThisExpression
            },
            $locals: {
                type: _d.LocalsExpression
            }
        }
    };
    function ae(a, b) {
        return typeof a !== "undefined" ? a : b;
    }
    function be(a, b) {
        if (typeof a === "undefined") return b;
        if (typeof b === "undefined") return a;
        return a + b;
    }
    function ce(a, b) {
        var c = a(b);
        return !c.$stateful;
    }
    function de(a, b) {
        var c;
        var d;
        var e;
        switch (a.type) {
          case _d.Program:
            c = true;
            w(a.body, function(a) {
                de(a.expression, b);
                c = c && a.expression.constant;
            });
            a.constant = c;
            break;

          case _d.Literal:
            a.constant = true;
            a.toWatch = [];
            break;

          case _d.UnaryExpression:
            de(a.argument, b);
            a.constant = a.argument.constant;
            a.toWatch = a.argument.toWatch;
            break;

          case _d.BinaryExpression:
            de(a.left, b);
            de(a.right, b);
            a.constant = a.left.constant && a.right.constant;
            a.toWatch = a.left.toWatch.concat(a.right.toWatch);
            break;

          case _d.LogicalExpression:
            de(a.left, b);
            de(a.right, b);
            a.constant = a.left.constant && a.right.constant;
            a.toWatch = a.constant ? [] : [ a ];
            break;

          case _d.ConditionalExpression:
            de(a.test, b);
            de(a.alternate, b);
            de(a.consequent, b);
            a.constant = a.test.constant && a.alternate.constant && a.consequent.constant;
            a.toWatch = a.constant ? [] : [ a ];
            break;

          case _d.Identifier:
            a.constant = false;
            a.toWatch = [ a ];
            break;

          case _d.MemberExpression:
            de(a.object, b);
            if (a.computed) {
                de(a.property, b);
            }
            a.constant = a.object.constant && (!a.computed || a.property.constant);
            a.toWatch = [ a ];
            break;

          case _d.CallExpression:
            e = a.filter ? ce(b, a.callee.name) : false;
            c = e;
            d = [];
            w(a.arguments, function(a) {
                de(a, b);
                c = c && a.constant;
                if (!a.constant) {
                    d.push.apply(d, a.toWatch);
                }
            });
            a.constant = c;
            a.toWatch = e ? d : [ a ];
            break;

          case _d.AssignmentExpression:
            de(a.left, b);
            de(a.right, b);
            a.constant = a.left.constant && a.right.constant;
            a.toWatch = [ a ];
            break;

          case _d.ArrayExpression:
            c = true;
            d = [];
            w(a.elements, function(a) {
                de(a, b);
                c = c && a.constant;
                if (!a.constant) {
                    d.push.apply(d, a.toWatch);
                }
            });
            a.constant = c;
            a.toWatch = d;
            break;

          case _d.ObjectExpression:
            c = true;
            d = [];
            w(a.properties, function(a) {
                de(a.value, b);
                c = c && a.value.constant && !a.computed;
                if (!a.value.constant) {
                    d.push.apply(d, a.value.toWatch);
                }
                if (a.computed) {
                    de(a.key, b);
                    if (!a.key.constant) {
                        d.push.apply(d, a.key.toWatch);
                    }
                }
            });
            a.constant = c;
            a.toWatch = d;
            break;

          case _d.ThisExpression:
            a.constant = false;
            a.toWatch = [];
            break;

          case _d.LocalsExpression:
            a.constant = false;
            a.toWatch = [];
            break;
        }
    }
    function ee(a) {
        if (a.length !== 1) return;
        var b = a[0].expression;
        var c = b.toWatch;
        if (c.length !== 1) return c;
        return c[0] !== b ? c : undefined;
    }
    function fe(a) {
        return a.type === _d.Identifier || a.type === _d.MemberExpression;
    }
    function ge(a) {
        if (a.body.length === 1 && fe(a.body[0].expression)) {
            return {
                type: _d.AssignmentExpression,
                left: a.body[0].expression,
                right: {
                    type: _d.NGValueParameter
                },
                operator: "="
            };
        }
    }
    function he(a) {
        return a.body.length === 0 || a.body.length === 1 && (a.body[0].expression.type === _d.Literal || a.body[0].expression.type === _d.ArrayExpression || a.body[0].expression.type === _d.ObjectExpression);
    }
    function ie(a) {
        return a.constant;
    }
    function je(a, b) {
        this.astBuilder = a;
        this.$filter = b;
    }
    je.prototype = {
        compile: function(a) {
            var b = this;
            var c = this.astBuilder.ast(a);
            this.state = {
                nextId: 0,
                filters: {},
                fn: {
                    vars: [],
                    body: [],
                    own: {}
                },
                assign: {
                    vars: [],
                    body: [],
                    own: {}
                },
                inputs: []
            };
            de(c, b.$filter);
            var d = "";
            var e;
            this.stage = "assign";
            if (e = ge(c)) {
                this.state.computing = "assign";
                var f = this.nextId();
                this.recurse(e, f);
                this.return_(f);
                d = "fn.assign=" + this.generateFunction("assign", "s,v,l");
            }
            var g = ee(c.body);
            b.stage = "inputs";
            w(g, function(a, c) {
                var d = "fn" + c;
                b.state[d] = {
                    vars: [],
                    body: [],
                    own: {}
                };
                b.state.computing = d;
                var e = b.nextId();
                b.recurse(a, e);
                b.return_(e);
                b.state.inputs.push(d);
                a.watchId = c;
            });
            this.state.computing = "fn";
            this.stage = "main";
            this.recurse(c);
            var h = '"' + this.USE + " " + this.STRICT + '";\n' + this.filterPrefix() + "var fn=" + this.generateFunction("fn", "s,l,a,i") + d + this.watchFns() + "return fn;";
            var i = new Function("$filter", "getStringValue", "ifDefined", "plus", h)(this.$filter, Xd, ae, be);
            this.state = this.stage = undefined;
            i.literal = he(c);
            i.constant = ie(c);
            return i;
        },
        USE: "use",
        STRICT: "strict",
        watchFns: function() {
            var a = [];
            var b = this.state.inputs;
            var c = this;
            w(b, function(b) {
                a.push("var " + b + "=" + c.generateFunction(b, "s"));
            });
            if (b.length) {
                a.push("fn.inputs=[" + b.join(",") + "];");
            }
            return a.join("");
        },
        generateFunction: function(a, b) {
            return "function(" + b + "){" + this.varsPrefix(a) + this.body(a) + "};";
        },
        filterPrefix: function() {
            var a = [];
            var b = this;
            w(this.state.filters, function(c, d) {
                a.push(c + "=$filter(" + b.escape(d) + ")");
            });
            if (a.length) return "var " + a.join(",") + ";";
            return "";
        },
        varsPrefix: function(a) {
            return this.state[a].vars.length ? "var " + this.state[a].vars.join(",") + ";" : "";
        },
        body: function(a) {
            return this.state[a].body.join("");
        },
        recurse: function(a, b, c, d, e, f) {
            var g, h, i = this, j, k, l;
            d = d || H;
            if (!f && M(a.watchId)) {
                b = b || this.nextId();
                this.if_("i", this.lazyAssign(b, this.computedMember("i", a.watchId)), this.lazyRecurse(a, b, c, d, e, true));
                return;
            }
            switch (a.type) {
              case _d.Program:
                w(a.body, function(b, c) {
                    i.recurse(b.expression, undefined, undefined, function(a) {
                        h = a;
                    });
                    if (c !== a.body.length - 1) {
                        i.current().body.push(h, ";");
                    } else {
                        i.return_(h);
                    }
                });
                break;

              case _d.Literal:
                k = this.escape(a.value);
                this.assign(b, k);
                d(b || k);
                break;

              case _d.UnaryExpression:
                this.recurse(a.argument, undefined, undefined, function(a) {
                    h = a;
                });
                k = a.operator + "(" + this.ifDefined(h, 0) + ")";
                this.assign(b, k);
                d(k);
                break;

              case _d.BinaryExpression:
                this.recurse(a.left, undefined, undefined, function(a) {
                    g = a;
                });
                this.recurse(a.right, undefined, undefined, function(a) {
                    h = a;
                });
                if (a.operator === "+") {
                    k = this.plus(g, h);
                } else if (a.operator === "-") {
                    k = this.ifDefined(g, 0) + a.operator + this.ifDefined(h, 0);
                } else {
                    k = "(" + g + ")" + a.operator + "(" + h + ")";
                }
                this.assign(b, k);
                d(k);
                break;

              case _d.LogicalExpression:
                b = b || this.nextId();
                i.recurse(a.left, b);
                i.if_(a.operator === "&&" ? b : i.not(b), i.lazyRecurse(a.right, b));
                d(b);
                break;

              case _d.ConditionalExpression:
                b = b || this.nextId();
                i.recurse(a.test, b);
                i.if_(b, i.lazyRecurse(a.alternate, b), i.lazyRecurse(a.consequent, b));
                d(b);
                break;

              case _d.Identifier:
                b = b || this.nextId();
                if (c) {
                    c.context = i.stage === "inputs" ? "s" : this.assign(this.nextId(), this.getHasOwnProperty("l", a.name) + "?l:s");
                    c.computed = false;
                    c.name = a.name;
                }
                i.if_(i.stage === "inputs" || i.not(i.getHasOwnProperty("l", a.name)), function() {
                    i.if_(i.stage === "inputs" || "s", function() {
                        if (e && e !== 1) {
                            i.if_(i.isNull(i.nonComputedMember("s", a.name)), i.lazyAssign(i.nonComputedMember("s", a.name), "{}"));
                        }
                        i.assign(b, i.nonComputedMember("s", a.name));
                    });
                }, b && i.lazyAssign(b, i.nonComputedMember("l", a.name)));
                d(b);
                break;

              case _d.MemberExpression:
                g = c && (c.context = this.nextId()) || this.nextId();
                b = b || this.nextId();
                i.recurse(a.object, g, undefined, function() {
                    i.if_(i.notNull(g), function() {
                        if (a.computed) {
                            h = i.nextId();
                            i.recurse(a.property, h);
                            i.getStringValue(h);
                            if (e && e !== 1) {
                                i.if_(i.not(i.computedMember(g, h)), i.lazyAssign(i.computedMember(g, h), "{}"));
                            }
                            k = i.computedMember(g, h);
                            i.assign(b, k);
                            if (c) {
                                c.computed = true;
                                c.name = h;
                            }
                        } else {
                            if (e && e !== 1) {
                                i.if_(i.isNull(i.nonComputedMember(g, a.property.name)), i.lazyAssign(i.nonComputedMember(g, a.property.name), "{}"));
                            }
                            k = i.nonComputedMember(g, a.property.name);
                            i.assign(b, k);
                            if (c) {
                                c.computed = false;
                                c.name = a.property.name;
                            }
                        }
                    }, function() {
                        i.assign(b, "undefined");
                    });
                    d(b);
                }, !!e);
                break;

              case _d.CallExpression:
                b = b || this.nextId();
                if (a.filter) {
                    h = i.filter(a.callee.name);
                    j = [];
                    w(a.arguments, function(a) {
                        var b = i.nextId();
                        i.recurse(a, b);
                        j.push(b);
                    });
                    k = h + "(" + j.join(",") + ")";
                    i.assign(b, k);
                    d(b);
                } else {
                    h = i.nextId();
                    g = {};
                    j = [];
                    i.recurse(a.callee, h, g, function() {
                        i.if_(i.notNull(h), function() {
                            w(a.arguments, function(b) {
                                i.recurse(b, a.constant ? undefined : i.nextId(), undefined, function(a) {
                                    j.push(a);
                                });
                            });
                            if (g.name) {
                                k = i.member(g.context, g.name, g.computed) + "(" + j.join(",") + ")";
                            } else {
                                k = h + "(" + j.join(",") + ")";
                            }
                            i.assign(b, k);
                        }, function() {
                            i.assign(b, "undefined");
                        });
                        d(b);
                    });
                }
                break;

              case _d.AssignmentExpression:
                h = this.nextId();
                g = {};
                this.recurse(a.left, undefined, g, function() {
                    i.if_(i.notNull(g.context), function() {
                        i.recurse(a.right, h);
                        k = i.member(g.context, g.name, g.computed) + a.operator + h;
                        i.assign(b, k);
                        d(b || k);
                    });
                }, 1);
                break;

              case _d.ArrayExpression:
                j = [];
                w(a.elements, function(b) {
                    i.recurse(b, a.constant ? undefined : i.nextId(), undefined, function(a) {
                        j.push(a);
                    });
                });
                k = "[" + j.join(",") + "]";
                this.assign(b, k);
                d(b || k);
                break;

              case _d.ObjectExpression:
                j = [];
                l = false;
                w(a.properties, function(a) {
                    if (a.computed) {
                        l = true;
                    }
                });
                if (l) {
                    b = b || this.nextId();
                    this.assign(b, "{}");
                    w(a.properties, function(a) {
                        if (a.computed) {
                            g = i.nextId();
                            i.recurse(a.key, g);
                        } else {
                            g = a.key.type === _d.Identifier ? a.key.name : "" + a.key.value;
                        }
                        h = i.nextId();
                        i.recurse(a.value, h);
                        i.assign(i.member(b, g, a.computed), h);
                    });
                } else {
                    w(a.properties, function(b) {
                        i.recurse(b.value, a.constant ? undefined : i.nextId(), undefined, function(a) {
                            j.push(i.escape(b.key.type === _d.Identifier ? b.key.name : "" + b.key.value) + ":" + a);
                        });
                    });
                    k = "{" + j.join(",") + "}";
                    this.assign(b, k);
                }
                d(b || k);
                break;

              case _d.ThisExpression:
                this.assign(b, "s");
                d(b || "s");
                break;

              case _d.LocalsExpression:
                this.assign(b, "l");
                d(b || "l");
                break;

              case _d.NGValueParameter:
                this.assign(b, "v");
                d(b || "v");
                break;
            }
        },
        getHasOwnProperty: function(a, b) {
            var c = a + "." + b;
            var d = this.current().own;
            if (!d.hasOwnProperty(c)) {
                d[c] = this.nextId(false, a + "&&(" + this.escape(b) + " in " + a + ")");
            }
            return d[c];
        },
        assign: function(a, b) {
            if (!a) return;
            this.current().body.push(a, "=", b, ";");
            return a;
        },
        filter: function(a) {
            if (!this.state.filters.hasOwnProperty(a)) {
                this.state.filters[a] = this.nextId(true);
            }
            return this.state.filters[a];
        },
        ifDefined: function(a, b) {
            return "ifDefined(" + a + "," + this.escape(b) + ")";
        },
        plus: function(a, b) {
            return "plus(" + a + "," + b + ")";
        },
        return_: function(a) {
            this.current().body.push("return ", a, ";");
        },
        if_: function(a, b, c) {
            if (a === true) {
                b();
            } else {
                var d = this.current().body;
                d.push("if(", a, "){");
                b();
                d.push("}");
                if (c) {
                    d.push("else{");
                    c();
                    d.push("}");
                }
            }
        },
        not: function(a) {
            return "!(" + a + ")";
        },
        isNull: function(a) {
            return a + "==null";
        },
        notNull: function(a) {
            return a + "!=null";
        },
        nonComputedMember: function(a, b) {
            var c = /^[$_a-zA-Z][$_a-zA-Z0-9]*$/;
            var d = /[^$_a-zA-Z0-9]/g;
            if (c.test(b)) {
                return a + "." + b;
            } else {
                return a + '["' + b.replace(d, this.stringEscapeFn) + '"]';
            }
        },
        computedMember: function(a, b) {
            return a + "[" + b + "]";
        },
        member: function(a, b, c) {
            if (c) return this.computedMember(a, b);
            return this.nonComputedMember(a, b);
        },
        getStringValue: function(a) {
            this.assign(a, "getStringValue(" + a + ")");
        },
        lazyRecurse: function(a, b, c, d, e, f) {
            var g = this;
            return function() {
                g.recurse(a, b, c, d, e, f);
            };
        },
        lazyAssign: function(a, b) {
            var c = this;
            return function() {
                c.assign(a, b);
            };
        },
        stringEscapeRegex: /[^ a-zA-Z0-9]/g,
        stringEscapeFn: function(a) {
            return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
        },
        escape: function(a) {
            if (P(a)) return "'" + a.replace(this.stringEscapeRegex, this.stringEscapeFn) + "'";
            if (Q(a)) return a.toString();
            if (a === true) return "true";
            if (a === false) return "false";
            if (a === null) return "null";
            if (typeof a === "undefined") return "undefined";
            throw Vd("esc", "IMPOSSIBLE");
        },
        nextId: function(a, b) {
            var c = "v" + this.state.nextId++;
            if (!a) {
                this.current().vars.push(c + (b ? "=" + b : ""));
            }
            return c;
        },
        current: function() {
            return this.state[this.state.computing];
        }
    };
    function ke(a, b) {
        this.astBuilder = a;
        this.$filter = b;
    }
    ke.prototype = {
        compile: function(a) {
            var b = this;
            var c = this.astBuilder.ast(a);
            de(c, b.$filter);
            var d;
            var e;
            if (d = ge(c)) {
                e = this.recurse(d);
            }
            var f = ee(c.body);
            var g;
            if (f) {
                g = [];
                w(f, function(a, c) {
                    var d = b.recurse(a);
                    a.input = d;
                    g.push(d);
                    a.watchId = c;
                });
            }
            var h = [];
            w(c.body, function(a) {
                h.push(b.recurse(a.expression));
            });
            var i = c.body.length === 0 ? H : c.body.length === 1 ? h[0] : function(a, b) {
                var c;
                w(h, function(d) {
                    c = d(a, b);
                });
                return c;
            };
            if (e) {
                i.assign = function(a, b, c) {
                    return e(a, c, b);
                };
            }
            if (g) {
                i.inputs = g;
            }
            i.literal = he(c);
            i.constant = ie(c);
            return i;
        },
        recurse: function(a, b, c) {
            var d, e, f = this, g;
            if (a.input) {
                return this.inputs(a.input, a.watchId);
            }
            switch (a.type) {
              case _d.Literal:
                return this.value(a.value, b);

              case _d.UnaryExpression:
                e = this.recurse(a.argument);
                return this["unary" + a.operator](e, b);

              case _d.BinaryExpression:
                d = this.recurse(a.left);
                e = this.recurse(a.right);
                return this["binary" + a.operator](d, e, b);

              case _d.LogicalExpression:
                d = this.recurse(a.left);
                e = this.recurse(a.right);
                return this["binary" + a.operator](d, e, b);

              case _d.ConditionalExpression:
                return this["ternary?:"](this.recurse(a.test), this.recurse(a.alternate), this.recurse(a.consequent), b);

              case _d.Identifier:
                return f.identifier(a.name, b, c);

              case _d.MemberExpression:
                d = this.recurse(a.object, false, !!c);
                if (!a.computed) {
                    e = a.property.name;
                }
                if (a.computed) e = this.recurse(a.property);
                return a.computed ? this.computedMember(d, e, b, c) : this.nonComputedMember(d, e, b, c);

              case _d.CallExpression:
                g = [];
                w(a.arguments, function(a) {
                    g.push(f.recurse(a));
                });
                if (a.filter) e = this.$filter(a.callee.name);
                if (!a.filter) e = this.recurse(a.callee, true);
                return a.filter ? function(a, c, d, f) {
                    var h = [];
                    for (var i = 0; i < g.length; ++i) {
                        h.push(g[i](a, c, d, f));
                    }
                    var j = e.apply(undefined, h, f);
                    return b ? {
                        context: undefined,
                        name: undefined,
                        value: j
                    } : j;
                } : function(a, c, d, f) {
                    var h = e(a, c, d, f);
                    var i;
                    if (h.value != null) {
                        var j = [];
                        for (var k = 0; k < g.length; ++k) {
                            j.push(g[k](a, c, d, f));
                        }
                        i = h.value.apply(h.context, j);
                    }
                    return b ? {
                        value: i
                    } : i;
                };

              case _d.AssignmentExpression:
                d = this.recurse(a.left, true, 1);
                e = this.recurse(a.right);
                return function(a, c, f, g) {
                    var h = d(a, c, f, g);
                    var i = e(a, c, f, g);
                    h.context[h.name] = i;
                    return b ? {
                        value: i
                    } : i;
                };

              case _d.ArrayExpression:
                g = [];
                w(a.elements, function(a) {
                    g.push(f.recurse(a));
                });
                return function(a, c, d, e) {
                    var f = [];
                    for (var h = 0; h < g.length; ++h) {
                        f.push(g[h](a, c, d, e));
                    }
                    return b ? {
                        value: f
                    } : f;
                };

              case _d.ObjectExpression:
                g = [];
                w(a.properties, function(a) {
                    if (a.computed) {
                        g.push({
                            key: f.recurse(a.key),
                            computed: true,
                            value: f.recurse(a.value)
                        });
                    } else {
                        g.push({
                            key: a.key.type === _d.Identifier ? a.key.name : "" + a.key.value,
                            computed: false,
                            value: f.recurse(a.value)
                        });
                    }
                });
                return function(a, c, d, e) {
                    var f = {};
                    for (var h = 0; h < g.length; ++h) {
                        if (g[h].computed) {
                            f[g[h].key(a, c, d, e)] = g[h].value(a, c, d, e);
                        } else {
                            f[g[h].key] = g[h].value(a, c, d, e);
                        }
                    }
                    return b ? {
                        value: f
                    } : f;
                };

              case _d.ThisExpression:
                return function(a) {
                    return b ? {
                        value: a
                    } : a;
                };

              case _d.LocalsExpression:
                return function(a, c) {
                    return b ? {
                        value: c
                    } : c;
                };

              case _d.NGValueParameter:
                return function(a, c, d) {
                    return b ? {
                        value: d
                    } : d;
                };
            }
        },
        "unary+": function(a, b) {
            return function(c, d, e, f) {
                var g = a(c, d, e, f);
                if (M(g)) {
                    g = +g;
                } else {
                    g = 0;
                }
                return b ? {
                    value: g
                } : g;
            };
        },
        "unary-": function(a, b) {
            return function(c, d, e, f) {
                var g = a(c, d, e, f);
                if (M(g)) {
                    g = -g;
                } else {
                    g = -0;
                }
                return b ? {
                    value: g
                } : g;
            };
        },
        "unary!": function(a, b) {
            return function(c, d, e, f) {
                var g = !a(c, d, e, f);
                return b ? {
                    value: g
                } : g;
            };
        },
        "binary+": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g);
                var i = b(d, e, f, g);
                var j = be(h, i);
                return c ? {
                    value: j
                } : j;
            };
        },
        "binary-": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g);
                var i = b(d, e, f, g);
                var j = (M(h) ? h : 0) - (M(i) ? i : 0);
                return c ? {
                    value: j
                } : j;
            };
        },
        "binary*": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) * b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "binary/": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) / b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "binary%": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) % b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "binary===": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) === b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "binary!==": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) !== b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "binary==": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) == b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "binary!=": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) != b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "binary<": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) < b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "binary>": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) > b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "binary<=": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) <= b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "binary>=": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) >= b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "binary&&": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) && b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "binary||": function(a, b, c) {
            return function(d, e, f, g) {
                var h = a(d, e, f, g) || b(d, e, f, g);
                return c ? {
                    value: h
                } : h;
            };
        },
        "ternary?:": function(a, b, c, d) {
            return function(e, f, g, h) {
                var i = a(e, f, g, h) ? b(e, f, g, h) : c(e, f, g, h);
                return d ? {
                    value: i
                } : i;
            };
        },
        value: function(a, b) {
            return function() {
                return b ? {
                    context: undefined,
                    name: undefined,
                    value: a
                } : a;
            };
        },
        identifier: function(a, b, c) {
            return function(d, e, f, g) {
                var h = e && a in e ? e : d;
                if (c && c !== 1 && h && h[a] == null) {
                    h[a] = {};
                }
                var i = h ? h[a] : undefined;
                if (b) {
                    return {
                        context: h,
                        name: a,
                        value: i
                    };
                } else {
                    return i;
                }
            };
        },
        computedMember: function(a, b, c, d) {
            return function(e, f, g, h) {
                var i = a(e, f, g, h);
                var j;
                var k;
                if (i != null) {
                    j = b(e, f, g, h);
                    j = Xd(j);
                    if (d && d !== 1) {
                        if (i && !i[j]) {
                            i[j] = {};
                        }
                    }
                    k = i[j];
                }
                if (c) {
                    return {
                        context: i,
                        name: j,
                        value: k
                    };
                } else {
                    return k;
                }
            };
        },
        nonComputedMember: function(a, b, c, d) {
            return function(e, f, g, h) {
                var i = a(e, f, g, h);
                if (d && d !== 1) {
                    if (i && i[b] == null) {
                        i[b] = {};
                    }
                }
                var j = i != null ? i[b] : undefined;
                if (c) {
                    return {
                        context: i,
                        name: b,
                        value: j
                    };
                } else {
                    return j;
                }
            };
        },
        inputs: function(a, b) {
            return function(c, d, e, f) {
                if (f) return f[b];
                return a(c, d, e);
            };
        }
    };
    var le = function a(b, c, d) {
        this.lexer = b;
        this.$filter = c;
        this.options = d;
        this.ast = new _d(b, d);
        this.astCompiler = d.csp ? new ke(this.ast, c) : new je(this.ast, c);
    };
    le.prototype = {
        constructor: le,
        parse: function(a) {
            return this.astCompiler.compile(a);
        }
    };
    function me(a) {
        return T(a.valueOf) ? a.valueOf() : Wd.call(a);
    }
    function ne() {
        var a = Va();
        var b = {
            true: true,
            false: false,
            null: null,
            undefined: undefined
        };
        var c, d;
        this.addLiteral = function(a, c) {
            b[a] = c;
        };
        this.setIdentifierFns = function(a, b) {
            c = a;
            d = b;
            return this;
        };
        this.$get = [ "$filter", function(e) {
            var f = ma().noUnsafeEval;
            var g = {
                csp: f,
                literals: ka(b),
                isIdentifierStart: T(c) && c,
                isIdentifierContinue: T(d) && d
            };
            return h;
            function h(b, c) {
                var d, f, h;
                switch (typeof b) {
                  case "string":
                    b = b.trim();
                    h = b;
                    d = a[h];
                    if (!d) {
                        if (b.charAt(0) === ":" && b.charAt(1) === ":") {
                            f = true;
                            b = b.substring(2);
                        }
                        var i = new $d(g);
                        var o = new le(i, e, g);
                        d = o.parse(b);
                        if (d.constant) {
                            d.$$watchDelegate = m;
                        } else if (f) {
                            d.$$watchDelegate = d.literal ? l : k;
                        } else if (d.inputs) {
                            d.$$watchDelegate = j;
                        }
                        a[h] = d;
                    }
                    return n(d, c);

                  case "function":
                    return n(b, c);

                  default:
                    return n(H, c);
                }
            }
            function i(a, b, c) {
                if (a == null || b == null) {
                    return a === b;
                }
                if (typeof a === "object" && !c) {
                    a = me(a);
                    if (typeof a === "object") {
                        return false;
                    }
                }
                return a === b || a !== a && b !== b;
            }
            function j(a, b, c, d, e) {
                var f = d.inputs;
                var g;
                if (f.length === 1) {
                    var h = i;
                    f = f[0];
                    return a.$watch(function a(b) {
                        var c = f(b);
                        if (!i(c, h, d.literal)) {
                            g = d(b, undefined, undefined, [ c ]);
                            h = c && me(c);
                        }
                        return g;
                    }, b, c, e);
                }
                var j = [];
                var k = [];
                for (var l = 0, m = f.length; l < m; l++) {
                    j[l] = i;
                    k[l] = null;
                }
                return a.$watch(function a(b) {
                    var c = false;
                    for (var e = 0, h = f.length; e < h; e++) {
                        var l = f[e](b);
                        if (c || (c = !i(l, j[e], d.literal))) {
                            k[e] = l;
                            j[e] = l && me(l);
                        }
                    }
                    if (c) {
                        g = d(b, undefined, undefined, k);
                    }
                    return g;
                }, b, c, e);
            }
            function k(a, b, c, d, e) {
                var f, g;
                if (d.inputs) {
                    f = j(a, i, c, d, e);
                } else {
                    f = a.$watch(h, i, c);
                }
                return f;
                function h(a) {
                    return d(a);
                }
                function i(a, c, d) {
                    g = a;
                    if (T(b)) {
                        b(a, c, d);
                    }
                    if (M(a)) {
                        d.$$postDigest(function() {
                            if (M(g)) {
                                f();
                            }
                        });
                    }
                }
            }
            function l(a, b, c, d) {
                var e, f;
                e = a.$watch(function a(b) {
                    return d(b);
                }, function a(c, d, h) {
                    f = c;
                    if (T(b)) {
                        b(c, d, h);
                    }
                    if (g(c)) {
                        h.$$postDigest(function() {
                            if (g(f)) e();
                        });
                    }
                }, c);
                return e;
                function g(a) {
                    var b = true;
                    w(a, function(a) {
                        if (!M(a)) b = false;
                    });
                    return b;
                }
            }
            function m(a, b, c, d) {
                var e = a.$watch(function a(b) {
                    e();
                    return d(b);
                }, b, c);
                return e;
            }
            function n(a, b) {
                if (!b) return a;
                var c = a.$$watchDelegate;
                var d = false;
                var e = c !== l && c !== k;
                var f = e ? function c(e, f, g, h) {
                    var i = d && h ? h[0] : a(e, f, g, h);
                    return b(i, e, f);
                } : function c(d, e, f, g) {
                    var h = a(d, e, f, g);
                    var i = b(h, d, e);
                    return M(h) ? i : h;
                };
                d = !a.inputs;
                if (a.$$watchDelegate && a.$$watchDelegate !== j) {
                    f.$$watchDelegate = a.$$watchDelegate;
                    f.inputs = a.inputs;
                } else if (!b.$stateful) {
                    f.$$watchDelegate = j;
                    f.inputs = a.inputs ? a.inputs : [ a ];
                }
                return f;
            }
        } ];
    }
    function oe() {
        var a = true;
        this.$get = [ "$rootScope", "$exceptionHandler", function(b, c) {
            return qe(function(a) {
                b.$evalAsync(a);
            }, c, a);
        } ];
        this.errorOnUnhandledRejections = function(b) {
            if (M(b)) {
                a = b;
                return this;
            } else {
                return a;
            }
        };
    }
    function pe() {
        var a = true;
        this.$get = [ "$browser", "$exceptionHandler", function(b, c) {
            return qe(function(a) {
                b.defer(a);
            }, c, a);
        } ];
        this.errorOnUnhandledRejections = function(b) {
            if (M(b)) {
                a = b;
                return this;
            } else {
                return a;
            }
        };
    }
    function qe(a, c, d) {
        var e = b("$q", TypeError);
        var f = 0;
        var g = [];
        function h() {
            return new i();
        }
        function i() {
            var a = this.promise = new j();
            this.resolve = function(b) {
                n(a, b);
            };
            this.reject = function(b) {
                p(a, b);
            };
            this.notify = function(b) {
                r(a, b);
            };
        }
        function j() {
            this.$$state = {
                status: 0
            };
        }
        C(j.prototype, {
            then: function(a, b, c) {
                if (L(a) && L(b) && L(c)) {
                    return this;
                }
                var d = new j();
                this.$$state.pending = this.$$state.pending || [];
                this.$$state.pending.push([ d, a, b, c ]);
                if (this.$$state.status > 0) m(this.$$state);
                return d;
            },
            catch: function(a) {
                return this.then(null, a);
            },
            finally: function(a, b) {
                return this.then(function(b) {
                    return t(b, v, a);
                }, function(b) {
                    return t(b, s, a);
                }, b);
            }
        });
        function k(b) {
            var c, e, g;
            g = b.pending;
            b.processScheduled = false;
            b.pending = undefined;
            try {
                for (var h = 0, i = g.length; h < i; ++h) {
                    b.pur = true;
                    e = g[h][0];
                    c = g[h][b.status];
                    try {
                        if (T(c)) {
                            n(e, c(b.value));
                        } else if (b.status === 1) {
                            n(e, b.value);
                        } else {
                            p(e, b.value);
                        }
                    } catch (a) {
                        p(e, a);
                    }
                }
            } finally {
                --f;
                if (d && f === 0) {
                    a(l);
                }
            }
        }
        function l() {
            while (!f && g.length) {
                var a = g.shift();
                if (!a.pur) {
                    a.pur = true;
                    var b = "Possibly unhandled rejection: " + eb(a.value);
                    if (a.value instanceof Error) {
                        c(a.value, b);
                    } else {
                        c(b);
                    }
                }
            }
        }
        function m(b) {
            if (d && !b.pending && b.status === 2 && !b.pur) {
                if (f === 0 && g.length === 0) {
                    a(l);
                }
                g.push(b);
            }
            if (b.processScheduled || !b.pending) return;
            b.processScheduled = true;
            ++f;
            a(function() {
                k(b);
            });
        }
        function n(a, b) {
            if (a.$$state.status) return;
            if (b === a) {
                q(a, e("qcycle", "Expected promise to be resolved with value other than itself '{0}'", b));
            } else {
                o(a, b);
            }
        }
        function o(a, b) {
            var c;
            var d = false;
            try {
                if (N(b) || T(b)) c = b.then;
                if (T(c)) {
                    a.$$state.status = -1;
                    c.call(b, e, f, g);
                } else {
                    a.$$state.value = b;
                    a.$$state.status = 1;
                    m(a.$$state);
                }
            } catch (a) {
                f(a);
            }
            function e(b) {
                if (d) return;
                d = true;
                o(a, b);
            }
            function f(b) {
                if (d) return;
                d = true;
                q(a, b);
            }
            function g(b) {
                r(a, b);
            }
        }
        function p(a, b) {
            if (a.$$state.status) return;
            q(a, b);
        }
        function q(a, b) {
            a.$$state.value = b;
            a.$$state.status = 2;
            m(a.$$state);
        }
        function r(b, d) {
            var e = b.$$state.pending;
            if (b.$$state.status <= 0 && e && e.length) {
                a(function() {
                    var a, b;
                    for (var f = 0, g = e.length; f < g; f++) {
                        b = e[f][0];
                        a = e[f][3];
                        try {
                            r(b, T(a) ? a(d) : d);
                        } catch (a) {
                            c(a);
                        }
                    }
                });
            }
        }
        function s(a) {
            var b = new j();
            p(b, a);
            return b;
        }
        function t(a, b, c) {
            var d = null;
            try {
                if (T(c)) d = c();
            } catch (a) {
                return s(a);
            }
            if (_(d)) {
                return d.then(function() {
                    return b(a);
                }, s);
            } else {
                return b(a);
            }
        }
        function u(a, b, c, d) {
            var e = new j();
            n(e, a);
            return e.then(b, c, d);
        }
        var v = u;
        function x(a) {
            var b = new j(), c = 0, d = S(a) ? [] : {};
            w(a, function(a, e) {
                c++;
                u(a).then(function(a) {
                    d[e] = a;
                    if (!--c) n(b, d);
                }, function(a) {
                    p(b, a);
                });
            });
            if (c === 0) {
                n(b, d);
            }
            return b;
        }
        function y(a) {
            var b = h();
            w(a, function(a) {
                u(a).then(b.resolve, b.reject);
            });
            return b.promise;
        }
        function z(a) {
            if (!T(a)) {
                throw e("norslvr", "Expected resolverFn, got '{0}'", a);
            }
            var b = new j();
            function c(a) {
                n(b, a);
            }
            function d(a) {
                p(b, a);
            }
            a(c, d);
            return b;
        }
        z.prototype = j.prototype;
        z.defer = h;
        z.reject = s;
        z.when = u;
        z.resolve = v;
        z.all = x;
        z.race = y;
        return z;
    }
    function re() {
        this.$get = [ "$window", "$timeout", function(a, b) {
            var c = a.requestAnimationFrame || a.webkitRequestAnimationFrame;
            var d = a.cancelAnimationFrame || a.webkitCancelAnimationFrame || a.webkitCancelRequestAnimationFrame;
            var e = !!c;
            var f = e ? function(a) {
                var b = c(a);
                return function() {
                    d(b);
                };
            } : function(a) {
                var c = b(a, 16.66, false);
                return function() {
                    b.cancel(c);
                };
            };
            f.supported = e;
            return f;
        } ];
    }
    function se() {
        var a = 10;
        var c = b("$rootScope");
        var d = null;
        var f = null;
        this.digestTtl = function(b) {
            if (arguments.length) {
                a = b;
            }
            return a;
        };
        function g(a) {
            function b() {
                this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null;
                this.$$listeners = {};
                this.$$listenerCount = {};
                this.$$watchersCount = 0;
                this.$id = z();
                this.$$ChildScope = null;
            }
            b.prototype = a;
            return b;
        }
        this.$get = [ "$exceptionHandler", "$parse", "$browser", function(b, h, i) {
            function k(a) {
                a.currentScope.$$destroyed = true;
            }
            function l(a) {
                if (j === 9) {
                    if (a.$$childHead) {
                        l(a.$$childHead);
                    }
                    if (a.$$nextSibling) {
                        l(a.$$nextSibling);
                    }
                }
                a.$parent = a.$$nextSibling = a.$$prevSibling = a.$$childHead = a.$$childTail = a.$root = a.$$watchers = null;
            }
            function m() {
                this.$id = z();
                this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null;
                this.$root = this;
                this.$$destroyed = false;
                this.$$listeners = {};
                this.$$listenerCount = {};
                this.$$watchersCount = 0;
                this.$$isolateBindings = null;
            }
            m.prototype = {
                constructor: m,
                $new: function(a, b) {
                    var c;
                    b = b || this;
                    if (a) {
                        c = new m();
                        c.$root = this.$root;
                    } else {
                        if (!this.$$ChildScope) {
                            this.$$ChildScope = g(this);
                        }
                        c = new this.$$ChildScope();
                    }
                    c.$parent = b;
                    c.$$prevSibling = b.$$childTail;
                    if (b.$$childHead) {
                        b.$$childTail.$$nextSibling = c;
                        b.$$childTail = c;
                    } else {
                        b.$$childHead = b.$$childTail = c;
                    }
                    if (a || b !== this) c.$on("$destroy", k);
                    return c;
                },
                $watch: function(a, b, c, e) {
                    var f = h(a);
                    if (f.$$watchDelegate) {
                        return f.$$watchDelegate(this, b, c, f, a);
                    }
                    var g = this, i = g.$$watchers, j = {
                        fn: b,
                        last: y,
                        get: f,
                        exp: e || a,
                        eq: !!c
                    };
                    d = null;
                    if (!T(b)) {
                        j.fn = H;
                    }
                    if (!i) {
                        i = g.$$watchers = [];
                        i.$$digestWatchIndex = -1;
                    }
                    i.unshift(j);
                    i.$$digestWatchIndex++;
                    u(this, 1);
                    return function a() {
                        var b = ja(i, j);
                        if (b >= 0) {
                            u(g, -1);
                            if (b < i.$$digestWatchIndex) {
                                i.$$digestWatchIndex--;
                            }
                        }
                        d = null;
                    };
                },
                $watchGroup: function(a, b) {
                    var c = new Array(a.length);
                    var d = new Array(a.length);
                    var e = [];
                    var f = this;
                    var g = false;
                    var h = true;
                    if (!a.length) {
                        var i = true;
                        f.$evalAsync(function() {
                            if (i) b(d, d, f);
                        });
                        return function a() {
                            i = false;
                        };
                    }
                    if (a.length === 1) {
                        return this.$watch(a[0], function a(e, f, g) {
                            d[0] = e;
                            c[0] = f;
                            b(d, e === f ? d : c, g);
                        });
                    }
                    w(a, function(a, b) {
                        var h = f.$watch(a, function a(e, h) {
                            d[b] = e;
                            c[b] = h;
                            if (!g) {
                                g = true;
                                f.$evalAsync(j);
                            }
                        });
                        e.push(h);
                    });
                    function j() {
                        g = false;
                        if (h) {
                            h = false;
                            b(d, d, f);
                        } else {
                            b(d, c, f);
                        }
                    }
                    return function a() {
                        while (e.length) {
                            e.shift()();
                        }
                    };
                },
                $watchCollection: function(a, b) {
                    p.$stateful = true;
                    var c = this;
                    var d;
                    var f;
                    var g;
                    var i = b.length > 1;
                    var j = 0;
                    var k = h(a, p);
                    var l = [];
                    var m = {};
                    var n = true;
                    var o = 0;
                    function p(a) {
                        d = a;
                        var b, c, g, h, i;
                        if (L(d)) return;
                        if (!N(d)) {
                            if (f !== d) {
                                f = d;
                                j++;
                            }
                        } else if (v(d)) {
                            if (f !== l) {
                                f = l;
                                o = f.length = 0;
                                j++;
                            }
                            b = d.length;
                            if (o !== b) {
                                j++;
                                f.length = o = b;
                            }
                            for (var k = 0; k < b; k++) {
                                i = f[k];
                                h = d[k];
                                g = i !== i && h !== h;
                                if (!g && i !== h) {
                                    j++;
                                    f[k] = h;
                                }
                            }
                        } else {
                            if (f !== m) {
                                f = m = {};
                                o = 0;
                                j++;
                            }
                            b = 0;
                            for (c in d) {
                                if (e.call(d, c)) {
                                    b++;
                                    h = d[c];
                                    i = f[c];
                                    if (c in f) {
                                        g = i !== i && h !== h;
                                        if (!g && i !== h) {
                                            j++;
                                            f[c] = h;
                                        }
                                    } else {
                                        o++;
                                        f[c] = h;
                                        j++;
                                    }
                                }
                            }
                            if (o > b) {
                                j++;
                                for (c in f) {
                                    if (!e.call(d, c)) {
                                        o--;
                                        delete f[c];
                                    }
                                }
                            }
                        }
                        return j;
                    }
                    function q() {
                        if (n) {
                            n = false;
                            b(d, d, c);
                        } else {
                            b(d, g, c);
                        }
                        if (i) {
                            if (!N(d)) {
                                g = d;
                            } else if (v(d)) {
                                g = new Array(d.length);
                                for (var a = 0; a < d.length; a++) {
                                    g[a] = d[a];
                                }
                            } else {
                                g = {};
                                for (var f in d) {
                                    if (e.call(d, f)) {
                                        g[f] = d[f];
                                    }
                                }
                            }
                        }
                    }
                    return this.$watch(k, q);
                },
                $digest: function() {
                    var e, g, h, j, k, l, m, q = a, u, v, w = this, x = [], z, B;
                    s("$digest");
                    i.$$checkUrlChange();
                    if (this === n && f !== null) {
                        i.defer.cancel(f);
                        A();
                    }
                    d = null;
                    do {
                        m = false;
                        v = w;
                        for (var C = 0; C < o.length; C++) {
                            try {
                                B = o[C];
                                B.scope.$eval(B.expression, B.locals);
                            } catch (a) {
                                b(a);
                            }
                            d = null;
                        }
                        o.length = 0;
                        a: do {
                            if (l = v.$$watchers) {
                                l.$$digestWatchIndex = l.length;
                                while (l.$$digestWatchIndex--) {
                                    try {
                                        e = l[l.$$digestWatchIndex];
                                        if (e) {
                                            k = e.get;
                                            if ((g = k(v)) !== (h = e.last) && !(e.eq ? la(g, h) : F(g) && F(h))) {
                                                m = true;
                                                d = e;
                                                e.last = e.eq ? ka(g, null) : g;
                                                j = e.fn;
                                                j(g, h === y ? g : h, v);
                                                if (q < 5) {
                                                    z = 4 - q;
                                                    if (!x[z]) x[z] = [];
                                                    x[z].push({
                                                        msg: T(e.exp) ? "fn: " + (e.exp.name || e.exp.toString()) : e.exp,
                                                        newVal: g,
                                                        oldVal: h
                                                    });
                                                }
                                            } else if (e === d) {
                                                m = false;
                                                break a;
                                            }
                                        }
                                    } catch (a) {
                                        b(a);
                                    }
                                }
                            }
                            if (!(u = v.$$watchersCount && v.$$childHead || v !== w && v.$$nextSibling)) {
                                while (v !== w && !(u = v.$$nextSibling)) {
                                    v = v.$parent;
                                }
                            }
                        } while (v = u);
                        if ((m || o.length) && !q--) {
                            t();
                            throw c("infdig", "{0} $digest() iterations reached. Aborting!\n" + "Watchers fired in the last 5 iterations: {1}", a, x);
                        }
                    } while (m || o.length);
                    t();
                    while (r < p.length) {
                        try {
                            p[r++]();
                        } catch (a) {
                            b(a);
                        }
                    }
                    p.length = r = 0;
                    i.$$checkUrlChange();
                },
                $destroy: function() {
                    if (this.$$destroyed) return;
                    var a = this.$parent;
                    this.$broadcast("$destroy");
                    this.$$destroyed = true;
                    if (this === n) {
                        i.$$applicationDestroyed();
                    }
                    u(this, -this.$$watchersCount);
                    for (var b in this.$$listenerCount) {
                        x(this, this.$$listenerCount[b], b);
                    }
                    if (a && a.$$childHead === this) a.$$childHead = this.$$nextSibling;
                    if (a && a.$$childTail === this) a.$$childTail = this.$$prevSibling;
                    if (this.$$prevSibling) this.$$prevSibling.$$nextSibling = this.$$nextSibling;
                    if (this.$$nextSibling) this.$$nextSibling.$$prevSibling = this.$$prevSibling;
                    this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = H;
                    this.$on = this.$watch = this.$watchGroup = function() {
                        return H;
                    };
                    this.$$listeners = {};
                    this.$$nextSibling = null;
                    l(this);
                },
                $eval: function(a, b) {
                    return h(a)(this, b);
                },
                $evalAsync: function(a, b) {
                    if (!n.$$phase && !o.length) {
                        i.defer(function() {
                            if (o.length) {
                                n.$digest();
                            }
                        });
                    }
                    o.push({
                        scope: this,
                        expression: h(a),
                        locals: b
                    });
                },
                $$postDigest: function(a) {
                    p.push(a);
                },
                $apply: function(a) {
                    try {
                        s("$apply");
                        try {
                            return this.$eval(a);
                        } finally {
                            t();
                        }
                    } catch (a) {
                        b(a);
                    } finally {
                        try {
                            n.$digest();
                        } catch (a) {
                            b(a);
                            throw a;
                        }
                    }
                },
                $applyAsync: function(a) {
                    var b = this;
                    if (a) {
                        q.push(c);
                    }
                    a = h(a);
                    B();
                    function c() {
                        b.$eval(a);
                    }
                },
                $on: function(a, b) {
                    var c = this.$$listeners[a];
                    if (!c) {
                        this.$$listeners[a] = c = [];
                    }
                    c.push(b);
                    var d = this;
                    do {
                        if (!d.$$listenerCount[a]) {
                            d.$$listenerCount[a] = 0;
                        }
                        d.$$listenerCount[a]++;
                    } while (d = d.$parent);
                    var e = this;
                    return function() {
                        var d = c.indexOf(b);
                        if (d !== -1) {
                            c[d] = null;
                            x(e, 1, a);
                        }
                    };
                },
                $emit: function(a, c) {
                    var d = [], e, f = this, g = false, h = {
                        name: a,
                        targetScope: f,
                        stopPropagation: function() {
                            g = true;
                        },
                        preventDefault: function() {
                            h.defaultPrevented = true;
                        },
                        defaultPrevented: false
                    }, i = oa([ h ], arguments, 1), j, k;
                    do {
                        e = f.$$listeners[a] || d;
                        h.currentScope = f;
                        for (j = 0, k = e.length; j < k; j++) {
                            if (!e[j]) {
                                e.splice(j, 1);
                                j--;
                                k--;
                                continue;
                            }
                            try {
                                e[j].apply(null, i);
                            } catch (a) {
                                b(a);
                            }
                        }
                        if (g) {
                            h.currentScope = null;
                            return h;
                        }
                        f = f.$parent;
                    } while (f);
                    h.currentScope = null;
                    return h;
                },
                $broadcast: function(a, c) {
                    var d = this, e = d, f = d, g = {
                        name: a,
                        targetScope: d,
                        preventDefault: function() {
                            g.defaultPrevented = true;
                        },
                        defaultPrevented: false
                    };
                    if (!d.$$listenerCount[a]) return g;
                    var h = oa([ g ], arguments, 1), i, j, k;
                    while (e = f) {
                        g.currentScope = e;
                        i = e.$$listeners[a] || [];
                        for (j = 0, k = i.length; j < k; j++) {
                            if (!i[j]) {
                                i.splice(j, 1);
                                j--;
                                k--;
                                continue;
                            }
                            try {
                                i[j].apply(null, h);
                            } catch (a) {
                                b(a);
                            }
                        }
                        if (!(f = e.$$listenerCount[a] && e.$$childHead || e !== d && e.$$nextSibling)) {
                            while (e !== d && !(f = e.$$nextSibling)) {
                                e = e.$parent;
                            }
                        }
                    }
                    g.currentScope = null;
                    return g;
                }
            };
            var n = new m();
            var o = n.$$asyncQueue = [];
            var p = n.$$postDigestQueue = [];
            var q = n.$$applyAsyncQueue = [];
            var r = 0;
            return n;
            function s(a) {
                if (n.$$phase) {
                    throw c("inprog", "{0} already in progress", n.$$phase);
                }
                n.$$phase = a;
            }
            function t() {
                n.$$phase = null;
            }
            function u(a, b) {
                do {
                    a.$$watchersCount += b;
                } while (a = a.$parent);
            }
            function x(a, b, c) {
                do {
                    a.$$listenerCount[c] -= b;
                    if (a.$$listenerCount[c] === 0) {
                        delete a.$$listenerCount[c];
                    }
                } while (a = a.$parent);
            }
            function y() {}
            function A() {
                while (q.length) {
                    try {
                        q.shift()();
                    } catch (a) {
                        b(a);
                    }
                }
                f = null;
            }
            function B() {
                if (f === null) {
                    f = i.defer(function() {
                        n.$apply(A);
                    });
                }
            }
        } ];
    }
    function te() {
        var a = /^\s*(https?|ftp|mailto|tel|file):/, b = /^\s*((https?|ftp|file|blob):|data:image\/)/;
        this.aHrefSanitizationWhitelist = function(b) {
            if (M(b)) {
                a = b;
                return this;
            }
            return a;
        };
        this.imgSrcSanitizationWhitelist = function(a) {
            if (M(a)) {
                b = a;
                return this;
            }
            return b;
        };
        this.$get = function() {
            return function c(d, e) {
                var f = e ? b : a;
                var g;
                g = Je(d).href;
                if (g !== "" && !g.match(f)) {
                    return "unsafe:" + g;
                }
                return d;
            };
        };
    }
    var ue = b("$sce");
    var ve = {
        HTML: "html",
        CSS: "css",
        URL: "url",
        RESOURCE_URL: "resourceUrl",
        JS: "js"
    };
    var we = /_([a-z])/g;
    function xe(a) {
        return a.replace(we, pb);
    }
    function ye(a) {
        if (a === "self") {
            return a;
        } else if (P(a)) {
            if (a.indexOf("***") > -1) {
                throw ue("iwcard", "Illegal sequence *** in string matcher.  String: {0}", a);
            }
            a = ea(a).replace(/\\\*\\\*/g, ".*").replace(/\\\*/g, "[^:/.?&;]*");
            return new RegExp("^" + a + "$");
        } else if (U(a)) {
            return new RegExp("^" + a.source + "$");
        } else {
            throw ue("imatcher", 'Matchers may only be "self", string patterns or RegExp objects');
        }
    }
    function ze(a) {
        var b = [];
        if (M(a)) {
            w(a, function(a) {
                b.push(ye(a));
            });
        }
        return b;
    }
    function Ae() {
        this.SCE_CONTEXTS = ve;
        var a = [ "self" ], b = [];
        this.resourceUrlWhitelist = function(b) {
            if (arguments.length) {
                a = ze(b);
            }
            return a;
        };
        this.resourceUrlBlacklist = function(a) {
            if (arguments.length) {
                b = ze(a);
            }
            return b;
        };
        this.$get = [ "$injector", function(c) {
            var d = function a(b) {
                throw ue("unsafe", "Attempting to use an unsafe value in a safe context.");
            };
            if (c.has("$sanitize")) {
                d = c.get("$sanitize");
            }
            function e(a, b) {
                if (a === "self") {
                    return Ke(b);
                } else {
                    return !!a.exec(b.href);
                }
            }
            function f(c) {
                var d = Je(c.toString());
                var f, g, h = false;
                for (f = 0, g = a.length; f < g; f++) {
                    if (e(a[f], d)) {
                        h = true;
                        break;
                    }
                }
                if (h) {
                    for (f = 0, g = b.length; f < g; f++) {
                        if (e(b[f], d)) {
                            h = false;
                            break;
                        }
                    }
                }
                return h;
            }
            function g(a) {
                var b = function a(b) {
                    this.$$unwrapTrustedValue = function() {
                        return b;
                    };
                };
                if (a) {
                    b.prototype = new a();
                }
                b.prototype.valueOf = function a() {
                    return this.$$unwrapTrustedValue();
                };
                b.prototype.toString = function a() {
                    return this.$$unwrapTrustedValue().toString();
                };
                return b;
            }
            var h = g(), i = {};
            i[ve.HTML] = g(h);
            i[ve.CSS] = g(h);
            i[ve.URL] = g(h);
            i[ve.JS] = g(h);
            i[ve.RESOURCE_URL] = g(i[ve.URL]);
            function j(a, b) {
                var c = i.hasOwnProperty(a) ? i[a] : null;
                if (!c) {
                    throw ue("icontext", "Attempted to trust a value in invalid context. Context: {0}; Value: {1}", a, b);
                }
                if (b === null || L(b) || b === "") {
                    return b;
                }
                if (typeof b !== "string") {
                    throw ue("itype", "Attempted to trust a non-string value in a content requiring a string: Context: {0}", a);
                }
                return new c(b);
            }
            function k(a) {
                if (a instanceof h) {
                    return a.$$unwrapTrustedValue();
                } else {
                    return a;
                }
            }
            function l(a, b) {
                if (b === null || L(b) || b === "") {
                    return b;
                }
                var c = i.hasOwnProperty(a) ? i[a] : null;
                if (c && b instanceof c) {
                    return b.$$unwrapTrustedValue();
                }
                if (a === ve.RESOURCE_URL) {
                    if (f(b)) {
                        return b;
                    } else {
                        throw ue("insecurl", "Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}", b.toString());
                    }
                } else if (a === ve.HTML) {
                    return d(b);
                }
                throw ue("unsafe", "Attempting to use an unsafe value in a safe context.");
            }
            return {
                trustAs: j,
                getTrusted: l,
                valueOf: k
            };
        } ];
    }
    function Be() {
        var a = true;
        this.enabled = function(b) {
            if (arguments.length) {
                a = !!b;
            }
            return a;
        };
        this.$get = [ "$parse", "$sceDelegate", function(b, c) {
            if (a && j < 8) {
                throw ue("iequirks", "Strict Contextual Escaping does not support Internet Explorer version < 11 in quirks " + "mode.  You can fix this by adding the text <!doctype html> to the top of your HTML " + "document.  See http://docs.angularjs.org/api/ng.$sce for more information.");
            }
            var d = cb(ve);
            d.isEnabled = function() {
                return a;
            };
            d.trustAs = c.trustAs;
            d.getTrusted = c.getTrusted;
            d.valueOf = c.valueOf;
            if (!a) {
                d.trustAs = d.getTrusted = function(a, b) {
                    return b;
                };
                d.valueOf = I;
            }
            d.parseAs = function a(c, e) {
                var f = b(e);
                if (f.literal && f.constant) {
                    return f;
                } else {
                    return b(e, function(a) {
                        return d.getTrusted(c, a);
                    });
                }
            };
            var e = d.parseAs, g = d.getTrusted, h = d.trustAs;
            w(ve, function(a, b) {
                var c = f(b);
                d[xe("parse_as_" + c)] = function(b) {
                    return e(a, b);
                };
                d[xe("get_trusted_" + c)] = function(b) {
                    return g(a, b);
                };
                d[xe("trust_as_" + c)] = function(b) {
                    return h(a, b);
                };
            });
            return d;
        } ];
    }
    function Ce() {
        this.$get = [ "$window", "$document", function(a, b) {
            var c = {}, d = a.nw && a.nw.process, e = !d && a.chrome && (a.chrome.app && a.chrome.app.runtime || !a.chrome.app && a.chrome.runtime && a.chrome.runtime.id), g = !e && a.history && a.history.pushState, h = E((/android (\d+)/.exec(f((a.navigator || {}).userAgent)) || [])[1]), i = /Boxee/i.test((a.navigator || {}).userAgent), k = b[0] || {}, l = k.body && k.body.style, m = false, n = false;
            if (l) {
                m = !!("transition" in l || "webkitTransition" in l);
                n = !!("animation" in l || "webkitAnimation" in l);
            }
            return {
                history: !!(g && !(h < 4) && !i),
                hasEvent: function(a) {
                    if (a === "input" && j) return false;
                    if (L(c[a])) {
                        var b = k.createElement("div");
                        c[a] = "on" + a in b;
                    }
                    return c[a];
                },
                csp: ma(),
                transitions: m,
                animations: n,
                android: h
            };
        } ];
    }
    var De = b("$compile");
    function Ee() {
        var a;
        this.httpOptions = function(b) {
            if (b) {
                a = b;
                return this;
            }
            return a;
        };
        this.$get = [ "$exceptionHandler", "$templateCache", "$http", "$q", "$sce", function(b, c, d, e, f) {
            function g(h, i) {
                g.totalPendingRequests++;
                if (!P(h) || L(c.get(h))) {
                    h = f.getTrustedResourceUrl(h);
                }
                var j = d.defaults && d.defaults.transformResponse;
                if (S(j)) {
                    j = j.filter(function(a) {
                        return a !== md;
                    });
                } else if (j === md) {
                    j = null;
                }
                return d.get(h, C({
                    cache: c,
                    transformResponse: j
                }, a)).finally(function() {
                    g.totalPendingRequests--;
                }).then(function(a) {
                    c.put(h, a.data);
                    return a.data;
                }, k);
                function k(a) {
                    if (!i) {
                        a = De("tpload", "Failed to load template: {0} (HTTP status: {1} {2})", h, a.status, a.statusText);
                        b(a);
                    }
                    return e.reject(a);
                }
            }
            g.totalPendingRequests = 0;
            return g;
        } ];
    }
    function Fe() {
        this.$get = [ "$rootScope", "$browser", "$location", function(a, b, c) {
            var d = {};
            d.findBindings = function(a, b, c) {
                var d = a.getElementsByClassName("ng-binding");
                var e = [];
                w(d, function(a) {
                    var d = s.element(a).data("$binding");
                    if (d) {
                        w(d, function(d) {
                            if (c) {
                                var f = new RegExp("(^|\\s)" + ea(b) + "(\\s|\\||$)");
                                if (f.test(d)) {
                                    e.push(a);
                                }
                            } else {
                                if (d.indexOf(b) !== -1) {
                                    e.push(a);
                                }
                            }
                        });
                    }
                });
                return e;
            };
            d.findModels = function(a, b, c) {
                var d = [ "ng-", "data-ng-", "ng\\:" ];
                for (var e = 0; e < d.length; ++e) {
                    var f = c ? "=" : "*=";
                    var g = "[" + d[e] + "model" + f + '"' + b + '"]';
                    var h = a.querySelectorAll(g);
                    if (h.length) {
                        return h;
                    }
                }
            };
            d.getLocation = function() {
                return c.url();
            };
            d.setLocation = function(b) {
                if (b !== c.url()) {
                    c.url(b);
                    a.$digest();
                }
            };
            d.whenStable = function(a) {
                b.notifyWhenNoOutstandingRequests(a);
            };
            return d;
        } ];
    }
    function Ge() {
        this.$get = [ "$rootScope", "$browser", "$q", "$$q", "$exceptionHandler", function(a, b, c, d, e) {
            var f = {};
            function g(g, h, i) {
                if (!T(g)) {
                    i = h;
                    h = g;
                    g = H;
                }
                var j = pa(arguments, 3), k = M(i) && !i, l = (k ? d : c).defer(), m = l.promise, n;
                n = b.defer(function() {
                    try {
                        l.resolve(g.apply(null, j));
                    } catch (a) {
                        l.reject(a);
                        e(a);
                    } finally {
                        delete f[m.$$timeoutId];
                    }
                    if (!k) a.$apply();
                }, h);
                m.$$timeoutId = n;
                f[n] = l;
                return m;
            }
            g.cancel = function(a) {
                if (a && a.$$timeoutId in f) {
                    f[a.$$timeoutId].promise.catch(H);
                    f[a.$$timeoutId].reject("canceled");
                    delete f[a.$$timeoutId];
                    return b.defer.cancel(a.$$timeoutId);
                }
                return false;
            };
            return g;
        } ];
    }
    var He = a.document.createElement("a");
    var Ie = Je(a.location.href);
    function Je(a) {
        var b = a;
        if (j) {
            He.setAttribute("href", b);
            b = He.href;
        }
        He.setAttribute("href", b);
        return {
            href: He.href,
            protocol: He.protocol ? He.protocol.replace(/:$/, "") : "",
            host: He.host,
            search: He.search ? He.search.replace(/^\?/, "") : "",
            hash: He.hash ? He.hash.replace(/^#/, "") : "",
            hostname: He.hostname,
            port: He.port,
            pathname: He.pathname.charAt(0) === "/" ? He.pathname : "/" + He.pathname
        };
    }
    function Ke(a) {
        var b = P(a) ? Je(a) : a;
        return b.protocol === Ie.protocol && b.host === Ie.host;
    }
    function Le() {
        this.$get = J(a);
    }
    function Me(a) {
        var b = a[0] || {};
        var c = {};
        var d = "";
        function e(a) {
            try {
                return a.cookie || "";
            } catch (a) {
                return "";
            }
        }
        function f(a) {
            try {
                return decodeURIComponent(a);
            } catch (b) {
                return a;
            }
        }
        return function() {
            var a, g, h, i, j;
            var k = e(b);
            if (k !== d) {
                d = k;
                a = d.split("; ");
                c = {};
                for (h = 0; h < a.length; h++) {
                    g = a[h];
                    i = g.indexOf("=");
                    if (i > 0) {
                        j = f(g.substring(0, i));
                        if (L(c[j])) {
                            c[j] = f(g.substring(i + 1));
                        }
                    }
                }
            }
            return c;
        };
    }
    Me.$inject = [ "$document" ];
    function Ne() {
        this.$get = Me;
    }
    Oe.$inject = [ "$provide" ];
    function Oe(a) {
        var b = "Filter";
        function c(d, e) {
            if (N(d)) {
                var f = {};
                w(d, function(a, b) {
                    f[b] = c(b, a);
                });
                return f;
            } else {
                return a.factory(d + b, e);
            }
        }
        this.register = c;
        this.$get = [ "$injector", function(a) {
            return function(c) {
                return a.get(c + b);
            };
        } ];
        c("currency", We);
        c("date", nf);
        c("filter", Pe);
        c("json", of);
        c("limitTo", rf);
        c("lowercase", pf);
        c("number", Xe);
        c("orderBy", tf);
        c("uppercase", qf);
    }
    function Pe() {
        return function(a, c, d, e) {
            if (!v(a)) {
                if (a == null) {
                    return a;
                } else {
                    throw b("filter")("notarray", "Expected array but received: {0}", a);
                }
            }
            e = e || "$";
            var f = Se(c);
            var g;
            var h;
            switch (f) {
              case "function":
                g = c;
                break;

              case "boolean":
              case "null":
              case "number":
              case "string":
                h = true;

              case "object":
                g = Qe(c, d, e, h);
                break;

              default:
                return a;
            }
            return Array.prototype.filter.call(a, g);
        };
    }
    function Qe(a, b, c, d) {
        var e = N(a) && c in a;
        var g;
        if (b === true) {
            b = la;
        } else if (!T(b)) {
            b = function(a, b) {
                if (L(a)) {
                    return false;
                }
                if (a === null || b === null) {
                    return a === b;
                }
                if (N(b) || N(a) && !K(a)) {
                    return false;
                }
                a = f("" + a);
                b = f("" + b);
                return a.indexOf(b) !== -1;
            };
        }
        g = function(f) {
            if (e && !N(f)) {
                return Re(f, a[c], b, c, false);
            }
            return Re(f, a, b, c, d);
        };
        return g;
    }
    function Re(a, b, c, d, e, f) {
        var g = Se(a);
        var h = Se(b);
        if (h === "string" && b.charAt(0) === "!") {
            return !Re(a, b.substring(1), c, d, e);
        } else if (S(a)) {
            return a.some(function(a) {
                return Re(a, b, c, d, e);
            });
        }
        switch (g) {
          case "object":
            var i;
            if (e) {
                for (i in a) {
                    if (i.charAt(0) !== "$" && Re(a[i], b, c, d, true)) {
                        return true;
                    }
                }
                return f ? false : Re(a, b, c, d, false);
            } else if (h === "object") {
                for (i in b) {
                    var j = b[i];
                    if (T(j) || L(j)) {
                        continue;
                    }
                    var k = i === d;
                    var l = k ? a : a[i];
                    if (!Re(l, j, c, d, k, k)) {
                        return false;
                    }
                }
                return true;
            } else {
                return c(a, b);
            }

          case "function":
            return false;

          default:
            return c(a, b);
        }
    }
    function Se(a) {
        return a === null ? "null" : typeof a;
    }
    var Te = 22;
    var Ue = ".";
    var Ve = "0";
    We.$inject = [ "$locale" ];
    function We(a) {
        var b = a.NUMBER_FORMATS;
        return function(a, c, d) {
            if (L(c)) {
                c = b.CURRENCY_SYM;
            }
            if (L(d)) {
                d = b.PATTERNS[1].maxFrac;
            }
            return a == null ? a : $e(a, b.PATTERNS[1], b.GROUP_SEP, b.DECIMAL_SEP, d).replace(/\u00A4/g, c);
        };
    }
    Xe.$inject = [ "$locale" ];
    function Xe(a) {
        var b = a.NUMBER_FORMATS;
        return function(a, c) {
            return a == null ? a : $e(a, b.PATTERNS[0], b.GROUP_SEP, b.DECIMAL_SEP, c);
        };
    }
    function Ye(a) {
        var b = 0, c, d;
        var e, f, g;
        if ((d = a.indexOf(Ue)) > -1) {
            a = a.replace(Ue, "");
        }
        if ((e = a.search(/e/i)) > 0) {
            if (d < 0) d = e;
            d += +a.slice(e + 1);
            a = a.substring(0, e);
        } else if (d < 0) {
            d = a.length;
        }
        for (e = 0; a.charAt(e) === Ve; e++) {}
        if (e === (g = a.length)) {
            c = [ 0 ];
            d = 1;
        } else {
            g--;
            while (a.charAt(g) === Ve) g--;
            d -= e;
            c = [];
            for (f = 0; e <= g; e++, f++) {
                c[f] = +a.charAt(e);
            }
        }
        if (d > Te) {
            c = c.splice(0, Te - 1);
            b = d - 1;
            d = 1;
        }
        return {
            d: c,
            e: b,
            i: d
        };
    }
    function Ze(a, b, c, d) {
        var e = a.d;
        var f = e.length - a.i;
        b = L(b) ? Math.min(Math.max(c, f), d) : +b;
        var g = b + a.i;
        var h = e[g];
        if (g > 0) {
            e.splice(Math.max(a.i, g));
            for (var i = g; i < e.length; i++) {
                e[i] = 0;
            }
        } else {
            f = Math.max(0, f);
            a.i = 1;
            e.length = Math.max(1, g = b + 1);
            e[0] = 0;
            for (var j = 1; j < g; j++) e[j] = 0;
        }
        if (h >= 5) {
            if (g - 1 < 0) {
                for (var k = 0; k > g; k--) {
                    e.unshift(0);
                    a.i++;
                }
                e.unshift(1);
                a.i++;
            } else {
                e[g - 1]++;
            }
        }
        for (;f < Math.max(0, b); f++) e.push(0);
        var l = e.reduceRight(function(a, b, c, d) {
            b = b + a;
            d[c] = b % 10;
            return Math.floor(b / 10);
        }, 0);
        if (l) {
            e.unshift(l);
            a.i++;
        }
    }
    function $e(a, b, c, d, e) {
        if (!(P(a) || Q(a)) || isNaN(a)) return "";
        var f = !isFinite(a);
        var g = false;
        var h = Math.abs(a) + "", i = "", j;
        if (f) {
            i = "∞";
        } else {
            j = Ye(h);
            Ze(j, e, b.minFrac, b.maxFrac);
            var k = j.d;
            var l = j.i;
            var m = j.e;
            var n = [];
            g = k.reduce(function(a, b) {
                return a && !b;
            }, true);
            while (l < 0) {
                k.unshift(0);
                l++;
            }
            if (l > 0) {
                n = k.splice(l, k.length);
            } else {
                n = k;
                k = [ 0 ];
            }
            var o = [];
            if (k.length >= b.lgSize) {
                o.unshift(k.splice(-b.lgSize, k.length).join(""));
            }
            while (k.length > b.gSize) {
                o.unshift(k.splice(-b.gSize, k.length).join(""));
            }
            if (k.length) {
                o.unshift(k.join(""));
            }
            i = o.join(c);
            if (n.length) {
                i += d + n.join("");
            }
            if (m) {
                i += "e+" + m;
            }
        }
        if (a < 0 && !g) {
            return b.negPre + i + b.negSuf;
        } else {
            return b.posPre + i + b.posSuf;
        }
    }
    function _e(a, b, c, d) {
        var e = "";
        if (a < 0 || d && a <= 0) {
            if (d) {
                a = -a + 1;
            } else {
                a = -a;
                e = "-";
            }
        }
        a = "" + a;
        while (a.length < b) a = Ve + a;
        if (c) {
            a = a.substr(a.length - b);
        }
        return e + a;
    }
    function af(a, b, c, d, e) {
        c = c || 0;
        return function(f) {
            var g = f["get" + a]();
            if (c > 0 || g > -c) {
                g += c;
            }
            if (g === 0 && c === -12) g = 12;
            return _e(g, b, d, e);
        };
    }
    function bf(a, b, c) {
        return function(d, e) {
            var f = d["get" + a]();
            var h = (c ? "STANDALONE" : "") + (b ? "SHORT" : "");
            var i = g(h + a);
            return e[i][f];
        };
    }
    function cf(a, b, c) {
        var d = -1 * c;
        var e = d >= 0 ? "+" : "";
        e += _e(Math[d > 0 ? "floor" : "ceil"](d / 60), 2) + _e(Math.abs(d % 60), 2);
        return e;
    }
    function df(a) {
        var b = new Date(a, 0, 1).getDay();
        return new Date(a, 0, (b <= 4 ? 5 : 12) - b);
    }
    function ef(a) {
        return new Date(a.getFullYear(), a.getMonth(), a.getDate() + (4 - a.getDay()));
    }
    function ff(a) {
        return function(b) {
            var c = df(b.getFullYear()), d = ef(b);
            var e = +d - +c, f = 1 + Math.round(e / 6048e5);
            return _e(f, a);
        };
    }
    function gf(a, b) {
        return a.getHours() < 12 ? b.AMPMS[0] : b.AMPMS[1];
    }
    function hf(a, b) {
        return a.getFullYear() <= 0 ? b.ERAS[0] : b.ERAS[1];
    }
    function jf(a, b) {
        return a.getFullYear() <= 0 ? b.ERANAMES[0] : b.ERANAMES[1];
    }
    var kf = {
        yyyy: af("FullYear", 4, 0, false, true),
        yy: af("FullYear", 2, 0, true, true),
        y: af("FullYear", 1, 0, false, true),
        MMMM: bf("Month"),
        MMM: bf("Month", true),
        MM: af("Month", 2, 1),
        M: af("Month", 1, 1),
        LLLL: bf("Month", false, true),
        dd: af("Date", 2),
        d: af("Date", 1),
        HH: af("Hours", 2),
        H: af("Hours", 1),
        hh: af("Hours", 2, -12),
        h: af("Hours", 1, -12),
        mm: af("Minutes", 2),
        m: af("Minutes", 1),
        ss: af("Seconds", 2),
        s: af("Seconds", 1),
        sss: af("Milliseconds", 3),
        EEEE: bf("Day"),
        EEE: bf("Day", true),
        a: gf,
        Z: cf,
        ww: ff(2),
        w: ff(1),
        G: hf,
        GG: hf,
        GGG: hf,
        GGGG: jf
    };
    var lf = /((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/, mf = /^-?\d+$/;
    nf.$inject = [ "$locale" ];
    function nf(a) {
        var b = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
        function c(a) {
            var c;
            if (c = a.match(b)) {
                var d = new Date(0), e = 0, f = 0, g = c[8] ? d.setUTCFullYear : d.setFullYear, h = c[8] ? d.setUTCHours : d.setHours;
                if (c[9]) {
                    e = E(c[9] + c[10]);
                    f = E(c[9] + c[11]);
                }
                g.call(d, E(c[1]), E(c[2]) - 1, E(c[3]));
                var i = E(c[4] || 0) - e;
                var j = E(c[5] || 0) - f;
                var k = E(c[6] || 0);
                var l = Math.round(parseFloat("0." + (c[7] || 0)) * 1e3);
                h.call(d, i, j, k, l);
                return d;
            }
            return a;
        }
        return function(b, d, e) {
            var f = "", g = [], h, i;
            d = d || "mediumDate";
            d = a.DATETIME_FORMATS[d] || d;
            if (P(b)) {
                b = mf.test(b) ? E(b) : c(b);
            }
            if (Q(b)) {
                b = new Date(b);
            }
            if (!R(b) || !isFinite(b.getTime())) {
                return b;
            }
            while (d) {
                i = lf.exec(d);
                if (i) {
                    g = oa(g, i, 1);
                    d = g.pop();
                } else {
                    g.push(d);
                    d = null;
                }
            }
            var j = b.getTimezoneOffset();
            if (e) {
                j = va(e, j);
                b = xa(b, e, true);
            }
            w(g, function(c) {
                h = kf[c];
                f += h ? h(b, a.DATETIME_FORMATS, j) : c === "''" ? "'" : c.replace(/(^'|'$)/g, "").replace(/''/g, "'");
            });
            return f;
        };
    }
    function of() {
        return function(a, b) {
            if (L(b)) {
                b = 2;
            }
            return sa(a, b);
        };
    }
    var pf = J(f);
    var qf = J(g);
    function rf() {
        return function(a, b, c) {
            if (Math.abs(Number(b)) === Infinity) {
                b = Number(b);
            } else {
                b = E(b);
            }
            if (F(b)) return a;
            if (Q(a)) a = a.toString();
            if (!v(a)) return a;
            c = !c || isNaN(c) ? 0 : E(c);
            c = c < 0 ? Math.max(0, a.length + c) : c;
            if (b >= 0) {
                return sf(a, c, c + b);
            } else {
                if (c === 0) {
                    return sf(a, b, a.length);
                } else {
                    return sf(a, Math.max(0, c + b), c);
                }
            }
        };
    }
    function sf(a, b, c) {
        if (P(a)) return a.slice(b, c);
        return m.call(a, b, c);
    }
    tf.$inject = [ "$parse" ];
    function tf(a) {
        return function(a, d, e, h) {
            if (a == null) return a;
            if (!v(a)) {
                throw b("orderBy")("notarray", "Expected array but received: {0}", a);
            }
            if (!S(d)) {
                d = [ d ];
            }
            if (d.length === 0) {
                d = [ "+" ];
            }
            var i = c(d);
            var j = e ? -1 : 1;
            var k = T(h) ? h : g;
            var l = Array.prototype.map.call(a, m);
            l.sort(n);
            a = l.map(function(a) {
                return a.value;
            });
            return a;
            function m(a, b) {
                return {
                    value: a,
                    tieBreaker: {
                        value: b,
                        type: "number",
                        index: b
                    },
                    predicateValues: i.map(function(c) {
                        return f(c.get(a), b);
                    })
                };
            }
            function n(a, b) {
                for (var c = 0, d = i.length; c < d; c++) {
                    var e = k(a.predicateValues[c], b.predicateValues[c]);
                    if (e) {
                        return e * i[c].descending * j;
                    }
                }
                return k(a.tieBreaker, b.tieBreaker) * j;
            }
        };
        function c(b) {
            return b.map(function(b) {
                var c = 1, d = I;
                if (T(b)) {
                    d = b;
                } else if (P(b)) {
                    if (b.charAt(0) === "+" || b.charAt(0) === "-") {
                        c = b.charAt(0) === "-" ? -1 : 1;
                        b = b.substring(1);
                    }
                    if (b !== "") {
                        d = a(b);
                        if (d.constant) {
                            var e = d();
                            d = function(a) {
                                return a[e];
                            };
                        }
                    }
                }
                return {
                    get: d,
                    descending: c
                };
            });
        }
        function d(a) {
            switch (typeof a) {
              case "number":
              case "boolean":
              case "string":
                return true;

              default:
                return false;
            }
        }
        function e(a) {
            if (T(a.valueOf)) {
                a = a.valueOf();
                if (d(a)) return a;
            }
            if (K(a)) {
                a = a.toString();
                if (d(a)) return a;
            }
            return a;
        }
        function f(a, b) {
            var c = typeof a;
            if (a === null) {
                c = "string";
                a = "null";
            } else if (c === "object") {
                a = e(a);
            }
            return {
                value: a,
                type: c,
                index: b
            };
        }
        function g(a, b) {
            var c = 0;
            var d = a.type;
            var e = b.type;
            if (d === e) {
                var f = a.value;
                var g = b.value;
                if (d === "string") {
                    f = f.toLowerCase();
                    g = g.toLowerCase();
                } else if (d === "object") {
                    if (N(f)) f = a.index;
                    if (N(g)) g = b.index;
                }
                if (f !== g) {
                    c = f < g ? -1 : 1;
                }
            } else {
                c = d < e ? -1 : 1;
            }
            return c;
        }
    }
    function uf(a) {
        if (T(a)) {
            a = {
                link: a
            };
        }
        a.restrict = a.restrict || "AC";
        return J(a);
    }
    var vf = J({
        restrict: "E",
        compile: function(a, b) {
            if (!b.href && !b.xlinkHref) {
                return function(a, b) {
                    if (b[0].nodeName.toLowerCase() !== "a") return;
                    var c = p.call(b.prop("href")) === "[object SVGAnimatedString]" ? "xlink:href" : "href";
                    b.on("click", function(a) {
                        if (!b.attr(c)) {
                            a.preventDefault();
                        }
                    });
                };
            }
        }
    });
    var wf = {};
    w(Wb, function(a, b) {
        if (a === "multiple") return;
        function c(a, c, e) {
            a.$watch(e[d], function a(c) {
                e.$set(b, !!c);
            });
        }
        var d = Sc("ng-" + b);
        var e = c;
        if (a === "checked") {
            e = function(a, b, e) {
                if (e.ngModel !== e[d]) {
                    c(a, b, e);
                }
            };
        }
        wf[d] = function() {
            return {
                restrict: "A",
                priority: 100,
                link: e
            };
        };
    });
    w(Yb, function(a, b) {
        wf[b] = function() {
            return {
                priority: 100,
                link: function(a, d, e) {
                    if (b === "ngPattern" && e.ngPattern.charAt(0) === "/") {
                        var f = e.ngPattern.match(c);
                        if (f) {
                            e.$set("ngPattern", new RegExp(f[1], f[2]));
                            return;
                        }
                    }
                    a.$watch(e[b], function a(c) {
                        e.$set(b, c);
                    });
                }
            };
        };
    });
    w([ "src", "srcset", "href" ], function(a) {
        var b = Sc("ng-" + a);
        wf[b] = function() {
            return {
                priority: 99,
                link: function(c, d, e) {
                    var f = a, g = a;
                    if (a === "href" && p.call(d.prop("href")) === "[object SVGAnimatedString]") {
                        g = "xlinkHref";
                        e.$attr[g] = "xlink:href";
                        f = null;
                    }
                    e.$observe(b, function(b) {
                        if (!b) {
                            if (a === "href") {
                                e.$set(g, null);
                            }
                            return;
                        }
                        e.$set(g, b);
                        if (j && f) d.prop(f, e[g]);
                    });
                }
            };
        };
    });
    var xf = {
        $addControl: H,
        $$renameControl: Af,
        $removeControl: H,
        $setValidity: H,
        $setDirty: H,
        $setPristine: H,
        $setSubmitted: H
    }, yf = "ng-pending", zf = "ng-submitted";
    function Af(a, b) {
        a.$name = b;
    }
    Bf.$inject = [ "$element", "$attrs", "$scope", "$animate", "$interpolate" ];
    function Bf(a, b, c, d, e) {
        this.$$controls = [];
        this.$error = {};
        this.$$success = {};
        this.$pending = undefined;
        this.$name = e(b.name || b.ngForm || "")(c);
        this.$dirty = false;
        this.$pristine = true;
        this.$valid = true;
        this.$invalid = false;
        this.$submitted = false;
        this.$$parentForm = xf;
        this.$$element = a;
        this.$$animate = d;
        Ff(this);
    }
    Bf.prototype = {
        $rollbackViewValue: function() {
            w(this.$$controls, function(a) {
                a.$rollbackViewValue();
            });
        },
        $commitViewValue: function() {
            w(this.$$controls, function(a) {
                a.$commitViewValue();
            });
        },
        $addControl: function(a) {
            Sa(a.$name, "input");
            this.$$controls.push(a);
            if (a.$name) {
                this[a.$name] = a;
            }
            a.$$parentForm = this;
        },
        $$renameControl: function(a, b) {
            var c = a.$name;
            if (this[c] === a) {
                delete this[c];
            }
            this[b] = a;
            a.$name = b;
        },
        $removeControl: function(a) {
            if (a.$name && this[a.$name] === a) {
                delete this[a.$name];
            }
            w(this.$pending, function(b, c) {
                this.$setValidity(c, null, a);
            }, this);
            w(this.$error, function(b, c) {
                this.$setValidity(c, null, a);
            }, this);
            w(this.$$success, function(b, c) {
                this.$setValidity(c, null, a);
            }, this);
            ja(this.$$controls, a);
            a.$$parentForm = xf;
        },
        $setDirty: function() {
            this.$$animate.removeClass(this.$$element, Hg);
            this.$$animate.addClass(this.$$element, Ig);
            this.$dirty = true;
            this.$pristine = false;
            this.$$parentForm.$setDirty();
        },
        $setPristine: function() {
            this.$$animate.setClass(this.$$element, Hg, Ig + " " + zf);
            this.$dirty = false;
            this.$pristine = true;
            this.$submitted = false;
            w(this.$$controls, function(a) {
                a.$setPristine();
            });
        },
        $setUntouched: function() {
            w(this.$$controls, function(a) {
                a.$setUntouched();
            });
        },
        $setSubmitted: function() {
            this.$$animate.addClass(this.$$element, zf);
            this.$submitted = true;
            this.$$parentForm.$setSubmitted();
        }
    };
    Gf({
        clazz: Bf,
        set: function(a, b, c) {
            var d = a[b];
            if (!d) {
                a[b] = [ c ];
            } else {
                var e = d.indexOf(c);
                if (e === -1) {
                    d.push(c);
                }
            }
        },
        unset: function(a, b, c) {
            var d = a[b];
            if (!d) {
                return;
            }
            ja(d, c);
            if (d.length === 0) {
                delete a[b];
            }
        }
    });
    var Cf = function(a) {
        return [ "$timeout", "$parse", function(b, c) {
            var d = {
                name: "form",
                restrict: a ? "EAC" : "E",
                require: [ "form", "^^?form" ],
                controller: Bf,
                compile: function c(d, f) {
                    d.addClass(Hg).addClass(Fg);
                    var g = f.name ? "name" : a && f.ngForm ? "ngForm" : false;
                    return {
                        pre: function a(c, d, f, h) {
                            var i = h[0];
                            if (!("action" in f)) {
                                var j = function(a) {
                                    c.$apply(function() {
                                        i.$commitViewValue();
                                        i.$setSubmitted();
                                    });
                                    a.preventDefault();
                                };
                                d[0].addEventListener("submit", j);
                                d.on("$destroy", function() {
                                    b(function() {
                                        d[0].removeEventListener("submit", j);
                                    }, 0, false);
                                });
                            }
                            var k = h[1] || i.$$parentForm;
                            k.$addControl(i);
                            var l = g ? e(i.$name) : H;
                            if (g) {
                                l(c, i);
                                f.$observe(g, function(a) {
                                    if (i.$name === a) return;
                                    l(c, undefined);
                                    i.$$parentForm.$$renameControl(i, a);
                                    l = e(i.$name);
                                    l(c, i);
                                });
                            }
                            d.on("$destroy", function() {
                                i.$$parentForm.$removeControl(i);
                                l(c, undefined);
                                C(i, xf);
                            });
                        }
                    };
                }
            };
            return d;
            function e(a) {
                if (a === "") {
                    return c('this[""]').assign;
                }
                return c(a).assign || H;
            }
        } ];
    };
    var Df = Cf();
    var Ef = Cf(true);
    function Ff(a) {
        a.$$classCache = {};
        a.$$classCache[Gg] = !(a.$$classCache[Fg] = a.$$element.hasClass(Fg));
    }
    function Gf(a) {
        var b = a.clazz, c = a.set, d = a.unset;
        b.prototype.$setValidity = function(a, b, i) {
            if (L(b)) {
                e(this, "$pending", a, i);
            } else {
                f(this, "$pending", a, i);
            }
            if (!$(b)) {
                d(this.$error, a, i);
                d(this.$$success, a, i);
            } else {
                if (b) {
                    d(this.$error, a, i);
                    c(this.$$success, a, i);
                } else {
                    c(this.$error, a, i);
                    d(this.$$success, a, i);
                }
            }
            if (this.$pending) {
                g(this, yf, true);
                this.$valid = this.$invalid = undefined;
                h(this, "", null);
            } else {
                g(this, yf, false);
                this.$valid = Hf(this.$error);
                this.$invalid = !this.$valid;
                h(this, "", this.$valid);
            }
            var j;
            if (this.$pending && this.$pending[a]) {
                j = undefined;
            } else if (this.$error[a]) {
                j = false;
            } else if (this.$$success[a]) {
                j = true;
            } else {
                j = null;
            }
            h(this, a, j);
            this.$$parentForm.$setValidity(a, j, this);
        };
        function e(a, b, d, e) {
            if (!a[b]) {
                a[b] = {};
            }
            c(a[b], d, e);
        }
        function f(a, b, c, e) {
            if (a[b]) {
                d(a[b], c, e);
            }
            if (Hf(a[b])) {
                a[b] = undefined;
            }
        }
        function g(a, b, c) {
            if (c && !a.$$classCache[b]) {
                a.$$animate.addClass(a.$$element, b);
                a.$$classCache[b] = true;
            } else if (!c && a.$$classCache[b]) {
                a.$$animate.removeClass(a.$$element, b);
                a.$$classCache[b] = false;
            }
        }
        function h(a, b, c) {
            b = b ? "-" + Na(b, "-") : "";
            g(a, Fg + b, c === true);
            g(a, Gg + b, c === false);
        }
    }
    function Hf(a) {
        if (a) {
            for (var b in a) {
                if (a.hasOwnProperty(b)) {
                    return false;
                }
            }
        }
        return true;
    }
    var If = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/;
    var Jf = /^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:\/?#]+|\[[a-f\d:]+])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i;
    var Kf = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;
    var Lf = /^\s*(-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/;
    var Mf = /^(\d{4,})-(\d{2})-(\d{2})$/;
    var Nf = /^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;
    var Of = /^(\d{4,})-W(\d\d)$/;
    var Pf = /^(\d{4,})-(\d\d)$/;
    var Qf = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;
    var Rf = "keydown wheel mousedown";
    var Sf = Va();
    w("date,datetime-local,month,time,week".split(","), function(a) {
        Sf[a] = true;
    });
    var Tf = {
        text: Vf,
        date: Zf("date", Mf, Yf(Mf, [ "yyyy", "MM", "dd" ]), "yyyy-MM-dd"),
        "datetime-local": Zf("datetimelocal", Nf, Yf(Nf, [ "yyyy", "MM", "dd", "HH", "mm", "ss", "sss" ]), "yyyy-MM-ddTHH:mm:ss.sss"),
        time: Zf("time", Qf, Yf(Qf, [ "HH", "mm", "ss", "sss" ]), "HH:mm:ss.sss"),
        week: Zf("week", Of, Xf, "yyyy-Www"),
        month: Zf("month", Pf, Yf(Pf, [ "yyyy", "MM" ]), "yyyy-MM"),
        number: eg,
        url: gg,
        email: hg,
        radio: ig,
        range: fg,
        checkbox: kg,
        hidden: H,
        button: H,
        submit: H,
        reset: H,
        file: H
    };
    function Uf(a) {
        a.$formatters.push(function(b) {
            return a.$isEmpty(b) ? b : b.toString();
        });
    }
    function Vf(a, b, c, d, e, f) {
        Wf(a, b, c, d, e, f);
        Uf(d);
    }
    function Wf(a, b, c, e, g, h) {
        var i = f(b[0].type);
        if (!g.android) {
            var j = false;
            b.on("compositionstart", function() {
                j = true;
            });
            b.on("compositionend", function() {
                j = false;
                l();
            });
        }
        var k;
        var l = function(a) {
            if (k) {
                h.defer.cancel(k);
                k = null;
            }
            if (j) return;
            var d = b.val(), f = a && a.type;
            if (i !== "password" && (!c.ngTrim || c.ngTrim !== "false")) {
                d = da(d);
            }
            if (e.$viewValue !== d || d === "" && e.$$hasNativeValidators) {
                e.$setViewValue(d, f);
            }
        };
        if (g.hasEvent("input")) {
            b.on("input", l);
        } else {
            var m = function(a, b, c) {
                if (!k) {
                    k = h.defer(function() {
                        k = null;
                        if (!b || b.value !== c) {
                            l(a);
                        }
                    });
                }
            };
            b.on("keydown", function(a) {
                var b = a.keyCode;
                if (b === 91 || 15 < b && b < 19 || 37 <= b && b <= 40) return;
                m(a, this, this.value);
            });
            if (g.hasEvent("paste")) {
                b.on("paste cut", m);
            }
        }
        b.on("change", l);
        if (Sf[i] && e.$$hasNativeValidators && i === c.type) {
            b.on(Rf, function(a) {
                if (!k) {
                    var b = this[d];
                    var c = b.badInput;
                    var e = b.typeMismatch;
                    k = h.defer(function() {
                        k = null;
                        if (b.badInput !== c || b.typeMismatch !== e) {
                            l(a);
                        }
                    });
                }
            });
        }
        e.$render = function() {
            var a = e.$isEmpty(e.$viewValue) ? "" : e.$viewValue;
            if (b.val() !== a) {
                b.val(a);
            }
        };
    }
    function Xf(a, b) {
        if (R(a)) {
            return a;
        }
        if (P(a)) {
            Of.lastIndex = 0;
            var c = Of.exec(a);
            if (c) {
                var d = +c[1], e = +c[2], f = 0, g = 0, h = 0, i = 0, j = df(d), k = (e - 1) * 7;
                if (b) {
                    f = b.getHours();
                    g = b.getMinutes();
                    h = b.getSeconds();
                    i = b.getMilliseconds();
                }
                return new Date(d, 0, j.getDate() + k, f, g, h, i);
            }
        }
        return NaN;
    }
    function Yf(a, b) {
        return function(c, d) {
            var e, f;
            if (R(c)) {
                return c;
            }
            if (P(c)) {
                if (c.charAt(0) === '"' && c.charAt(c.length - 1) === '"') {
                    c = c.substring(1, c.length - 1);
                }
                if (If.test(c)) {
                    return new Date(c);
                }
                a.lastIndex = 0;
                e = a.exec(c);
                if (e) {
                    e.shift();
                    if (d) {
                        f = {
                            yyyy: d.getFullYear(),
                            MM: d.getMonth() + 1,
                            dd: d.getDate(),
                            HH: d.getHours(),
                            mm: d.getMinutes(),
                            ss: d.getSeconds(),
                            sss: d.getMilliseconds() / 1e3
                        };
                    } else {
                        f = {
                            yyyy: 1970,
                            MM: 1,
                            dd: 1,
                            HH: 0,
                            mm: 0,
                            ss: 0,
                            sss: 0
                        };
                    }
                    w(e, function(a, c) {
                        if (c < b.length) {
                            f[b[c]] = +a;
                        }
                    });
                    return new Date(f.yyyy, f.MM - 1, f.dd, f.HH, f.mm, f.ss || 0, f.sss * 1e3 || 0);
                }
            }
            return NaN;
        };
    }
    function Zf(a, b, c, d) {
        return function e(f, g, h, i, j, k, l) {
            $f(f, g, h, i);
            Wf(f, g, h, i, j, k);
            var m = i && i.$options.getOption("timezone");
            var n;
            i.$$parserName = a;
            i.$parsers.push(function(a) {
                if (i.$isEmpty(a)) return null;
                if (b.test(a)) {
                    var d = c(a, n);
                    if (m) {
                        d = xa(d, m);
                    }
                    return d;
                }
                return undefined;
            });
            i.$formatters.push(function(a) {
                if (a && !R(a)) {
                    throw Ng("datefmt", "Expected `{0}` to be a date", a);
                }
                if (q(a)) {
                    n = a;
                    if (n && m) {
                        n = xa(n, m, true);
                    }
                    return l("date")(a, d, m);
                } else {
                    n = null;
                    return "";
                }
            });
            if (M(h.min) || h.ngMin) {
                var o;
                i.$validators.min = function(a) {
                    return !q(a) || L(o) || c(a) >= o;
                };
                h.$observe("min", function(a) {
                    o = r(a);
                    i.$validate();
                });
            }
            if (M(h.max) || h.ngMax) {
                var p;
                i.$validators.max = function(a) {
                    return !q(a) || L(p) || c(a) <= p;
                };
                h.$observe("max", function(a) {
                    p = r(a);
                    i.$validate();
                });
            }
            function q(a) {
                return a && !(a.getTime && a.getTime() !== a.getTime());
            }
            function r(a) {
                return M(a) && !R(a) ? c(a) || undefined : a;
            }
        };
    }
    function $f(a, b, c, e) {
        var f = b[0];
        var g = e.$$hasNativeValidators = N(f.validity);
        if (g) {
            e.$parsers.push(function(a) {
                var c = b.prop(d) || {};
                return c.badInput || c.typeMismatch ? undefined : a;
            });
        }
    }
    function _f(a) {
        a.$$parserName = "number";
        a.$parsers.push(function(b) {
            if (a.$isEmpty(b)) return null;
            if (Lf.test(b)) return parseFloat(b);
            return undefined;
        });
        a.$formatters.push(function(b) {
            if (!a.$isEmpty(b)) {
                if (!Q(b)) {
                    throw Ng("numfmt", "Expected `{0}` to be a number", b);
                }
                b = b.toString();
            }
            return b;
        });
    }
    function ag(a) {
        if (M(a) && !Q(a)) {
            a = parseFloat(a);
        }
        return !F(a) ? a : undefined;
    }
    function bg(a) {
        return (a | 0) === a;
    }
    function cg(a) {
        var b = a.toString();
        var c = b.indexOf(".");
        if (c === -1) {
            if (-1 < a && a < 1) {
                var d = /e-(\d+)$/.exec(b);
                if (d) {
                    return Number(d[1]);
                }
            }
            return 0;
        }
        return b.length - c - 1;
    }
    function dg(a, b, c) {
        var d = Number(a);
        var e = !bg(d);
        var f = !bg(b);
        var g = !bg(c);
        if (e || f || g) {
            var h = e ? cg(d) : 0;
            var i = f ? cg(b) : 0;
            var j = g ? cg(c) : 0;
            var k = Math.max(h, i, j);
            var l = Math.pow(10, k);
            d = d * l;
            b = b * l;
            c = c * l;
            if (e) d = Math.round(d);
            if (f) b = Math.round(b);
            if (g) c = Math.round(c);
        }
        return (d - b) % c === 0;
    }
    function eg(a, b, c, d, e, f) {
        $f(a, b, c, d);
        _f(d);
        Wf(a, b, c, d, e, f);
        var g;
        var h;
        if (M(c.min) || c.ngMin) {
            d.$validators.min = function(a) {
                return d.$isEmpty(a) || L(g) || a >= g;
            };
            c.$observe("min", function(a) {
                g = ag(a);
                d.$validate();
            });
        }
        if (M(c.max) || c.ngMax) {
            d.$validators.max = function(a) {
                return d.$isEmpty(a) || L(h) || a <= h;
            };
            c.$observe("max", function(a) {
                h = ag(a);
                d.$validate();
            });
        }
        if (M(c.step) || c.ngStep) {
            var i;
            d.$validators.step = function(a, b) {
                return d.$isEmpty(b) || L(i) || dg(b, g || 0, i);
            };
            c.$observe("step", function(a) {
                i = ag(a);
                d.$validate();
            });
        }
    }
    function fg(a, b, c, d, e, f) {
        $f(a, b, c, d);
        _f(d);
        Wf(a, b, c, d, e, f);
        var g = d.$$hasNativeValidators && b[0].type === "range", h = g ? 0 : undefined, i = g ? 100 : undefined, j = g ? 1 : undefined, k = b[0].validity, l = M(c.min), m = M(c.max), n = M(c.step);
        var o = d.$render;
        d.$render = g && M(k.rangeUnderflow) && M(k.rangeOverflow) ? function a() {
            o();
            d.$setViewValue(b.val());
        } : o;
        if (l) {
            d.$validators.min = g ? function a() {
                return true;
            } : function a(b, c) {
                return d.$isEmpty(c) || L(h) || c >= h;
            };
            p("min", q);
        }
        if (m) {
            d.$validators.max = g ? function a() {
                return true;
            } : function a(b, c) {
                return d.$isEmpty(c) || L(i) || c <= i;
            };
            p("max", r);
        }
        if (n) {
            d.$validators.step = g ? function a() {
                return !k.stepMismatch;
            } : function a(b, c) {
                return d.$isEmpty(c) || L(j) || dg(c, h || 0, j);
            };
            p("step", s);
        }
        function p(a, d) {
            b.attr(a, c[a]);
            c.$observe(a, d);
        }
        function q(a) {
            h = ag(a);
            if (F(d.$modelValue)) {
                return;
            }
            if (g) {
                var c = b.val();
                if (h > c) {
                    c = h;
                    b.val(c);
                }
                d.$setViewValue(c);
            } else {
                d.$validate();
            }
        }
        function r(a) {
            i = ag(a);
            if (F(d.$modelValue)) {
                return;
            }
            if (g) {
                var c = b.val();
                if (i < c) {
                    b.val(i);
                    c = i < h ? h : i;
                }
                d.$setViewValue(c);
            } else {
                d.$validate();
            }
        }
        function s(a) {
            j = ag(a);
            if (F(d.$modelValue)) {
                return;
            }
            if (g && d.$viewValue !== b.val()) {
                d.$setViewValue(b.val());
            } else {
                d.$validate();
            }
        }
    }
    function gg(a, b, c, d, e, f) {
        Wf(a, b, c, d, e, f);
        Uf(d);
        d.$$parserName = "url";
        d.$validators.url = function(a, b) {
            var c = a || b;
            return d.$isEmpty(c) || Jf.test(c);
        };
    }
    function hg(a, b, c, d, e, f) {
        Wf(a, b, c, d, e, f);
        Uf(d);
        d.$$parserName = "email";
        d.$validators.email = function(a, b) {
            var c = a || b;
            return d.$isEmpty(c) || Kf.test(c);
        };
    }
    function ig(a, b, c, d) {
        var e = !c.ngTrim || da(c.ngTrim) !== "false";
        if (L(c.name)) {
            b.attr("name", z());
        }
        var f = function(a) {
            var f;
            if (b[0].checked) {
                f = c.value;
                if (e) {
                    f = da(f);
                }
                d.$setViewValue(f, a && a.type);
            }
        };
        b.on("click", f);
        d.$render = function() {
            var a = c.value;
            if (e) {
                a = da(a);
            }
            b[0].checked = a === d.$viewValue;
        };
        c.$observe("value", d.$render);
    }
    function jg(a, b, c, d, e) {
        var f;
        if (M(d)) {
            f = a(d);
            if (!f.constant) {
                throw Ng("constexpr", "Expected constant expression for `{0}`, but saw " + "`{1}`.", c, d);
            }
            return f(b);
        }
        return e;
    }
    function kg(a, b, c, d, e, f, g, h) {
        var i = jg(h, a, "ngTrueValue", c.ngTrueValue, true);
        var j = jg(h, a, "ngFalseValue", c.ngFalseValue, false);
        var k = function(a) {
            d.$setViewValue(b[0].checked, a && a.type);
        };
        b.on("click", k);
        d.$render = function() {
            b[0].checked = d.$viewValue;
        };
        d.$isEmpty = function(a) {
            return a === false;
        };
        d.$formatters.push(function(a) {
            return la(a, i);
        });
        d.$parsers.push(function(a) {
            return a ? i : j;
        });
    }
    var lg = [ "$browser", "$sniffer", "$filter", "$parse", function(a, b, c, d) {
        return {
            restrict: "E",
            require: [ "?ngModel" ],
            link: {
                pre: function(e, g, h, i) {
                    if (i[0]) {
                        (Tf[f(h.type)] || Tf.text)(e, g, h, i[0], b, a, c, d);
                    }
                }
            }
        };
    } ];
    var mg = /^(true|false|\d+)$/;
    var ng = function() {
        function a(a, b, c) {
            var d = M(c) ? c : j === 9 ? "" : null;
            a.prop("value", d);
            b.$set("value", c);
        }
        return {
            restrict: "A",
            priority: 100,
            compile: function(b, c) {
                if (mg.test(c.ngValue)) {
                    return function b(c, d, e) {
                        var f = c.$eval(e.ngValue);
                        a(d, e, f);
                    };
                } else {
                    return function b(c, d, e) {
                        c.$watch(e.ngValue, function b(c) {
                            a(d, e, c);
                        });
                    };
                }
            }
        };
    };
    var og = [ "$compile", function(a) {
        return {
            restrict: "AC",
            compile: function b(c) {
                a.$$addBindingClass(c);
                return function b(c, d, e) {
                    a.$$addBindingInfo(d, e.ngBind);
                    d = d[0];
                    c.$watch(e.ngBind, function a(b) {
                        d.textContent = Wa(b);
                    });
                };
            }
        };
    } ];
    var pg = [ "$interpolate", "$compile", function(a, b) {
        return {
            compile: function c(d) {
                b.$$addBindingClass(d);
                return function c(d, e, f) {
                    var g = a(e.attr(f.$attr.ngBindTemplate));
                    b.$$addBindingInfo(e, g.expressions);
                    e = e[0];
                    f.$observe("ngBindTemplate", function(a) {
                        e.textContent = L(a) ? "" : a;
                    });
                };
            }
        };
    } ];
    var qg = [ "$sce", "$parse", "$compile", function(a, b, c) {
        return {
            restrict: "A",
            compile: function d(e, f) {
                var g = b(f.ngBindHtml);
                var h = b(f.ngBindHtml, function b(c) {
                    return a.valueOf(c);
                });
                c.$$addBindingClass(e);
                return function b(d, e, f) {
                    c.$$addBindingInfo(e, f.ngBindHtml);
                    d.$watch(h, function b() {
                        var c = g(d);
                        e.html(a.getTrustedHtml(c) || "");
                    });
                };
            }
        };
    } ];
    var rg = J({
        restrict: "A",
        require: "ngModel",
        link: function(a, b, c, d) {
            d.$viewChangeListeners.push(function() {
                a.$eval(c.ngChange);
            });
        }
    });
    function sg(a, b) {
        a = "ngClass" + a;
        var c;
        return [ "$parse", function(h) {
            return {
                restrict: "AC",
                link: function(i, j, k) {
                    var l = k[a].trim();
                    var m = l.charAt(0) === ":" && l.charAt(1) === ":";
                    var n = m ? g : f;
                    var o = h(l, n);
                    var p = m ? z : A;
                    var q = j.data("$classCounts");
                    var r = true;
                    var s;
                    if (!q) {
                        q = Va();
                        j.data("$classCounts", q);
                    }
                    if (a !== "ngClass") {
                        if (!c) {
                            c = h("$index", function a(b) {
                                return b & 1;
                            });
                        }
                        i.$watch(c, y);
                    }
                    i.$watch(o, p, m);
                    function t(a) {
                        a = x(e(a), 1);
                        k.$addClass(a);
                    }
                    function u(a) {
                        a = x(e(a), -1);
                        k.$removeClass(a);
                    }
                    function v(a, b) {
                        var c = e(a);
                        var f = e(b);
                        var g = d(c, f);
                        var h = d(f, c);
                        var i = x(g, -1);
                        var j = x(h, 1);
                        k.$addClass(j);
                        k.$removeClass(i);
                    }
                    function x(a, b) {
                        var c = [];
                        w(a, function(a) {
                            if (b > 0 || q[a]) {
                                q[a] = (q[a] || 0) + b;
                                if (q[a] === +(b > 0)) {
                                    c.push(a);
                                }
                            }
                        });
                        return c.join(" ");
                    }
                    function y(a) {
                        if (a === b) {
                            t(s);
                        } else {
                            u(s);
                        }
                        r = a;
                    }
                    function z(a) {
                        var b = f(a);
                        if (b !== s) {
                            A(b);
                        }
                    }
                    function A(a) {
                        if (r === b) {
                            v(s, a);
                        }
                        s = a;
                    }
                }
            };
        } ];
        function d(a, b) {
            if (!a || !a.length) return [];
            if (!b || !b.length) return a;
            var c = [];
            a: for (var d = 0; d < a.length; d++) {
                var e = a[d];
                for (var f = 0; f < b.length; f++) {
                    if (e === b[f]) continue a;
                }
                c.push(e);
            }
            return c;
        }
        function e(a) {
            return a && a.split(" ");
        }
        function f(a) {
            var b = a;
            if (S(a)) {
                b = a.map(f).join(" ");
            } else if (N(a)) {
                b = Object.keys(a).filter(function(b) {
                    return a[b];
                }).join(" ");
            }
            return b;
        }
        function g(a) {
            var b = a;
            if (S(a)) {
                b = a.map(g);
            } else if (N(a)) {
                var c = false;
                b = Object.keys(a).filter(function(b) {
                    var d = a[b];
                    if (!c && L(d)) {
                        c = true;
                    }
                    return d;
                });
                if (c) {
                    b.push(undefined);
                }
            }
            return b;
        }
    }
    var tg = sg("", true);
    var ug = sg("Odd", 0);
    var vg = sg("Even", 1);
    var wg = uf({
        compile: function(a, b) {
            b.$set("ngCloak", undefined);
            a.removeClass("ng-cloak");
        }
    });
    var xg = [ function() {
        return {
            restrict: "A",
            scope: true,
            controller: "@",
            priority: 500
        };
    } ];
    var yg = {};
    var zg = {
        blur: true,
        focus: true
    };
    w("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "), function(a) {
        var b = Sc("ng-" + a);
        yg[b] = [ "$parse", "$rootScope", function(c, d) {
            return {
                restrict: "A",
                compile: function(e, f) {
                    var g = c(f[b]);
                    return function b(c, e) {
                        e.on(a, function(b) {
                            var e = function() {
                                g(c, {
                                    $event: b
                                });
                            };
                            if (zg[a] && d.$$phase) {
                                c.$evalAsync(e);
                            } else {
                                c.$apply(e);
                            }
                        });
                    };
                }
            };
        } ];
    });
    var Ag = [ "$animate", "$compile", function(a, b) {
        return {
            multiElement: true,
            transclude: "element",
            priority: 600,
            terminal: true,
            restrict: "A",
            $$tlb: true,
            link: function(c, d, e, f, g) {
                var h, i, j;
                c.$watch(e.ngIf, function c(f) {
                    if (f) {
                        if (!i) {
                            g(function(c, f) {
                                i = f;
                                c[c.length++] = b.$$createComment("end ngIf", e.ngIf);
                                h = {
                                    clone: c
                                };
                                a.enter(c, d.parent(), d);
                            });
                        }
                    } else {
                        if (j) {
                            j.remove();
                            j = null;
                        }
                        if (i) {
                            i.$destroy();
                            i = null;
                        }
                        if (h) {
                            j = Ua(h.clone);
                            a.leave(j).done(function(a) {
                                if (a !== false) j = null;
                            });
                            h = null;
                        }
                    }
                });
            }
        };
    } ];
    var Bg = [ "$templateRequest", "$anchorScroll", "$animate", function(a, b, c) {
        return {
            restrict: "ECA",
            priority: 400,
            terminal: true,
            transclude: "element",
            controller: s.noop,
            compile: function(d, e) {
                var f = e.ngInclude || e.src, g = e.onload || "", h = e.autoscroll;
                return function(d, e, i, j, k) {
                    var l = 0, m, n, o;
                    var p = function() {
                        if (n) {
                            n.remove();
                            n = null;
                        }
                        if (m) {
                            m.$destroy();
                            m = null;
                        }
                        if (o) {
                            c.leave(o).done(function(a) {
                                if (a !== false) n = null;
                            });
                            n = o;
                            o = null;
                        }
                    };
                    d.$watch(f, function f(i) {
                        var n = function(a) {
                            if (a !== false && M(h) && (!h || d.$eval(h))) {
                                b();
                            }
                        };
                        var q = ++l;
                        if (i) {
                            a(i, true).then(function(a) {
                                if (d.$$destroyed) return;
                                if (q !== l) return;
                                var b = d.$new();
                                j.template = a;
                                var f = k(b, function(a) {
                                    p();
                                    c.enter(a, null, e).done(n);
                                });
                                m = b;
                                o = f;
                                m.$emit("$includeContentLoaded", i);
                                d.$eval(g);
                            }, function() {
                                if (d.$$destroyed) return;
                                if (q === l) {
                                    p();
                                    d.$emit("$includeContentError", i);
                                }
                            });
                            d.$emit("$includeContentRequested", i);
                        } else {
                            p();
                            j.template = null;
                        }
                    });
                };
            }
        };
    } ];
    var Cg = [ "$compile", function(b) {
        return {
            restrict: "ECA",
            priority: -400,
            require: "ngInclude",
            link: function(c, d, e, f) {
                if (p.call(d[0]).match(/SVG/)) {
                    d.empty();
                    b(Ab(f.template, a.document).childNodes)(c, function a(b) {
                        d.append(b);
                    }, {
                        futureParentElement: d
                    });
                    return;
                }
                d.html(f.template);
                b(d.contents())(c);
            }
        };
    } ];
    var Dg = uf({
        priority: 450,
        compile: function() {
            return {
                pre: function(a, b, c) {
                    a.$eval(c.ngInit);
                }
            };
        }
    });
    var Eg = function() {
        return {
            restrict: "A",
            priority: 100,
            require: "ngModel",
            link: function(a, b, c, d) {
                var e = c.ngList || ", ";
                var f = c.ngTrim !== "false";
                var g = f ? da(e) : e;
                var h = function(a) {
                    if (L(a)) return;
                    var b = [];
                    if (a) {
                        w(a.split(g), function(a) {
                            if (a) b.push(f ? da(a) : a);
                        });
                    }
                    return b;
                };
                d.$parsers.push(h);
                d.$formatters.push(function(a) {
                    if (S(a)) {
                        return a.join(e);
                    }
                    return undefined;
                });
                d.$isEmpty = function(a) {
                    return !a || !a.length;
                };
            }
        };
    };
    var Fg = "ng-valid", Gg = "ng-invalid", Hg = "ng-pristine", Ig = "ng-dirty", Jg = "ng-untouched", Kg = "ng-touched", Lg = "ng-empty", Mg = "ng-not-empty";
    var Ng = b("ngModel");
    Og.$inject = [ "$scope", "$exceptionHandler", "$attrs", "$element", "$parse", "$animate", "$timeout", "$q", "$interpolate" ];
    function Og(a, b, c, d, e, f, g, h, i) {
        this.$viewValue = Number.NaN;
        this.$modelValue = Number.NaN;
        this.$$rawModelValue = undefined;
        this.$validators = {};
        this.$asyncValidators = {};
        this.$parsers = [];
        this.$formatters = [];
        this.$viewChangeListeners = [];
        this.$untouched = true;
        this.$touched = false;
        this.$pristine = true;
        this.$dirty = false;
        this.$valid = true;
        this.$invalid = false;
        this.$error = {};
        this.$$success = {};
        this.$pending = undefined;
        this.$name = i(c.name || "", false)(a);
        this.$$parentForm = xf;
        this.$options = Rg;
        this.$$parsedNgModel = e(c.ngModel);
        this.$$parsedNgModelAssign = this.$$parsedNgModel.assign;
        this.$$ngModelGet = this.$$parsedNgModel;
        this.$$ngModelSet = this.$$parsedNgModelAssign;
        this.$$pendingDebounce = null;
        this.$$parserValid = undefined;
        this.$$currentValidationRunId = 0;
        this.$$scope = a;
        this.$$attr = c;
        this.$$element = d;
        this.$$animate = f;
        this.$$timeout = g;
        this.$$parse = e;
        this.$$q = h;
        this.$$exceptionHandler = b;
        Ff(this);
        Pg(this);
    }
    Og.prototype = {
        $$initGetterSetters: function() {
            if (this.$options.getOption("getterSetter")) {
                var a = this.$$parse(this.$$attr.ngModel + "()"), b = this.$$parse(this.$$attr.ngModel + "($$$p)");
                this.$$ngModelGet = function(b) {
                    var c = this.$$parsedNgModel(b);
                    if (T(c)) {
                        c = a(b);
                    }
                    return c;
                };
                this.$$ngModelSet = function(a, c) {
                    if (T(this.$$parsedNgModel(a))) {
                        b(a, {
                            $$$p: c
                        });
                    } else {
                        this.$$parsedNgModelAssign(a, c);
                    }
                };
            } else if (!this.$$parsedNgModel.assign) {
                throw Ng("nonassign", "Expression '{0}' is non-assignable. Element: {1}", this.$$attr.ngModel, ya(this.$$element));
            }
        },
        $render: H,
        $isEmpty: function(a) {
            return L(a) || a === "" || a === null || a !== a;
        },
        $$updateEmptyClasses: function(a) {
            if (this.$isEmpty(a)) {
                this.$$animate.removeClass(this.$$element, Mg);
                this.$$animate.addClass(this.$$element, Lg);
            } else {
                this.$$animate.removeClass(this.$$element, Lg);
                this.$$animate.addClass(this.$$element, Mg);
            }
        },
        $setPristine: function() {
            this.$dirty = false;
            this.$pristine = true;
            this.$$animate.removeClass(this.$$element, Ig);
            this.$$animate.addClass(this.$$element, Hg);
        },
        $setDirty: function() {
            this.$dirty = true;
            this.$pristine = false;
            this.$$animate.removeClass(this.$$element, Hg);
            this.$$animate.addClass(this.$$element, Ig);
            this.$$parentForm.$setDirty();
        },
        $setUntouched: function() {
            this.$touched = false;
            this.$untouched = true;
            this.$$animate.setClass(this.$$element, Jg, Kg);
        },
        $setTouched: function() {
            this.$touched = true;
            this.$untouched = false;
            this.$$animate.setClass(this.$$element, Kg, Jg);
        },
        $rollbackViewValue: function() {
            this.$$timeout.cancel(this.$$pendingDebounce);
            this.$viewValue = this.$$lastCommittedViewValue;
            this.$render();
        },
        $validate: function() {
            if (F(this.$modelValue)) {
                return;
            }
            var a = this.$$lastCommittedViewValue;
            var b = this.$$rawModelValue;
            var c = this.$valid;
            var d = this.$modelValue;
            var e = this.$options.getOption("allowInvalid");
            var f = this;
            this.$$runValidators(b, a, function(a) {
                if (!e && c !== a) {
                    f.$modelValue = a ? b : undefined;
                    if (f.$modelValue !== d) {
                        f.$$writeModelToScope();
                    }
                }
            });
        },
        $$runValidators: function(a, b, c) {
            this.$$currentValidationRunId++;
            var d = this.$$currentValidationRunId;
            var e = this;
            if (!f()) {
                j(false);
                return;
            }
            if (!g()) {
                j(false);
                return;
            }
            h();
            function f() {
                var a = e.$$parserName || "parse";
                if (L(e.$$parserValid)) {
                    i(a, null);
                } else {
                    if (!e.$$parserValid) {
                        w(e.$validators, function(a, b) {
                            i(b, null);
                        });
                        w(e.$asyncValidators, function(a, b) {
                            i(b, null);
                        });
                    }
                    i(a, e.$$parserValid);
                    return e.$$parserValid;
                }
                return true;
            }
            function g() {
                var c = true;
                w(e.$validators, function(d, e) {
                    var f = Boolean(d(a, b));
                    c = c && f;
                    i(e, f);
                });
                if (!c) {
                    w(e.$asyncValidators, function(a, b) {
                        i(b, null);
                    });
                    return false;
                }
                return true;
            }
            function h() {
                var c = [];
                var d = true;
                w(e.$asyncValidators, function(e, f) {
                    var g = e(a, b);
                    if (!_(g)) {
                        throw Ng("nopromise", "Expected asynchronous validator to return a promise but got '{0}' instead.", g);
                    }
                    i(f, undefined);
                    c.push(g.then(function() {
                        i(f, true);
                    }, function() {
                        d = false;
                        i(f, false);
                    }));
                });
                if (!c.length) {
                    j(true);
                } else {
                    e.$$q.all(c).then(function() {
                        j(d);
                    }, H);
                }
            }
            function i(a, b) {
                if (d === e.$$currentValidationRunId) {
                    e.$setValidity(a, b);
                }
            }
            function j(a) {
                if (d === e.$$currentValidationRunId) {
                    c(a);
                }
            }
        },
        $commitViewValue: function() {
            var a = this.$viewValue;
            this.$$timeout.cancel(this.$$pendingDebounce);
            if (this.$$lastCommittedViewValue === a && (a !== "" || !this.$$hasNativeValidators)) {
                return;
            }
            this.$$updateEmptyClasses(a);
            this.$$lastCommittedViewValue = a;
            if (this.$pristine) {
                this.$setDirty();
            }
            this.$$parseAndValidate();
        },
        $$parseAndValidate: function() {
            var a = this.$$lastCommittedViewValue;
            var b = a;
            var c = this;
            this.$$parserValid = L(b) ? undefined : true;
            if (this.$$parserValid) {
                for (var d = 0; d < this.$parsers.length; d++) {
                    b = this.$parsers[d](b);
                    if (L(b)) {
                        this.$$parserValid = false;
                        break;
                    }
                }
            }
            if (F(this.$modelValue)) {
                this.$modelValue = this.$$ngModelGet(this.$$scope);
            }
            var e = this.$modelValue;
            var f = this.$options.getOption("allowInvalid");
            this.$$rawModelValue = b;
            if (f) {
                this.$modelValue = b;
                g();
            }
            this.$$runValidators(b, this.$$lastCommittedViewValue, function(a) {
                if (!f) {
                    c.$modelValue = a ? b : undefined;
                    g();
                }
            });
            function g() {
                if (c.$modelValue !== e) {
                    c.$$writeModelToScope();
                }
            }
        },
        $$writeModelToScope: function() {
            this.$$ngModelSet(this.$$scope, this.$modelValue);
            w(this.$viewChangeListeners, function(a) {
                try {
                    a();
                } catch (a) {
                    this.$$exceptionHandler(a);
                }
            }, this);
        },
        $setViewValue: function(a, b) {
            this.$viewValue = a;
            if (this.$options.getOption("updateOnDefault")) {
                this.$$debounceViewValueCommit(b);
            }
        },
        $$debounceViewValueCommit: function(a) {
            var b = this.$options.getOption("debounce");
            if (Q(b[a])) {
                b = b[a];
            } else if (Q(b["default"])) {
                b = b["default"];
            }
            this.$$timeout.cancel(this.$$pendingDebounce);
            var c = this;
            if (b > 0) {
                this.$$pendingDebounce = this.$$timeout(function() {
                    c.$commitViewValue();
                }, b);
            } else if (this.$$scope.$root.$$phase) {
                this.$commitViewValue();
            } else {
                this.$$scope.$apply(function() {
                    c.$commitViewValue();
                });
            }
        },
        $overrideModelOptions: function(a) {
            this.$options = this.$options.createChild(a);
        }
    };
    function Pg(a) {
        a.$$scope.$watch(function b() {
            var c = a.$$ngModelGet(a.$$scope);
            if (c !== a.$modelValue && (a.$modelValue === a.$modelValue || c === c)) {
                a.$modelValue = a.$$rawModelValue = c;
                a.$$parserValid = undefined;
                var d = a.$formatters, e = d.length;
                var f = c;
                while (e--) {
                    f = d[e](f);
                }
                if (a.$viewValue !== f) {
                    a.$$updateEmptyClasses(f);
                    a.$viewValue = a.$$lastCommittedViewValue = f;
                    a.$render();
                    a.$$runValidators(a.$modelValue, a.$viewValue, H);
                }
            }
            return c;
        });
    }
    Gf({
        clazz: Og,
        set: function(a, b) {
            a[b] = true;
        },
        unset: function(a, b) {
            delete a[b];
        }
    });
    var Qg = [ "$rootScope", function(a) {
        return {
            restrict: "A",
            require: [ "ngModel", "^?form", "^?ngModelOptions" ],
            controller: Og,
            priority: 1,
            compile: function b(c) {
                c.addClass(Hg).addClass(Jg).addClass(Fg);
                return {
                    pre: function a(b, c, d, e) {
                        var f = e[0], g = e[1] || f.$$parentForm, h = e[2];
                        if (h) {
                            f.$options = h.$options;
                        }
                        f.$$initGetterSetters();
                        g.$addControl(f);
                        d.$observe("name", function(a) {
                            if (f.$name !== a) {
                                f.$$parentForm.$$renameControl(f, a);
                            }
                        });
                        b.$on("$destroy", function() {
                            f.$$parentForm.$removeControl(f);
                        });
                    },
                    post: function b(c, d, e, f) {
                        var g = f[0];
                        if (g.$options.getOption("updateOn")) {
                            d.on(g.$options.getOption("updateOn"), function(a) {
                                g.$$debounceViewValueCommit(a && a.type);
                            });
                        }
                        function h() {
                            g.$setTouched();
                        }
                        d.on("blur", function() {
                            if (g.$touched) return;
                            if (a.$$phase) {
                                c.$evalAsync(h);
                            } else {
                                c.$apply(h);
                            }
                        });
                    }
                };
            }
        };
    } ];
    var Rg;
    var Sg = /(\s+|^)default(\s+|$)/;
    function Tg(a) {
        this.$$options = a;
    }
    Tg.prototype = {
        getOption: function(a) {
            return this.$$options[a];
        },
        createChild: function(a) {
            var b = false;
            a = C({}, a);
            w(a, function(c, d) {
                if (c === "$inherit") {
                    if (d === "*") {
                        b = true;
                    } else {
                        a[d] = this.$$options[d];
                        if (d === "updateOn") {
                            a.updateOnDefault = this.$$options.updateOnDefault;
                        }
                    }
                } else {
                    if (d === "updateOn") {
                        a.updateOnDefault = false;
                        a[d] = da(c.replace(Sg, function() {
                            a.updateOnDefault = true;
                            return " ";
                        }));
                    }
                }
            }, this);
            if (b) {
                delete a["*"];
                Vg(a, this.$$options);
            }
            Vg(a, Rg.$$options);
            return new Tg(a);
        }
    };
    Rg = new Tg({
        updateOn: "",
        updateOnDefault: true,
        debounce: 0,
        getterSetter: false,
        allowInvalid: false,
        timezone: null
    });
    var Ug = function() {
        a.$inject = [ "$attrs", "$scope" ];
        function a(a, b) {
            this.$$attrs = a;
            this.$$scope = b;
        }
        a.prototype = {
            $onInit: function() {
                var a = this.parentCtrl ? this.parentCtrl.$options : Rg;
                var b = this.$$scope.$eval(this.$$attrs.ngModelOptions);
                this.$options = a.createChild(b);
            }
        };
        return {
            restrict: "A",
            priority: 10,
            require: {
                parentCtrl: "?^^ngModelOptions"
            },
            bindToController: true,
            controller: a
        };
    };
    function Vg(a, b) {
        w(b, function(b, c) {
            if (!M(a[c])) {
                a[c] = b;
            }
        });
    }
    var Wg = uf({
        terminal: true,
        priority: 1e3
    });
    var Xg = b("ngOptions");
    var Yg = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([$\w][$\w]*)|(?:\(\s*([$\w][$\w]*)\s*,\s*([$\w][$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/;
    var Zg = [ "$compile", "$document", "$parse", function(b, c, d) {
        function e(a, b, c) {
            var e = a.match(Yg);
            if (!e) {
                throw Xg("iexp", "Expected expression in form of " + "'_select_ (as _label_)? for (_key_,)?_value_ in _collection_'" + " but got '{0}'. Element: {1}", a, ya(b));
            }
            var f = e[5] || e[7];
            var g = e[6];
            var h = / as /.test(e[0]) && e[1];
            var i = e[9];
            var j = d(e[2] ? e[1] : f);
            var k = h && d(h);
            var l = k || j;
            var m = i && d(i);
            var n = i ? function(a, b) {
                return m(c, b);
            } : function a(b) {
                return dc(b);
            };
            var o = function(a, b) {
                return n(a, u(a, b));
            };
            var p = d(e[2] || e[1]);
            var q = d(e[3] || "");
            var r = d(e[4] || "");
            var s = d(e[8]);
            var t = {};
            var u = g ? function(a, b) {
                t[g] = b;
                t[f] = a;
                return t;
            } : function(a) {
                t[f] = a;
                return t;
            };
            function w(a, b, c, d, e) {
                this.selectValue = a;
                this.viewValue = b;
                this.label = c;
                this.group = d;
                this.disabled = e;
            }
            function x(a) {
                var b;
                if (!g && v(a)) {
                    b = a;
                } else {
                    b = [];
                    for (var c in a) {
                        if (a.hasOwnProperty(c) && c.charAt(0) !== "$") {
                            b.push(c);
                        }
                    }
                }
                return b;
            }
            return {
                trackBy: i,
                getTrackByValue: o,
                getWatchables: d(s, function(a) {
                    var b = [];
                    a = a || [];
                    var d = x(a);
                    var f = d.length;
                    for (var g = 0; g < f; g++) {
                        var h = a === d ? g : d[g];
                        var i = a[h];
                        var j = u(i, h);
                        var k = n(i, j);
                        b.push(k);
                        if (e[2] || e[1]) {
                            var l = p(c, j);
                            b.push(l);
                        }
                        if (e[4]) {
                            var m = r(c, j);
                            b.push(m);
                        }
                    }
                    return b;
                }),
                getOptions: function() {
                    var a = [];
                    var b = {};
                    var d = s(c) || [];
                    var e = x(d);
                    var f = e.length;
                    for (var g = 0; g < f; g++) {
                        var h = d === e ? g : e[g];
                        var j = d[h];
                        var k = u(j, h);
                        var m = l(c, k);
                        var t = n(m, k);
                        var v = p(c, k);
                        var y = q(c, k);
                        var z = r(c, k);
                        var A = new w(t, m, v, y, z);
                        a.push(A);
                        b[t] = A;
                    }
                    return {
                        items: a,
                        selectValueMap: b,
                        getOptionFromViewValue: function(a) {
                            return b[o(a)];
                        },
                        getViewValueFromOption: function(a) {
                            return i ? ka(a.viewValue) : a.viewValue;
                        }
                    };
                }
            };
        }
        var f = a.document.createElement("option"), g = a.document.createElement("optgroup");
        function h(a, d, h, i) {
            var j = i[0];
            var l = i[1];
            var m = h.multiple;
            for (var n = 0, o = d.children(), p = o.length; n < p; n++) {
                if (o[n].value === "") {
                    j.hasEmptyOption = true;
                    j.emptyOption = o.eq(n);
                    break;
                }
            }
            var q = !!j.emptyOption;
            var r = k(f.cloneNode(false));
            r.val("?");
            var s;
            var t = e(h.ngOptions, d, a);
            var u = c[0].createDocumentFragment();
            j.generateUnknownOptionValue = function(a) {
                return "?";
            };
            if (!m) {
                j.writeValue = function a(b) {
                    var c = s.selectValueMap[d.val()];
                    var e = s.getOptionFromViewValue(b);
                    if (c) c.element.removeAttribute("selected");
                    if (e) {
                        if (d[0].value !== e.selectValue) {
                            j.removeUnknownOption();
                            j.unselectEmptyOption();
                            d[0].value = e.selectValue;
                            e.element.selected = true;
                        }
                        e.element.setAttribute("selected", "selected");
                    } else {
                        if (q) {
                            j.selectEmptyOption();
                        } else if (j.unknownOption.parent().length) {
                            j.updateUnknownOption(b);
                        } else {
                            j.renderUnknownOption(b);
                        }
                    }
                };
                j.readValue = function a() {
                    var b = s.selectValueMap[d.val()];
                    if (b && !b.disabled) {
                        j.unselectEmptyOption();
                        j.removeUnknownOption();
                        return s.getViewValueFromOption(b);
                    }
                    return null;
                };
                if (t.trackBy) {
                    a.$watch(function() {
                        return t.getTrackByValue(l.$viewValue);
                    }, function() {
                        l.$render();
                    });
                }
            } else {
                j.writeValue = function a(b) {
                    var c = b && b.map(x) || [];
                    s.items.forEach(function(a) {
                        if (a.element.selected && !ia(c, a)) {
                            a.element.selected = false;
                        }
                    });
                };
                j.readValue = function a() {
                    var b = d.val() || [], c = [];
                    w(b, function(a) {
                        var b = s.selectValueMap[a];
                        if (b && !b.disabled) c.push(s.getViewValueFromOption(b));
                    });
                    return c;
                };
                if (t.trackBy) {
                    a.$watchCollection(function() {
                        if (S(l.$viewValue)) {
                            return l.$viewValue.map(function(a) {
                                return t.getTrackByValue(a);
                            });
                        }
                    }, function() {
                        l.$render();
                    });
                }
            }
            if (q) {
                j.emptyOption.remove();
                b(j.emptyOption)(a);
                if (j.emptyOption[0].nodeType === $a) {
                    j.hasEmptyOption = false;
                    j.registerOption = function(a, b) {
                        if (b.val() === "") {
                            j.hasEmptyOption = true;
                            j.emptyOption = b;
                            j.emptyOption.removeClass("ng-scope");
                            l.$render();
                            b.on("$destroy", function() {
                                j.hasEmptyOption = false;
                                j.emptyOption = undefined;
                            });
                        }
                    };
                } else {
                    j.emptyOption.removeClass("ng-scope");
                }
            }
            d.empty();
            z();
            a.$watchCollection(t.getWatchables, z);
            function v(a, b) {
                var c = f.cloneNode(false);
                b.appendChild(c);
                y(a, c);
            }
            function x(a) {
                var b = s.getOptionFromViewValue(a);
                var c = b && b.element;
                if (c && !c.selected) c.selected = true;
                return b;
            }
            function y(a, b) {
                a.element = b;
                b.disabled = a.disabled;
                if (a.label !== b.label) {
                    b.label = a.label;
                    b.textContent = a.label;
                }
                b.value = a.selectValue;
            }
            function z() {
                var a = s && j.readValue();
                if (s) {
                    for (var b = s.items.length - 1; b >= 0; b--) {
                        var c = s.items[b];
                        if (M(c.group)) {
                            Sb(c.element.parentNode);
                        } else {
                            Sb(c.element);
                        }
                    }
                }
                s = t.getOptions();
                var e = {};
                if (q) {
                    d.prepend(j.emptyOption);
                }
                s.items.forEach(function a(b) {
                    var c;
                    if (M(b.group)) {
                        c = e[b.group];
                        if (!c) {
                            c = g.cloneNode(false);
                            u.appendChild(c);
                            c.label = b.group === null ? "null" : b.group;
                            e[b.group] = c;
                        }
                        v(b, c);
                    } else {
                        v(b, u);
                    }
                });
                d[0].appendChild(u);
                l.$render();
                if (!l.$isEmpty(a)) {
                    var f = j.readValue();
                    var h = t.trackBy || m;
                    if (h ? !la(a, f) : a !== f) {
                        l.$setViewValue(f);
                        l.$render();
                    }
                }
            }
        }
        return {
            restrict: "A",
            terminal: true,
            require: [ "select", "ngModel" ],
            link: {
                pre: function a(b, c, d, e) {
                    e[0].registerOption = H;
                },
                post: h
            }
        };
    } ];
    var $g = [ "$locale", "$interpolate", "$log", function(a, b, c) {
        var d = /{}/g, e = /^when(Minus)?(.+)$/;
        return {
            link: function(g, h, i) {
                var j = i.count, k = i.$attr.when && h.attr(i.$attr.when), l = i.offset || 0, m = g.$eval(k) || {}, n = {}, o = b.startSymbol(), p = b.endSymbol(), q = o + j + "-" + l + p, r = s.noop, t;
                w(i, function(a, b) {
                    var c = e.exec(b);
                    if (c) {
                        var d = (c[1] ? "-" : "") + f(c[2]);
                        m[d] = h.attr(i.$attr[b]);
                    }
                });
                w(m, function(a, c) {
                    n[c] = b(a.replace(d, q));
                });
                g.$watch(j, function b(d) {
                    var e = parseFloat(d);
                    var f = F(e);
                    if (!f && !(e in m)) {
                        e = a.pluralCat(e - l);
                    }
                    if (e !== t && !(f && F(t))) {
                        r();
                        var h = n[e];
                        if (L(h)) {
                            if (d != null) {
                                c.debug("ngPluralize: no rule defined for '" + e + "' in " + k);
                            }
                            r = H;
                            u();
                        } else {
                            r = g.$watch(h, u);
                        }
                        t = e;
                    }
                });
                function u(a) {
                    h.text(a || "");
                }
            }
        };
    } ];
    var _g = [ "$parse", "$animate", "$compile", function(a, c, d) {
        var f = "$$NG_REMOVED";
        var g = b("ngRepeat");
        var h = function(a, b, c, d, e, f, g) {
            a[c] = d;
            if (e) a[e] = f;
            a.$index = b;
            a.$first = b === 0;
            a.$last = b === g - 1;
            a.$middle = !(a.$first || a.$last);
            a.$odd = !(a.$even = (b & 1) === 0);
        };
        var i = function(a) {
            return a.clone[0];
        };
        var j = function(a) {
            return a.clone[a.clone.length - 1];
        };
        return {
            restrict: "A",
            multiElement: true,
            transclude: "element",
            priority: 1e3,
            terminal: true,
            $$tlb: true,
            compile: function b(k, l) {
                var m = l.ngRepeat;
                var n = d.$$createComment("end ngRepeat", m);
                var o = m.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);
                if (!o) {
                    throw g("iexp", "Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.", m);
                }
                var p = o[1];
                var q = o[2];
                var r = o[3];
                var s = o[4];
                o = p.match(/^(?:(\s*[$\w]+)|\(\s*([$\w]+)\s*,\s*([$\w]+)\s*\))$/);
                if (!o) {
                    throw g("iidexp", "'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _value_)' expression, but got '{0}'.", p);
                }
                var t = o[3] || o[1];
                var u = o[2];
                if (r && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(r) || /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(r))) {
                    throw g("badident", "alias '{0}' is invalid --- must be a valid JS identifier which is not a reserved name.", r);
                }
                var x, y, z, A;
                var B = {
                    $id: dc
                };
                if (s) {
                    x = a(s);
                } else {
                    z = function(a, b) {
                        return dc(b);
                    };
                    A = function(a) {
                        return a;
                    };
                }
                return function a(b, d, k, l, o) {
                    if (x) {
                        y = function(a, c, d) {
                            if (u) B[u] = a;
                            B[t] = c;
                            B.$index = d;
                            return x(b, B);
                        };
                    }
                    var p = Va();
                    b.$watchCollection(q, function a(k) {
                        var l, q, s = d[0], x, B = Va(), C, D, E, F, G, H, I, J, K;
                        if (r) {
                            b[r] = k;
                        }
                        if (v(k)) {
                            H = k;
                            G = y || z;
                        } else {
                            G = y || A;
                            H = [];
                            for (var L in k) {
                                if (e.call(k, L) && L.charAt(0) !== "$") {
                                    H.push(L);
                                }
                            }
                        }
                        C = H.length;
                        J = new Array(C);
                        for (l = 0; l < C; l++) {
                            D = k === H ? l : H[l];
                            E = k[D];
                            F = G(D, E, l);
                            if (p[F]) {
                                I = p[F];
                                delete p[F];
                                B[F] = I;
                                J[l] = I;
                            } else if (B[F]) {
                                w(J, function(a) {
                                    if (a && a.scope) p[a.id] = a;
                                });
                                throw g("dupes", "Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}", m, F, E);
                            } else {
                                J[l] = {
                                    id: F,
                                    scope: undefined,
                                    clone: undefined
                                };
                                B[F] = true;
                            }
                        }
                        for (var M in p) {
                            I = p[M];
                            K = Ua(I.clone);
                            c.leave(K);
                            if (K[0].parentNode) {
                                for (l = 0, q = K.length; l < q; l++) {
                                    K[l][f] = true;
                                }
                            }
                            I.scope.$destroy();
                        }
                        for (l = 0; l < C; l++) {
                            D = k === H ? l : H[l];
                            E = k[D];
                            I = J[l];
                            if (I.scope) {
                                x = s;
                                do {
                                    x = x.nextSibling;
                                } while (x && x[f]);
                                if (i(I) !== x) {
                                    c.move(Ua(I.clone), null, s);
                                }
                                s = j(I);
                                h(I.scope, l, t, E, u, D, C);
                            } else {
                                o(function a(b, d) {
                                    I.scope = d;
                                    var e = n.cloneNode(false);
                                    b[b.length++] = e;
                                    c.enter(b, null, s);
                                    s = e;
                                    I.clone = b;
                                    B[I.id] = I;
                                    h(I.scope, l, t, E, u, D, C);
                                });
                            }
                        }
                        p = B;
                    });
                };
            }
        };
    } ];
    var ah = "ng-hide";
    var bh = "ng-hide-animate";
    var ch = [ "$animate", function(a) {
        return {
            restrict: "A",
            multiElement: true,
            link: function(b, c, d) {
                b.$watch(d.ngShow, function b(d) {
                    a[d ? "removeClass" : "addClass"](c, ah, {
                        tempClasses: bh
                    });
                });
            }
        };
    } ];
    var dh = [ "$animate", function(a) {
        return {
            restrict: "A",
            multiElement: true,
            link: function(b, c, d) {
                b.$watch(d.ngHide, function b(d) {
                    a[d ? "addClass" : "removeClass"](c, ah, {
                        tempClasses: bh
                    });
                });
            }
        };
    } ];
    var eh = uf(function(a, b, c) {
        a.$watch(c.ngStyle, function a(c, d) {
            if (d && c !== d) {
                w(d, function(a, c) {
                    b.css(c, "");
                });
            }
            if (c) b.css(c);
        }, true);
    });
    var fh = [ "$animate", "$compile", function(a, b) {
        return {
            require: "ngSwitch",
            controller: [ "$scope", function a() {
                this.cases = {};
            } ],
            link: function(c, d, e, f) {
                var g = e.ngSwitch || e.on, h = [], i = [], j = [], k = [];
                var l = function(a, b) {
                    return function(c) {
                        if (c !== false) a.splice(b, 1);
                    };
                };
                c.$watch(g, function c(d) {
                    var e, g;
                    while (j.length) {
                        a.cancel(j.pop());
                    }
                    for (e = 0, g = k.length; e < g; ++e) {
                        var m = Ua(i[e].clone);
                        k[e].$destroy();
                        var n = j[e] = a.leave(m);
                        n.done(l(j, e));
                    }
                    i.length = 0;
                    k.length = 0;
                    if (h = f.cases["!" + d] || f.cases["?"]) {
                        w(h, function(c) {
                            c.transclude(function(d, e) {
                                k.push(e);
                                var f = c.element;
                                d[d.length++] = b.$$createComment("end ngSwitchWhen");
                                var g = {
                                    clone: d
                                };
                                i.push(g);
                                a.enter(d, f.parent(), f);
                            });
                        });
                    }
                });
            }
        };
    } ];
    var gh = uf({
        transclude: "element",
        priority: 1200,
        require: "^ngSwitch",
        multiElement: true,
        link: function(a, b, c, d, e) {
            var f = c.ngSwitchWhen.split(c.ngSwitchWhenSeparator).sort().filter(function(a, b, c) {
                return c[b - 1] !== a;
            });
            w(f, function(a) {
                d.cases["!" + a] = d.cases["!" + a] || [];
                d.cases["!" + a].push({
                    transclude: e,
                    element: b
                });
            });
        }
    });
    var hh = uf({
        transclude: "element",
        priority: 1200,
        require: "^ngSwitch",
        multiElement: true,
        link: function(a, b, c, d, e) {
            d.cases["?"] = d.cases["?"] || [];
            d.cases["?"].push({
                transclude: e,
                element: b
            });
        }
    });
    var ih = b("ngTransclude");
    var jh = [ "$compile", function(a) {
        return {
            restrict: "EAC",
            terminal: true,
            compile: function b(c) {
                var d = a(c.contents());
                c.empty();
                return function a(b, c, e, f, g) {
                    if (!g) {
                        throw ih("orphan", "Illegal use of ngTransclude directive in the template! " + "No parent directive that requires a transclusion found. " + "Element: {0}", ya(c));
                    }
                    if (e.ngTransclude === e.$attr.ngTransclude) {
                        e.ngTransclude = "";
                    }
                    var h = e.ngTransclude || e.ngTranscludeSlot;
                    g(i, null, h);
                    if (h && !g.isSlotFilled(h)) {
                        j();
                    }
                    function i(a, b) {
                        if (a.length && k(a)) {
                            c.append(a);
                        } else {
                            j();
                            b.$destroy();
                        }
                    }
                    function j() {
                        d(b, function(a) {
                            c.append(a);
                        });
                    }
                    function k(a) {
                        for (var b = 0, c = a.length; b < c; b++) {
                            var d = a[b];
                            if (d.nodeType !== Za || d.nodeValue.trim()) {
                                return true;
                            }
                        }
                    }
                };
            }
        };
    } ];
    var kh = [ "$templateCache", function(a) {
        return {
            restrict: "E",
            terminal: true,
            compile: function(b, c) {
                if (c.type === "text/ng-template") {
                    var d = c.id, e = b[0].text;
                    a.put(d, e);
                }
            }
        };
    } ];
    var lh = {
        $setViewValue: H,
        $render: H
    };
    var mh = [ "$element", "$scope", function(b, c) {
        var d = this, e = new gc();
        d.selectValueMap = {};
        d.ngModelCtrl = lh;
        d.multiple = false;
        d.unknownOption = k(a.document.createElement("option"));
        d.hasEmptyOption = false;
        d.emptyOption = undefined;
        d.renderUnknownOption = function(a) {
            var c = d.generateUnknownOptionValue(a);
            d.unknownOption.val(c);
            b.prepend(d.unknownOption);
            j(d.unknownOption);
            b.val(c);
        };
        d.updateUnknownOption = function(a) {
            var c = d.generateUnknownOptionValue(a);
            d.unknownOption.val(c);
            j(d.unknownOption);
            b.val(c);
        };
        d.generateUnknownOptionValue = function(a) {
            return "? " + dc(a) + " ?";
        };
        d.removeUnknownOption = function() {
            if (d.unknownOption.parent()) d.unknownOption.remove();
        };
        d.selectEmptyOption = function() {
            if (d.emptyOption) {
                b.val("");
                j(d.emptyOption);
            }
        };
        d.unselectEmptyOption = function() {
            if (d.hasEmptyOption) {
                d.emptyOption.removeAttr("selected");
            }
        };
        c.$on("$destroy", function() {
            d.renderUnknownOption = H;
        });
        d.readValue = function a() {
            var c = b.val();
            var e = c in d.selectValueMap ? d.selectValueMap[c] : c;
            if (d.hasOption(e)) {
                return e;
            }
            return null;
        };
        d.writeValue = function a(c) {
            var e = b[0].options[b[0].selectedIndex];
            if (e) e.removeAttribute("selected");
            if (d.hasOption(c)) {
                d.removeUnknownOption();
                var f = dc(c);
                b.val(f in d.selectValueMap ? f : c);
                var g = b[0].options[b[0].selectedIndex];
                j(k(g));
            } else {
                if (c == null && d.emptyOption) {
                    d.removeUnknownOption();
                    d.selectEmptyOption();
                } else if (d.unknownOption.parent().length) {
                    d.updateUnknownOption(c);
                } else {
                    d.renderUnknownOption(c);
                }
            }
        };
        d.addOption = function(a, b) {
            if (b[0].nodeType === $a) return;
            Sa(a, '"option value"');
            if (a === "") {
                d.hasEmptyOption = true;
                d.emptyOption = b;
            }
            var c = e.get(a) || 0;
            e.set(a, c + 1);
            g();
        };
        d.removeOption = function(a) {
            var b = e.get(a);
            if (b) {
                if (b === 1) {
                    e.delete(a);
                    if (a === "") {
                        d.hasEmptyOption = false;
                        d.emptyOption = undefined;
                    }
                } else {
                    e.set(a, b - 1);
                }
            }
        };
        d.hasOption = function(a) {
            return !!e.get(a);
        };
        var f = false;
        function g() {
            if (f) return;
            f = true;
            c.$$postDigest(function() {
                f = false;
                d.ngModelCtrl.$render();
            });
        }
        var h = false;
        function i(a) {
            if (h) return;
            h = true;
            c.$$postDigest(function() {
                if (c.$$destroyed) return;
                h = false;
                d.ngModelCtrl.$setViewValue(d.readValue());
                if (a) d.ngModelCtrl.$render();
            });
        }
        d.registerOption = function(a, b, c, e, f) {
            if (c.$attr.ngValue) {
                var h, j = NaN;
                c.$observe("value", function a(c) {
                    var e;
                    var f = b.prop("selected");
                    if (M(j)) {
                        d.removeOption(h);
                        delete d.selectValueMap[j];
                        e = true;
                    }
                    j = dc(c);
                    h = c;
                    d.selectValueMap[j] = c;
                    d.addOption(c, b);
                    b.attr("value", j);
                    if (e && f) {
                        i();
                    }
                });
            } else if (e) {
                c.$observe("value", function a(c) {
                    d.readValue();
                    var e;
                    var f = b.prop("selected");
                    if (M(h)) {
                        d.removeOption(h);
                        e = true;
                    }
                    h = c;
                    d.addOption(c, b);
                    if (e && f) {
                        i();
                    }
                });
            } else if (f) {
                a.$watch(f, function a(e, f) {
                    c.$set("value", e);
                    var g = b.prop("selected");
                    if (f !== e) {
                        d.removeOption(f);
                    }
                    d.addOption(e, b);
                    if (f && g) {
                        i();
                    }
                });
            } else {
                d.addOption(c.value, b);
            }
            c.$observe("disabled", function(a) {
                if (a === "true" || a && b.prop("selected")) {
                    if (d.multiple) {
                        i(true);
                    } else {
                        d.ngModelCtrl.$setViewValue(null);
                        d.ngModelCtrl.$render();
                    }
                }
            });
            b.on("$destroy", function() {
                var a = d.readValue();
                var b = c.value;
                d.removeOption(b);
                g();
                if (d.multiple && a && a.indexOf(b) !== -1 || a === b) {
                    i(true);
                }
            });
        };
        function j(a) {
            a.prop("selected", true);
            a.attr("selected", true);
        }
    } ];
    var nh = function() {
        return {
            restrict: "E",
            require: [ "select", "?ngModel" ],
            controller: mh,
            priority: 1,
            link: {
                pre: a,
                post: b
            }
        };
        function a(a, b, c, d) {
            var e = d[0];
            var f = d[1];
            if (!f) {
                e.registerOption = H;
                return;
            }
            e.ngModelCtrl = f;
            b.on("change", function() {
                e.removeUnknownOption();
                a.$apply(function() {
                    f.$setViewValue(e.readValue());
                });
            });
            if (c.multiple) {
                e.multiple = true;
                e.readValue = function a() {
                    var c = [];
                    w(b.find("option"), function(a) {
                        if (a.selected && !a.disabled) {
                            var b = a.value;
                            c.push(b in e.selectValueMap ? e.selectValueMap[b] : b);
                        }
                    });
                    return c;
                };
                e.writeValue = function a(c) {
                    w(b.find("option"), function(a) {
                        a.selected = !!c && (ia(c, a.value) || ia(c, e.selectValueMap[a.value]));
                    });
                };
                var g, h = NaN;
                a.$watch(function a() {
                    if (h === f.$viewValue && !la(g, f.$viewValue)) {
                        g = cb(f.$viewValue);
                        f.$render();
                    }
                    h = f.$viewValue;
                });
                f.$isEmpty = function(a) {
                    return !a || a.length === 0;
                };
            }
        }
        function b(a, b, c, d) {
            var e = d[1];
            if (!e) return;
            var f = d[0];
            e.$render = function() {
                f.writeValue(e.$viewValue);
            };
        }
    };
    var oh = [ "$interpolate", function(a) {
        return {
            restrict: "E",
            priority: 100,
            compile: function(b, c) {
                var d, e;
                if (M(c.ngValue)) {} else if (M(c.value)) {
                    d = a(c.value, true);
                } else {
                    e = a(b.text(), true);
                    if (!e) {
                        c.$set("value", b.text());
                    }
                }
                return function(a, b, c) {
                    var f = "$selectController", g = b.parent(), h = g.data(f) || g.parent().data(f);
                    if (h) {
                        h.registerOption(a, b, c, d, e);
                    }
                };
            }
        };
    } ];
    var ph = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, b, c, d) {
                if (!d) return;
                c.required = true;
                d.$validators.required = function(a, b) {
                    return !c.required || !d.$isEmpty(b);
                };
                c.$observe("required", function() {
                    d.$validate();
                });
            }
        };
    };
    var qh = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, c, d, e) {
                if (!e) return;
                var f, g = d.ngPattern || d.pattern;
                d.$observe("pattern", function(a) {
                    if (P(a) && a.length > 0) {
                        a = new RegExp("^" + a + "$");
                    }
                    if (a && !a.test) {
                        throw b("ngPattern")("noregexp", "Expected {0} to be a RegExp but was {1}. Element: {2}", g, a, ya(c));
                    }
                    f = a || undefined;
                    e.$validate();
                });
                e.$validators.pattern = function(a, b) {
                    return e.$isEmpty(b) || L(f) || f.test(b);
                };
            }
        };
    };
    var rh = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, b, c, d) {
                if (!d) return;
                var e = -1;
                c.$observe("maxlength", function(a) {
                    var b = E(a);
                    e = F(b) ? -1 : b;
                    d.$validate();
                });
                d.$validators.maxlength = function(a, b) {
                    return e < 0 || d.$isEmpty(b) || b.length <= e;
                };
            }
        };
    };
    var sh = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, b, c, d) {
                if (!d) return;
                var e = 0;
                c.$observe("minlength", function(a) {
                    e = E(a) || 0;
                    d.$validate();
                });
                d.$validators.minlength = function(a, b) {
                    return d.$isEmpty(b) || b.length >= e;
                };
            }
        };
    };
    if (a.angular.bootstrap) {
        if (a.console) {
            console.log("WARNING: Tried to load angular more than once.");
        }
        return;
    }
    Pa();
    gb(s);
    s.module("ngLocale", [], [ "$provide", function(a) {
        var b = {
            ZERO: "zero",
            ONE: "one",
            TWO: "two",
            FEW: "few",
            MANY: "many",
            OTHER: "other"
        };
        function c(a) {
            a = a + "";
            var b = a.indexOf(".");
            return b == -1 ? 0 : a.length - b - 1;
        }
        function d(a, b) {
            var d = b;
            if (undefined === d) {
                d = Math.min(c(a), 3);
            }
            var e = Math.pow(10, d);
            var f = (a * e | 0) % e;
            return {
                v: d,
                f: f
            };
        }
        a.value("$locale", {
            DATETIME_FORMATS: {
                AMPMS: [ "AM", "PM" ],
                DAY: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
                ERANAMES: [ "Before Christ", "Anno Domini" ],
                ERAS: [ "BC", "AD" ],
                FIRSTDAYOFWEEK: 6,
                MONTH: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
                SHORTDAY: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
                SHORTMONTH: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ],
                STANDALONEMONTH: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
                WEEKENDRANGE: [ 5, 6 ],
                fullDate: "EEEE, MMMM d, y",
                longDate: "MMMM d, y",
                medium: "MMM d, y h:mm:ss a",
                mediumDate: "MMM d, y",
                mediumTime: "h:mm:ss a",
                short: "M/d/yy h:mm a",
                shortDate: "M/d/yy",
                shortTime: "h:mm a"
            },
            NUMBER_FORMATS: {
                CURRENCY_SYM: "$",
                DECIMAL_SEP: ".",
                GROUP_SEP: ",",
                PATTERNS: [ {
                    gSize: 3,
                    lgSize: 3,
                    maxFrac: 3,
                    minFrac: 0,
                    minInt: 1,
                    negPre: "-",
                    negSuf: "",
                    posPre: "",
                    posSuf: ""
                }, {
                    gSize: 3,
                    lgSize: 3,
                    maxFrac: 2,
                    minFrac: 2,
                    minInt: 1,
                    negPre: "-¤",
                    negSuf: "",
                    posPre: "¤",
                    posSuf: ""
                } ]
            },
            id: "en-us",
            localeID: "en_US",
            pluralCat: function(a, c) {
                var e = a | 0;
                var f = d(a, c);
                if (e == 1 && f.v == 0) {
                    return b.ONE;
                }
                return b.OTHER;
            }
        });
    } ]);
    k(function() {
        Ia(a.document, Ja);
    });
})(window);

!window.angular.$$csp().noInlineStyle && window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');

(function(a, b) {
    if (typeof define === "function" && define.amd) {
        define([ "iscroll", "platform" ], b);
    } else if (typeof exports === "object") {
        module.exports = b(require("iscroll"), require("platform"));
    } else {
        a.angularIscroll = b(a.IScroll, a.platform);
    }
})(this, function(a, b) {
    "use strict";
    o.$inject = [ "$rootScope", "$timeout", "$interval", "iScrollSignals", "iScrollService" ];
    var c = {
        disabled: "iscroll:disabled",
        enabled: "iscroll:enabled",
        refresh: "iscroll:refresh"
    }, d = {
        on: "iscroll-on",
        off: "iscroll-off"
    }, e = [ "beforeScrollStart", "scrollCancel", "scrollStart", "scroll", "scrollEnd", "flick", "zoomStart", "zoomEnd" ], f = {}, g = angular.isDefined(b) && k(b);
    function h(a, b, c) {
        var d = c && c.lexicographical, e = c && c.zeroExtend, f = a.split("."), g = b.split(".");
        function h(a) {
            return (d ? /^\d+[A-Za-z]*$/ : /^\d+$/).test(a);
        }
        if (!f.every(h) || !g.every(h)) {
            return NaN;
        }
        if (e) {
            while (f.length < g.length) f.push("0");
            while (g.length < f.length) g.push("0");
        }
        if (!d) {
            f = f.map(Number);
            g = g.map(Number);
        }
        for (var i = 0; i < f.length; ++i) {
            if (g.length == i) {
                return 1;
            }
            if (f[i] == g[i]) {
                continue;
            } else if (f[i] > g[i]) {
                return 1;
            } else {
                return -1;
            }
        }
        if (f.length != g.length) {
            return -1;
        }
        return 0;
    }
    function i(a) {
        return a.name === "Chrome Mobile";
    }
    function j(a) {
        return a.name === "Android Browser" && h(a.os.version, "4.0.4") >= 0;
    }
    function k(a) {
        if (a.name === "Opera Mini") {
            return false;
        }
        if (a.name === "IE Mobile") {
            return h(a.version, "11.0") >= 0;
        }
        switch (a.os.family) {
          case "Android":
            return i(a) || j(a);

          case "iOS":
            return h(a.version, "5.1") >= 0;

          default:
            return true;
        }
    }
    angular.forEach(e, function a(b) {
        this["on" + l(b)] = b;
    }, f);
    function l(a) {
        return a.substring(0, 1).toLocaleUpperCase() + a.substring(1);
    }
    function m() {
        e.$inject = [ "$rootScope", "iScrollSignals" ];
        var a = {
            iScroll: {
                momentum: true,
                mouseWheel: true
            },
            directive: {
                initiallyEnabled: !g,
                asyncRefreshDelay: 0,
                refreshInterval: false,
                invokeApply: false
            }
        };
        angular.forEach(f, function a(b, c) {
            this[c] = undefined;
        }, a.directive);
        function c(b) {
            if (angular.isDefined(b.directive)) {
                angular.extend(a.directive, b.directive);
            }
            if (angular.isDefined(b.iScroll)) {
                angular.extend(a.iScroll, b.iScroll);
            }
        }
        this.useNativeScroll = g;
        this.platform = b;
        this.configureDefaults = c;
        function d() {
            return a;
        }
        this.getDefaults = d;
        function e(c, d) {
            var e = {
                useIScroll: a.directive.initiallyEnabled,
                autoDetectedUseNativeScroll: g
            };
            function f(a) {
                if (!a) {
                    e.useIScroll = false;
                }
                c.$emit(d.disabled);
            }
            function i(a) {
                if (!a) {
                    e.useIScroll = true;
                }
                c.$emit(d.enabled);
            }
            function j(a) {
                e.useIScroll ^ a ? f(a) : i(a);
            }
            function k(a) {
                c.$emit(d.refresh, a);
            }
            return {
                defaults: a,
                state: e,
                versionCompare: h,
                platform: b,
                enable: i,
                disable: f,
                toggle: j,
                refresh: k
            };
        }
        this.$get = e;
    }
    function n(a) {
        a();
    }
    function o(b, c, e, g, h) {
        function i(a, b) {
            c(function b() {
                a.refresh();
            }, b.directive.asyncRefreshDelay, b.directive.invokeApply);
        }
        function j(c, h, j, k) {
            var l = new a(h[0], k.iScroll), m = true, o = null;
            angular.forEach(f, function a(b, c) {
                if (angular.isDefined(k.directive[c])) {
                    l.on(b, k.directive[c]);
                }
            });
            h.removeClass(d.off).addClass(d.on);
            if (angular.isDefined(j.iscrollInstance)) {
                c.iscrollInstance = l;
            }
            if (k.directive.asyncRefreshDelay !== false) {
                i(l, k);
            }
            function p() {
                if (o !== null) {
                    e.cancel(o);
                }
                if (angular.isDefined(c.iscrollInstance)) {
                    delete c.iscrollInstance;
                }
                l.destroy();
                h.removeClass(d.on).addClass(d.off);
                h.children(".iscroll-scroller").attr("style", null);
                angular.forEach(t, n);
            }
            function q() {
                if (m) {
                    m = false;
                    i(l, k);
                    m = true;
                }
            }
            function r() {
                m = false;
            }
            function s() {
                m = true;
            }
            l.on("scrollStart", r);
            l.on("scrollEnd", s);
            if (k.directive.refreshInterval !== false) {
                o = e(q, k.directive.refreshInterval, 0, k.directive.invokeApply);
            }
            var t = [ b.$on(g.disabled, p), b.$on(g.refresh, q), c.$on("$destroy", p) ];
            return l;
        }
        function k(a, c, e) {
            var i = {
                iScroll: angular.extend({}, a.iscroll || {}, h.defaults.iScroll),
                directive: angular.extend({}, h.defaults.directive)
            };
            angular.forEach(i.iScroll, function a(b, c) {
                if (h.defaults.directive.hasOwnProperty(c) || f.hasOwnProperty(c)) {
                    i.directive[c] = b;
                    delete i.iScroll[c];
                }
            });
            function k() {
                if (!c.hasClass(d.on)) {
                    j(a, c, e, i);
                }
            }
            var l = [ b.$on(g.enabled, k) ];
            function m() {
                angular.forEach(l, n);
            }
            if (h.state.useIScroll) {
                k();
            } else {
                c.removeClass(d.on).addClass(d.off);
            }
            a.$on("$destroy", m);
        }
        return {
            restrict: "A",
            link: k,
            scope: {
                iscroll: "=",
                iscrollInstance: "="
            }
        };
    }
    return angular.module("angular-iscroll", []).directive("iscroll", o).provider("iScrollService", m).constant("iScrollSignals", c);
});

"undefined" != typeof module && "undefined" != typeof exports && module.exports === exports && (module.exports = "ui.router"), 
function(a, b, c) {
    "use strict";
    function d(a, b) {
        return T(new (T(function() {}, {
            prototype: a
        }))(), b);
    }
    function e(a) {
        return S(arguments, function(b) {
            b !== a && S(b, function(b, c) {
                a.hasOwnProperty(c) || (a[c] = b);
            });
        }), a;
    }
    function f(a, b) {
        var c = [];
        for (var d in a.path) {
            if (a.path[d] !== b.path[d]) break;
            c.push(a.path[d]);
        }
        return c;
    }
    function g(a) {
        if (Object.keys) return Object.keys(a);
        var b = [];
        return S(a, function(a, c) {
            b.push(c);
        }), b;
    }
    function h(a, b) {
        if (Array.prototype.indexOf) return a.indexOf(b, Number(arguments[2]) || 0);
        var c = a.length >>> 0, d = Number(arguments[2]) || 0;
        for (d = d < 0 ? Math.ceil(d) : Math.floor(d), d < 0 && (d += c); d < c; d++) if (d in a && a[d] === b) return d;
        return -1;
    }
    function i(a, b, c, d) {
        var e, i = f(c, d), j = {}, k = [];
        for (var l in i) if (i[l] && i[l].params && (e = g(i[l].params), e.length)) for (var m in e) h(k, e[m]) >= 0 || (k.push(e[m]), 
        j[e[m]] = a[e[m]]);
        return T({}, j, b);
    }
    function j(a, b, c) {
        if (!c) {
            c = [];
            for (var d in a) c.push(d);
        }
        for (var e = 0; e < c.length; e++) {
            var f = c[e];
            if (a[f] != b[f]) return !1;
        }
        return !0;
    }
    function k(a, b) {
        var c = {};
        return S(a, function(a) {
            c[a] = b[a];
        }), c;
    }
    function l(a) {
        var b = {}, c = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
        return S(c, function(c) {
            c in a && (b[c] = a[c]);
        }), b;
    }
    function m(a) {
        var b = {}, c = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
        for (var d in a) h(c, d) == -1 && (b[d] = a[d]);
        return b;
    }
    function n(a, b) {
        var c = R(a), d = c ? [] : {};
        return S(a, function(a, e) {
            b(a, e) && (d[c ? d.length : e] = a);
        }), d;
    }
    function o(a, b) {
        var c = R(a) ? [] : {};
        return S(a, function(a, d) {
            c[d] = b(a, d);
        }), c;
    }
    function p(a) {
        return a.then(c, function() {}) && a;
    }
    function q(a, b) {
        var d = 1, f = 2, i = {}, j = [], k = i, l = T(a.when(i), {
            $$promises: i,
            $$values: i
        });
        this.study = function(i) {
            function n(a, c) {
                if (t[c] !== f) {
                    if (s.push(c), t[c] === d) throw s.splice(0, h(s, c)), new Error("Cyclic dependency: " + s.join(" -> "));
                    if (t[c] = d, P(a)) r.push(c, [ function() {
                        return b.get(a);
                    } ], j); else {
                        var e = b.annotate(a);
                        S(e, function(a) {
                            a !== c && i.hasOwnProperty(a) && n(i[a], a);
                        }), r.push(c, a, e);
                    }
                    s.pop(), t[c] = f;
                }
            }
            function o(a) {
                return Q(a) && a.then && a.$$promises;
            }
            if (!Q(i)) throw new Error("'invocables' must be an object");
            var q = g(i || {}), r = [], s = [], t = {};
            return S(i, n), i = s = t = null, function(d, f, g) {
                function h() {
                    --v || (w || e(u, f.$$values), s.$$values = u, s.$$promises = s.$$promises || !0, 
                    delete s.$$inheritedValues, n.resolve(u));
                }
                function i(a) {
                    s.$$failure = a, n.reject(a);
                }
                function j(c, e, f) {
                    function j(a) {
                        l.reject(a), i(a);
                    }
                    function k() {
                        if (!N(s.$$failure)) try {
                            l.resolve(b.invoke(e, g, u)), l.promise.then(function(a) {
                                u[c] = a, h();
                            }, j);
                        } catch (a) {
                            j(a);
                        }
                    }
                    var l = a.defer(), m = 0;
                    S(f, function(a) {
                        t.hasOwnProperty(a) && !d.hasOwnProperty(a) && (m++, t[a].then(function(b) {
                            u[a] = b, --m || k();
                        }, j));
                    }), m || k(), t[c] = p(l.promise);
                }
                if (o(d) && g === c && (g = f, f = d, d = null), d) {
                    if (!Q(d)) throw new Error("'locals' must be an object");
                } else d = k;
                if (f) {
                    if (!o(f)) throw new Error("'parent' must be a promise returned by $resolve.resolve()");
                } else f = l;
                var n = a.defer(), s = p(n.promise), t = s.$$promises = {}, u = T({}, d), v = 1 + r.length / 3, w = !1;
                if (p(s), N(f.$$failure)) return i(f.$$failure), s;
                f.$$inheritedValues && e(u, m(f.$$inheritedValues, q)), T(t, f.$$promises), f.$$values ? (w = e(u, m(f.$$values, q)), 
                s.$$inheritedValues = m(f.$$values, q), h()) : (f.$$inheritedValues && (s.$$inheritedValues = m(f.$$inheritedValues, q)), 
                f.then(h, i));
                for (var x = 0, y = r.length; x < y; x += 3) d.hasOwnProperty(r[x]) ? h() : j(r[x], r[x + 1], r[x + 2]);
                return s;
            };
        }, this.resolve = function(a, b, c, d) {
            return this.study(a)(b, c, d);
        };
    }
    function r() {
        var a = b.version.minor < 3;
        this.shouldUnsafelyUseHttp = function(b) {
            a = !!b;
        }, this.$get = [ "$http", "$templateCache", "$injector", function(b, c, d) {
            return new s(b, c, d, a);
        } ];
    }
    function s(a, b, c, d) {
        this.fromConfig = function(a, b, c) {
            return N(a.template) ? this.fromString(a.template, b) : N(a.templateUrl) ? this.fromUrl(a.templateUrl, b) : N(a.templateProvider) ? this.fromProvider(a.templateProvider, b, c) : null;
        }, this.fromString = function(a, b) {
            return O(a) ? a(b) : a;
        }, this.fromUrl = function(e, f) {
            return O(e) && (e = e(f)), null == e ? null : d ? a.get(e, {
                cache: b,
                headers: {
                    Accept: "text/html"
                }
            }).then(function(a) {
                return a.data;
            }) : c.get("$templateRequest")(e);
        }, this.fromProvider = function(a, b, d) {
            return c.invoke(a, null, d || {
                params: b
            });
        };
    }
    function t(a, b, e) {
        function f(b, c, d, e) {
            if (q.push(b), o[b]) return o[b];
            if (!/^\w+([-.]+\w+)*(?:\[\])?$/.test(b)) throw new Error("Invalid parameter name '" + b + "' in pattern '" + a + "'");
            if (p[b]) throw new Error("Duplicate parameter name '" + b + "' in pattern '" + a + "'");
            return p[b] = new W.Param(b, c, d, e), p[b];
        }
        function g(a, b, c, d) {
            var e = [ "", "" ], f = a.replace(/[\\\[\]\^$*+?.()|{}]/g, "\\$&");
            if (!b) return f;
            switch (c) {
              case !1:
                e = [ "(", ")" + (d ? "?" : "") ];
                break;

              case !0:
                f = f.replace(/\/$/, ""), e = [ "(?:/(", ")|/)?" ];
                break;

              default:
                e = [ "(" + c + "|", ")?" ];
            }
            return f + e[0] + b + e[1];
        }
        function h(e, f) {
            var g, h, i, j, k;
            return g = e[2] || e[3], k = b.params[g], i = a.substring(m, e.index), h = f ? e[4] : e[4] || ("*" == e[1] ? ".*" : null), 
            h && (j = W.type(h) || d(W.type("string"), {
                pattern: new RegExp(h, b.caseInsensitive ? "i" : c)
            })), {
                id: g,
                regexp: h,
                segment: i,
                type: j,
                cfg: k
            };
        }
        b = T({
            params: {}
        }, Q(b) ? b : {});
        var i, j = /([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, k = /([:]?)([\w\[\].-]+)|\{([\w\[\].-]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, l = "^", m = 0, n = this.segments = [], o = e ? e.params : {}, p = this.params = e ? e.params.$$new() : new W.ParamSet(), q = [];
        this.source = a;
        for (var r, s, t; (i = j.exec(a)) && (r = h(i, !1), !(r.segment.indexOf("?") >= 0)); ) s = f(r.id, r.type, r.cfg, "path"), 
        l += g(r.segment, s.type.pattern.source, s.squash, s.isOptional), n.push(r.segment), 
        m = j.lastIndex;
        t = a.substring(m);
        var u = t.indexOf("?");
        if (u >= 0) {
            var v = this.sourceSearch = t.substring(u);
            if (t = t.substring(0, u), this.sourcePath = a.substring(0, m + u), v.length > 0) for (m = 0; i = k.exec(v); ) r = h(i, !0), 
            s = f(r.id, r.type, r.cfg, "search"), m = j.lastIndex;
        } else this.sourcePath = a, this.sourceSearch = "";
        l += g(t) + (b.strict === !1 ? "/?" : "") + "$", n.push(t), this.regexp = new RegExp(l, b.caseInsensitive ? "i" : c), 
        this.prefix = n[0], this.$$paramNames = q;
    }
    function u(a) {
        T(this, a);
    }
    function v() {
        function a(a) {
            return null != a ? a.toString().replace(/(~|\/)/g, function(a) {
                return {
                    "~": "~~",
                    "/": "~2F"
                }[a];
            }) : a;
        }
        function e(a) {
            return null != a ? a.toString().replace(/(~~|~2F)/g, function(a) {
                return {
                    "~~": "~",
                    "~2F": "/"
                }[a];
            }) : a;
        }
        function f() {
            return {
                strict: p,
                caseInsensitive: m
            };
        }
        function i(a) {
            return O(a) || R(a) && O(a[a.length - 1]);
        }
        function j() {
            for (;w.length; ) {
                var a = w.shift();
                if (a.pattern) throw new Error("You cannot override a type's .pattern at runtime.");
                b.extend(r[a.name], l.invoke(a.def));
            }
        }
        function k(a) {
            T(this, a || {});
        }
        W = this;
        var l, m = !1, p = !0, q = !1, r = {}, s = !0, w = [], x = {
            string: {
                encode: a,
                decode: e,
                is: function(a) {
                    return null == a || !N(a) || "string" == typeof a;
                },
                pattern: /[^\/]*/
            },
            int: {
                encode: a,
                decode: function(a) {
                    return parseInt(a, 10);
                },
                is: function(a) {
                    return a !== c && null !== a && this.decode(a.toString()) === a;
                },
                pattern: /\d+/
            },
            bool: {
                encode: function(a) {
                    return a ? 1 : 0;
                },
                decode: function(a) {
                    return 0 !== parseInt(a, 10);
                },
                is: function(a) {
                    return a === !0 || a === !1;
                },
                pattern: /0|1/
            },
            date: {
                encode: function(a) {
                    return this.is(a) ? [ a.getFullYear(), ("0" + (a.getMonth() + 1)).slice(-2), ("0" + a.getDate()).slice(-2) ].join("-") : c;
                },
                decode: function(a) {
                    if (this.is(a)) return a;
                    var b = this.capture.exec(a);
                    return b ? new Date(b[1], b[2] - 1, b[3]) : c;
                },
                is: function(a) {
                    return a instanceof Date && !isNaN(a.valueOf());
                },
                equals: function(a, b) {
                    return this.is(a) && this.is(b) && a.toISOString() === b.toISOString();
                },
                pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,
                capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/
            },
            json: {
                encode: b.toJson,
                decode: b.fromJson,
                is: b.isObject,
                equals: b.equals,
                pattern: /[^\/]*/
            },
            any: {
                encode: b.identity,
                decode: b.identity,
                equals: b.equals,
                pattern: /.*/
            }
        };
        v.$$getDefaultValue = function(a) {
            if (!i(a.value)) return a.value;
            if (!l) throw new Error("Injectable functions cannot be called at configuration time");
            return l.invoke(a.value);
        }, this.caseInsensitive = function(a) {
            return N(a) && (m = a), m;
        }, this.strictMode = function(a) {
            return N(a) && (p = a), p;
        }, this.defaultSquashPolicy = function(a) {
            if (!N(a)) return q;
            if (a !== !0 && a !== !1 && !P(a)) throw new Error("Invalid squash policy: " + a + ". Valid policies: false, true, arbitrary-string");
            return q = a, a;
        }, this.compile = function(a, b) {
            return new t(a, T(f(), b));
        }, this.isMatcher = function(a) {
            if (!Q(a)) return !1;
            var b = !0;
            return S(t.prototype, function(c, d) {
                O(c) && (b = b && N(a[d]) && O(a[d]));
            }), b;
        }, this.type = function(a, b, c) {
            if (!N(b)) return r[a];
            if (r.hasOwnProperty(a)) throw new Error("A type named '" + a + "' has already been defined.");
            return r[a] = new u(T({
                name: a
            }, b)), c && (w.push({
                name: a,
                def: c
            }), s || j()), this;
        }, S(x, function(a, b) {
            r[b] = new u(T({
                name: b
            }, a));
        }), r = d(r, {}), this.$get = [ "$injector", function(a) {
            return l = a, s = !1, j(), S(x, function(a, b) {
                r[b] || (r[b] = new u(a));
            }), this;
        } ], this.Param = function(a, d, e, f) {
            function j(a) {
                var b = Q(a) ? g(a) : [], c = h(b, "value") === -1 && h(b, "type") === -1 && h(b, "squash") === -1 && h(b, "array") === -1;
                return c && (a = {
                    value: a
                }), a.$$fn = i(a.value) ? a.value : function() {
                    return a.value;
                }, a;
            }
            function k(c, d, e) {
                if (c.type && d) throw new Error("Param '" + a + "' has two type configurations.");
                return d ? d : c.type ? b.isString(c.type) ? r[c.type] : c.type instanceof u ? c.type : new u(c.type) : "config" === e ? r.any : r.string;
            }
            function m() {
                var b = {
                    array: "search" === f && "auto"
                }, c = a.match(/\[\]$/) ? {
                    array: !0
                } : {};
                return T(b, c, e).array;
            }
            function p(a, b) {
                var c = a.squash;
                if (!b || c === !1) return !1;
                if (!N(c) || null == c) return q;
                if (c === !0 || P(c)) return c;
                throw new Error("Invalid squash policy: '" + c + "'. Valid policies: false, true, or arbitrary string");
            }
            function s(a, b, d, e) {
                var f, g, i = [ {
                    from: "",
                    to: d || b ? c : ""
                }, {
                    from: null,
                    to: d || b ? c : ""
                } ];
                return f = R(a.replace) ? a.replace : [], P(e) && f.push({
                    from: e,
                    to: c
                }), g = o(f, function(a) {
                    return a.from;
                }), n(i, function(a) {
                    return h(g, a.from) === -1;
                }).concat(f);
            }
            function t() {
                if (!l) throw new Error("Injectable functions cannot be called at configuration time");
                var a = l.invoke(e.$$fn);
                if (null !== a && a !== c && !x.type.is(a)) throw new Error("Default value (" + a + ") for parameter '" + x.id + "' is not an instance of Type (" + x.type.name + ")");
                return a;
            }
            function v(a) {
                function b(a) {
                    return function(b) {
                        return b.from === a;
                    };
                }
                function c(a) {
                    var c = o(n(x.replace, b(a)), function(a) {
                        return a.to;
                    });
                    return c.length ? c[0] : a;
                }
                return a = c(a), N(a) ? x.type.$normalize(a) : t();
            }
            function w() {
                return "{Param:" + a + " " + d + " squash: '" + A + "' optional: " + z + "}";
            }
            var x = this;
            e = j(e), d = k(e, d, f);
            var y = m();
            d = y ? d.$asArray(y, "search" === f) : d, "string" !== d.name || y || "path" !== f || e.value !== c || (e.value = "");
            var z = e.value !== c, A = p(e, z), B = s(e, y, z, A);
            T(this, {
                id: a,
                type: d,
                location: f,
                array: y,
                squash: A,
                replace: B,
                isOptional: z,
                value: v,
                dynamic: c,
                config: e,
                toString: w
            });
        }, k.prototype = {
            $$new: function() {
                return d(this, T(new k(), {
                    $$parent: this
                }));
            },
            $$keys: function() {
                for (var a = [], b = [], c = this, d = g(k.prototype); c; ) b.push(c), c = c.$$parent;
                return b.reverse(), S(b, function(b) {
                    S(g(b), function(b) {
                        h(a, b) === -1 && h(d, b) === -1 && a.push(b);
                    });
                }), a;
            },
            $$values: function(a) {
                var b = {}, c = this;
                return S(c.$$keys(), function(d) {
                    b[d] = c[d].value(a && a[d]);
                }), b;
            },
            $$equals: function(a, b) {
                var c = !0, d = this;
                return S(d.$$keys(), function(e) {
                    var f = a && a[e], g = b && b[e];
                    d[e].type.equals(f, g) || (c = !1);
                }), c;
            },
            $$validates: function(a) {
                var d, e, f, g, h, i = this.$$keys();
                for (d = 0; d < i.length && (e = this[i[d]], f = a[i[d]], f !== c && null !== f || !e.isOptional); d++) {
                    if (g = e.type.$normalize(f), !e.type.is(g)) return !1;
                    if (h = e.type.encode(g), b.isString(h) && !e.type.pattern.exec(h)) return !1;
                }
                return !0;
            },
            $$parent: c
        }, this.ParamSet = k;
    }
    function w(a, d) {
        function e(a) {
            var b = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(a.source);
            return null != b ? b[1].replace(/\\(.)/g, "$1") : "";
        }
        function f(a, b) {
            return a.replace(/\$(\$|\d{1,2})/, function(a, c) {
                return b["$" === c ? 0 : Number(c)];
            });
        }
        function g(a, b, c) {
            if (!c) return !1;
            var d = a.invoke(b, b, {
                $match: c
            });
            return !N(d) || d;
        }
        function h(d, e, f, g, h) {
            function m(a, b, c) {
                return "/" === q ? a : b ? q.slice(0, -1) + a : c ? q.slice(1) + a : a;
            }
            function n(a) {
                function b(a) {
                    var b = a(f, d);
                    return !!b && (P(b) && d.replace().url(b), !0);
                }
                if (!a || !a.defaultPrevented) {
                    p && d.url() === p;
                    p = c;
                    var e, g = j.length;
                    for (e = 0; e < g; e++) if (b(j[e])) return;
                    k && b(k);
                }
            }
            function o() {
                return i = i || e.$on("$locationChangeSuccess", n);
            }
            var p, q = g.baseHref(), r = d.url();
            return l || o(), {
                sync: function() {
                    n();
                },
                listen: function() {
                    return o();
                },
                update: function(a) {
                    return a ? void (r = d.url()) : void (d.url() !== r && (d.url(r), d.replace()));
                },
                push: function(a, b, e) {
                    var f = a.format(b || {});
                    null !== f && b && b["#"] && (f += "#" + b["#"]), d.url(f), p = e && e.$$avoidResync ? d.url() : c, 
                    e && e.replace && d.replace();
                },
                href: function(c, e, f) {
                    if (!c.validates(e)) return null;
                    var g = a.html5Mode();
                    b.isObject(g) && (g = g.enabled), g = g && h.history;
                    var i = c.format(e);
                    if (f = f || {}, g || null === i || (i = "#" + a.hashPrefix() + i), null !== i && e && e["#"] && (i += "#" + e["#"]), 
                    i = m(i, g, f.absolute), !f.absolute || !i) return i;
                    var j = !g && i ? "/" : "", k = d.port();
                    return k = 80 === k || 443 === k ? "" : ":" + k, [ d.protocol(), "://", d.host(), k, j, i ].join("");
                }
            };
        }
        var i, j = [], k = null, l = !1;
        this.rule = function(a) {
            if (!O(a)) throw new Error("'rule' must be a function");
            return j.push(a), this;
        }, this.otherwise = function(a) {
            if (P(a)) {
                var b = a;
                a = function() {
                    return b;
                };
            } else if (!O(a)) throw new Error("'rule' must be a function");
            return k = a, this;
        }, this.when = function(a, b) {
            var c, h = P(b);
            if (P(a) && (a = d.compile(a)), !h && !O(b) && !R(b)) throw new Error("invalid 'handler' in when()");
            var i = {
                matcher: function(a, b) {
                    return h && (c = d.compile(b), b = [ "$match", function(a) {
                        return c.format(a);
                    } ]), T(function(c, d) {
                        return g(c, b, a.exec(d.path(), d.search()));
                    }, {
                        prefix: P(a.prefix) ? a.prefix : ""
                    });
                },
                regex: function(a, b) {
                    if (a.global || a.sticky) throw new Error("when() RegExp must not be global or sticky");
                    return h && (c = b, b = [ "$match", function(a) {
                        return f(c, a);
                    } ]), T(function(c, d) {
                        return g(c, b, a.exec(d.path()));
                    }, {
                        prefix: e(a)
                    });
                }
            }, j = {
                matcher: d.isMatcher(a),
                regex: a instanceof RegExp
            };
            for (var k in j) if (j[k]) return this.rule(i[k](a, b));
            throw new Error("invalid 'what' in when()");
        }, this.deferIntercept = function(a) {
            a === c && (a = !0), l = a;
        }, this.$get = h, h.$inject = [ "$location", "$rootScope", "$injector", "$browser", "$sniffer" ];
    }
    function x(a, e) {
        function f(a) {
            return 0 === a.indexOf(".") || 0 === a.indexOf("^");
        }
        function m(a, b) {
            if (!a) return c;
            var d = P(a), e = d ? a : a.name, g = f(e);
            if (g) {
                if (!b) throw new Error("No reference point given for path '" + e + "'");
                b = m(b);
                for (var h = e.split("."), i = 0, j = h.length, k = b; i < j; i++) if ("" !== h[i] || 0 !== i) {
                    if ("^" !== h[i]) break;
                    if (!k.parent) throw new Error("Path '" + e + "' not valid for state '" + b.name + "'");
                    k = k.parent;
                } else k = b;
                h = h.slice(i).join("."), e = k.name + (k.name && h ? "." : "") + h;
            }
            var l = A[e];
            return !l || !d && (d || l !== a && l.self !== a) ? c : l;
        }
        function n(a, b) {
            B[a] || (B[a] = []), B[a].push(b);
        }
        function q(a) {
            for (var b = B[a] || []; b.length; ) r(b.shift());
        }
        function r(b) {
            b = d(b, {
                self: b,
                resolve: b.resolve || {},
                toString: function() {
                    return this.name;
                }
            });
            var c = b.name;
            if (!P(c) || c.indexOf("@") >= 0) throw new Error("State must have a valid name");
            if (A.hasOwnProperty(c)) throw new Error("State '" + c + "' is already defined");
            var e = c.indexOf(".") !== -1 ? c.substring(0, c.lastIndexOf(".")) : P(b.parent) ? b.parent : Q(b.parent) && P(b.parent.name) ? b.parent.name : "";
            if (e && !A[e]) return n(e, b.self);
            for (var f in D) O(D[f]) && (b[f] = D[f](b, D.$delegates[f]));
            return A[c] = b, !b[C] && b.url && a.when(b.url, [ "$match", "$stateParams", function(a, c) {
                z.$current.navigable == b && j(a, c) || z.transitionTo(b, a, {
                    inherit: !0,
                    location: !1
                });
            } ]), q(c), b;
        }
        function s(a) {
            return a.indexOf("*") > -1;
        }
        function t(a) {
            for (var b = a.split("."), c = z.$current.name.split("."), d = 0, e = b.length; d < e; d++) "*" === b[d] && (c[d] = "*");
            return "**" === b[0] && (c = c.slice(h(c, b[1])), c.unshift("**")), "**" === b[b.length - 1] && (c.splice(h(c, b[b.length - 2]) + 1, Number.MAX_VALUE), 
            c.push("**")), b.length == c.length && c.join("") === b.join("");
        }
        function u(a, b) {
            return P(a) && !N(b) ? D[a] : O(b) && P(a) ? (D[a] && !D.$delegates[a] && (D.$delegates[a] = D[a]), 
            D[a] = b, this) : this;
        }
        function v(a, b) {
            return Q(a) ? b = a : b.name = a, r(b), this;
        }
        function w(a, e, f, h, j, l, n, q, r) {
            function u(b, c, d, f) {
                var g = a.$broadcast("$stateNotFound", b, c, d);
                if (g.defaultPrevented) return n.update(), E;
                if (!g.retry) return null;
                if (f.$retry) return n.update(), F;
                var h = z.transition = e.when(g.retry);
                return h.then(function() {
                    return h !== z.transition ? (a.$broadcast("$stateChangeCancel", b.to, b.toParams, c, d), 
                    B) : (b.options.$retry = !0, z.transitionTo(b.to, b.toParams, b.options));
                }, function() {
                    return E;
                }), n.update(), h;
            }
            function v(a, c, d, g, i, l) {
                function m() {
                    var c = [];
                    return S(a.views, function(d, e) {
                        var g = d.resolve && d.resolve !== a.resolve ? d.resolve : {};
                        g.$template = [ function() {
                            return f.load(e, {
                                view: d,
                                locals: i.globals,
                                params: n,
                                notify: l.notify
                            }) || "";
                        } ], c.push(j.resolve(g, i.globals, i.resolve, a).then(function(c) {
                            if (O(d.controllerProvider) || R(d.controllerProvider)) {
                                var f = b.extend({}, g, i.globals);
                                c.$$controller = h.invoke(d.controllerProvider, null, f);
                            } else c.$$controller = d.controller;
                            c.$$state = a, c.$$controllerAs = d.controllerAs, c.$$resolveAs = d.resolveAs, i[e] = c;
                        }));
                    }), e.all(c).then(function() {
                        return i.globals;
                    });
                }
                var n = d ? c : k(a.params.$$keys(), c), o = {
                    $stateParams: n
                };
                i.resolve = j.resolve(a.resolve, o, i.resolve, a);
                var p = [ i.resolve.then(function(a) {
                    i.globals = a;
                }) ];
                return g && p.push(g), e.all(p).then(m).then(function(a) {
                    return i;
                });
            }
            var w = new Error("transition superseded"), B = p(e.reject(w)), D = p(e.reject(new Error("transition prevented"))), E = p(e.reject(new Error("transition aborted"))), F = p(e.reject(new Error("transition failed")));
            return y.locals = {
                resolve: null,
                globals: {
                    $stateParams: {}
                }
            }, z = {
                params: {},
                current: y.self,
                $current: y,
                transition: null
            }, z.reload = function(a) {
                return z.transitionTo(z.current, l, {
                    reload: a || !0,
                    inherit: !1,
                    notify: !0
                });
            }, z.go = function(a, b, c) {
                return z.transitionTo(a, b, T({
                    inherit: !0,
                    relative: z.$current
                }, c));
            }, z.transitionTo = function(b, c, f) {
                c = c || {}, f = T({
                    location: !0,
                    inherit: !1,
                    relative: null,
                    notify: !0,
                    reload: !1,
                    $retry: !1
                }, f || {});
                var g, j = z.$current, o = z.params, q = j.path, r = m(b, f.relative), s = c["#"];
                if (!N(r)) {
                    var t = {
                        to: b,
                        toParams: c,
                        options: f
                    }, A = u(t, j.self, o, f);
                    if (A) return A;
                    if (b = t.to, c = t.toParams, f = t.options, r = m(b, f.relative), !N(r)) {
                        if (!f.relative) throw new Error("No such state '" + b + "'");
                        throw new Error("Could not resolve '" + b + "' from state '" + f.relative + "'");
                    }
                }
                if (r[C]) throw new Error("Cannot transition to abstract state '" + b + "'");
                if (f.inherit && (c = i(l, c || {}, z.$current, r)), !r.params.$$validates(c)) return F;
                c = r.params.$$values(c), b = r;
                var E = b.path, G = 0, H = E[G], I = y.locals, J = [];
                if (f.reload) {
                    if (P(f.reload) || Q(f.reload)) {
                        if (Q(f.reload) && !f.reload.name) throw new Error("Invalid reload state object");
                        var K = f.reload === !0 ? q[0] : m(f.reload);
                        if (f.reload && !K) throw new Error("No such reload state '" + (P(f.reload) ? f.reload : f.reload.name) + "'");
                        for (;H && H === q[G] && H !== K; ) I = J[G] = H.locals, G++, H = E[G];
                    }
                } else for (;H && H === q[G] && H.ownParams.$$equals(c, o); ) I = J[G] = H.locals, 
                G++, H = E[G];
                if (x(b, c, j, o, I, f)) return s && (c["#"] = s), z.params = c, U(z.params, l), 
                U(k(b.params.$$keys(), l), b.locals.globals.$stateParams), f.location && b.navigable && b.navigable.url && (n.push(b.navigable.url, c, {
                    $$avoidResync: !0,
                    replace: "replace" === f.location
                }), n.update(!0)), z.transition = null, e.when(z.current);
                if (c = k(b.params.$$keys(), c || {}), s && (c["#"] = s), f.notify && a.$broadcast("$stateChangeStart", b.self, c, j.self, o, f).defaultPrevented) return a.$broadcast("$stateChangeCancel", b.self, c, j.self, o), 
                null == z.transition && n.update(), D;
                for (var L = e.when(I), M = G; M < E.length; M++, H = E[M]) I = J[M] = d(I), L = v(H, c, H === b, L, I, f);
                var O = z.transition = L.then(function() {
                    var d, e, g;
                    if (z.transition !== O) return a.$broadcast("$stateChangeCancel", b.self, c, j.self, o), 
                    B;
                    for (d = q.length - 1; d >= G; d--) g = q[d], g.self.onExit && h.invoke(g.self.onExit, g.self, g.locals.globals), 
                    g.locals = null;
                    for (d = G; d < E.length; d++) e = E[d], e.locals = J[d], e.self.onEnter && h.invoke(e.self.onEnter, e.self, e.locals.globals);
                    return z.transition !== O ? (a.$broadcast("$stateChangeCancel", b.self, c, j.self, o), 
                    B) : (z.$current = b, z.current = b.self, z.params = c, U(z.params, l), z.transition = null, 
                    f.location && b.navigable && n.push(b.navigable.url, b.navigable.locals.globals.$stateParams, {
                        $$avoidResync: !0,
                        replace: "replace" === f.location
                    }), f.notify && a.$broadcast("$stateChangeSuccess", b.self, c, j.self, o), n.update(!0), 
                    z.current);
                }).then(null, function(d) {
                    return d === w ? B : z.transition !== O ? (a.$broadcast("$stateChangeCancel", b.self, c, j.self, o), 
                    B) : (z.transition = null, g = a.$broadcast("$stateChangeError", b.self, c, j.self, o, d), 
                    g.defaultPrevented || n.update(), e.reject(d));
                });
                return p(O), O;
            }, z.is = function(a, b, d) {
                d = T({
                    relative: z.$current
                }, d || {});
                var e = m(a, d.relative);
                return N(e) ? z.$current === e && (!b || g(b).reduce(function(a, c) {
                    var d = e.params[c];
                    return a && !d || d.type.equals(l[c], b[c]);
                }, !0)) : c;
            }, z.includes = function(a, b, d) {
                if (d = T({
                    relative: z.$current
                }, d || {}), P(a) && s(a)) {
                    if (!t(a)) return !1;
                    a = z.$current.name;
                }
                var e = m(a, d.relative);
                if (!N(e)) return c;
                if (!N(z.$current.includes[e.name])) return !1;
                if (!b) return !0;
                for (var f = g(b), h = 0; h < f.length; h++) {
                    var i = f[h], j = e.params[i];
                    if (j && !j.type.equals(l[i], b[i])) return !1;
                }
                return g(b).reduce(function(a, c) {
                    var d = e.params[c];
                    return a && !d || d.type.equals(l[c], b[c]);
                }, !0);
            }, z.href = function(a, b, d) {
                d = T({
                    lossy: !0,
                    inherit: !0,
                    absolute: !1,
                    relative: z.$current
                }, d || {});
                var e = m(a, d.relative);
                if (!N(e)) return null;
                d.inherit && (b = i(l, b || {}, z.$current, e));
                var f = e && d.lossy ? e.navigable : e;
                return f && f.url !== c && null !== f.url ? n.href(f.url, k(e.params.$$keys().concat("#"), b || {}), {
                    absolute: d.absolute
                }) : null;
            }, z.get = function(a, b) {
                if (0 === arguments.length) return o(g(A), function(a) {
                    return A[a].self;
                });
                var c = m(a, b || z.$current);
                return c && c.self ? c.self : null;
            }, z;
        }
        function x(a, b, c, d, e, f) {
            function g(a, b, c) {
                function d(b) {
                    return "search" != a.params[b].location;
                }
                var e = a.params.$$keys().filter(d), f = l.apply({}, [ a.params ].concat(e)), g = new W.ParamSet(f);
                return g.$$equals(b, c);
            }
            if (!f.reload && a === c && (e === c.locals || a.self.reloadOnSearch === !1 && g(c, d, b))) return !0;
        }
        var y, z, A = {}, B = {}, C = "abstract", D = {
            parent: function(a) {
                if (N(a.parent) && a.parent) return m(a.parent);
                var b = /^(.+)\.[^.]+$/.exec(a.name);
                return b ? m(b[1]) : y;
            },
            data: function(a) {
                return a.parent && a.parent.data && (a.data = a.self.data = d(a.parent.data, a.data)), 
                a.data;
            },
            url: function(a) {
                var b = a.url, c = {
                    params: a.params || {}
                };
                if (P(b)) return "^" == b.charAt(0) ? e.compile(b.substring(1), c) : (a.parent.navigable || y).url.concat(b, c);
                if (!b || e.isMatcher(b)) return b;
                throw new Error("Invalid url '" + b + "' in state '" + a + "'");
            },
            navigable: function(a) {
                return a.url ? a : a.parent ? a.parent.navigable : null;
            },
            ownParams: function(a) {
                var b = a.url && a.url.params || new W.ParamSet();
                return S(a.params || {}, function(a, c) {
                    b[c] || (b[c] = new W.Param(c, null, a, "config"));
                }), b;
            },
            params: function(a) {
                var b = l(a.ownParams, a.ownParams.$$keys());
                return a.parent && a.parent.params ? T(a.parent.params.$$new(), b) : new W.ParamSet();
            },
            views: function(a) {
                var b = {};
                return S(N(a.views) ? a.views : {
                    "": a
                }, function(c, d) {
                    d.indexOf("@") < 0 && (d += "@" + a.parent.name), c.resolveAs = c.resolveAs || a.resolveAs || "$resolve", 
                    b[d] = c;
                }), b;
            },
            path: function(a) {
                return a.parent ? a.parent.path.concat(a) : [];
            },
            includes: function(a) {
                var b = a.parent ? T({}, a.parent.includes) : {};
                return b[a.name] = !0, b;
            },
            $delegates: {}
        };
        y = r({
            name: "",
            url: "^",
            views: null,
            abstract: !0
        }), y.navigable = null, this.decorator = u, this.state = v, this.$get = w, w.$inject = [ "$rootScope", "$q", "$view", "$injector", "$resolve", "$stateParams", "$urlRouter", "$location", "$urlMatcherFactory" ];
    }
    function y() {
        function a(a, b) {
            return {
                load: function(a, c) {
                    var d, e = {
                        template: null,
                        controller: null,
                        view: null,
                        locals: null,
                        notify: !0,
                        async: !0,
                        params: {}
                    };
                    return c = T(e, c), c.view && (d = b.fromConfig(c.view, c.params, c.locals)), d;
                }
            };
        }
        this.$get = a, a.$inject = [ "$rootScope", "$templateFactory" ];
    }
    function z() {
        var a = !1;
        this.useAnchorScroll = function() {
            a = !0;
        }, this.$get = [ "$anchorScroll", "$timeout", function(b, c) {
            return a ? b : function(a) {
                return c(function() {
                    a[0].scrollIntoView();
                }, 0, !1);
            };
        } ];
    }
    function A(a, c, d, e, f) {
        function g() {
            return c.has ? function(a) {
                return c.has(a) ? c.get(a) : null;
            } : function(a) {
                try {
                    return c.get(a);
                } catch (a) {
                    return null;
                }
            };
        }
        function h(a, c) {
            var d = function() {
                return {
                    enter: function(a, b, c) {
                        b.after(a), c();
                    },
                    leave: function(a, b) {
                        a.remove(), b();
                    }
                };
            };
            if (k) return {
                enter: function(a, c, d) {
                    b.version.minor > 2 ? k.enter(a, null, c).then(d) : k.enter(a, null, c, d);
                },
                leave: function(a, c) {
                    b.version.minor > 2 ? k.leave(a).then(c) : k.leave(a, c);
                }
            };
            if (j) {
                var e = j && j(c, a);
                return {
                    enter: function(a, b, c) {
                        e.enter(a, null, b), c();
                    },
                    leave: function(a, b) {
                        e.leave(a), b();
                    }
                };
            }
            return d();
        }
        var i = g(), j = i("$animator"), k = i("$animate"), l = {
            restrict: "ECA",
            terminal: !0,
            priority: 400,
            transclude: "element",
            compile: function(c, g, i) {
                return function(c, g, j) {
                    function k() {
                        if (m && (m.remove(), m = null), o && (o.$destroy(), o = null), n) {
                            var a = n.data("$uiViewAnim");
                            s.leave(n, function() {
                                a.$$animLeave.resolve(), m = null;
                            }), m = n, n = null;
                        }
                    }
                    function l(h) {
                        var l, m = C(c, j, g, e), t = m && a.$current && a.$current.locals[m];
                        if (h || t !== p) {
                            l = c.$new(), p = a.$current.locals[m], l.$emit("$viewContentLoading", m);
                            var u = i(l, function(a) {
                                var e = f.defer(), h = f.defer(), i = {
                                    $animEnter: e.promise,
                                    $animLeave: h.promise,
                                    $$animLeave: h
                                };
                                a.data("$uiViewAnim", i), s.enter(a, g, function() {
                                    e.resolve(), o && o.$emit("$viewContentAnimationEnded"), (b.isDefined(r) && !r || c.$eval(r)) && d(a);
                                }), k();
                            });
                            n = u, o = l, o.$emit("$viewContentLoaded", m), o.$eval(q);
                        }
                    }
                    var m, n, o, p, q = j.onload || "", r = j.autoscroll, s = h(j, c);
                    g.inheritedData("$uiView");
                    c.$on("$stateChangeSuccess", function() {
                        l(!1);
                    }), l(!0);
                };
            }
        };
        return l;
    }
    function B(a, c, d, e) {
        return {
            restrict: "ECA",
            priority: -400,
            compile: function(f) {
                var g = f.html();
                return f.empty ? f.empty() : f[0].innerHTML = null, function(f, h, i) {
                    var j = d.$current, k = C(f, i, h, e), l = j && j.locals[k];
                    if (!l) return h.html(g), void a(h.contents())(f);
                    h.data("$uiView", {
                        name: k,
                        state: l.$$state
                    }), h.html(l.$template ? l.$template : g);
                    var m = b.extend({}, l);
                    f[l.$$resolveAs] = m;
                    var n = a(h.contents());
                    if (l.$$controller) {
                        l.$scope = f, l.$element = h;
                        var o = c(l.$$controller, l);
                        l.$$controllerAs && (f[l.$$controllerAs] = o, f[l.$$controllerAs][l.$$resolveAs] = m), 
                        O(o.$onInit) && o.$onInit(), h.data("$ngControllerController", o), h.children().data("$ngControllerController", o);
                    }
                    n(f);
                };
            }
        };
    }
    function C(a, b, c, d) {
        var e = d(b.uiView || b.name || "")(a), f = c.inheritedData("$uiView");
        return e.indexOf("@") >= 0 ? e : e + "@" + (f ? f.state.name : "");
    }
    function D(a, b) {
        var c, d = a.match(/^\s*({[^}]*})\s*$/);
        if (d && (a = b + "(" + d[1] + ")"), c = a.replace(/\n/g, " ").match(/^([^(]+?)\s*(\((.*)\))?$/), 
        !c || 4 !== c.length) throw new Error("Invalid state ref '" + a + "'");
        return {
            state: c[1],
            paramExpr: c[3] || null
        };
    }
    function E(a) {
        var b = a.parent().inheritedData("$uiView");
        if (b && b.state && b.state.name) return b.state;
    }
    function F(a) {
        var b = "[object SVGAnimatedString]" === Object.prototype.toString.call(a.prop("href")), c = "FORM" === a[0].nodeName;
        return {
            attr: c ? "action" : b ? "xlink:href" : "href",
            isAnchor: "A" === a.prop("tagName").toUpperCase(),
            clickable: !c
        };
    }
    function G(a, b, c, d, e) {
        return function(f) {
            var g = f.which || f.button, h = e();
            if (!(g > 1 || f.ctrlKey || f.metaKey || f.shiftKey || a.attr("target"))) {
                var i = c(function() {
                    b.go(h.state, h.params, h.options);
                });
                f.preventDefault();
                var j = d.isAnchor && !h.href ? 1 : 0;
                f.preventDefault = function() {
                    j-- <= 0 && c.cancel(i);
                };
            }
        };
    }
    function H(a, b) {
        return {
            relative: E(a) || b.$current,
            inherit: !0
        };
    }
    function I(a, c) {
        return {
            restrict: "A",
            require: [ "?^uiSrefActive", "?^uiSrefActiveEq" ],
            link: function(d, e, f, g) {
                var h, i = D(f.uiSref, a.current.name), j = {
                    state: i.state,
                    href: null,
                    params: null
                }, k = F(e), l = g[1] || g[0], m = null;
                j.options = T(H(e, a), f.uiSrefOpts ? d.$eval(f.uiSrefOpts) : {});
                var n = function(c) {
                    c && (j.params = b.copy(c)), j.href = a.href(i.state, j.params, j.options), m && m(), 
                    l && (m = l.$$addStateInfo(i.state, j.params)), null !== j.href && f.$set(k.attr, j.href);
                };
                i.paramExpr && (d.$watch(i.paramExpr, function(a) {
                    a !== j.params && n(a);
                }, !0), j.params = b.copy(d.$eval(i.paramExpr))), n(), k.clickable && (h = G(e, a, c, k, function() {
                    return j;
                }), e[e.on ? "on" : "bind"]("click", h), d.$on("$destroy", function() {
                    e[e.off ? "off" : "unbind"]("click", h);
                }));
            }
        };
    }
    function J(a, b) {
        return {
            restrict: "A",
            require: [ "?^uiSrefActive", "?^uiSrefActiveEq" ],
            link: function(c, d, e, f) {
                function g(b) {
                    m.state = b[0], m.params = b[1], m.options = b[2], m.href = a.href(m.state, m.params, m.options), 
                    n && n(), j && (n = j.$$addStateInfo(m.state, m.params)), m.href && e.$set(i.attr, m.href);
                }
                var h, i = F(d), j = f[1] || f[0], k = [ e.uiState, e.uiStateParams || null, e.uiStateOpts || null ], l = "[" + k.map(function(a) {
                    return a || "null";
                }).join(", ") + "]", m = {
                    state: null,
                    params: null,
                    options: null,
                    href: null
                }, n = null;
                c.$watch(l, g, !0), g(c.$eval(l)), i.clickable && (h = G(d, a, b, i, function() {
                    return m;
                }), d[d.on ? "on" : "bind"]("click", h), c.$on("$destroy", function() {
                    d[d.off ? "off" : "unbind"]("click", h);
                }));
            }
        };
    }
    function K(a, b, c) {
        return {
            restrict: "A",
            controller: [ "$scope", "$element", "$attrs", "$timeout", function(b, d, e, f) {
                function g(b, c, e) {
                    var f = a.get(b, E(d)), g = h(b, c), i = {
                        state: f || {
                            name: b
                        },
                        params: c,
                        hash: g
                    };
                    return p.push(i), q[g] = e, function() {
                        var a = p.indexOf(i);
                        a !== -1 && p.splice(a, 1);
                    };
                }
                function h(a, c) {
                    if (!P(a)) throw new Error("state should be a string");
                    return Q(c) ? a + V(c) : (c = b.$eval(c), Q(c) ? a + V(c) : a);
                }
                function i() {
                    for (var a = 0; a < p.length; a++) l(p[a].state, p[a].params) ? j(d, q[p[a].hash]) : k(d, q[p[a].hash]), 
                    m(p[a].state, p[a].params) ? j(d, n) : k(d, n);
                }
                function j(a, b) {
                    f(function() {
                        a.addClass(b);
                    });
                }
                function k(a, b) {
                    a.removeClass(b);
                }
                function l(b, c) {
                    return a.includes(b.name, c);
                }
                function m(b, c) {
                    return a.is(b.name, c);
                }
                var n, o, p = [], q = {};
                n = c(e.uiSrefActiveEq || "", !1)(b);
                try {
                    o = b.$eval(e.uiSrefActive);
                } catch (a) {}
                o = o || c(e.uiSrefActive || "", !1)(b), Q(o) && S(o, function(c, d) {
                    if (P(c)) {
                        var e = D(c, a.current.name);
                        g(e.state, b.$eval(e.paramExpr), d);
                    }
                }), this.$$addStateInfo = function(a, b) {
                    if (!(Q(o) && p.length > 0)) {
                        var c = g(a, b, o);
                        return i(), c;
                    }
                }, b.$on("$stateChangeSuccess", i), i();
            } ]
        };
    }
    function L(a) {
        var b = function(b, c) {
            return a.is(b, c);
        };
        return b.$stateful = !0, b;
    }
    function M(a) {
        var b = function(b, c, d) {
            return a.includes(b, c, d);
        };
        return b.$stateful = !0, b;
    }
    var N = b.isDefined, O = b.isFunction, P = b.isString, Q = b.isObject, R = b.isArray, S = b.forEach, T = b.extend, U = b.copy, V = b.toJson;
    b.module("ui.router.util", [ "ng" ]), b.module("ui.router.router", [ "ui.router.util" ]), 
    b.module("ui.router.state", [ "ui.router.router", "ui.router.util" ]), b.module("ui.router", [ "ui.router.state" ]), 
    b.module("ui.router.compat", [ "ui.router" ]), q.$inject = [ "$q", "$injector" ], 
    b.module("ui.router.util").service("$resolve", q), b.module("ui.router.util").provider("$templateFactory", r);
    var W;
    t.prototype.concat = function(a, b) {
        var c = {
            caseInsensitive: W.caseInsensitive(),
            strict: W.strictMode(),
            squash: W.defaultSquashPolicy()
        };
        return new t(this.sourcePath + a + this.sourceSearch, T(c, b), this);
    }, t.prototype.toString = function() {
        return this.source;
    }, t.prototype.exec = function(a, b) {
        function c(a) {
            function b(a) {
                return a.split("").reverse().join("");
            }
            function c(a) {
                return a.replace(/\\-/g, "-");
            }
            var d = b(a).split(/-(?!\\)/), e = o(d, b);
            return o(e, c).reverse();
        }
        var d = this.regexp.exec(a);
        if (!d) return null;
        b = b || {};
        var e, f, g, h = this.parameters(), i = h.length, j = this.segments.length - 1, k = {};
        if (j !== d.length - 1) throw new Error("Unbalanced capture group in route '" + this.source + "'");
        var l, m;
        for (e = 0; e < j; e++) {
            for (g = h[e], l = this.params[g], m = d[e + 1], f = 0; f < l.replace.length; f++) l.replace[f].from === m && (m = l.replace[f].to);
            m && l.array === !0 && (m = c(m)), N(m) && (m = l.type.decode(m)), k[g] = l.value(m);
        }
        for (;e < i; e++) {
            for (g = h[e], k[g] = this.params[g].value(b[g]), l = this.params[g], m = b[g], 
            f = 0; f < l.replace.length; f++) l.replace[f].from === m && (m = l.replace[f].to);
            N(m) && (m = l.type.decode(m)), k[g] = l.value(m);
        }
        return k;
    }, t.prototype.parameters = function(a) {
        return N(a) ? this.params[a] || null : this.$$paramNames;
    }, t.prototype.validates = function(a) {
        return this.params.$$validates(a);
    }, t.prototype.format = function(a) {
        function b(a) {
            return encodeURIComponent(a).replace(/-/g, function(a) {
                return "%5C%" + a.charCodeAt(0).toString(16).toUpperCase();
            });
        }
        a = a || {};
        var c = this.segments, d = this.parameters(), e = this.params;
        if (!this.validates(a)) return null;
        var f, g = !1, h = c.length - 1, i = d.length, j = c[0];
        for (f = 0; f < i; f++) {
            var k = f < h, l = d[f], m = e[l], n = m.value(a[l]), p = m.isOptional && m.type.equals(m.value(), n), q = !!p && m.squash, r = m.type.encode(n);
            if (k) {
                var s = c[f + 1], t = f + 1 === h;
                if (q === !1) null != r && (j += R(r) ? o(r, b).join("-") : encodeURIComponent(r)), 
                j += s; else if (q === !0) {
                    var u = j.match(/\/$/) ? /\/?(.*)/ : /(.*)/;
                    j += s.match(u)[1];
                } else P(q) && (j += q + s);
                t && m.squash === !0 && "/" === j.slice(-1) && (j = j.slice(0, -1));
            } else {
                if (null == r || p && q !== !1) continue;
                if (R(r) || (r = [ r ]), 0 === r.length) continue;
                r = o(r, encodeURIComponent).join("&" + l + "="), j += (g ? "&" : "?") + (l + "=" + r), 
                g = !0;
            }
        }
        return j;
    }, u.prototype.is = function(a, b) {
        return !0;
    }, u.prototype.encode = function(a, b) {
        return a;
    }, u.prototype.decode = function(a, b) {
        return a;
    }, u.prototype.equals = function(a, b) {
        return a == b;
    }, u.prototype.$subPattern = function() {
        var a = this.pattern.toString();
        return a.substr(1, a.length - 2);
    }, u.prototype.pattern = /.*/, u.prototype.toString = function() {
        return "{Type:" + this.name + "}";
    }, u.prototype.$normalize = function(a) {
        return this.is(a) ? a : this.decode(a);
    }, u.prototype.$asArray = function(a, b) {
        function d(a, b) {
            function d(a, b) {
                return function() {
                    return a[b].apply(a, arguments);
                };
            }
            function e(a) {
                return R(a) ? a : N(a) ? [ a ] : [];
            }
            function f(a) {
                switch (a.length) {
                  case 0:
                    return c;

                  case 1:
                    return "auto" === b ? a[0] : a;

                  default:
                    return a;
                }
            }
            function g(a) {
                return !a;
            }
            function h(a, b) {
                return function(c) {
                    if (R(c) && 0 === c.length) return c;
                    c = e(c);
                    var d = o(c, a);
                    return b === !0 ? 0 === n(d, g).length : f(d);
                };
            }
            function i(a) {
                return function(b, c) {
                    var d = e(b), f = e(c);
                    if (d.length !== f.length) return !1;
                    for (var g = 0; g < d.length; g++) if (!a(d[g], f[g])) return !1;
                    return !0;
                };
            }
            this.encode = h(d(a, "encode")), this.decode = h(d(a, "decode")), this.is = h(d(a, "is"), !0), 
            this.equals = i(d(a, "equals")), this.pattern = a.pattern, this.$normalize = h(d(a, "$normalize")), 
            this.name = a.name, this.$arrayMode = b;
        }
        if (!a) return this;
        if ("auto" === a && !b) throw new Error("'auto' array mode is for query parameters only");
        return new d(this, a);
    }, b.module("ui.router.util").provider("$urlMatcherFactory", v), b.module("ui.router.util").run([ "$urlMatcherFactory", function(a) {} ]), 
    w.$inject = [ "$locationProvider", "$urlMatcherFactoryProvider" ], b.module("ui.router.router").provider("$urlRouter", w), 
    x.$inject = [ "$urlRouterProvider", "$urlMatcherFactoryProvider" ], b.module("ui.router.state").factory("$stateParams", function() {
        return {};
    }).constant("$state.runtime", {
        autoinject: !0
    }).provider("$state", x).run([ "$injector", function(a) {
        a.get("$state.runtime").autoinject && a.get("$state");
    } ]), y.$inject = [], b.module("ui.router.state").provider("$view", y), b.module("ui.router.state").provider("$uiViewScroll", z), 
    A.$inject = [ "$state", "$injector", "$uiViewScroll", "$interpolate", "$q" ], B.$inject = [ "$compile", "$controller", "$state", "$interpolate" ], 
    b.module("ui.router.state").directive("uiView", A), b.module("ui.router.state").directive("uiView", B), 
    I.$inject = [ "$state", "$timeout" ], J.$inject = [ "$state", "$timeout" ], K.$inject = [ "$state", "$stateParams", "$interpolate" ], 
    b.module("ui.router.state").directive("uiSref", I).directive("uiSrefActive", K).directive("uiSrefActiveEq", K).directive("uiState", J), 
    L.$inject = [ "$state" ], M.$inject = [ "$state" ], b.module("ui.router.state").filter("isState", L).filter("includedByState", M);
}(window, window.angular);

(function(a, b) {
    "use strict";
    var c = 1;
    var d = 8;
    var e = "-add";
    var f = "-remove";
    var g = "ng-";
    var h = "-active";
    var i = "-prepare";
    var j = "ng-animate";
    var k = "$$ngAnimateChildren";
    var l = "", m, n, o, p;
    if (a.ontransitionend === undefined && a.onwebkittransitionend !== undefined) {
        l = "-webkit-";
        m = "WebkitTransition";
        n = "webkitTransitionEnd transitionend";
    } else {
        m = "transition";
        n = "transitionend";
    }
    if (a.onanimationend === undefined && a.onwebkitanimationend !== undefined) {
        l = "-webkit-";
        o = "WebkitAnimation";
        p = "webkitAnimationEnd animationend";
    } else {
        o = "animation";
        p = "animationend";
    }
    var q = "Duration";
    var r = "Property";
    var s = "Delay";
    var t = "TimingFunction";
    var u = "IterationCount";
    var v = "PlayState";
    var w = 9999;
    var x = o + s;
    var y = o + q;
    var z = m + s;
    var A = m + q;
    var B = b.$$minErr("ng");
    function C(a, b, c) {
        if (!a) {
            throw B("areq", "Argument '{0}' is {1}", b || "?", c || "required");
        }
        return a;
    }
    function D(a, b) {
        if (!a && !b) return "";
        if (!a) return b;
        if (!b) return a;
        if (za(a)) a = a.join(" ");
        if (za(b)) b = b.join(" ");
        return a + " " + b;
    }
    function E(a) {
        var b = {};
        if (a && (a.to || a.from)) {
            b.to = a.to;
            b.from = a.from;
        }
        return b;
    }
    function F(a, b, c) {
        var d = "";
        a = za(a) ? a : a && Ea(a) && a.length ? a.split(/\s+/) : [];
        ya(a, function(a, e) {
            if (a && a.length > 0) {
                d += e > 0 ? " " : "";
                d += c ? b + a : a + b;
            }
        });
        return d;
    }
    function G(a, b) {
        var c = a.indexOf(b);
        if (b >= 0) {
            a.splice(c, 1);
        }
    }
    function H(a) {
        if (a instanceof Ga) {
            switch (a.length) {
              case 0:
                return a;

              case 1:
                if (a[0].nodeType === c) {
                    return a;
                }
                break;

              default:
                return Ga(I(a));
            }
        }
        if (a.nodeType === c) {
            return Ga(a);
        }
    }
    function I(a) {
        if (!a[0]) return a;
        for (var b = 0; b < a.length; b++) {
            var d = a[b];
            if (d.nodeType === c) {
                return d;
            }
        }
    }
    function J(a, b, c) {
        ya(b, function(b) {
            a.addClass(b, c);
        });
    }
    function K(a, b, c) {
        ya(b, function(b) {
            a.removeClass(b, c);
        });
    }
    function L(a) {
        return function(b, c) {
            if (c.addClass) {
                J(a, b, c.addClass);
                c.addClass = null;
            }
            if (c.removeClass) {
                K(a, b, c.removeClass);
                c.removeClass = null;
            }
        };
    }
    function M(a) {
        a = a || {};
        if (!a.$$prepared) {
            var b = a.domOperation || Ha;
            a.domOperation = function() {
                a.$$domOperationFired = true;
                b();
                b = Ha;
            };
            a.$$prepared = true;
        }
        return a;
    }
    function N(a, b) {
        O(a, b);
        P(a, b);
    }
    function O(a, b) {
        if (b.from) {
            a.css(b.from);
            b.from = null;
        }
    }
    function P(a, b) {
        if (b.to) {
            a.css(b.to);
            b.to = null;
        }
    }
    function Q(a, b, c) {
        var d = b.options || {};
        var e = c.options || {};
        var f = (d.addClass || "") + " " + (e.addClass || "");
        var g = (d.removeClass || "") + " " + (e.removeClass || "");
        var h = R(a.attr("class"), f, g);
        if (e.preparationClasses) {
            d.preparationClasses = Y(e.preparationClasses, d.preparationClasses);
            delete e.preparationClasses;
        }
        var i = d.domOperation !== Ha ? d.domOperation : null;
        xa(d, e);
        if (i) {
            d.domOperation = i;
        }
        if (h.addClass) {
            d.addClass = h.addClass;
        } else {
            d.addClass = null;
        }
        if (h.removeClass) {
            d.removeClass = h.removeClass;
        } else {
            d.removeClass = null;
        }
        b.addClass = d.addClass;
        b.removeClass = d.removeClass;
        return d;
    }
    function R(a, b, c) {
        var d = 1;
        var g = -1;
        var h = {};
        a = j(a);
        b = j(b);
        ya(b, function(a, b) {
            h[b] = d;
        });
        c = j(c);
        ya(c, function(a, b) {
            h[b] = h[b] === d ? null : g;
        });
        var i = {
            addClass: "",
            removeClass: ""
        };
        ya(h, function(b, c) {
            var h, j;
            if (b === d) {
                h = "addClass";
                j = !a[c] || a[c + f];
            } else if (b === g) {
                h = "removeClass";
                j = a[c] || a[c + e];
            }
            if (j) {
                if (i[h].length) {
                    i[h] += " ";
                }
                i[h] += c;
            }
        });
        function j(a) {
            if (Ea(a)) {
                a = a.split(" ");
            }
            var b = {};
            ya(a, function(a) {
                if (a.length) {
                    b[a] = true;
                }
            });
            return b;
        }
        return i;
    }
    function S(a) {
        return a instanceof Ga ? a[0] : a;
    }
    function T(a, b, c) {
        var d = "";
        if (b) {
            d = F(b, g, true);
        }
        if (c.addClass) {
            d = Y(d, F(c.addClass, e));
        }
        if (c.removeClass) {
            d = Y(d, F(c.removeClass, f));
        }
        if (d.length) {
            c.preparationClasses = d;
            a.addClass(d);
        }
    }
    function U(a, b) {
        if (b.preparationClasses) {
            a.removeClass(b.preparationClasses);
            b.preparationClasses = null;
        }
        if (b.activeClasses) {
            a.removeClass(b.activeClasses);
            b.activeClasses = null;
        }
    }
    function V(a, b) {
        var c = b ? "-" + b + "s" : "";
        X(a, [ z, c ]);
        return [ z, c ];
    }
    function W(a, b) {
        var c = b ? "paused" : "";
        var d = o + v;
        X(a, [ d, c ]);
        return [ d, c ];
    }
    function X(a, b) {
        var c = b[0];
        var d = b[1];
        a.style[c] = d;
    }
    function Y(a, b) {
        if (!a) return b;
        if (!b) return a;
        return a + " " + b;
    }
    var Z = [ "$$rAF", function(a) {
        var b, c;
        function d(a) {
            b = b.concat(a);
            e();
        }
        b = d.queue = [];
        d.waitUntilQuiet = function(b) {
            if (c) c();
            c = a(function() {
                c = null;
                b();
                e();
            });
        };
        return d;
        function e() {
            if (!b.length) return;
            var d = b.shift();
            for (var f = 0; f < d.length; f++) {
                d[f]();
            }
            if (!c) {
                a(function() {
                    if (!c) e();
                });
            }
        }
    } ];
    var $ = [ "$interpolate", function(a) {
        return {
            link: function(b, c, d) {
                var e = d.ngAnimateChildren;
                if (Ea(e) && e.length === 0) {
                    c.data(k, true);
                } else {
                    f(a(e)(b));
                    d.$observe("ngAnimateChildren", f);
                }
                function f(a) {
                    a = a === "on" || a === "true";
                    c.data(k, a);
                }
            }
        };
    } ];
    var _ = "$$animateCss";
    var aa = 1e3;
    var ba = 3;
    var ca = 1.5;
    var da = {
        transitionDuration: A,
        transitionDelay: z,
        transitionProperty: m + r,
        animationDuration: y,
        animationDelay: x,
        animationIterationCount: o + u
    };
    var ea = {
        transitionDuration: A,
        transitionDelay: z,
        animationDuration: y,
        animationDelay: x
    };
    function fa(a) {
        return [ y, a + "s" ];
    }
    function ga(a, b) {
        var c = b ? x : z;
        return [ c, a + "s" ];
    }
    function ha(a, b, c) {
        var d = Object.create(null);
        var e = a.getComputedStyle(b) || {};
        ya(c, function(a, b) {
            var c = e[a];
            if (c) {
                var f = c.charAt(0);
                if (f === "-" || f === "+" || f >= 0) {
                    c = ia(c);
                }
                if (c === 0) {
                    c = null;
                }
                d[b] = c;
            }
        });
        return d;
    }
    function ia(a) {
        var b = 0;
        var c = a.split(/\s*,\s*/);
        ya(c, function(a) {
            if (a.charAt(a.length - 1) === "s") {
                a = a.substring(0, a.length - 1);
            }
            a = parseFloat(a) || 0;
            b = b ? Math.max(a, b) : a;
        });
        return b;
    }
    function ja(a) {
        return a === 0 || a != null;
    }
    function ka(a, b) {
        var c = m;
        var d = a + "s";
        if (b) {
            c += q;
        } else {
            d += " linear all";
        }
        return [ c, d ];
    }
    function la() {
        var a = Object.create(null);
        return {
            flush: function() {
                a = Object.create(null);
            },
            count: function(b) {
                var c = a[b];
                return c ? c.total : 0;
            },
            get: function(b) {
                var c = a[b];
                return c && c.value;
            },
            put: function(b, c) {
                if (!a[b]) {
                    a[b] = {
                        total: 1,
                        value: c
                    };
                } else {
                    a[b].total++;
                }
            }
        };
    }
    function ma(a, b, c) {
        ya(c, function(c) {
            a[c] = Aa(a[c]) ? a[c] : b.style.getPropertyValue(c);
        });
    }
    var na = [ "$animateProvider", function(a) {
        var b = la();
        var c = la();
        this.$get = [ "$window", "$$jqLite", "$$AnimateRunner", "$timeout", "$$forceReflow", "$sniffer", "$$rAFScheduler", "$$animateQueue", function(a, d, i, j, k, l, q, s) {
            var u = L(d);
            var v = 0;
            function x(a, b) {
                var c = "$$ngAnimateParentKey";
                var d = a.parentNode;
                var e = d[c] || (d[c] = ++v);
                return e + "-" + a.getAttribute("class") + "-" + b;
            }
            function y(c, d, e, f) {
                var g = b.get(e);
                if (!g) {
                    g = ha(a, c, f);
                    if (g.animationIterationCount === "infinite") {
                        g.animationIterationCount = 1;
                    }
                }
                b.put(e, g);
                return g;
            }
            function z(e, f, g, h) {
                var i;
                if (b.count(g) > 0) {
                    i = c.get(g);
                    if (!i) {
                        var j = F(f, "-stagger");
                        d.addClass(e, j);
                        i = ha(a, e, h);
                        i.animationDuration = Math.max(i.animationDuration, 0);
                        i.transitionDuration = Math.max(i.transitionDuration, 0);
                        d.removeClass(e, j);
                        c.put(g, i);
                    }
                }
                return i || {};
            }
            var A = [];
            function B(a) {
                A.push(a);
                q.waitUntilQuiet(function() {
                    b.flush();
                    c.flush();
                    var a = k();
                    for (var d = 0; d < A.length; d++) {
                        A[d](a);
                    }
                    A.length = 0;
                });
            }
            function C(a, b, c) {
                var d = y(a, b, c, da);
                var e = d.animationDelay;
                var f = d.transitionDelay;
                d.maxDelay = e && f ? Math.max(e, f) : e || f;
                d.maxDuration = Math.max(d.animationDuration * d.animationIterationCount, d.transitionDuration);
                return d;
            }
            return function a(c, k) {
                var q = k || {};
                if (!q.$$prepared) {
                    q = M(wa(q));
                }
                var v = {};
                var y = S(c);
                if (!y || !y.parentNode || !s.enabled()) {
                    return Na();
                }
                var A = [];
                var D = c.attr("class");
                var H = E(q);
                var I;
                var J;
                var K;
                var L;
                var Q;
                var R;
                var T;
                var U;
                var Y;
                var Z;
                var $ = [];
                if (q.duration === 0 || !l.animations && !l.transitions) {
                    return Na();
                }
                var da = q.event && za(q.event) ? q.event.join(" ") : q.event;
                var ha = da && q.structural;
                var ia = "";
                var la = "";
                if (ha) {
                    ia = F(da, g, true);
                } else if (da) {
                    ia = da;
                }
                if (q.addClass) {
                    la += F(q.addClass, e);
                }
                if (q.removeClass) {
                    if (la.length) {
                        la += " ";
                    }
                    la += F(q.removeClass, f);
                }
                if (q.applyClassesEarly && la.length) {
                    u(c, q);
                }
                var na = [ ia, la ].join(" ").trim();
                var oa = D + " " + na;
                var pa = F(na, h);
                var qa = H.to && Object.keys(H.to).length > 0;
                var ra = (q.keyframeStyle || "").length > 0;
                if (!ra && !qa && !na) {
                    return Na();
                }
                var sa, ta;
                if (q.stagger > 0) {
                    var ua = parseFloat(q.stagger);
                    ta = {
                        transitionDelay: ua,
                        animationDelay: ua,
                        transitionDuration: 0,
                        animationDuration: 0
                    };
                } else {
                    sa = x(y, oa);
                    ta = z(y, na, sa, ea);
                }
                if (!q.$$skipPreparationClasses) {
                    d.addClass(c, na);
                }
                var va;
                if (q.transitionStyle) {
                    var xa = [ m, q.transitionStyle ];
                    X(y, xa);
                    A.push(xa);
                }
                if (q.duration >= 0) {
                    va = y.style[m].length > 0;
                    var Aa = ka(q.duration, va);
                    X(y, Aa);
                    A.push(Aa);
                }
                if (q.keyframeStyle) {
                    var Ba = [ o, q.keyframeStyle ];
                    X(y, Ba);
                    A.push(Ba);
                }
                var Ca = ta ? q.staggerIndex >= 0 ? q.staggerIndex : b.count(sa) : 0;
                var Da = Ca === 0;
                if (Da && !q.skipBlocking) {
                    V(y, w);
                }
                var Ea = C(y, oa, sa);
                var Fa = Ea.maxDelay;
                R = Math.max(Fa, 0);
                U = Ea.maxDuration;
                var Ga = {};
                Ga.hasTransitions = Ea.transitionDuration > 0;
                Ga.hasAnimations = Ea.animationDuration > 0;
                Ga.hasTransitionAll = Ga.hasTransitions && Ea.transitionProperty === "all";
                Ga.applyTransitionDuration = qa && (Ga.hasTransitions && !Ga.hasTransitionAll || Ga.hasAnimations && !Ga.hasTransitions);
                Ga.applyAnimationDuration = q.duration && Ga.hasAnimations;
                Ga.applyTransitionDelay = ja(q.delay) && (Ga.applyTransitionDuration || Ga.hasTransitions);
                Ga.applyAnimationDelay = ja(q.delay) && Ga.hasAnimations;
                Ga.recalculateTimingStyles = la.length > 0;
                if (Ga.applyTransitionDuration || Ga.applyAnimationDuration) {
                    U = q.duration ? parseFloat(q.duration) : U;
                    if (Ga.applyTransitionDuration) {
                        Ga.hasTransitions = true;
                        Ea.transitionDuration = U;
                        va = y.style[m + r].length > 0;
                        A.push(ka(U, va));
                    }
                    if (Ga.applyAnimationDuration) {
                        Ga.hasAnimations = true;
                        Ea.animationDuration = U;
                        A.push(fa(U));
                    }
                }
                if (U === 0 && !Ga.recalculateTimingStyles) {
                    return Na();
                }
                if (q.delay != null) {
                    var Ia;
                    if (typeof q.delay !== "boolean") {
                        Ia = parseFloat(q.delay);
                        R = Math.max(Ia, 0);
                    }
                    if (Ga.applyTransitionDelay) {
                        A.push(ga(Ia));
                    }
                    if (Ga.applyAnimationDelay) {
                        A.push(ga(Ia, true));
                    }
                }
                if (q.duration == null && Ea.transitionDuration > 0) {
                    Ga.recalculateTimingStyles = Ga.recalculateTimingStyles || Da;
                }
                T = R * aa;
                Y = U * aa;
                if (!q.skipBlocking) {
                    Ga.blockTransition = Ea.transitionDuration > 0;
                    Ga.blockKeyframeAnimation = Ea.animationDuration > 0 && ta.animationDelay > 0 && ta.animationDuration === 0;
                }
                if (q.from) {
                    if (q.cleanupStyles) {
                        ma(v, y, Object.keys(q.from));
                    }
                    O(c, q);
                }
                if (Ga.blockTransition || Ga.blockKeyframeAnimation) {
                    Ma(U);
                } else if (!q.skipBlocking) {
                    V(y, false);
                }
                return {
                    $$willAnimate: true,
                    end: Ja,
                    start: function() {
                        if (I) return;
                        Q = {
                            end: Ja,
                            cancel: Ka,
                            resume: null,
                            pause: null
                        };
                        L = new i(Q);
                        B(Pa);
                        return L;
                    }
                };
                function Ja() {
                    La();
                }
                function Ka() {
                    La(true);
                }
                function La(a) {
                    if (I || K && J) return;
                    I = true;
                    J = false;
                    if (!q.$$skipPreparationClasses) {
                        d.removeClass(c, na);
                    }
                    d.removeClass(c, pa);
                    W(y, false);
                    V(y, false);
                    ya(A, function(a) {
                        y.style[a[0]] = "";
                    });
                    u(c, q);
                    N(c, q);
                    if (Object.keys(v).length) {
                        ya(v, function(a, b) {
                            if (a) {
                                y.style.setProperty(b, a);
                            } else {
                                y.style.removeProperty(b);
                            }
                        });
                    }
                    if (q.onDone) {
                        q.onDone();
                    }
                    if ($ && $.length) {
                        c.off($.join(" "), Oa);
                    }
                    var b = c.data(_);
                    if (b) {
                        j.cancel(b[0].timer);
                        c.removeData(_);
                    }
                    if (L) {
                        L.complete(!a);
                    }
                }
                function Ma(a) {
                    if (Ga.blockTransition) {
                        V(y, a);
                    }
                    if (Ga.blockKeyframeAnimation) {
                        W(y, !!a);
                    }
                }
                function Na() {
                    L = new i({
                        end: Ja,
                        cancel: Ka
                    });
                    B(Ha);
                    La();
                    return {
                        $$willAnimate: false,
                        start: function() {
                            return L;
                        },
                        end: Ja
                    };
                }
                function Oa(a) {
                    a.stopPropagation();
                    var b = a.originalEvent || a;
                    var c = b.$manualTimeStamp || Date.now();
                    var d = parseFloat(b.elapsedTime.toFixed(ba));
                    if (Math.max(c - Z, 0) >= T && d >= U) {
                        K = true;
                        La();
                    }
                }
                function Pa() {
                    if (I) return;
                    if (!y.parentNode) {
                        La();
                        return;
                    }
                    var a = function(a) {
                        if (!K) {
                            J = !a;
                            if (Ea.animationDuration) {
                                var b = W(y, J);
                                if (J) {
                                    A.push(b);
                                } else {
                                    G(A, b);
                                }
                            }
                        } else if (J && a) {
                            J = false;
                            La();
                        }
                    };
                    var b = Ca > 0 && (Ea.transitionDuration && ta.transitionDuration === 0 || Ea.animationDuration && ta.animationDuration === 0) && Math.max(ta.animationDelay, ta.transitionDelay);
                    if (b) {
                        j(e, Math.floor(b * Ca * aa), false);
                    } else {
                        e();
                    }
                    Q.resume = function() {
                        a(true);
                    };
                    Q.pause = function() {
                        a(false);
                    };
                    function e() {
                        if (I) return;
                        Ma(false);
                        ya(A, function(a) {
                            var b = a[0];
                            var c = a[1];
                            y.style[b] = c;
                        });
                        u(c, q);
                        d.addClass(c, pa);
                        if (Ga.recalculateTimingStyles) {
                            oa = y.getAttribute("class") + " " + na;
                            sa = x(y, oa);
                            Ea = C(y, oa, sa);
                            Fa = Ea.maxDelay;
                            R = Math.max(Fa, 0);
                            U = Ea.maxDuration;
                            if (U === 0) {
                                La();
                                return;
                            }
                            Ga.hasTransitions = Ea.transitionDuration > 0;
                            Ga.hasAnimations = Ea.animationDuration > 0;
                        }
                        if (Ga.applyAnimationDelay) {
                            Fa = typeof q.delay !== "boolean" && ja(q.delay) ? parseFloat(q.delay) : Fa;
                            R = Math.max(Fa, 0);
                            Ea.animationDelay = Fa;
                            Ia = ga(Fa, true);
                            A.push(Ia);
                            y.style[Ia[0]] = Ia[1];
                        }
                        T = R * aa;
                        Y = U * aa;
                        if (q.easing) {
                            var a, b = q.easing;
                            if (Ga.hasTransitions) {
                                a = m + t;
                                A.push([ a, b ]);
                                y.style[a] = b;
                            }
                            if (Ga.hasAnimations) {
                                a = o + t;
                                A.push([ a, b ]);
                                y.style[a] = b;
                            }
                        }
                        if (Ea.transitionDuration) {
                            $.push(n);
                        }
                        if (Ea.animationDuration) {
                            $.push(p);
                        }
                        Z = Date.now();
                        var e = T + ca * Y;
                        var g = Z + e;
                        var h = c.data(_) || [];
                        var i = true;
                        if (h.length) {
                            var k = h[0];
                            i = g > k.expectedEndTime;
                            if (i) {
                                j.cancel(k.timer);
                            } else {
                                h.push(La);
                            }
                        }
                        if (i) {
                            var l = j(f, e, false);
                            h[0] = {
                                timer: l,
                                expectedEndTime: g
                            };
                            h.push(La);
                            c.data(_, h);
                        }
                        if ($.length) {
                            c.on($.join(" "), Oa);
                        }
                        if (q.to) {
                            if (q.cleanupStyles) {
                                ma(v, y, Object.keys(q.to));
                            }
                            P(c, q);
                        }
                    }
                    function f() {
                        var a = c.data(_);
                        if (a) {
                            for (var b = 1; b < a.length; b++) {
                                a[b]();
                            }
                            c.removeData(_);
                        }
                    }
                }
            };
        } ];
    } ];
    var oa = [ "$$animationProvider", function(a) {
        a.drivers.push("$$animateCssDriver");
        var b = "ng-animate-shim";
        var c = "ng-anchor";
        var d = "ng-anchor-out";
        var e = "ng-anchor-in";
        function f(a) {
            return a.parentNode && a.parentNode.nodeType === 11;
        }
        this.$get = [ "$animateCss", "$rootScope", "$$AnimateRunner", "$rootElement", "$sniffer", "$$jqLite", "$document", function(a, g, h, i, j, k, l) {
            if (!j.animations && !j.transitions) return Ha;
            var m = l[0].body;
            var n = S(i);
            var o = Ga(f(n) || m.contains(n) ? n : m);
            return function a(b) {
                return b.from && b.to ? s(b.from, b.to, b.classes, b.anchors) : t(b);
            };
            function p(a) {
                return a.replace(/\bng-\S+\b/g, "");
            }
            function q(a, b) {
                if (Ea(a)) a = a.split(" ");
                if (Ea(b)) b = b.split(" ");
                return a.filter(function(a) {
                    return b.indexOf(a) === -1;
                }).join(" ");
            }
            function r(f, g, i) {
                var j = Ga(S(g).cloneNode(true));
                var k = p(u(j));
                g.addClass(b);
                i.addClass(b);
                j.addClass(c);
                o.append(j);
                var l, n = t();
                if (!n) {
                    l = v();
                    if (!l) {
                        return w();
                    }
                }
                var r = n || l;
                return {
                    start: function() {
                        var a;
                        var b = r.start();
                        b.done(function() {
                            b = null;
                            if (!l) {
                                l = v();
                                if (l) {
                                    b = l.start();
                                    b.done(function() {
                                        b = null;
                                        w();
                                        a.complete();
                                    });
                                    return b;
                                }
                            }
                            w();
                            a.complete();
                        });
                        a = new h({
                            end: c,
                            cancel: c
                        });
                        return a;
                        function c() {
                            if (b) {
                                b.end();
                            }
                        }
                    }
                };
                function s(a) {
                    var b = {};
                    var c = S(a).getBoundingClientRect();
                    ya([ "width", "height", "top", "left" ], function(a) {
                        var d = c[a];
                        switch (a) {
                          case "top":
                            d += m.scrollTop;
                            break;

                          case "left":
                            d += m.scrollLeft;
                            break;
                        }
                        b[a] = Math.floor(d) + "px";
                    });
                    return b;
                }
                function t() {
                    var b = a(j, {
                        addClass: d,
                        delay: true,
                        from: s(g)
                    });
                    return b.$$willAnimate ? b : null;
                }
                function u(a) {
                    return a.attr("class") || "";
                }
                function v() {
                    var b = p(u(i));
                    var c = q(b, k);
                    var f = q(k, b);
                    var g = a(j, {
                        to: s(i),
                        addClass: e + " " + c,
                        removeClass: d + " " + f,
                        delay: true
                    });
                    return g.$$willAnimate ? g : null;
                }
                function w() {
                    j.remove();
                    g.removeClass(b);
                    i.removeClass(b);
                }
            }
            function s(a, b, c, d) {
                var e = t(a, Ha);
                var f = t(b, Ha);
                var g = [];
                ya(d, function(a) {
                    var b = a["out"];
                    var d = a["in"];
                    var e = r(c, b, d);
                    if (e) {
                        g.push(e);
                    }
                });
                if (!e && !f && g.length === 0) return;
                return {
                    start: function() {
                        var a = [];
                        if (e) {
                            a.push(e.start());
                        }
                        if (f) {
                            a.push(f.start());
                        }
                        ya(g, function(b) {
                            a.push(b.start());
                        });
                        var b = new h({
                            end: c,
                            cancel: c
                        });
                        h.all(a, function(a) {
                            b.complete(a);
                        });
                        return b;
                        function c() {
                            ya(a, function(a) {
                                a.end();
                            });
                        }
                    }
                };
            }
            function t(b) {
                var c = b.element;
                var d = b.options || {};
                if (b.structural) {
                    d.event = b.event;
                    d.structural = true;
                    d.applyClassesEarly = true;
                    if (b.event === "leave") {
                        d.onDone = d.domOperation;
                    }
                }
                if (d.preparationClasses) {
                    d.event = Y(d.event, d.preparationClasses);
                }
                var e = a(c, d);
                return e.$$willAnimate ? e : null;
            }
        } ];
    } ];
    var pa = [ "$animateProvider", function(a) {
        this.$get = [ "$injector", "$$AnimateRunner", "$$jqLite", function(b, c, d) {
            var e = L(d);
            return function(a, b, d, g) {
                var h = false;
                if (arguments.length === 3 && Da(d)) {
                    g = d;
                    d = null;
                }
                g = M(g);
                if (!d) {
                    d = a.attr("class") || "";
                    if (g.addClass) {
                        d += " " + g.addClass;
                    }
                    if (g.removeClass) {
                        d += " " + g.removeClass;
                    }
                }
                var i = g.addClass;
                var j = g.removeClass;
                var k = f(d);
                var l, m;
                if (k.length) {
                    var n, o;
                    if (b === "leave") {
                        o = "leave";
                        n = "afterLeave";
                    } else {
                        o = "before" + b.charAt(0).toUpperCase() + b.substr(1);
                        n = b;
                    }
                    if (b !== "enter" && b !== "move") {
                        l = u(a, b, g, k, o);
                    }
                    m = u(a, b, g, k, n);
                }
                if (!l && !m) return;
                function p() {
                    g.domOperation();
                    e(a, g);
                }
                function q() {
                    h = true;
                    p();
                    N(a, g);
                }
                var r;
                return {
                    $$willAnimate: true,
                    end: function() {
                        if (r) {
                            r.end();
                        } else {
                            q();
                            r = new c();
                            r.complete(true);
                        }
                        return r;
                    },
                    start: function() {
                        if (r) {
                            return r;
                        }
                        r = new c();
                        var a;
                        var b = [];
                        if (l) {
                            b.push(function(b) {
                                a = l(b);
                            });
                        }
                        if (b.length) {
                            b.push(function(a) {
                                p();
                                a(true);
                            });
                        } else {
                            p();
                        }
                        if (m) {
                            b.push(function(b) {
                                a = m(b);
                            });
                        }
                        r.setHost({
                            end: function() {
                                e();
                            },
                            cancel: function() {
                                e(true);
                            }
                        });
                        c.chain(b, d);
                        return r;
                        function d(a) {
                            q(a);
                            r.complete(a);
                        }
                        function e(b) {
                            if (!h) {
                                (a || Ha)(b);
                                d(b);
                            }
                        }
                    }
                };
                function s(a, b, d, e, f) {
                    var g;
                    switch (d) {
                      case "animate":
                        g = [ b, e.from, e.to, f ];
                        break;

                      case "setClass":
                        g = [ b, i, j, f ];
                        break;

                      case "addClass":
                        g = [ b, i, f ];
                        break;

                      case "removeClass":
                        g = [ b, j, f ];
                        break;

                      default:
                        g = [ b, f ];
                        break;
                    }
                    g.push(e);
                    var h = a.apply(a, g);
                    if (h) {
                        if (Ca(h.start)) {
                            h = h.start();
                        }
                        if (h instanceof c) {
                            h.done(f);
                        } else if (Ca(h)) {
                            return h;
                        }
                    }
                    return Ha;
                }
                function t(a, b, d, e, f) {
                    var g = [];
                    ya(e, function(e) {
                        var h = e[f];
                        if (!h) return;
                        g.push(function() {
                            var e;
                            var f;
                            var g = false;
                            var i = function(a) {
                                if (!g) {
                                    g = true;
                                    (f || Ha)(a);
                                    e.complete(!a);
                                }
                            };
                            e = new c({
                                end: function() {
                                    i();
                                },
                                cancel: function() {
                                    i(true);
                                }
                            });
                            f = s(h, a, b, d, function(a) {
                                var b = a === false;
                                i(b);
                            });
                            return e;
                        });
                    });
                    return g;
                }
                function u(a, b, d, e, f) {
                    var g = t(a, b, d, e, f);
                    if (g.length === 0) {
                        var h, i;
                        if (f === "beforeSetClass") {
                            h = t(a, "removeClass", d, e, "beforeRemoveClass");
                            i = t(a, "addClass", d, e, "beforeAddClass");
                        } else if (f === "setClass") {
                            h = t(a, "removeClass", d, e, "removeClass");
                            i = t(a, "addClass", d, e, "addClass");
                        }
                        if (h) {
                            g = g.concat(h);
                        }
                        if (i) {
                            g = g.concat(i);
                        }
                    }
                    if (g.length === 0) return;
                    return function a(b) {
                        var d = [];
                        if (g.length) {
                            ya(g, function(a) {
                                d.push(a());
                            });
                        }
                        if (d.length) {
                            c.all(d, b);
                        } else {
                            b();
                        }
                        return function a(b) {
                            ya(d, function(a) {
                                if (b) {
                                    a.cancel();
                                } else {
                                    a.end();
                                }
                            });
                        };
                    };
                }
            };
            function f(c) {
                c = za(c) ? c : c.split(" ");
                var d = [], e = {};
                for (var f = 0; f < c.length; f++) {
                    var g = c[f], h = a.$$registeredAnimations[g];
                    if (h && !e[g]) {
                        d.push(b.get(h));
                        e[g] = true;
                    }
                }
                return d;
            }
        } ];
    } ];
    var qa = [ "$$animationProvider", function(a) {
        a.drivers.push("$$animateJsDriver");
        this.$get = [ "$$animateJs", "$$AnimateRunner", function(a, b) {
            return function a(d) {
                if (d.from && d.to) {
                    var e = c(d.from);
                    var f = c(d.to);
                    if (!e && !f) return;
                    return {
                        start: function() {
                            var a = [];
                            if (e) {
                                a.push(e.start());
                            }
                            if (f) {
                                a.push(f.start());
                            }
                            b.all(a, g);
                            var c = new b({
                                end: d(),
                                cancel: d()
                            });
                            return c;
                            function d() {
                                return function() {
                                    ya(a, function(a) {
                                        a.end();
                                    });
                                };
                            }
                            function g(a) {
                                c.complete(a);
                            }
                        }
                    };
                } else {
                    return c(d);
                }
            };
            function c(b) {
                var c = b.element;
                var d = b.event;
                var e = b.options;
                var f = b.classes;
                return a(c, d, f, e);
            }
        } ];
    } ];
    var ra = "data-ng-animate";
    var sa = "$ngAnimatePin";
    var ta = [ "$animateProvider", function(b) {
        var d = 1;
        var e = 2;
        var f = " ";
        var g = this.rules = {
            skip: [],
            cancel: [],
            join: []
        };
        function h(a) {
            if (!a) {
                return null;
            }
            var b = a.split(f);
            var c = Object.create(null);
            ya(b, function(a) {
                c[a] = true;
            });
            return c;
        }
        function i(a, b) {
            if (a && b) {
                var c = h(b);
                return a.split(f).some(function(a) {
                    return c[a];
                });
            }
        }
        function j(a, b, c) {
            return g[a].some(function(a) {
                return a(b, c);
            });
        }
        function l(a, b) {
            var c = (a.addClass || "").length > 0;
            var d = (a.removeClass || "").length > 0;
            return b ? c && d : c || d;
        }
        g.join.push(function(a, b) {
            return !a.structural && l(a);
        });
        g.skip.push(function(a, b) {
            return !a.structural && !l(a);
        });
        g.skip.push(function(a, b) {
            return b.event === "leave" && a.structural;
        });
        g.skip.push(function(a, b) {
            return b.structural && b.state === e && !a.structural;
        });
        g.cancel.push(function(a, b) {
            return b.structural && a.structural;
        });
        g.cancel.push(function(a, b) {
            return b.state === e && a.structural;
        });
        g.cancel.push(function(a, b) {
            if (b.structural) return false;
            var c = a.addClass;
            var d = a.removeClass;
            var e = b.addClass;
            var f = b.removeClass;
            if (Fa(c) && Fa(d) || Fa(e) && Fa(f)) {
                return false;
            }
            return i(c, f) || i(d, e);
        });
        this.$get = [ "$$rAF", "$rootScope", "$rootElement", "$document", "$$Map", "$$animation", "$$AnimateRunner", "$templateRequest", "$$jqLite", "$$forceReflow", "$$isDocumentHidden", function(f, g, h, i, m, n, o, p, q, r, s) {
            var t = new m();
            var u = new m();
            var v = null;
            function w() {
                var a = false;
                return function(b) {
                    if (a) {
                        b();
                    } else {
                        g.$$postDigest(function() {
                            a = true;
                            b();
                        });
                    }
                };
            }
            var x = g.$watch(function() {
                return p.totalPendingRequests === 0;
            }, function(a) {
                if (!a) return;
                x();
                g.$$postDigest(function() {
                    g.$$postDigest(function() {
                        if (v === null) {
                            v = true;
                        }
                    });
                });
            });
            var y = Object.create(null);
            var z = b.classNameFilter();
            var A = !z ? function() {
                return true;
            } : function(a) {
                return z.test(a);
            };
            var B = L(q);
            function D(a, b) {
                return Q(a, b, {});
            }
            var E = a.Node.prototype.contains || function(a) {
                return this === a || !!(this.compareDocumentPosition(a) & 16);
            };
            function F(a, b, c) {
                var d = [];
                var e = y[c];
                if (e) {
                    ya(e, function(e) {
                        if (E.call(e.node, b)) {
                            d.push(e.callback);
                        } else if (c === "leave" && E.call(e.node, a)) {
                            d.push(e.callback);
                        }
                    });
                }
                return d;
            }
            function G(a, b, c) {
                var d = I(b);
                return a.filter(function(a) {
                    var b = a.node === d && (!c || a.callback === c);
                    return !b;
                });
            }
            function J(a, b) {
                if (a === "close" && !b.parentNode) {
                    K.off(b);
                }
            }
            var K = {
                on: function(a, b, c) {
                    var d = I(b);
                    y[a] = y[a] || [];
                    y[a].push({
                        node: d,
                        callback: c
                    });
                    Ga(b).on("$destroy", function() {
                        var e = t.get(d);
                        if (!e) {
                            K.off(a, b, c);
                        }
                    });
                },
                off: function(a, b, c) {
                    if (arguments.length === 1 && !Ea(arguments[0])) {
                        b = arguments[0];
                        for (var d in y) {
                            y[d] = G(y[d], b);
                        }
                        return;
                    }
                    var e = y[a];
                    if (!e) return;
                    y[a] = arguments.length === 1 ? null : G(e, b, c);
                },
                pin: function(a, b) {
                    C(Ba(a), "element", "not an element");
                    C(Ba(b), "parentElement", "not an element");
                    a.data(sa, b);
                },
                push: function(a, b, c, d) {
                    c = c || {};
                    c.domOperation = d;
                    return O(a, b, c);
                },
                enabled: function(a, b) {
                    var c = arguments.length;
                    if (c === 0) {
                        b = !!v;
                    } else {
                        var d = Ba(a);
                        if (!d) {
                            b = v = !!a;
                        } else {
                            var e = S(a);
                            if (c === 1) {
                                b = !u.get(e);
                            } else {
                                u.set(e, !b);
                            }
                        }
                    }
                    return b;
                }
            };
            return K;
            function O(a, b, c) {
                var h = wa(c);
                var i = H(a);
                var k = S(i);
                var m = k && k.parentNode;
                h = M(h);
                var p = new o();
                var q = w();
                if (za(h.addClass)) {
                    h.addClass = h.addClass.join(" ");
                }
                if (h.addClass && !Ea(h.addClass)) {
                    h.addClass = null;
                }
                if (za(h.removeClass)) {
                    h.removeClass = h.removeClass.join(" ");
                }
                if (h.removeClass && !Ea(h.removeClass)) {
                    h.removeClass = null;
                }
                if (h.from && !Da(h.from)) {
                    h.from = null;
                }
                if (h.to && !Da(h.to)) {
                    h.to = null;
                }
                if (!k) {
                    Z();
                    return p;
                }
                var r = [ k.getAttribute("class"), h.addClass, h.removeClass ].join(" ");
                if (!A(r)) {
                    Z();
                    return p;
                }
                var x = [ "enter", "move", "leave" ].indexOf(b) >= 0;
                var y = s();
                var z = !v || y || u.get(k);
                var C = !z && t.get(k) || {};
                var E = !!C.state;
                if (!z && (!E || C.state !== d)) {
                    z = !V(k, m, b);
                }
                if (z) {
                    if (y) Y(p, b, "start");
                    Z();
                    if (y) Y(p, b, "close");
                    return p;
                }
                if (x) {
                    P(k);
                }
                var G = {
                    structural: x,
                    element: i,
                    event: b,
                    addClass: h.addClass,
                    removeClass: h.removeClass,
                    close: Z,
                    options: h,
                    runner: p
                };
                if (E) {
                    var I = j("skip", G, C);
                    if (I) {
                        if (C.state === e) {
                            Z();
                            return p;
                        } else {
                            Q(i, C, G);
                            return C.runner;
                        }
                    }
                    var K = j("cancel", G, C);
                    if (K) {
                        if (C.state === e) {
                            C.runner.end();
                        } else if (C.structural) {
                            C.close();
                        } else {
                            Q(i, C, G);
                            return C.runner;
                        }
                    } else {
                        var L = j("join", G, C);
                        if (L) {
                            if (C.state === e) {
                                D(i, G);
                            } else {
                                T(i, x ? b : null, h);
                                b = G.event = C.event;
                                h = Q(i, C, G);
                                return C.runner;
                            }
                        }
                    }
                } else {
                    D(i, G);
                }
                var O = G.structural;
                if (!O) {
                    O = G.event === "animate" && Object.keys(G.options.to || {}).length > 0 || l(G);
                }
                if (!O) {
                    Z();
                    R(k);
                    return p;
                }
                var X = (C.counter || 0) + 1;
                G.counter = X;
                W(k, d, G);
                g.$$postDigest(function() {
                    i = H(a);
                    var c = t.get(k);
                    var d = !c;
                    c = c || {};
                    var f = i.parent() || [];
                    var g = f.length > 0 && (c.event === "animate" || c.structural || l(c));
                    if (d || c.counter !== X || !g) {
                        if (d) {
                            B(i, h);
                            N(i, h);
                        }
                        if (d || x && c.event !== b) {
                            h.domOperation();
                            p.end();
                        }
                        if (!g) {
                            R(k);
                        }
                        return;
                    }
                    b = !c.structural && l(c, true) ? "setClass" : c.event;
                    W(k, e);
                    var j = n(i, b, c.options);
                    p.setHost(j);
                    Y(p, b, "start", {});
                    j.done(function(a) {
                        Z(!a);
                        var c = t.get(k);
                        if (c && c.counter === X) {
                            R(k);
                        }
                        Y(p, b, "close", {});
                    });
                });
                return p;
                function Y(a, b, c, d) {
                    q(function() {
                        var a = F(m, k, b);
                        if (a.length) {
                            f(function() {
                                ya(a, function(a) {
                                    a(i, c, d);
                                });
                                J(c, k);
                            });
                        } else {
                            J(c, k);
                        }
                    });
                    a.progress(b, c, d);
                }
                function Z(a) {
                    U(i, h);
                    B(i, h);
                    N(i, h);
                    h.domOperation();
                    p.complete(!a);
                }
            }
            function P(a) {
                var b = a.querySelectorAll("[" + ra + "]");
                ya(b, function(a) {
                    var b = parseInt(a.getAttribute(ra), 10);
                    var c = t.get(a);
                    if (c) {
                        switch (b) {
                          case e:
                            c.runner.end();

                          case d:
                            t.delete(a);
                            break;
                        }
                    }
                });
            }
            function R(a) {
                a.removeAttribute(ra);
                t.delete(a);
            }
            function V(a, b, d) {
                var e = i[0].body;
                var f = S(h);
                var g = a === e || a.nodeName === "HTML";
                var j = a === f;
                var l = false;
                var m = u.get(a);
                var n;
                var o = Ga.data(a, sa);
                if (o) {
                    b = S(o);
                }
                while (b) {
                    if (!j) {
                        j = b === f;
                    }
                    if (b.nodeType !== c) {
                        break;
                    }
                    var p = t.get(b) || {};
                    if (!l) {
                        var q = u.get(b);
                        if (q === true && m !== false) {
                            m = true;
                            break;
                        } else if (q === false) {
                            m = false;
                        }
                        l = p.structural;
                    }
                    if (Fa(n) || n === true) {
                        var r = Ga.data(b, k);
                        if (Aa(r)) {
                            n = r;
                        }
                    }
                    if (l && n === false) break;
                    if (!g) {
                        g = b === e;
                    }
                    if (g && j) {
                        break;
                    }
                    if (!j) {
                        o = Ga.data(b, sa);
                        if (o) {
                            b = S(o);
                            continue;
                        }
                    }
                    b = b.parentNode;
                }
                var s = (!l || n) && m !== true;
                return s && j && g;
            }
            function W(a, b, c) {
                c = c || {};
                c.state = b;
                a.setAttribute(ra, b);
                var d = t.get(a);
                var e = d ? xa(d, c) : c;
                t.set(a, e);
            }
        } ];
    } ];
    var ua = [ "$animateProvider", function(a) {
        var b = "ng-animate-ref";
        var c = this.drivers = [];
        var d = "$$animationRunner";
        function e(a, b) {
            a.data(d, b);
        }
        function f(a) {
            a.removeData(d);
        }
        function g(a) {
            return a.data(d);
        }
        this.$get = [ "$$jqLite", "$rootScope", "$injector", "$$AnimateRunner", "$$Map", "$$rAFScheduler", function(a, d, h, k, l, m) {
            var n = [];
            var o = L(a);
            function p(a) {
                var b = {
                    children: []
                };
                var c, d = new l();
                for (c = 0; c < a.length; c++) {
                    var e = a[c];
                    d.set(e.domNode, a[c] = {
                        domNode: e.domNode,
                        fn: e.fn,
                        children: []
                    });
                }
                for (c = 0; c < a.length; c++) {
                    f(a[c]);
                }
                return g(b);
                function f(a) {
                    if (a.processed) return a;
                    a.processed = true;
                    var c = a.domNode;
                    var e = c.parentNode;
                    d.set(c, a);
                    var g;
                    while (e) {
                        g = d.get(e);
                        if (g) {
                            if (!g.processed) {
                                g = f(g);
                            }
                            break;
                        }
                        e = e.parentNode;
                    }
                    (g || b).children.push(a);
                    return a;
                }
                function g(a) {
                    var b = [];
                    var c = [];
                    var d;
                    for (d = 0; d < a.children.length; d++) {
                        c.push(a.children[d]);
                    }
                    var e = c.length;
                    var f = 0;
                    var g = [];
                    for (d = 0; d < c.length; d++) {
                        var h = c[d];
                        if (e <= 0) {
                            e = f;
                            f = 0;
                            b.push(g);
                            g = [];
                        }
                        g.push(h.fn);
                        h.children.forEach(function(a) {
                            f++;
                            c.push(a);
                        });
                        e--;
                    }
                    if (g.length) {
                        b.push(g);
                    }
                    return b;
                }
            }
            return function(l, q, r) {
                r = M(r);
                var s = [ "enter", "move", "leave" ].indexOf(q) >= 0;
                var t = new k({
                    end: function() {
                        F();
                    },
                    cancel: function() {
                        F(true);
                    }
                });
                if (!c.length) {
                    F();
                    return t;
                }
                e(l, t);
                var u = D(l.attr("class"), D(r.addClass, r.removeClass));
                var v = r.tempClasses;
                if (v) {
                    u += " " + v;
                    r.tempClasses = null;
                }
                var w;
                if (s) {
                    w = "ng-" + q + i;
                    a.addClass(l, w);
                }
                n.push({
                    element: l,
                    classes: u,
                    event: q,
                    structural: s,
                    options: r,
                    beforeStart: B,
                    close: F
                });
                l.on("$destroy", E);
                if (n.length > 1) return t;
                d.$$postDigest(function() {
                    var a = [];
                    ya(n, function(b) {
                        if (g(b.element)) {
                            a.push(b);
                        } else {
                            b.close();
                        }
                    });
                    n.length = 0;
                    var b = y(a);
                    var c = [];
                    ya(b, function(a) {
                        c.push({
                            domNode: S(a.from ? a.from.element : a.element),
                            fn: function b() {
                                a.beforeStart();
                                var c, d = a.close;
                                var e = a.anchors ? a.from.element || a.to.element : a.element;
                                if (g(e)) {
                                    var f = A(a);
                                    if (f) {
                                        c = f.start;
                                    }
                                }
                                if (!c) {
                                    d();
                                } else {
                                    var h = c();
                                    h.done(function(a) {
                                        d(!a);
                                    });
                                    C(a, h);
                                }
                            }
                        });
                    });
                    m(p(c));
                });
                return t;
                function x(a) {
                    var c = "[" + b + "]";
                    var d = a.hasAttribute(b) ? [ a ] : a.querySelectorAll(c);
                    var e = [];
                    ya(d, function(a) {
                        var c = a.getAttribute(b);
                        if (c && c.length) {
                            e.push(a);
                        }
                    });
                    return e;
                }
                function y(a) {
                    var c = [];
                    var d = {};
                    ya(a, function(a, e) {
                        var f = a.element;
                        var g = S(f);
                        var h = a.event;
                        var i = [ "enter", "move" ].indexOf(h) >= 0;
                        var j = a.structural ? x(g) : [];
                        if (j.length) {
                            var k = i ? "to" : "from";
                            ya(j, function(a) {
                                var c = a.getAttribute(b);
                                d[c] = d[c] || {};
                                d[c][k] = {
                                    animationID: e,
                                    element: Ga(a)
                                };
                            });
                        } else {
                            c.push(a);
                        }
                    });
                    var e = {};
                    var f = {};
                    ya(d, function(b, d) {
                        var g = b.from;
                        var h = b.to;
                        if (!g || !h) {
                            var i = g ? g.animationID : h.animationID;
                            var j = i.toString();
                            if (!e[j]) {
                                e[j] = true;
                                c.push(a[i]);
                            }
                            return;
                        }
                        var k = a[g.animationID];
                        var l = a[h.animationID];
                        var m = g.animationID.toString();
                        if (!f[m]) {
                            var n = f[m] = {
                                structural: true,
                                beforeStart: function() {
                                    k.beforeStart();
                                    l.beforeStart();
                                },
                                close: function() {
                                    k.close();
                                    l.close();
                                },
                                classes: z(k.classes, l.classes),
                                from: k,
                                to: l,
                                anchors: []
                            };
                            if (n.classes.length) {
                                c.push(n);
                            } else {
                                c.push(k);
                                c.push(l);
                            }
                        }
                        f[m].anchors.push({
                            out: g.element,
                            in: h.element
                        });
                    });
                    return c;
                }
                function z(a, b) {
                    a = a.split(" ");
                    b = b.split(" ");
                    var c = [];
                    for (var d = 0; d < a.length; d++) {
                        var e = a[d];
                        if (e.substring(0, 3) === "ng-") continue;
                        for (var f = 0; f < b.length; f++) {
                            if (e === b[f]) {
                                c.push(e);
                                break;
                            }
                        }
                    }
                    return c.join(" ");
                }
                function A(a) {
                    for (var b = c.length - 1; b >= 0; b--) {
                        var d = c[b];
                        var e = h.get(d);
                        var f = e(a);
                        if (f) {
                            return f;
                        }
                    }
                }
                function B() {
                    l.addClass(j);
                    if (v) {
                        a.addClass(l, v);
                    }
                    if (w) {
                        a.removeClass(l, w);
                        w = null;
                    }
                }
                function C(a, b) {
                    if (a.from && a.to) {
                        c(a.from.element);
                        c(a.to.element);
                    } else {
                        c(a.element);
                    }
                    function c(a) {
                        var c = g(a);
                        if (c) c.setHost(b);
                    }
                }
                function E() {
                    var a = g(l);
                    if (a && (q !== "leave" || !r.$$domOperationFired)) {
                        a.end();
                    }
                }
                function F(b) {
                    l.off("$destroy", E);
                    f(l);
                    o(l, r);
                    N(l, r);
                    r.domOperation();
                    if (v) {
                        a.removeClass(l, v);
                    }
                    l.removeClass(j);
                    t.complete(!b);
                }
            };
        } ];
    } ];
    var va = [ "$animate", "$rootScope", function(a, b) {
        return {
            restrict: "A",
            transclude: "element",
            terminal: true,
            priority: 600,
            link: function(b, c, d, e, f) {
                var g, h;
                b.$watchCollection(d.ngAnimateSwap || d["for"], function(d) {
                    if (g) {
                        a.leave(g);
                    }
                    if (h) {
                        h.$destroy();
                        h = null;
                    }
                    if (d || d === 0) {
                        h = b.$new();
                        f(h, function(b) {
                            g = b;
                            a.enter(b, null, c);
                        });
                    }
                });
            }
        };
    } ];
    var wa;
    var xa;
    var ya;
    var za;
    var Aa;
    var Ba;
    var Ca;
    var Da;
    var Ea;
    var Fa;
    var Ga;
    var Ha;
    b.module("ngAnimate", [], function a() {
        Ha = b.noop;
        wa = b.copy;
        xa = b.extend;
        Ga = b.element;
        ya = b.forEach;
        za = b.isArray;
        Ea = b.isString;
        Da = b.isObject;
        Fa = b.isUndefined;
        Aa = b.isDefined;
        Ca = b.isFunction;
        Ba = b.isElement;
    }).directive("ngAnimateSwap", va).directive("ngAnimateChildren", $).factory("$$rAFScheduler", Z).provider("$$animateQueue", ta).provider("$$animation", ua).provider("$animateCss", na).provider("$$animateCssDriver", oa).provider("$$animateJs", pa).provider("$$animateJsDriver", qa);
})(window, window.angular);

(function(a, b) {
    "use strict";
    var c = b.module("ngTouch", []);
    c.provider("$touch", e);
    function d(a) {
        return b.lowercase(a.nodeName || a[0] && a[0].nodeName);
    }
    e.$inject = [ "$provide", "$compileProvider" ];
    function e(a, c) {
        var d = false;
        var e = false;
        this.ngClickOverrideEnabled = function(g) {
            if (b.isDefined(g)) {
                if (g && !e) {
                    e = true;
                    f.$$moduleName = "ngTouch";
                    c.directive("ngClick", f);
                    a.decorator("ngClickDirective", [ "$delegate", function(a) {
                        if (d) {
                            a.shift();
                        } else {
                            var b = a.length - 1;
                            while (b >= 0) {
                                if (a[b].$$moduleName === "ngTouch") {
                                    a.splice(b, 1);
                                    break;
                                }
                                b--;
                            }
                        }
                        return a;
                    } ]);
                }
                d = g;
                return this;
            }
            return d;
        };
        this.$get = function() {
            return {
                ngClickOverrideEnabled: function() {
                    return d;
                }
            };
        };
    }
    c.factory("$swipe", [ function() {
        var a = 10;
        var c = {
            mouse: {
                start: "mousedown",
                move: "mousemove",
                end: "mouseup"
            },
            touch: {
                start: "touchstart",
                move: "touchmove",
                end: "touchend",
                cancel: "touchcancel"
            },
            pointer: {
                start: "pointerdown",
                move: "pointermove",
                end: "pointerup",
                cancel: "pointercancel"
            }
        };
        function d(a) {
            var b = a.originalEvent || a;
            var c = b.touches && b.touches.length ? b.touches : [ b ];
            var d = b.changedTouches && b.changedTouches[0] || c[0];
            return {
                x: d.clientX,
                y: d.clientY
            };
        }
        function e(a, d) {
            var e = [];
            b.forEach(a, function(a) {
                var b = c[a][d];
                if (b) {
                    e.push(b);
                }
            });
            return e.join(" ");
        }
        return {
            bind: function(b, c, f) {
                var g, h;
                var i;
                var j;
                var k = false;
                f = f || [ "mouse", "touch", "pointer" ];
                b.on(e(f, "start"), function(a) {
                    i = d(a);
                    k = true;
                    g = 0;
                    h = 0;
                    j = i;
                    if (c["start"]) {
                        c["start"](i, a);
                    }
                });
                var l = e(f, "cancel");
                if (l) {
                    b.on(l, function(a) {
                        k = false;
                        if (c["cancel"]) {
                            c["cancel"](a);
                        }
                    });
                }
                b.on(e(f, "move"), function(b) {
                    if (!k) return;
                    if (!i) return;
                    var e = d(b);
                    g += Math.abs(e.x - j.x);
                    h += Math.abs(e.y - j.y);
                    j = e;
                    if (g < a && h < a) {
                        return;
                    }
                    if (h > g) {
                        k = false;
                        if (c["cancel"]) {
                            c["cancel"](b);
                        }
                        return;
                    } else {
                        b.preventDefault();
                        if (c["move"]) {
                            c["move"](e, b);
                        }
                    }
                });
                b.on(e(f, "end"), function(a) {
                    if (!k) return;
                    k = false;
                    if (c["end"]) {
                        c["end"](d(a), a);
                    }
                });
            }
        };
    } ]);
    var f = [ "$parse", "$timeout", "$rootElement", function(a, c, e) {
        var f = 750;
        var g = 12;
        var h = 2500;
        var i = 25;
        var j = "ng-click-active";
        var k;
        var l;
        var m;
        function n(a, b, c, d) {
            return Math.abs(a - c) < i && Math.abs(b - d) < i;
        }
        function o(a, b, c) {
            for (var d = 0; d < a.length; d += 2) {
                if (n(a[d], a[d + 1], b, c)) {
                    a.splice(d, d + 2);
                    return true;
                }
            }
            return false;
        }
        function p(a) {
            if (Date.now() - k > h) {
                return;
            }
            var b = a.touches && a.touches.length ? a.touches : [ a ];
            var c = b[0].clientX;
            var e = b[0].clientY;
            if (c < 1 && e < 1) {
                return;
            }
            if (m && m[0] === c && m[1] === e) {
                return;
            }
            if (m) {
                m = null;
            }
            if (d(a.target) === "label") {
                m = [ c, e ];
            }
            if (o(l, c, e)) {
                return;
            }
            a.stopPropagation();
            a.preventDefault();
            if (a.target && a.target.blur) {
                a.target.blur();
            }
        }
        function q(a) {
            var b = a.touches && a.touches.length ? a.touches : [ a ];
            var d = b[0].clientX;
            var e = b[0].clientY;
            l.push(d, e);
            c(function() {
                for (var a = 0; a < l.length; a += 2) {
                    if (l[a] === d && l[a + 1] === e) {
                        l.splice(a, a + 2);
                        return;
                    }
                }
            }, h, false);
        }
        function r(a, b) {
            if (!l) {
                e[0].addEventListener("click", p, true);
                e[0].addEventListener("touchstart", q, true);
                l = [];
            }
            k = Date.now();
            o(l, a, b);
        }
        return function(c, d, e) {
            var h = a(e.ngClick), i = false, k, l, m, n;
            function o() {
                i = false;
                d.removeClass(j);
            }
            d.on("touchstart", function(a) {
                i = true;
                k = a.target ? a.target : a.srcElement;
                if (k.nodeType === 3) {
                    k = k.parentNode;
                }
                d.addClass(j);
                l = Date.now();
                var b = a.originalEvent || a;
                var c = b.touches && b.touches.length ? b.touches : [ b ];
                var e = c[0];
                m = e.clientX;
                n = e.clientY;
            });
            d.on("touchcancel", function(a) {
                o();
            });
            d.on("touchend", function(a) {
                var c = Date.now() - l;
                var h = a.originalEvent || a;
                var j = h.changedTouches && h.changedTouches.length ? h.changedTouches : h.touches && h.touches.length ? h.touches : [ h ];
                var p = j[0];
                var q = p.clientX;
                var s = p.clientY;
                var t = Math.sqrt(Math.pow(q - m, 2) + Math.pow(s - n, 2));
                if (i && c < f && t < g) {
                    r(q, s);
                    if (k) {
                        k.blur();
                    }
                    if (!b.isDefined(e.disabled) || e.disabled === false) {
                        d.triggerHandler("click", [ a ]);
                    }
                }
                o();
            });
            d.onclick = function(a) {};
            d.on("click", function(a, b) {
                c.$apply(function() {
                    h(c, {
                        $event: b || a
                    });
                });
            });
            d.on("mousedown", function(a) {
                d.addClass(j);
            });
            d.on("mousemove mouseup", function(a) {
                d.removeClass(j);
            });
        };
    } ];
    function g(a, d, e) {
        c.directive(a, [ "$parse", "$swipe", function(c, f) {
            var g = 75;
            var h = .3;
            var i = 30;
            return function(j, k, l) {
                var m = c(l[a]);
                var n, o;
                function p(a) {
                    if (!n) return false;
                    var b = Math.abs(a.y - n.y);
                    var c = (a.x - n.x) * d;
                    return o && b < g && c > 0 && c > i && b / c < h;
                }
                var q = [ "touch" ];
                if (!b.isDefined(l["ngSwipeDisableMouse"])) {
                    q.push("mouse");
                }
                f.bind(k, {
                    start: function(a, b) {
                        n = a;
                        o = true;
                    },
                    cancel: function(a) {
                        o = false;
                    },
                    end: function(a, b) {
                        if (p(a)) {
                            j.$apply(function() {
                                k.triggerHandler(e);
                                m(j, {
                                    $event: b
                                });
                            });
                        }
                    }
                }, q);
            };
        } ]);
    }
    g("ngSwipeLeft", -1, "swipeleft");
    g("ngSwipeRight", 1, "swiperight");
})(window, window.angular);

(function(a, b) {
    "use strict";
    var c = b.$$minErr("$sanitize");
    var d;
    var e;
    var f;
    var g;
    var h;
    var i;
    var j;
    var k;
    function l() {
        var l = false;
        this.$get = [ "$$sanitizeUri", function(a) {
            if (l) {
                e(w, u);
            }
            return function(b) {
                var c = [];
                j(b, k(c, function(b, c) {
                    return !/^unsafe:/.test(a(b, c));
                }));
                return c.join("");
            };
        } ];
        this.enableSvg = function(a) {
            if (g(a)) {
                l = a;
                return this;
            } else {
                return l;
            }
        };
        d = b.bind;
        e = b.extend;
        f = b.forEach;
        g = b.isDefined;
        h = b.lowercase;
        i = b.noop;
        j = D;
        k = G;
        var m = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g, n = /([^#-~ |!])/g;
        var o = B("area,br,col,hr,img,wbr");
        var p = B("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"), q = B("rp,rt"), r = e({}, q, p);
        var s = e({}, p, B("address,article," + "aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5," + "h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul"));
        var t = e({}, q, B("a,abbr,acronym,b," + "bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s," + "samp,small,span,strike,strong,sub,sup,time,tt,u,var"));
        var u = B("circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph," + "hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline," + "radialGradient,rect,stop,svg,switch,text,title,tspan");
        var v = B("script,style");
        var w = e({}, o, s, t, r);
        var x = B("background,cite,href,longdesc,src,xlink:href");
        var y = B("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear," + "color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace," + "ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules," + "scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type," + "valign,value,vspace,width");
        var z = B("accent-height,accumulate,additive,alphabetic,arabic-form,ascent," + "baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content," + "cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch," + "font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging," + "height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang," + "marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical," + "max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1," + "path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur," + "requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color," + "stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray," + "stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity," + "stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position," + "underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility," + "width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title," + "xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan", true);
        var A = e({}, x, z, y);
        function B(a, b) {
            var c = {}, d = a.split(","), e;
            for (e = 0; e < d.length; e++) {
                c[b ? h(d[e]) : d[e]] = true;
            }
            return c;
        }
        var C;
        (function(a) {
            var b;
            if (a.document && a.document.implementation) {
                b = a.document.implementation.createHTMLDocument("inert");
            } else {
                throw c("noinert", "Can't create an inert html document");
            }
            var d = b.documentElement || b.getDocumentElement();
            var e = d.getElementsByTagName("body");
            if (e.length === 1) {
                C = e[0];
            } else {
                var f = b.createElement("html");
                C = b.createElement("body");
                f.appendChild(C);
                b.appendChild(f);
            }
        })(a);
        function D(b, d) {
            if (b === null || b === undefined) {
                b = "";
            } else if (typeof b !== "string") {
                b = "" + b;
            }
            C.innerHTML = b;
            var e = 5;
            do {
                if (e === 0) {
                    throw c("uinput", "Failed to sanitize html because the input is unstable");
                }
                e--;
                if (a.document.documentMode) {
                    H(C);
                }
                b = C.innerHTML;
                C.innerHTML = b;
            } while (b !== C.innerHTML);
            var f = C.firstChild;
            while (f) {
                switch (f.nodeType) {
                  case 1:
                    d.start(f.nodeName.toLowerCase(), E(f.attributes));
                    break;

                  case 3:
                    d.chars(f.textContent);
                    break;
                }
                var g;
                if (!(g = f.firstChild)) {
                    if (f.nodeType === 1) {
                        d.end(f.nodeName.toLowerCase());
                    }
                    g = f.nextSibling;
                    if (!g) {
                        while (g == null) {
                            f = f.parentNode;
                            if (f === C) break;
                            g = f.nextSibling;
                            if (f.nodeType === 1) {
                                d.end(f.nodeName.toLowerCase());
                            }
                        }
                    }
                }
                f = g;
            }
            while (f = C.firstChild) {
                C.removeChild(f);
            }
        }
        function E(a) {
            var b = {};
            for (var c = 0, d = a.length; c < d; c++) {
                var e = a[c];
                b[e.name] = e.value;
            }
            return b;
        }
        function F(a) {
            return a.replace(/&/g, "&amp;").replace(m, function(a) {
                var b = a.charCodeAt(0);
                var c = a.charCodeAt(1);
                return "&#" + ((b - 55296) * 1024 + (c - 56320) + 65536) + ";";
            }).replace(n, function(a) {
                return "&#" + a.charCodeAt(0) + ";";
            }).replace(/</g, "&lt;").replace(/>/g, "&gt;");
        }
        function G(a, b) {
            var c = false;
            var e = d(a, a.push);
            return {
                start: function(a, d) {
                    a = h(a);
                    if (!c && v[a]) {
                        c = a;
                    }
                    if (!c && w[a] === true) {
                        e("<");
                        e(a);
                        f(d, function(c, d) {
                            var f = h(d);
                            var g = a === "img" && f === "src" || f === "background";
                            if (A[f] === true && (x[f] !== true || b(c, g))) {
                                e(" ");
                                e(d);
                                e('="');
                                e(F(c));
                                e('"');
                            }
                        });
                        e(">");
                    }
                },
                end: function(a) {
                    a = h(a);
                    if (!c && w[a] === true && o[a] !== true) {
                        e("</");
                        e(a);
                        e(">");
                    }
                    if (a == c) {
                        c = false;
                    }
                },
                chars: function(a) {
                    if (!c) {
                        e(F(a));
                    }
                }
            };
        }
        function H(b) {
            while (b) {
                if (b.nodeType === a.Node.ELEMENT_NODE) {
                    var c = b.attributes;
                    for (var d = 0, e = c.length; d < e; d++) {
                        var f = c[d];
                        var g = f.name.toLowerCase();
                        if (g === "xmlns:ns1" || g.lastIndexOf("ns1:", 0) === 0) {
                            b.removeAttributeNode(f);
                            d--;
                            e--;
                        }
                    }
                }
                var h = b.firstChild;
                if (h) {
                    H(h);
                }
                b = b.nextSibling;
            }
        }
    }
    function m(a) {
        var b = [];
        var c = k(b, i);
        c.chars(a);
        return b.join("");
    }
    b.module("ngSanitize", []).provider("$sanitize", l);
    b.module("ngSanitize").filter("linky", [ "$sanitize", function(a) {
        var c = /((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i, d = /^mailto:/i;
        var e = b.$$minErr("linky");
        var f = b.isDefined;
        var g = b.isFunction;
        var h = b.isObject;
        var i = b.isString;
        return function(b, j, k) {
            if (b == null || b === "") return b;
            if (!i(b)) throw e("notstring", "Expected string but received: {0}", b);
            var l = g(k) ? k : h(k) ? function a() {
                return k;
            } : function a() {
                return {};
            };
            var n;
            var o = b;
            var p = [];
            var q;
            var r;
            while (n = o.match(c)) {
                q = n[0];
                if (!n[2] && !n[4]) {
                    q = (n[3] ? "http://" : "mailto:") + q;
                }
                r = n.index;
                s(o.substr(0, r));
                t(q, n[0].replace(d, ""));
                o = o.substring(r + n[0].length);
            }
            s(o);
            return a(p.join(""));
            function s(a) {
                if (!a) {
                    return;
                }
                p.push(m(a));
            }
            function t(a, b) {
                var c, d = l(a);
                p.push("<a ");
                for (c in d) {
                    p.push(c + '="' + d[c] + '" ');
                }
                if (f(j) && !("target" in d)) {
                    p.push('target="', j, '" ');
                }
                p.push('href="', a.replace(/"/g, "&quot;"), '">');
                s(b);
                p.push("</a>");
            }
        };
    } ]);
})(window, window.angular);

(function() {
    "use strict";
    angular.module("angular-click-outside", []).directive("clickOutside", [ "$document", "$parse", "$timeout", a ]);
    function a(a, b, c) {
        return {
            restrict: "A",
            link: function(d, e, f) {
                c(function() {
                    var g = f.outsideIfNot !== undefined ? f.outsideIfNot.split(/[ ,]+/) : [], h;
                    function i(a) {
                        var i, j, k, l, m, n;
                        if (angular.element(e).hasClass("ng-hide")) {
                            return;
                        }
                        if (!a || !a.target) {
                            return;
                        }
                        for (j = a.target; j; j = j.parentNode) {
                            if (j === e[0]) {
                                return;
                            }
                            l = j.id, m = j.className, n = g.length;
                            if (m && m.baseVal !== undefined) {
                                m = m.baseVal;
                            }
                            if (m || l) {
                                for (i = 0; i < n; i++) {
                                    k = new RegExp("\\b" + g[i] + "\\b");
                                    if (l !== undefined && l === g[i] || m && k.test(m)) {
                                        return;
                                    }
                                }
                            }
                        }
                        c(function() {
                            h = b(f["clickOutside"]);
                            h(d, {
                                event: a
                            });
                        });
                    }
                    if (j()) {
                        a.on("touchstart", i);
                    }
                    a.on("click", i);
                    d.$on("$destroy", function() {
                        if (j()) {
                            a.off("touchstart", i);
                        }
                        a.off("click", i);
                    });
                    function j() {
                        return "ontouchstart" in window || navigator.maxTouchPoints;
                    }
                });
            }
        };
    }
})();

!function(a, b) {
    var c = b.isDefined, d = b.isUndefined, e = b.isNumber, f = b.isObject, g = b.isArray, h = b.isString, i = b.extend, j = b.toJson;
    b.module("LocalStorageModule", []).provider("localStorageService", function() {
        this.prefix = "ls", this.storageType = "localStorage", this.cookie = {
            expiry: 30,
            path: "/",
            secure: !1
        }, this.defaultToCookie = !0, this.notify = {
            setItem: !0,
            removeItem: !1
        }, this.setPrefix = function(a) {
            return this.prefix = a, this;
        }, this.setStorageType = function(a) {
            return this.storageType = a, this;
        }, this.setDefaultToCookie = function(a) {
            return this.defaultToCookie = !!a, this;
        }, this.setStorageCookie = function(a, b, c) {
            return this.cookie.expiry = a, this.cookie.path = b, this.cookie.secure = c, this;
        }, this.setStorageCookieDomain = function(a) {
            return this.cookie.domain = a, this;
        }, this.setNotify = function(a, b) {
            return this.notify = {
                setItem: a,
                removeItem: b
            }, this;
        }, this.$get = [ "$rootScope", "$window", "$document", "$parse", "$timeout", function(a, b, k, l, m) {
            function n(c) {
                if (c || (c = b.event), s.setItem && h(c.key) && w(c.key)) {
                    var d = v(c.key);
                    m(function() {
                        a.$broadcast("LocalStorageModule.notification.changed", {
                            key: d,
                            newvalue: c.newValue,
                            storageType: p.storageType
                        });
                    });
                }
            }
            var o, p = this, q = p.prefix, r = p.cookie, s = p.notify, t = p.storageType;
            k ? k[0] && (k = k[0]) : k = document, "." !== q.substr(-1) && (q = q ? q + "." : "");
            var u = function(a) {
                return q + a;
            }, v = function(a) {
                return a.replace(new RegExp("^" + q, "g"), "");
            }, w = function(a) {
                return 0 === a.indexOf(q);
            }, x = function() {
                try {
                    var c = t in b && null !== b[t], d = u("__" + Math.round(1e7 * Math.random()));
                    return c && (o = b[t], o.setItem(d, ""), o.removeItem(d)), c;
                } catch (b) {
                    return p.defaultToCookie && (t = "cookie"), a.$broadcast("LocalStorageModule.notification.error", b.message), 
                    !1;
                }
            }, y = x(), z = function(b, c, e) {
                if (K(e), c = d(c) ? null : j(c), !y && p.defaultToCookie || "cookie" === p.storageType) return y || a.$broadcast("LocalStorageModule.notification.warning", "LOCAL_STORAGE_NOT_SUPPORTED"), 
                s.setItem && a.$broadcast("LocalStorageModule.notification.setitem", {
                    key: b,
                    newvalue: c,
                    storageType: "cookie"
                }), F(b, c);
                try {
                    o && o.setItem(u(b), c), s.setItem && a.$broadcast("LocalStorageModule.notification.setitem", {
                        key: b,
                        newvalue: c,
                        storageType: p.storageType
                    });
                } catch (d) {
                    return a.$broadcast("LocalStorageModule.notification.error", d.message), F(b, c);
                }
                return !0;
            }, A = function(b, c) {
                if (K(c), !y && p.defaultToCookie || "cookie" === p.storageType) return y || a.$broadcast("LocalStorageModule.notification.warning", "LOCAL_STORAGE_NOT_SUPPORTED"), 
                G(b);
                var d = o ? o.getItem(u(b)) : null;
                if (!d || "null" === d) return null;
                try {
                    return JSON.parse(d);
                } catch (a) {
                    return d;
                }
            }, B = function() {
                var b = 0;
                arguments.length >= 1 && ("localStorage" === arguments[arguments.length - 1] || "sessionStorage" === arguments[arguments.length - 1]) && (b = 1, 
                K(arguments[arguments.length - 1]));
                var c, d;
                for (c = 0; c < arguments.length - b; c++) if (d = arguments[c], !y && p.defaultToCookie || "cookie" === p.storageType) y || a.$broadcast("LocalStorageModule.notification.warning", "LOCAL_STORAGE_NOT_SUPPORTED"), 
                s.removeItem && a.$broadcast("LocalStorageModule.notification.removeitem", {
                    key: d,
                    storageType: "cookie"
                }), H(d); else try {
                    o.removeItem(u(d)), s.removeItem && a.$broadcast("LocalStorageModule.notification.removeitem", {
                        key: d,
                        storageType: p.storageType
                    });
                } catch (b) {
                    a.$broadcast("LocalStorageModule.notification.error", b.message), H(d);
                }
            }, C = function(b) {
                if (K(b), !y) return a.$broadcast("LocalStorageModule.notification.warning", "LOCAL_STORAGE_NOT_SUPPORTED"), 
                [];
                var c = q.length, d = [];
                for (var e in o) if (e.substr(0, c) === q) try {
                    d.push(e.substr(c));
                } catch (b) {
                    return a.$broadcast("LocalStorageModule.notification.error", b.Description), [];
                }
                return d;
            }, D = function(b, c) {
                K(c);
                var d = q ? new RegExp("^" + q) : new RegExp(), e = b ? new RegExp(b) : new RegExp();
                if (!y && p.defaultToCookie || "cookie" === p.storageType) return y || a.$broadcast("LocalStorageModule.notification.warning", "LOCAL_STORAGE_NOT_SUPPORTED"), 
                I();
                if (!y && !p.defaultToCookie) return !1;
                var f = q.length;
                for (var g in o) if (d.test(g) && e.test(g.substr(f))) try {
                    B(g.substr(f));
                } catch (b) {
                    return a.$broadcast("LocalStorageModule.notification.error", b.message), I();
                }
                return !0;
            }, E = function() {
                try {
                    return b.navigator.cookieEnabled || "cookie" in k && (k.cookie.length > 0 || (k.cookie = "test").indexOf.call(k.cookie, "test") > -1);
                } catch (b) {
                    return a.$broadcast("LocalStorageModule.notification.error", b.message), !1;
                }
            }(), F = function(b, c, h, i) {
                if (d(c)) return !1;
                if ((g(c) || f(c)) && (c = j(c)), !E) return a.$broadcast("LocalStorageModule.notification.error", "COOKIES_NOT_SUPPORTED"), 
                !1;
                try {
                    var l = "", m = new Date(), n = "";
                    if (null === c ? (m.setTime(m.getTime() + -864e5), l = "; expires=" + m.toGMTString(), 
                    c = "") : e(h) && 0 !== h ? (m.setTime(m.getTime() + 24 * h * 60 * 60 * 1e3), l = "; expires=" + m.toGMTString()) : 0 !== r.expiry && (m.setTime(m.getTime() + 24 * r.expiry * 60 * 60 * 1e3), 
                    l = "; expires=" + m.toGMTString()), b) {
                        var o = "; path=" + r.path;
                        r.domain && (n = "; domain=" + r.domain), "boolean" == typeof i ? i === !0 && (n += "; secure") : r.secure === !0 && (n += "; secure"), 
                        k.cookie = u(b) + "=" + encodeURIComponent(c) + l + o + n;
                    }
                } catch (b) {
                    return a.$broadcast("LocalStorageModule.notification.error", b.message), !1;
                }
                return !0;
            }, G = function(b) {
                if (!E) return a.$broadcast("LocalStorageModule.notification.error", "COOKIES_NOT_SUPPORTED"), 
                !1;
                for (var c = k.cookie && k.cookie.split(";") || [], d = 0; d < c.length; d++) {
                    for (var e = c[d]; " " === e.charAt(0); ) e = e.substring(1, e.length);
                    if (0 === e.indexOf(u(b) + "=")) {
                        var f = decodeURIComponent(e.substring(q.length + b.length + 1, e.length));
                        try {
                            return JSON.parse(f);
                        } catch (a) {
                            return f;
                        }
                    }
                }
                return null;
            }, H = function(a) {
                F(a, null);
            }, I = function() {
                for (var a = null, b = q.length, c = k.cookie.split(";"), d = 0; d < c.length; d++) {
                    for (a = c[d]; " " === a.charAt(0); ) a = a.substring(1, a.length);
                    var e = a.substring(b, a.indexOf("="));
                    H(e);
                }
            }, J = function() {
                return t;
            }, K = function(a) {
                return a && t !== a && (t = a, y = x()), y;
            }, L = function(a, b, d, e, g) {
                e = e || b;
                var h = A(e, g);
                return null === h && c(d) ? h = d : f(h) && f(d) && (h = i(h, d)), l(b).assign(a, h), 
                a.$watch(b, function(a) {
                    z(e, a, g);
                }, f(a[b]));
            };
            y && (b.addEventListener ? (b.addEventListener("storage", n, !1), a.$on("$destroy", function() {
                b.removeEventListener("storage", n);
            })) : b.attachEvent && (b.attachEvent("onstorage", n), a.$on("$destroy", function() {
                b.detachEvent("onstorage", n);
            })));
            var M = function(a) {
                K(a);
                for (var c = 0, d = b[t], e = 0; e < d.length; e++) 0 === d.key(e).indexOf(q) && c++;
                return c;
            };
            return {
                isSupported: y,
                getStorageType: J,
                setStorageType: K,
                set: z,
                add: z,
                get: A,
                keys: C,
                remove: B,
                clearAll: D,
                bind: L,
                deriveKey: u,
                underiveKey: v,
                length: M,
                defaultToCookie: this.defaultToCookie,
                cookie: {
                    isSupported: E,
                    set: F,
                    add: F,
                    get: G,
                    remove: H,
                    clearAll: I
                }
            };
        } ];
    });
}(window, window.angular);

(function(a, b, c) {
    "use strict";
    function d(a, b, d, e, f, g) {
        var h = e(a);
        if (h !== c) {
            return g(b, e == f ? h : f(a));
        }
        var i = a.$watch(d, function(d) {
            if (d == c) return;
            j();
            return g(b, e == f ? d : f(a));
        });
        function j() {
            if (i) {
                i();
            }
        }
        a.$on("$destroy", j);
    }
    var e = b.module("once", []);
    function f(a) {
        e.directive(a.name, [ "$parse", function(b) {
            return {
                priority: a.priority || 0,
                link: function(c, e, f) {
                    var g = f.onceWaitFor || f[a.name];
                    var h = b(g);
                    var i = f.onceWaitFor ? b(f[a.name]) : h;
                    d(c, e, g, h, i, a.binding);
                }
            };
        } ]);
    }
    var g = [ {
        name: "onceText",
        binding: function(a, b) {
            a.text(b !== null ? b : "");
        }
    }, {
        name: "onceHtml",
        binding: function(a, b) {
            a.html(b);
        }
    }, {
        name: "onceSrc",
        priority: 99,
        binding: function(a, b) {
            a.attr("src", b);
        }
    }, {
        name: "onceHref",
        priority: 99,
        binding: function(a, b) {
            a.attr("href", b);
        }
    }, {
        name: "onceTitle",
        binding: function(a, b) {
            a.attr("title", b);
        }
    }, {
        name: "onceAlt",
        binding: function(a, b) {
            a.attr("alt", b);
        }
    }, {
        name: "onceId",
        binding: function(a, b) {
            a.attr("id", b);
        }
    }, {
        name: "onceIf",
        priority: 600,
        binding: function(a, b) {
            if (!b) {
                a.remove();
            }
        }
    }, {
        name: "onceClass",
        binding: function(a, c) {
            if (b.isObject(c) && !b.isArray(c)) {
                var d = [];
                b.forEach(c, function(a, b) {
                    if (a) d.push(b);
                });
                c = d;
            }
            if (c) {
                a.addClass(b.isArray(c) ? c.join(" ") : c);
            }
        }
    }, {
        name: "onceStyle",
        binding: function(a, b) {
            a.css(b);
        }
    }, {
        name: "onceShow",
        binding: function(a, b) {
            if (b) {
                a.css("display", "");
            } else {
                a.css("display", "none");
            }
        }
    }, {
        name: "onceHide",
        binding: function(a, b) {
            if (b) {
                a.css("display", "none");
            } else {
                a.css("display", "");
            }
        }
    } ];
    b.forEach(g, f);
    e.directive("once", [ "$parse", function(a) {
        return function(c, e, f) {
            b.forEach(f, function(b, g) {
                if (!/^onceAttr[A-Z]/.test(g)) return;
                var h = f.onceWaitFor || f[g];
                var i = a(h);
                var j = f.onceWaitFor ? a(f[g]) : i;
                var k = function(a, b) {
                    var c = g.replace(/[A-Z]/g, function(a) {
                        return "-" + a.toLowerCase();
                    });
                    var d = c.substr(10);
                    a.attr(d, b);
                };
                d(c, e, h, i, j, k);
            });
        };
    } ]);
})(window, window.angular);

(function() {
    function a(a, b) {
        return a.set(b[0], b[1]), a;
    }
    function b(a, b) {
        return a.add(b), a;
    }
    function c(a, b, c) {
        switch (c.length) {
          case 0:
            return a.call(b);

          case 1:
            return a.call(b, c[0]);

          case 2:
            return a.call(b, c[0], c[1]);

          case 3:
            return a.call(b, c[0], c[1], c[2]);
        }
        return a.apply(b, c);
    }
    function d(a, b, c, d) {
        for (var e = -1, f = null == a ? 0 : a.length; ++e < f; ) {
            var g = a[e];
            b(d, g, c(g), a);
        }
        return d;
    }
    function e(a, b) {
        for (var c = -1, d = null == a ? 0 : a.length; ++c < d && false !== b(a[c], c, a); ) ;
        return a;
    }
    function f(a, b) {
        for (var c = null == a ? 0 : a.length; c-- && false !== b(a[c], c, a); ) ;
        return a;
    }
    function g(a, b) {
        for (var c = -1, d = null == a ? 0 : a.length; ++c < d; ) if (!b(a[c], c, a)) return false;
        return true;
    }
    function h(a, b) {
        for (var c = -1, d = null == a ? 0 : a.length, e = 0, f = []; ++c < d; ) {
            var g = a[c];
            b(g, c, a) && (f[e++] = g);
        }
        return f;
    }
    function i(a, b) {
        return !(null == a || !a.length) && -1 < r(a, b, 0);
    }
    function j(a, b, c) {
        for (var d = -1, e = null == a ? 0 : a.length; ++d < e; ) if (c(b, a[d])) return true;
        return false;
    }
    function k(a, b) {
        for (var c = -1, d = null == a ? 0 : a.length, e = Array(d); ++c < d; ) e[c] = b(a[c], c, a);
        return e;
    }
    function l(a, b) {
        for (var c = -1, d = b.length, e = a.length; ++c < d; ) a[e + c] = b[c];
        return a;
    }
    function m(a, b, c, d) {
        var e = -1, f = null == a ? 0 : a.length;
        for (d && f && (c = a[++e]); ++e < f; ) c = b(c, a[e], e, a);
        return c;
    }
    function n(a, b, c, d) {
        var e = null == a ? 0 : a.length;
        for (d && e && (c = a[--e]); e--; ) c = b(c, a[e], e, a);
        return c;
    }
    function o(a, b) {
        for (var c = -1, d = null == a ? 0 : a.length; ++c < d; ) if (b(a[c], c, a)) return true;
        return false;
    }
    function p(a, b, c) {
        var d;
        return c(a, function(a, c, e) {
            if (b(a, c, e)) return d = c, false;
        }), d;
    }
    function q(a, b, c, d) {
        var e = a.length;
        for (c += d ? 1 : -1; d ? c-- : ++c < e; ) if (b(a[c], c, a)) return c;
        return -1;
    }
    function r(a, b, c) {
        if (b === b) a: {
            --c;
            for (var d = a.length; ++c < d; ) if (a[c] === b) {
                a = c;
                break a;
            }
            a = -1;
        } else a = q(a, t, c);
        return a;
    }
    function s(a, b, c, d) {
        --c;
        for (var e = a.length; ++c < e; ) if (d(a[c], b)) return c;
        return -1;
    }
    function t(a) {
        return a !== a;
    }
    function u(a, b) {
        var c = null == a ? 0 : a.length;
        return c ? z(a, b) / c : R;
    }
    function v(a) {
        return function(b) {
            return null == b ? P : b[a];
        };
    }
    function w(a) {
        return function(b) {
            return null == a ? P : a[b];
        };
    }
    function x(a, b, c, d, e) {
        return e(a, function(a, e, f) {
            c = d ? (d = false, a) : b(c, a, e, f);
        }), c;
    }
    function y(a, b) {
        var c = a.length;
        for (a.sort(b); c--; ) a[c] = a[c].c;
        return a;
    }
    function z(a, b) {
        for (var c, d = -1, e = a.length; ++d < e; ) {
            var f = b(a[d]);
            f !== P && (c = c === P ? f : c + f);
        }
        return c;
    }
    function A(a, b) {
        for (var c = -1, d = Array(a); ++c < a; ) d[c] = b(c);
        return d;
    }
    function B(a, b) {
        return k(b, function(b) {
            return [ b, a[b] ];
        });
    }
    function C(a) {
        return function(b) {
            return a(b);
        };
    }
    function D(a, b) {
        return k(b, function(b) {
            return a[b];
        });
    }
    function E(a, b) {
        return a.has(b);
    }
    function F(a, b) {
        for (var c = -1, d = a.length; ++c < d && -1 < r(b, a[c], 0); ) ;
        return c;
    }
    function G(a, b) {
        for (var c = a.length; c-- && -1 < r(b, a[c], 0); ) ;
        return c;
    }
    function H(a) {
        return "\\" + Ma[a];
    }
    function I(a) {
        var b = -1, c = Array(a.size);
        return a.forEach(function(a, d) {
            c[++b] = [ d, a ];
        }), c;
    }
    function J(a, b) {
        return function(c) {
            return a(b(c));
        };
    }
    function K(a, b) {
        for (var c = -1, d = a.length, e = 0, f = []; ++c < d; ) {
            var g = a[c];
            g !== b && "__lodash_placeholder__" !== g || (a[c] = "__lodash_placeholder__", f[e++] = c);
        }
        return f;
    }
    function L(a) {
        var b = -1, c = Array(a.size);
        return a.forEach(function(a) {
            c[++b] = a;
        }), c;
    }
    function M(a) {
        var b = -1, c = Array(a.size);
        return a.forEach(function(a) {
            c[++b] = [ a, a ];
        }), c;
    }
    function N(a) {
        if (Ga.test(a)) {
            for (var b = Ea.lastIndex = 0; Ea.test(a); ) ++b;
            a = b;
        } else a = ab(a);
        return a;
    }
    function O(a) {
        return Ga.test(a) ? a.match(Ea) || [] : a.split("");
    }
    var P, Q = 1 / 0, R = NaN, S = [ [ "ary", 128 ], [ "bind", 1 ], [ "bindKey", 2 ], [ "curry", 8 ], [ "curryRight", 16 ], [ "flip", 512 ], [ "partial", 32 ], [ "partialRight", 64 ], [ "rearg", 256 ] ], T = /\b__p\+='';/g, U = /\b(__p\+=)''\+/g, V = /(__e\(.*?\)|\b__t\))\+'';/g, W = /&(?:amp|lt|gt|quot|#39);/g, X = /[&<>"']/g, Y = RegExp(W.source), Z = RegExp(X.source), $ = /<%-([\s\S]+?)%>/g, _ = /<%([\s\S]+?)%>/g, aa = /<%=([\s\S]+?)%>/g, ba = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, ca = /^\w*$/, da = /^\./, ea = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, fa = /[\\^$.*+?()[\]{}|]/g, ga = RegExp(fa.source), ha = /^\s+|\s+$/g, ia = /^\s+/, ja = /\s+$/, ka = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, la = /\{\n\/\* \[wrapped with (.+)\] \*/, ma = /,? & /, na = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, oa = /\\(\\)?/g, pa = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, qa = /\w*$/, ra = /^[-+]0x[0-9a-f]+$/i, sa = /^0b[01]+$/i, ta = /^\[object .+?Constructor\]$/, ua = /^0o[0-7]+$/i, va = /^(?:0|[1-9]\d*)$/, wa = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, xa = /($^)/, ya = /['\n\r\u2028\u2029\\]/g, za = "[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*", Aa = "(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])" + za, Ba = "(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]?|[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])", Ca = RegExp("['’]", "g"), Da = RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]", "g"), Ea = RegExp("\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|" + Ba + za, "g"), Fa = RegExp([ "[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)|\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)|\\d+", Aa ].join("|"), "g"), Ga = RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]"), Ha = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Ia = "Array Buffer DataView Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Math Object Promise RegExp Set String Symbol TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap _ clearTimeout isFinite parseInt setTimeout".split(" "), Ja = {};
    Ja["[object Float32Array]"] = Ja["[object Float64Array]"] = Ja["[object Int8Array]"] = Ja["[object Int16Array]"] = Ja["[object Int32Array]"] = Ja["[object Uint8Array]"] = Ja["[object Uint8ClampedArray]"] = Ja["[object Uint16Array]"] = Ja["[object Uint32Array]"] = true, 
    Ja["[object Arguments]"] = Ja["[object Array]"] = Ja["[object ArrayBuffer]"] = Ja["[object Boolean]"] = Ja["[object DataView]"] = Ja["[object Date]"] = Ja["[object Error]"] = Ja["[object Function]"] = Ja["[object Map]"] = Ja["[object Number]"] = Ja["[object Object]"] = Ja["[object RegExp]"] = Ja["[object Set]"] = Ja["[object String]"] = Ja["[object WeakMap]"] = false;
    var Ka = {};
    Ka["[object Arguments]"] = Ka["[object Array]"] = Ka["[object ArrayBuffer]"] = Ka["[object DataView]"] = Ka["[object Boolean]"] = Ka["[object Date]"] = Ka["[object Float32Array]"] = Ka["[object Float64Array]"] = Ka["[object Int8Array]"] = Ka["[object Int16Array]"] = Ka["[object Int32Array]"] = Ka["[object Map]"] = Ka["[object Number]"] = Ka["[object Object]"] = Ka["[object RegExp]"] = Ka["[object Set]"] = Ka["[object String]"] = Ka["[object Symbol]"] = Ka["[object Uint8Array]"] = Ka["[object Uint8ClampedArray]"] = Ka["[object Uint16Array]"] = Ka["[object Uint32Array]"] = true, 
    Ka["[object Error]"] = Ka["[object Function]"] = Ka["[object WeakMap]"] = false;
    var La, Ma = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
    }, Na = parseFloat, Oa = parseInt, Pa = typeof global == "object" && global && global.Object === Object && global, Qa = typeof self == "object" && self && self.Object === Object && self, Ra = Pa || Qa || Function("return this")(), Sa = typeof exports == "object" && exports && !exports.nodeType && exports, Ta = Sa && typeof module == "object" && module && !module.nodeType && module, Ua = Ta && Ta.exports === Sa, Va = Ua && Pa.process;
    a: {
        try {
            La = Va && Va.binding && Va.binding("util");
            break a;
        } catch (a) {}
        La = void 0;
    }
    var Wa = La && La.isArrayBuffer, Xa = La && La.isDate, Ya = La && La.isMap, Za = La && La.isRegExp, $a = La && La.isSet, _a = La && La.isTypedArray, ab = v("length"), bb = w({
        "À": "A",
        "Á": "A",
        "Â": "A",
        "Ã": "A",
        "Ä": "A",
        "Å": "A",
        "à": "a",
        "á": "a",
        "â": "a",
        "ã": "a",
        "ä": "a",
        "å": "a",
        "Ç": "C",
        "ç": "c",
        "Ð": "D",
        "ð": "d",
        "È": "E",
        "É": "E",
        "Ê": "E",
        "Ë": "E",
        "è": "e",
        "é": "e",
        "ê": "e",
        "ë": "e",
        "Ì": "I",
        "Í": "I",
        "Î": "I",
        "Ï": "I",
        "ì": "i",
        "í": "i",
        "î": "i",
        "ï": "i",
        "Ñ": "N",
        "ñ": "n",
        "Ò": "O",
        "Ó": "O",
        "Ô": "O",
        "Õ": "O",
        "Ö": "O",
        "Ø": "O",
        "ò": "o",
        "ó": "o",
        "ô": "o",
        "õ": "o",
        "ö": "o",
        "ø": "o",
        "Ù": "U",
        "Ú": "U",
        "Û": "U",
        "Ü": "U",
        "ù": "u",
        "ú": "u",
        "û": "u",
        "ü": "u",
        "Ý": "Y",
        "ý": "y",
        "ÿ": "y",
        "Æ": "Ae",
        "æ": "ae",
        "Þ": "Th",
        "þ": "th",
        "ß": "ss",
        "Ā": "A",
        "Ă": "A",
        "Ą": "A",
        "ā": "a",
        "ă": "a",
        "ą": "a",
        "Ć": "C",
        "Ĉ": "C",
        "Ċ": "C",
        "Č": "C",
        "ć": "c",
        "ĉ": "c",
        "ċ": "c",
        "č": "c",
        "Ď": "D",
        "Đ": "D",
        "ď": "d",
        "đ": "d",
        "Ē": "E",
        "Ĕ": "E",
        "Ė": "E",
        "Ę": "E",
        "Ě": "E",
        "ē": "e",
        "ĕ": "e",
        "ė": "e",
        "ę": "e",
        "ě": "e",
        "Ĝ": "G",
        "Ğ": "G",
        "Ġ": "G",
        "Ģ": "G",
        "ĝ": "g",
        "ğ": "g",
        "ġ": "g",
        "ģ": "g",
        "Ĥ": "H",
        "Ħ": "H",
        "ĥ": "h",
        "ħ": "h",
        "Ĩ": "I",
        "Ī": "I",
        "Ĭ": "I",
        "Į": "I",
        "İ": "I",
        "ĩ": "i",
        "ī": "i",
        "ĭ": "i",
        "į": "i",
        "ı": "i",
        "Ĵ": "J",
        "ĵ": "j",
        "Ķ": "K",
        "ķ": "k",
        "ĸ": "k",
        "Ĺ": "L",
        "Ļ": "L",
        "Ľ": "L",
        "Ŀ": "L",
        "Ł": "L",
        "ĺ": "l",
        "ļ": "l",
        "ľ": "l",
        "ŀ": "l",
        "ł": "l",
        "Ń": "N",
        "Ņ": "N",
        "Ň": "N",
        "Ŋ": "N",
        "ń": "n",
        "ņ": "n",
        "ň": "n",
        "ŋ": "n",
        "Ō": "O",
        "Ŏ": "O",
        "Ő": "O",
        "ō": "o",
        "ŏ": "o",
        "ő": "o",
        "Ŕ": "R",
        "Ŗ": "R",
        "Ř": "R",
        "ŕ": "r",
        "ŗ": "r",
        "ř": "r",
        "Ś": "S",
        "Ŝ": "S",
        "Ş": "S",
        "Š": "S",
        "ś": "s",
        "ŝ": "s",
        "ş": "s",
        "š": "s",
        "Ţ": "T",
        "Ť": "T",
        "Ŧ": "T",
        "ţ": "t",
        "ť": "t",
        "ŧ": "t",
        "Ũ": "U",
        "Ū": "U",
        "Ŭ": "U",
        "Ů": "U",
        "Ű": "U",
        "Ų": "U",
        "ũ": "u",
        "ū": "u",
        "ŭ": "u",
        "ů": "u",
        "ű": "u",
        "ų": "u",
        "Ŵ": "W",
        "ŵ": "w",
        "Ŷ": "Y",
        "ŷ": "y",
        "Ÿ": "Y",
        "Ź": "Z",
        "Ż": "Z",
        "Ž": "Z",
        "ź": "z",
        "ż": "z",
        "ž": "z",
        "Ĳ": "IJ",
        "ĳ": "ij",
        "Œ": "Oe",
        "œ": "oe",
        "ŉ": "'n",
        "ſ": "s"
    }), cb = w({
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
    }), db = w({
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
    }), eb = function w(za) {
        function Aa(a) {
            if (te(a) && !hh(a) && !(a instanceof La)) {
                if (a instanceof Ea) return a;
                if (hf.call(a, "__wrapped__")) return Qd(a);
            }
            return new Ea(a);
        }
        function Ba() {}
        function Ea(a, b) {
            this.__wrapped__ = a, this.__actions__ = [], this.__chain__ = !!b, this.__index__ = 0, 
            this.__values__ = P;
        }
        function La(a) {
            this.__wrapped__ = a, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = false, 
            this.__iteratees__ = [], this.__takeCount__ = 4294967295, this.__views__ = [];
        }
        function Ma(a) {
            var b = -1, c = null == a ? 0 : a.length;
            for (this.clear(); ++b < c; ) {
                var d = a[b];
                this.set(d[0], d[1]);
            }
        }
        function Pa(a) {
            var b = -1, c = null == a ? 0 : a.length;
            for (this.clear(); ++b < c; ) {
                var d = a[b];
                this.set(d[0], d[1]);
            }
        }
        function Qa(a) {
            var b = -1, c = null == a ? 0 : a.length;
            for (this.clear(); ++b < c; ) {
                var d = a[b];
                this.set(d[0], d[1]);
            }
        }
        function Sa(a) {
            var b = -1, c = null == a ? 0 : a.length;
            for (this.__data__ = new Qa(); ++b < c; ) this.add(a[b]);
        }
        function Ta(a) {
            this.size = (this.__data__ = new Pa(a)).size;
        }
        function Va(a, b) {
            var c, d = hh(a), e = !d && gh(a), f = !d && !e && jh(a), g = !d && !e && !f && oh(a), e = (d = d || e || f || g) ? A(a.length, bf) : [], h = e.length;
            for (c in a) !b && !hf.call(a, c) || d && ("length" == c || f && ("offset" == c || "parent" == c) || g && ("buffer" == c || "byteLength" == c || "byteOffset" == c) || Dd(c, h)) || e.push(c);
            return e;
        }
        function ab(a) {
            var b = a.length;
            return b ? a[hc(0, b - 1)] : P;
        }
        function fb(a, b) {
            return Md(Lc(a), pb(b, 0, a.length));
        }
        function gb(a) {
            return Md(Lc(a));
        }
        function hb(a, b, c) {
            (c === P || le(a[b], c)) && (c !== P || b in a) || nb(a, b, c);
        }
        function ib(a, b, c) {
            var d = a[b];
            hf.call(a, b) && le(d, c) && (c !== P || b in a) || nb(a, b, c);
        }
        function jb(a, b) {
            for (var c = a.length; c--; ) if (le(a[c][0], b)) return c;
            return -1;
        }
        function kb(a, b, c, d) {
            return gg(a, function(a, e, f) {
                b(d, a, c(a), f);
            }), d;
        }
        function lb(a, b) {
            return a && Mc(b, He(b), a);
        }
        function mb(a, b) {
            return a && Mc(b, Ie(b), a);
        }
        function nb(a, b, c) {
            "__proto__" == b && Af ? Af(a, b, {
                configurable: true,
                enumerable: true,
                value: c,
                writable: true
            }) : a[b] = c;
        }
        function ob(a, b) {
            for (var c = -1, d = b.length, e = We(d), f = null == a; ++c < d; ) e[c] = f ? P : Fe(a, b[c]);
            return e;
        }
        function pb(a, b, c) {
            return a === a && (c !== P && (a = a <= c ? a : c), b !== P && (a = a >= b ? a : b)), 
            a;
        }
        function qb(a, b, c, d, f, g) {
            var h, i = 1 & b, j = 2 & b, k = 4 & b;
            if (c && (h = f ? c(a, d, f, g) : c(a)), h !== P) return h;
            if (!se(a)) return a;
            if (d = hh(a)) {
                if (h = zd(a), !i) return Lc(a, h);
            } else {
                var l = rg(a), m = "[object Function]" == l || "[object GeneratorFunction]" == l;
                if (jh(a)) return Fc(a, i);
                if ("[object Object]" == l || "[object Arguments]" == l || m && !f) {
                    if (h = j || m ? {} : Ad(a), !i) return j ? Oc(a, mb(h, a)) : Nc(a, lb(h, a));
                } else {
                    if (!Ka[l]) return f ? a : {};
                    h = Bd(a, l, qb, i);
                }
            }
            if (g || (g = new Ta()), f = g.get(a)) return f;
            g.set(a, h);
            var j = k ? j ? rd : qd : j ? Ie : He, n = d ? P : j(a);
            return e(n || a, function(d, e) {
                n && (e = d, d = a[e]), ib(h, e, qb(d, b, c, e, a, g));
            }), h;
        }
        function rb(a) {
            var b = He(a);
            return function(c) {
                return sb(c, a, b);
            };
        }
        function sb(a, b, c) {
            var d = c.length;
            if (null == a) return !d;
            for (a = _e(a); d--; ) {
                var e = c[d], f = b[e], g = a[e];
                if (g === P && !(e in a) || !f(g)) return false;
            }
            return true;
        }
        function tb(a, b, c) {
            if (typeof a != "function") throw new cf("Expected a function");
            return ug(function() {
                a.apply(P, c);
            }, b);
        }
        function ub(a, b, c, d) {
            var e = -1, f = i, g = true, h = a.length, l = [], m = b.length;
            if (!h) return l;
            c && (b = k(b, C(c))), d ? (f = j, g = false) : 200 <= b.length && (f = E, g = false, 
            b = new Sa(b));
            a: for (;++e < h; ) {
                var n = a[e], o = null == c ? n : c(n), n = d || 0 !== n ? n : 0;
                if (g && o === o) {
                    for (var p = m; p--; ) if (b[p] === o) continue a;
                    l.push(n);
                } else f(b, o, d) || l.push(n);
            }
            return l;
        }
        function vb(a, b) {
            var c = true;
            return gg(a, function(a, d, e) {
                return c = !!b(a, d, e);
            }), c;
        }
        function wb(a, b, c) {
            for (var d = -1, e = a.length; ++d < e; ) {
                var f = a[d], g = b(f);
                if (null != g && (h === P ? g === g && !xe(g) : c(g, h))) var h = g, i = f;
            }
            return i;
        }
        function xb(a, b) {
            var c = [];
            return gg(a, function(a, d, e) {
                b(a, d, e) && c.push(a);
            }), c;
        }
        function yb(a, b, c, d, e) {
            var f = -1, g = a.length;
            for (c || (c = Cd), e || (e = []); ++f < g; ) {
                var h = a[f];
                0 < b && c(h) ? 1 < b ? yb(h, b - 1, c, d, e) : l(e, h) : d || (e[e.length] = h);
            }
            return e;
        }
        function zb(a, b) {
            return a && ig(a, b, He);
        }
        function Ab(a, b) {
            return a && jg(a, b, He);
        }
        function Bb(a, b) {
            return h(b, function(b) {
                return pe(a[b]);
            });
        }
        function Cb(a, b) {
            b = Dc(b, a);
            for (var c = 0, d = b.length; null != a && c < d; ) a = a[Nd(b[c++])];
            return c && c == d ? a : P;
        }
        function Db(a, b, c) {
            return b = b(a), hh(a) ? b : l(b, c(a));
        }
        function Eb(a) {
            if (null == a) a = a === P ? "[object Undefined]" : "[object Null]"; else if (zf && zf in _e(a)) {
                var b = hf.call(a, zf), c = a[zf];
                try {
                    a[zf] = P;
                    var d = true;
                } catch (a) {}
                var e = lf.call(a);
                d && (b ? a[zf] = c : delete a[zf]), a = e;
            } else a = lf.call(a);
            return a;
        }
        function Fb(a, b) {
            return a > b;
        }
        function Gb(a, b) {
            return null != a && hf.call(a, b);
        }
        function Hb(a, b) {
            return null != a && b in _e(a);
        }
        function Ib(a, b, c) {
            for (var d = c ? j : i, e = a[0].length, f = a.length, g = f, h = We(f), l = 1 / 0, m = []; g--; ) {
                var n = a[g];
                g && b && (n = k(n, C(b))), l = Mf(n.length, l), h[g] = !c && (b || 120 <= e && 120 <= n.length) ? new Sa(g && n) : P;
            }
            var n = a[0], o = -1, p = h[0];
            a: for (;++o < e && m.length < l; ) {
                var q = n[o], r = b ? b(q) : q, q = c || 0 !== q ? q : 0;
                if (p ? !E(p, r) : !d(m, r, c)) {
                    for (g = f; --g; ) {
                        var s = h[g];
                        if (s ? !E(s, r) : !d(a[g], r, c)) continue a;
                    }
                    p && p.push(r), m.push(q);
                }
            }
            return m;
        }
        function Jb(a, b, c) {
            var d = {};
            return zb(a, function(a, e, f) {
                b(d, c(a), e, f);
            }), d;
        }
        function Kb(a, b, d) {
            return b = Dc(b, a), a = 2 > b.length ? a : Cb(a, oc(b, 0, -1)), b = null == a ? a : a[Nd(Vd(b))], 
            null == b ? P : c(b, a, d);
        }
        function Lb(a) {
            return te(a) && "[object Arguments]" == Eb(a);
        }
        function Mb(a) {
            return te(a) && "[object ArrayBuffer]" == Eb(a);
        }
        function Nb(a) {
            return te(a) && "[object Date]" == Eb(a);
        }
        function Ob(a, b, c, d, e) {
            if (a === b) b = true; else if (null == a || null == b || !te(a) && !te(b)) b = a !== a && b !== b; else a: {
                var f = hh(a), g = hh(b), h = f ? "[object Array]" : rg(a), i = g ? "[object Array]" : rg(b), h = "[object Arguments]" == h ? "[object Object]" : h, i = "[object Arguments]" == i ? "[object Object]" : i, j = "[object Object]" == h, g = "[object Object]" == i;
                if ((i = h == i) && jh(a)) {
                    if (!jh(b)) {
                        b = false;
                        break a;
                    }
                    f = true, j = false;
                }
                if (i && !j) e || (e = new Ta()), b = f || oh(a) ? nd(a, b, c, d, Ob, e) : od(a, b, h, c, d, Ob, e); else {
                    if (!(1 & c) && (f = j && hf.call(a, "__wrapped__"), h = g && hf.call(b, "__wrapped__"), 
                    f || h)) {
                        a = f ? a.value() : a, b = h ? b.value() : b, e || (e = new Ta()), b = Ob(a, b, c, d, e);
                        break a;
                    }
                    if (i) b: if (e || (e = new Ta()), f = 1 & c, h = qd(a), g = h.length, i = qd(b).length, 
                    g == i || f) {
                        for (j = g; j--; ) {
                            var k = h[j];
                            if (!(f ? k in b : hf.call(b, k))) {
                                b = false;
                                break b;
                            }
                        }
                        if ((i = e.get(a)) && e.get(b)) b = i == b; else {
                            i = true, e.set(a, b), e.set(b, a);
                            for (var l = f; ++j < g; ) {
                                var k = h[j], m = a[k], n = b[k];
                                if (d) var o = f ? d(n, m, k, b, a, e) : d(m, n, k, a, b, e);
                                if (o === P ? m !== n && !Ob(m, n, c, d, e) : !o) {
                                    i = false;
                                    break;
                                }
                                l || (l = "constructor" == k);
                            }
                            i && !l && (c = a.constructor, d = b.constructor, c != d && "constructor" in a && "constructor" in b && !(typeof c == "function" && c instanceof c && typeof d == "function" && d instanceof d) && (i = false)), 
                            e.delete(a), e.delete(b), b = i;
                        }
                    } else b = false; else b = false;
                }
            }
            return b;
        }
        function Pb(a) {
            return te(a) && "[object Map]" == rg(a);
        }
        function Qb(a, b, c, d) {
            var e = c.length, f = e, g = !d;
            if (null == a) return !f;
            for (a = _e(a); e--; ) {
                var h = c[e];
                if (g && h[2] ? h[1] !== a[h[0]] : !(h[0] in a)) return false;
            }
            for (;++e < f; ) {
                var h = c[e], i = h[0], j = a[i], k = h[1];
                if (g && h[2]) {
                    if (j === P && !(i in a)) return false;
                } else {
                    if (h = new Ta(), d) var l = d(j, k, i, a, b, h);
                    if (l === P ? !Ob(k, j, 3, d, h) : !l) return false;
                }
            }
            return true;
        }
        function Rb(a) {
            return !(!se(a) || kf && kf in a) && (pe(a) ? of : ta).test(Od(a));
        }
        function Sb(a) {
            return te(a) && "[object RegExp]" == Eb(a);
        }
        function Tb(a) {
            return te(a) && "[object Set]" == rg(a);
        }
        function Ub(a) {
            return te(a) && re(a.length) && !!Ja[Eb(a)];
        }
        function Vb(a) {
            return typeof a == "function" ? a : null == a ? Pe : typeof a == "object" ? hh(a) ? $b(a[0], a[1]) : Zb(a) : Te(a);
        }
        function Wb(a) {
            if (!Hd(a)) return Kf(a);
            var b, c = [];
            for (b in _e(a)) hf.call(a, b) && "constructor" != b && c.push(b);
            return c;
        }
        function Xb(a, b) {
            return a < b;
        }
        function Yb(a, b) {
            var c = -1, d = me(a) ? We(a.length) : [];
            return gg(a, function(a, e, f) {
                d[++c] = b(a, e, f);
            }), d;
        }
        function Zb(a) {
            var b = wd(a);
            return 1 == b.length && b[0][2] ? Id(b[0][0], b[0][1]) : function(c) {
                return c === a || Qb(c, a, b);
            };
        }
        function $b(a, b) {
            return Fd(a) && b === b && !se(b) ? Id(Nd(a), b) : function(c) {
                var d = Fe(c, a);
                return d === P && d === b ? Ge(c, a) : Ob(b, d, 3);
            };
        }
        function _b(a, b, c, d, e) {
            a !== b && ig(b, function(f, g) {
                if (se(f)) {
                    e || (e = new Ta());
                    var h = e, i = a[g], j = b[g], k = h.get(j);
                    if (k) hb(a, g, k); else {
                        var k = d ? d(i, j, g + "", a, b, h) : P, l = k === P;
                        if (l) {
                            var m = hh(j), n = !m && jh(j), o = !m && !n && oh(j), k = j;
                            m || n || o ? hh(i) ? k = i : ne(i) ? k = Lc(i) : n ? (l = false, k = Fc(j, true)) : o ? (l = false, 
                            k = Hc(j, true)) : k = [] : ve(j) || gh(j) ? (k = i, gh(i) ? k = De(i) : (!se(i) || c && pe(i)) && (k = Ad(j))) : l = false;
                        }
                        l && (h.set(j, k), _b(k, j, c, d, h), h.delete(j)), hb(a, g, k);
                    }
                } else h = d ? d(a[g], f, g + "", a, b, e) : P, h === P && (h = f), hb(a, g, h);
            }, Ie);
        }
        function ac(a, b) {
            var c = a.length;
            if (c) return b += 0 > b ? c : 0, Dd(b, c) ? a[b] : P;
        }
        function bc(a, b, c) {
            var d = -1;
            return b = k(b.length ? b : [ Pe ], C(ud())), a = Yb(a, function(a) {
                return {
                    a: k(b, function(b) {
                        return b(a);
                    }),
                    b: ++d,
                    c: a
                };
            }), y(a, function(a, b) {
                var d;
                a: {
                    d = -1;
                    for (var e = a.a, f = b.a, g = e.length, h = c.length; ++d < g; ) {
                        var i = Ic(e[d], f[d]);
                        if (i) {
                            d = d >= h ? i : i * ("desc" == c[d] ? -1 : 1);
                            break a;
                        }
                    }
                    d = a.b - b.b;
                }
                return d;
            });
        }
        function cc(a, b) {
            return dc(a, b, function(b, c) {
                return Ge(a, c);
            });
        }
        function dc(a, b, c) {
            for (var d = -1, e = b.length, f = {}; ++d < e; ) {
                var g = b[d], h = Cb(a, g);
                c(h, g) && mc(f, Dc(g, a), h);
            }
            return f;
        }
        function ec(a) {
            return function(b) {
                return Cb(b, a);
            };
        }
        function fc(a, b, c, d) {
            var e = d ? s : r, f = -1, g = b.length, h = a;
            for (a === b && (b = Lc(b)), c && (h = k(a, C(c))); ++f < g; ) for (var i = 0, j = b[f], j = c ? c(j) : j; -1 < (i = e(h, j, i, d)); ) h !== a && wf.call(h, i, 1), 
            wf.call(a, i, 1);
            return a;
        }
        function gc(a, b) {
            for (var c = a ? b.length : 0, d = c - 1; c--; ) {
                var e = b[c];
                if (c == d || e !== f) {
                    var f = e;
                    Dd(e) ? wf.call(a, e, 1) : wc(a, e);
                }
            }
        }
        function hc(a, b) {
            return a + Ff(Pf() * (b - a + 1));
        }
        function ic(a, b) {
            var c = "";
            if (!a || 1 > b || 9007199254740991 < b) return c;
            do {
                b % 2 && (c += a), (b = Ff(b / 2)) && (a += a);
            } while (b);
            return c;
        }
        function jc(a, b) {
            return vg(Jd(a, b, Pe), a + "");
        }
        function kc(a) {
            return ab(Ke(a));
        }
        function lc(a, b) {
            var c = Ke(a);
            return Md(c, pb(b, 0, c.length));
        }
        function mc(a, b, c, d) {
            if (!se(a)) return a;
            b = Dc(b, a);
            for (var e = -1, f = b.length, g = f - 1, h = a; null != h && ++e < f; ) {
                var i = Nd(b[e]), j = c;
                if (e != g) {
                    var k = h[i], j = d ? d(k, i, h) : P;
                    j === P && (j = se(k) ? k : Dd(b[e + 1]) ? [] : {});
                }
                ib(h, i, j), h = h[i];
            }
            return a;
        }
        function nc(a) {
            return Md(Ke(a));
        }
        function oc(a, b, c) {
            var d = -1, e = a.length;
            for (0 > b && (b = -b > e ? 0 : e + b), c = c > e ? e : c, 0 > c && (c += e), e = b > c ? 0 : c - b >>> 0, 
            b >>>= 0, c = We(e); ++d < e; ) c[d] = a[d + b];
            return c;
        }
        function pc(a, b) {
            var c;
            return gg(a, function(a, d, e) {
                return c = b(a, d, e), !c;
            }), !!c;
        }
        function qc(a, b, c) {
            var d = 0, e = null == a ? d : a.length;
            if (typeof b == "number" && b === b && 2147483647 >= e) {
                for (;d < e; ) {
                    var f = d + e >>> 1, g = a[f];
                    null !== g && !xe(g) && (c ? g <= b : g < b) ? d = f + 1 : e = f;
                }
                return e;
            }
            return rc(a, b, Pe, c);
        }
        function rc(a, b, c, d) {
            b = c(b);
            for (var e = 0, f = null == a ? 0 : a.length, g = b !== b, h = null === b, i = xe(b), j = b === P; e < f; ) {
                var k = Ff((e + f) / 2), l = c(a[k]), m = l !== P, n = null === l, o = l === l, p = xe(l);
                (g ? d || o : j ? o && (d || m) : h ? o && m && (d || !n) : i ? o && m && !n && (d || !p) : n || p ? 0 : d ? l <= b : l < b) ? e = k + 1 : f = k;
            }
            return Mf(f, 4294967294);
        }
        function sc(a, b) {
            for (var c = -1, d = a.length, e = 0, f = []; ++c < d; ) {
                var g = a[c], h = b ? b(g) : g;
                if (!c || !le(h, i)) {
                    var i = h;
                    f[e++] = 0 === g ? 0 : g;
                }
            }
            return f;
        }
        function tc(a) {
            return typeof a == "number" ? a : xe(a) ? R : +a;
        }
        function uc(a) {
            if (typeof a == "string") return a;
            if (hh(a)) return k(a, uc) + "";
            if (xe(a)) return eg ? eg.call(a) : "";
            var b = a + "";
            return "0" == b && 1 / a == -Q ? "-0" : b;
        }
        function vc(a, b, c) {
            var d = -1, e = i, f = a.length, g = true, h = [], k = h;
            if (c) g = false, e = j; else if (200 <= f) {
                if (e = b ? null : ng(a)) return L(e);
                g = false, e = E, k = new Sa();
            } else k = b ? [] : h;
            a: for (;++d < f; ) {
                var l = a[d], m = b ? b(l) : l, l = c || 0 !== l ? l : 0;
                if (g && m === m) {
                    for (var n = k.length; n--; ) if (k[n] === m) continue a;
                    b && k.push(m), h.push(l);
                } else e(k, m, c) || (k !== h && k.push(m), h.push(l));
            }
            return h;
        }
        function wc(a, b) {
            return b = Dc(b, a), a = 2 > b.length ? a : Cb(a, oc(b, 0, -1)), null == a || delete a[Nd(Vd(b))];
        }
        function xc(a, b, c, d) {
            for (var e = a.length, f = d ? e : -1; (d ? f-- : ++f < e) && b(a[f], f, a); ) ;
            return c ? oc(a, d ? 0 : f, d ? f + 1 : e) : oc(a, d ? f + 1 : 0, d ? e : f);
        }
        function yc(a, b) {
            var c = a;
            return c instanceof La && (c = c.value()), m(b, function(a, b) {
                return b.func.apply(b.thisArg, l([ a ], b.args));
            }, c);
        }
        function zc(a, b, c) {
            var d = a.length;
            if (2 > d) return d ? vc(a[0]) : [];
            for (var e = -1, f = We(d); ++e < d; ) for (var g = a[e], h = -1; ++h < d; ) h != e && (f[e] = ub(f[e] || g, a[h], b, c));
            return vc(yb(f, 1), b, c);
        }
        function Ac(a, b, c) {
            for (var d = -1, e = a.length, f = b.length, g = {}; ++d < e; ) c(g, a[d], d < f ? b[d] : P);
            return g;
        }
        function Bc(a) {
            return ne(a) ? a : [];
        }
        function Cc(a) {
            return typeof a == "function" ? a : Pe;
        }
        function Dc(a, b) {
            return hh(a) ? a : Fd(a, b) ? [ a ] : wg(Ee(a));
        }
        function Ec(a, b, c) {
            var d = a.length;
            return c = c === P ? d : c, !b && c >= d ? a : oc(a, b, c);
        }
        function Fc(a, b) {
            if (b) return a.slice();
            var c = a.length, c = sf ? sf(c) : new a.constructor(c);
            return a.copy(c), c;
        }
        function Gc(a) {
            var b = new a.constructor(a.byteLength);
            return new rf(b).set(new rf(a)), b;
        }
        function Hc(a, b) {
            return new a.constructor(b ? Gc(a.buffer) : a.buffer, a.byteOffset, a.length);
        }
        function Ic(a, b) {
            if (a !== b) {
                var c = a !== P, d = null === a, e = a === a, f = xe(a), g = b !== P, h = null === b, i = b === b, j = xe(b);
                if (!h && !j && !f && a > b || f && g && i && !h && !j || d && g && i || !c && i || !e) return 1;
                if (!d && !f && !j && a < b || j && c && e && !d && !f || h && c && e || !g && e || !i) return -1;
            }
            return 0;
        }
        function Jc(a, b, c, d) {
            var e = -1, f = a.length, g = c.length, h = -1, i = b.length, j = Lf(f - g, 0), k = We(i + j);
            for (d = !d; ++h < i; ) k[h] = b[h];
            for (;++e < g; ) (d || e < f) && (k[c[e]] = a[e]);
            for (;j--; ) k[h++] = a[e++];
            return k;
        }
        function Kc(a, b, c, d) {
            var e = -1, f = a.length, g = -1, h = c.length, i = -1, j = b.length, k = Lf(f - h, 0), l = We(k + j);
            for (d = !d; ++e < k; ) l[e] = a[e];
            for (k = e; ++i < j; ) l[k + i] = b[i];
            for (;++g < h; ) (d || e < f) && (l[k + c[g]] = a[e++]);
            return l;
        }
        function Lc(a, b) {
            var c = -1, d = a.length;
            for (b || (b = We(d)); ++c < d; ) b[c] = a[c];
            return b;
        }
        function Mc(a, b, c, d) {
            var e = !c;
            c || (c = {});
            for (var f = -1, g = b.length; ++f < g; ) {
                var h = b[f], i = d ? d(c[h], a[h], h, c, a) : P;
                i === P && (i = a[h]), e ? nb(c, h, i) : ib(c, h, i);
            }
            return c;
        }
        function Nc(a, b) {
            return Mc(a, pg(a), b);
        }
        function Oc(a, b) {
            return Mc(a, qg(a), b);
        }
        function Pc(a, b) {
            return function(c, e) {
                var f = hh(c) ? d : kb, g = b ? b() : {};
                return f(c, a, ud(e, 2), g);
            };
        }
        function Qc(a) {
            return jc(function(b, c) {
                var d = -1, e = c.length, f = 1 < e ? c[e - 1] : P, g = 2 < e ? c[2] : P, f = 3 < a.length && typeof f == "function" ? (e--, 
                f) : P;
                for (g && Ed(c[0], c[1], g) && (f = 3 > e ? P : f, e = 1), b = _e(b); ++d < e; ) (g = c[d]) && a(b, g, d, f);
                return b;
            });
        }
        function Rc(a, b) {
            return function(c, d) {
                if (null == c) return c;
                if (!me(c)) return a(c, d);
                for (var e = c.length, f = b ? e : -1, g = _e(c); (b ? f-- : ++f < e) && false !== d(g[f], f, g); ) ;
                return c;
            };
        }
        function Sc(a) {
            return function(b, c, d) {
                var e = -1, f = _e(b);
                d = d(b);
                for (var g = d.length; g--; ) {
                    var h = d[a ? g : ++e];
                    if (false === c(f[h], h, f)) break;
                }
                return b;
            };
        }
        function Tc(a, b, c) {
            function d() {
                return (this && this !== Ra && this instanceof d ? f : a).apply(e ? c : this, arguments);
            }
            var e = 1 & b, f = Wc(a);
            return d;
        }
        function Uc(a) {
            return function(b) {
                b = Ee(b);
                var c = Ga.test(b) ? O(b) : P, d = c ? c[0] : b.charAt(0);
                return b = c ? Ec(c, 1).join("") : b.slice(1), d[a]() + b;
            };
        }
        function Vc(a) {
            return function(b) {
                return m(Ne(Me(b).replace(Ca, "")), a, "");
            };
        }
        function Wc(a) {
            return function() {
                var b = arguments;
                switch (b.length) {
                  case 0:
                    return new a();

                  case 1:
                    return new a(b[0]);

                  case 2:
                    return new a(b[0], b[1]);

                  case 3:
                    return new a(b[0], b[1], b[2]);

                  case 4:
                    return new a(b[0], b[1], b[2], b[3]);

                  case 5:
                    return new a(b[0], b[1], b[2], b[3], b[4]);

                  case 6:
                    return new a(b[0], b[1], b[2], b[3], b[4], b[5]);

                  case 7:
                    return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6]);
                }
                var c = fg(a.prototype), b = a.apply(c, b);
                return se(b) ? b : c;
            };
        }
        function Xc(a, b, d) {
            function e() {
                for (var g = arguments.length, h = We(g), i = g, j = td(e); i--; ) h[i] = arguments[i];
                return i = 3 > g && h[0] !== j && h[g - 1] !== j ? [] : K(h, j), g -= i.length, 
                g < d ? gd(a, b, $c, e.placeholder, P, h, i, P, P, d - g) : c(this && this !== Ra && this instanceof e ? f : a, this, h);
            }
            var f = Wc(a);
            return e;
        }
        function Yc(a) {
            return function(b, c, d) {
                var e = _e(b);
                if (!me(b)) {
                    var f = ud(c, 3);
                    b = He(b), c = function(a) {
                        return f(e[a], a, e);
                    };
                }
                return c = a(b, c, d), -1 < c ? e[f ? b[c] : c] : P;
            };
        }
        function Zc(a) {
            return pd(function(b) {
                var c = b.length, d = c, e = Ea.prototype.thru;
                for (a && b.reverse(); d--; ) {
                    var f = b[d];
                    if (typeof f != "function") throw new cf("Expected a function");
                    if (e && !g && "wrapper" == sd(f)) var g = new Ea([], true);
                }
                for (d = g ? d : c; ++d < c; ) var f = b[d], e = sd(f), h = "wrapper" == e ? og(f) : P, g = h && Gd(h[0]) && 424 == h[1] && !h[4].length && 1 == h[9] ? g[sd(h[0])].apply(g, h[3]) : 1 == f.length && Gd(f) ? g[e]() : g.thru(f);
                return function() {
                    var a = arguments, d = a[0];
                    if (g && 1 == a.length && hh(d)) return g.plant(d).value();
                    for (var e = 0, a = c ? b[e].apply(this, a) : d; ++e < c; ) a = b[e].call(this, a);
                    return a;
                };
            });
        }
        function $c(a, b, c, d, e, f, g, h, i, j) {
            function k() {
                for (var r = arguments.length, s = We(r), t = r; t--; ) s[t] = arguments[t];
                if (o) {
                    var u, v = td(k), t = s.length;
                    for (u = 0; t--; ) s[t] === v && ++u;
                }
                if (d && (s = Jc(s, d, e, o)), f && (s = Kc(s, f, g, o)), r -= u, o && r < j) return v = K(s, v), 
                gd(a, b, $c, k.placeholder, c, s, v, h, i, j - r);
                if (v = m ? c : this, t = n ? v[a] : a, r = s.length, h) {
                    u = s.length;
                    for (var w = Mf(h.length, u), x = Lc(s); w--; ) {
                        var y = h[w];
                        s[w] = Dd(y, u) ? x[y] : P;
                    }
                } else p && 1 < r && s.reverse();
                return l && i < r && (s.length = i), this && this !== Ra && this instanceof k && (t = q || Wc(t)), 
                t.apply(v, s);
            }
            var l = 128 & b, m = 1 & b, n = 2 & b, o = 24 & b, p = 512 & b, q = n ? P : Wc(a);
            return k;
        }
        function _c(a, b) {
            return function(c, d) {
                return Jb(c, a, b(d));
            };
        }
        function ad(a, b) {
            return function(c, d) {
                var e;
                if (c === P && d === P) return b;
                if (c !== P && (e = c), d !== P) {
                    if (e === P) return d;
                    typeof c == "string" || typeof d == "string" ? (c = uc(c), d = uc(d)) : (c = tc(c), 
                    d = tc(d)), e = a(c, d);
                }
                return e;
            };
        }
        function bd(a) {
            return pd(function(b) {
                return b = k(b, C(ud())), jc(function(d) {
                    var e = this;
                    return a(b, function(a) {
                        return c(a, e, d);
                    });
                });
            });
        }
        function cd(a, b) {
            b = b === P ? " " : uc(b);
            var c = b.length;
            return 2 > c ? c ? ic(b, a) : b : (c = ic(b, Ef(a / N(b))), Ga.test(b) ? Ec(O(c), 0, a).join("") : c.slice(0, a));
        }
        function dd(a, b, d, e) {
            function f() {
                for (var b = -1, i = arguments.length, j = -1, k = e.length, l = We(k + i), m = this && this !== Ra && this instanceof f ? h : a; ++j < k; ) l[j] = e[j];
                for (;i--; ) l[j++] = arguments[++b];
                return c(m, g ? d : this, l);
            }
            var g = 1 & b, h = Wc(a);
            return f;
        }
        function ed(a) {
            return function(b, c, d) {
                d && typeof d != "number" && Ed(b, c, d) && (c = d = P), b = ze(b), c === P ? (c = b, 
                b = 0) : c = ze(c), d = d === P ? b < c ? 1 : -1 : ze(d);
                var e = -1;
                c = Lf(Ef((c - b) / (d || 1)), 0);
                for (var f = We(c); c--; ) f[a ? c : ++e] = b, b += d;
                return f;
            };
        }
        function fd(a) {
            return function(b, c) {
                return typeof b == "string" && typeof c == "string" || (b = Ce(b), c = Ce(c)), a(b, c);
            };
        }
        function gd(a, b, c, d, e, f, g, h, i, j) {
            var k = 8 & b, l = k ? g : P;
            g = k ? P : g;
            var m = k ? f : P;
            return f = k ? P : f, b = (b | (k ? 32 : 64)) & ~(k ? 64 : 32), 4 & b || (b &= -4), 
            e = [ a, b, e, m, l, f, g, h, i, j ], c = c.apply(P, e), Gd(a) && tg(c, e), c.placeholder = d, 
            Kd(c, a, b);
        }
        function hd(a) {
            var b = $e[a];
            return function(a, c) {
                if (a = Ce(a), c = null == c ? 0 : Mf(Ae(c), 292)) {
                    var d = (Ee(a) + "e").split("e"), d = b(d[0] + "e" + (+d[1] + c)), d = (Ee(d) + "e").split("e");
                    return +(d[0] + "e" + (+d[1] - c));
                }
                return b(a);
            };
        }
        function id(a) {
            return function(b) {
                var c = rg(b);
                return "[object Map]" == c ? I(b) : "[object Set]" == c ? M(b) : B(b, a(b));
            };
        }
        function jd(a, b, c, d, e, f, g, h) {
            var i = 2 & b;
            if (!i && typeof a != "function") throw new cf("Expected a function");
            var j = d ? d.length : 0;
            if (j || (b &= -97, d = e = P), g = g === P ? g : Lf(Ae(g), 0), h = h === P ? h : Ae(h), 
            j -= e ? e.length : 0, 64 & b) {
                var k = d, l = e;
                d = e = P;
            }
            var m = i ? P : og(a);
            return f = [ a, b, c, d, e, k, l, f, g, h ], m && (c = f[1], a = m[1], b = c | a, 
            d = 128 == a && 8 == c || 128 == a && 256 == c && f[7].length <= m[8] || 384 == a && m[7].length <= m[8] && 8 == c, 
            131 > b || d) && (1 & a && (f[2] = m[2], b |= 1 & c ? 0 : 4), (c = m[3]) && (d = f[3], 
            f[3] = d ? Jc(d, c, m[4]) : c, f[4] = d ? K(f[3], "__lodash_placeholder__") : m[4]), 
            (c = m[5]) && (d = f[5], f[5] = d ? Kc(d, c, m[6]) : c, f[6] = d ? K(f[5], "__lodash_placeholder__") : m[6]), 
            (c = m[7]) && (f[7] = c), 128 & a && (f[8] = null == f[8] ? m[8] : Mf(f[8], m[8])), 
            null == f[9] && (f[9] = m[9]), f[0] = m[0], f[1] = b), a = f[0], b = f[1], c = f[2], 
            d = f[3], e = f[4], h = f[9] = f[9] === P ? i ? 0 : a.length : Lf(f[9] - j, 0), 
            !h && 24 & b && (b &= -25), Kd((m ? kg : tg)(b && 1 != b ? 8 == b || 16 == b ? Xc(a, b, h) : 32 != b && 33 != b || e.length ? $c.apply(P, f) : dd(a, b, c, d) : Tc(a, b, c), f), a, b);
        }
        function kd(a, b, c, d) {
            return a === P || le(a, ef[c]) && !hf.call(d, c) ? b : a;
        }
        function ld(a, b, c, d, e, f) {
            return se(a) && se(b) && (f.set(b, a), _b(a, b, P, ld, f), f.delete(b)), a;
        }
        function md(a) {
            return ve(a) ? P : a;
        }
        function nd(a, b, c, d, e, f) {
            var g = 1 & c, h = a.length, i = b.length;
            if (h != i && !(g && i > h)) return false;
            if ((i = f.get(a)) && f.get(b)) return i == b;
            var i = -1, j = true, k = 2 & c ? new Sa() : P;
            for (f.set(a, b), f.set(b, a); ++i < h; ) {
                var l = a[i], m = b[i];
                if (d) var n = g ? d(m, l, i, b, a, f) : d(l, m, i, a, b, f);
                if (n !== P) {
                    if (n) continue;
                    j = false;
                    break;
                }
                if (k) {
                    if (!o(b, function(a, b) {
                        if (!E(k, b) && (l === a || e(l, a, c, d, f))) return k.push(b);
                    })) {
                        j = false;
                        break;
                    }
                } else if (l !== m && !e(l, m, c, d, f)) {
                    j = false;
                    break;
                }
            }
            return f.delete(a), f.delete(b), j;
        }
        function od(a, b, c, d, e, f, g) {
            switch (c) {
              case "[object DataView]":
                if (a.byteLength != b.byteLength || a.byteOffset != b.byteOffset) break;
                a = a.buffer, b = b.buffer;

              case "[object ArrayBuffer]":
                if (a.byteLength != b.byteLength || !f(new rf(a), new rf(b))) break;
                return true;

              case "[object Boolean]":
              case "[object Date]":
              case "[object Number]":
                return le(+a, +b);

              case "[object Error]":
                return a.name == b.name && a.message == b.message;

              case "[object RegExp]":
              case "[object String]":
                return a == b + "";

              case "[object Map]":
                var h = I;

              case "[object Set]":
                if (h || (h = L), a.size != b.size && !(1 & d)) break;
                return (c = g.get(a)) ? c == b : (d |= 2, g.set(a, b), b = nd(h(a), h(b), d, e, f, g), 
                g.delete(a), b);

              case "[object Symbol]":
                if (dg) return dg.call(a) == dg.call(b);
            }
            return false;
        }
        function pd(a) {
            return vg(Jd(a, P, Td), a + "");
        }
        function qd(a) {
            return Db(a, He, pg);
        }
        function rd(a) {
            return Db(a, Ie, qg);
        }
        function sd(a) {
            for (var b = a.name + "", c = Yf[b], d = hf.call(Yf, b) ? c.length : 0; d--; ) {
                var e = c[d], f = e.func;
                if (null == f || f == a) return e.name;
            }
            return b;
        }
        function td(a) {
            return (hf.call(Aa, "placeholder") ? Aa : a).placeholder;
        }
        function ud() {
            var a = Aa.iteratee || Qe, a = a === Qe ? Vb : a;
            return arguments.length ? a(arguments[0], arguments[1]) : a;
        }
        function vd(a, b) {
            var c = a.__data__, d = typeof b;
            return ("string" == d || "number" == d || "symbol" == d || "boolean" == d ? "__proto__" !== b : null === b) ? c[typeof b == "string" ? "string" : "hash"] : c.map;
        }
        function wd(a) {
            for (var b = He(a), c = b.length; c--; ) {
                var d = b[c], e = a[d];
                b[c] = [ d, e, e === e && !se(e) ];
            }
            return b;
        }
        function xd(a, b) {
            var c = null == a ? P : a[b];
            return Rb(c) ? c : P;
        }
        function yd(a, b, c) {
            b = Dc(b, a);
            for (var d = -1, e = b.length, f = false; ++d < e; ) {
                var g = Nd(b[d]);
                if (!(f = null != a && c(a, g))) break;
                a = a[g];
            }
            return f || ++d != e ? f : (e = null == a ? 0 : a.length, !!e && re(e) && Dd(g, e) && (hh(a) || gh(a)));
        }
        function zd(a) {
            var b = a.length, c = a.constructor(b);
            return b && "string" == typeof a[0] && hf.call(a, "index") && (c.index = a.index, 
            c.input = a.input), c;
        }
        function Ad(a) {
            return typeof a.constructor != "function" || Hd(a) ? {} : fg(tf(a));
        }
        function Bd(c, d, e, f) {
            var g = c.constructor;
            switch (d) {
              case "[object ArrayBuffer]":
                return Gc(c);

              case "[object Boolean]":
              case "[object Date]":
                return new g(+c);

              case "[object DataView]":
                return d = f ? Gc(c.buffer) : c.buffer, new c.constructor(d, c.byteOffset, c.byteLength);

              case "[object Float32Array]":
              case "[object Float64Array]":
              case "[object Int8Array]":
              case "[object Int16Array]":
              case "[object Int32Array]":
              case "[object Uint8Array]":
              case "[object Uint8ClampedArray]":
              case "[object Uint16Array]":
              case "[object Uint32Array]":
                return Hc(c, f);

              case "[object Map]":
                return d = f ? e(I(c), 1) : I(c), m(d, a, new c.constructor());

              case "[object Number]":
              case "[object String]":
                return new g(c);

              case "[object RegExp]":
                return d = new c.constructor(c.source, qa.exec(c)), d.lastIndex = c.lastIndex, d;

              case "[object Set]":
                return d = f ? e(L(c), 1) : L(c), m(d, b, new c.constructor());

              case "[object Symbol]":
                return dg ? _e(dg.call(c)) : {};
            }
        }
        function Cd(a) {
            return hh(a) || gh(a) || !!(xf && a && a[xf]);
        }
        function Dd(a, b) {
            return b = null == b ? 9007199254740991 : b, !!b && (typeof a == "number" || va.test(a)) && -1 < a && 0 == a % 1 && a < b;
        }
        function Ed(a, b, c) {
            if (!se(c)) return false;
            var d = typeof b;
            return !!("number" == d ? me(c) && Dd(b, c.length) : "string" == d && b in c) && le(c[b], a);
        }
        function Fd(a, b) {
            if (hh(a)) return false;
            var c = typeof a;
            return !("number" != c && "symbol" != c && "boolean" != c && null != a && !xe(a)) || (ca.test(a) || !ba.test(a) || null != b && a in _e(b));
        }
        function Gd(a) {
            var b = sd(a), c = Aa[b];
            return typeof c == "function" && b in La.prototype && (a === c || (b = og(c), !!b && a === b[0]));
        }
        function Hd(a) {
            var b = a && a.constructor;
            return a === (typeof b == "function" && b.prototype || ef);
        }
        function Id(a, b) {
            return function(c) {
                return null != c && (c[a] === b && (b !== P || a in _e(c)));
            };
        }
        function Jd(a, b, d) {
            return b = Lf(b === P ? a.length - 1 : b, 0), function() {
                for (var e = arguments, f = -1, g = Lf(e.length - b, 0), h = We(g); ++f < g; ) h[f] = e[b + f];
                for (f = -1, g = We(b + 1); ++f < b; ) g[f] = e[f];
                return g[b] = d(h), c(a, this, g);
            };
        }
        function Kd(a, b, c) {
            var d = b + "";
            b = vg;
            var e, f = Pd;
            return e = (e = d.match(la)) ? e[1].split(ma) : [], c = f(e, c), (f = c.length) && (e = f - 1, 
            c[e] = (1 < f ? "& " : "") + c[e], c = c.join(2 < f ? ", " : " "), d = d.replace(ka, "{\n/* [wrapped with " + c + "] */\n")), 
            b(a, d);
        }
        function Ld(a) {
            var b = 0, c = 0;
            return function() {
                var d = Nf(), e = 16 - (d - c);
                if (c = d, 0 < e) {
                    if (800 <= ++b) return arguments[0];
                } else b = 0;
                return a.apply(P, arguments);
            };
        }
        function Md(a, b) {
            var c = -1, d = a.length, e = d - 1;
            for (b = b === P ? d : b; ++c < b; ) {
                var d = hc(c, e), f = a[d];
                a[d] = a[c], a[c] = f;
            }
            return a.length = b, a;
        }
        function Nd(a) {
            if (typeof a == "string" || xe(a)) return a;
            var b = a + "";
            return "0" == b && 1 / a == -Q ? "-0" : b;
        }
        function Od(a) {
            if (null != a) {
                try {
                    return gf.call(a);
                } catch (a) {}
                return a + "";
            }
            return "";
        }
        function Pd(a, b) {
            return e(S, function(c) {
                var d = "_." + c[0];
                b & c[1] && !i(a, d) && a.push(d);
            }), a.sort();
        }
        function Qd(a) {
            if (a instanceof La) return a.clone();
            var b = new Ea(a.__wrapped__, a.__chain__);
            return b.__actions__ = Lc(a.__actions__), b.__index__ = a.__index__, b.__values__ = a.__values__, 
            b;
        }
        function Rd(a, b, c) {
            var d = null == a ? 0 : a.length;
            return d ? (c = null == c ? 0 : Ae(c), 0 > c && (c = Lf(d + c, 0)), q(a, ud(b, 3), c)) : -1;
        }
        function Sd(a, b, c) {
            var d = null == a ? 0 : a.length;
            if (!d) return -1;
            var e = d - 1;
            return c !== P && (e = Ae(c), e = 0 > c ? Lf(d + e, 0) : Mf(e, d - 1)), q(a, ud(b, 3), e, true);
        }
        function Td(a) {
            return (null == a ? 0 : a.length) ? yb(a, 1) : [];
        }
        function Ud(a) {
            return a && a.length ? a[0] : P;
        }
        function Vd(a) {
            var b = null == a ? 0 : a.length;
            return b ? a[b - 1] : P;
        }
        function Wd(a, b) {
            return a && a.length && b && b.length ? fc(a, b) : a;
        }
        function Xd(a) {
            return null == a ? a : Qf.call(a);
        }
        function Yd(a) {
            if (!a || !a.length) return [];
            var b = 0;
            return a = h(a, function(a) {
                if (ne(a)) return b = Lf(a.length, b), true;
            }), A(b, function(b) {
                return k(a, v(b));
            });
        }
        function Zd(a, b) {
            if (!a || !a.length) return [];
            var d = Yd(a);
            return null == b ? d : k(d, function(a) {
                return c(b, P, a);
            });
        }
        function $d(a) {
            return a = Aa(a), a.__chain__ = true, a;
        }
        function _d(a, b) {
            return b(a);
        }
        function ae() {
            return this;
        }
        function be(a, b) {
            return (hh(a) ? e : gg)(a, ud(b, 3));
        }
        function ce(a, b) {
            return (hh(a) ? f : hg)(a, ud(b, 3));
        }
        function de(a, b) {
            return (hh(a) ? k : Yb)(a, ud(b, 3));
        }
        function ee(a, b, c) {
            return b = c ? P : b, b = a && null == b ? a.length : b, jd(a, 128, P, P, P, P, b);
        }
        function fe(a, b) {
            var c;
            if (typeof b != "function") throw new cf("Expected a function");
            return a = Ae(a), function() {
                return 0 < --a && (c = b.apply(this, arguments)), 1 >= a && (b = P), c;
            };
        }
        function ge(a, b, c) {
            return b = c ? P : b, a = jd(a, 8, P, P, P, P, P, b), a.placeholder = ge.placeholder, 
            a;
        }
        function he(a, b, c) {
            return b = c ? P : b, a = jd(a, 16, P, P, P, P, P, b), a.placeholder = he.placeholder, 
            a;
        }
        function ie(a, b, c) {
            function d(b) {
                var c = i, d = j;
                return i = j = P, o = b, l = a.apply(d, c);
            }
            function e(a) {
                var c = a - n;
                return a -= o, n === P || c >= b || 0 > c || q && a >= k;
            }
            function f() {
                var a = Xg();
                if (e(a)) return g(a);
                var c, d = ug;
                c = a - o, a = b - (a - n), c = q ? Mf(a, k - c) : a, m = d(f, c);
            }
            function g(a) {
                return m = P, r && i ? d(a) : (i = j = P, l);
            }
            function h() {
                var a = Xg(), c = e(a);
                if (i = arguments, j = this, n = a, c) {
                    if (m === P) return o = a = n, m = ug(f, b), p ? d(a) : l;
                    if (q) return m = ug(f, b), d(n);
                }
                return m === P && (m = ug(f, b)), l;
            }
            var i, j, k, l, m, n, o = 0, p = false, q = false, r = true;
            if (typeof a != "function") throw new cf("Expected a function");
            return b = Ce(b) || 0, se(c) && (p = !!c.leading, k = (q = "maxWait" in c) ? Lf(Ce(c.maxWait) || 0, b) : k, 
            r = "trailing" in c ? !!c.trailing : r), h.cancel = function() {
                m !== P && mg(m), o = 0, i = n = j = m = P;
            }, h.flush = function() {
                return m === P ? l : g(Xg());
            }, h;
        }
        function je(a, b) {
            function c() {
                var d = arguments, e = b ? b.apply(this, d) : d[0], f = c.cache;
                return f.has(e) ? f.get(e) : (d = a.apply(this, d), c.cache = f.set(e, d) || f, 
                d);
            }
            if (typeof a != "function" || null != b && typeof b != "function") throw new cf("Expected a function");
            return c.cache = new (je.Cache || Qa)(), c;
        }
        function ke(a) {
            if (typeof a != "function") throw new cf("Expected a function");
            return function() {
                var b = arguments;
                switch (b.length) {
                  case 0:
                    return !a.call(this);

                  case 1:
                    return !a.call(this, b[0]);

                  case 2:
                    return !a.call(this, b[0], b[1]);

                  case 3:
                    return !a.call(this, b[0], b[1], b[2]);
                }
                return !a.apply(this, b);
            };
        }
        function le(a, b) {
            return a === b || a !== a && b !== b;
        }
        function me(a) {
            return null != a && re(a.length) && !pe(a);
        }
        function ne(a) {
            return te(a) && me(a);
        }
        function oe(a) {
            if (!te(a)) return false;
            var b = Eb(a);
            return "[object Error]" == b || "[object DOMException]" == b || typeof a.message == "string" && typeof a.name == "string" && !ve(a);
        }
        function pe(a) {
            return !!se(a) && (a = Eb(a), "[object Function]" == a || "[object GeneratorFunction]" == a || "[object AsyncFunction]" == a || "[object Proxy]" == a);
        }
        function qe(a) {
            return typeof a == "number" && a == Ae(a);
        }
        function re(a) {
            return typeof a == "number" && -1 < a && 0 == a % 1 && 9007199254740991 >= a;
        }
        function se(a) {
            var b = typeof a;
            return null != a && ("object" == b || "function" == b);
        }
        function te(a) {
            return null != a && typeof a == "object";
        }
        function ue(a) {
            return typeof a == "number" || te(a) && "[object Number]" == Eb(a);
        }
        function ve(a) {
            return !(!te(a) || "[object Object]" != Eb(a)) && (a = tf(a), null === a || (a = hf.call(a, "constructor") && a.constructor, 
            typeof a == "function" && a instanceof a && gf.call(a) == mf));
        }
        function we(a) {
            return typeof a == "string" || !hh(a) && te(a) && "[object String]" == Eb(a);
        }
        function xe(a) {
            return typeof a == "symbol" || te(a) && "[object Symbol]" == Eb(a);
        }
        function ye(a) {
            if (!a) return [];
            if (me(a)) return we(a) ? O(a) : Lc(a);
            if (yf && a[yf]) {
                a = a[yf]();
                for (var b, c = []; !(b = a.next()).done; ) c.push(b.value);
                return c;
            }
            return b = rg(a), ("[object Map]" == b ? I : "[object Set]" == b ? L : Ke)(a);
        }
        function ze(a) {
            return a ? (a = Ce(a), a === Q || a === -Q ? 1.7976931348623157e308 * (0 > a ? -1 : 1) : a === a ? a : 0) : 0 === a ? a : 0;
        }
        function Ae(a) {
            a = ze(a);
            var b = a % 1;
            return a === a ? b ? a - b : a : 0;
        }
        function Be(a) {
            return a ? pb(Ae(a), 0, 4294967295) : 0;
        }
        function Ce(a) {
            if (typeof a == "number") return a;
            if (xe(a)) return R;
            if (se(a) && (a = typeof a.valueOf == "function" ? a.valueOf() : a, a = se(a) ? a + "" : a), 
            typeof a != "string") return 0 === a ? a : +a;
            a = a.replace(ha, "");
            var b = sa.test(a);
            return b || ua.test(a) ? Oa(a.slice(2), b ? 2 : 8) : ra.test(a) ? R : +a;
        }
        function De(a) {
            return Mc(a, Ie(a));
        }
        function Ee(a) {
            return null == a ? "" : uc(a);
        }
        function Fe(a, b, c) {
            return a = null == a ? P : Cb(a, b), a === P ? c : a;
        }
        function Ge(a, b) {
            return null != a && yd(a, b, Hb);
        }
        function He(a) {
            return me(a) ? Va(a) : Wb(a);
        }
        function Ie(a) {
            if (me(a)) a = Va(a, true); else if (se(a)) {
                var b, c = Hd(a), d = [];
                for (b in a) ("constructor" != b || !c && hf.call(a, b)) && d.push(b);
                a = d;
            } else {
                if (b = [], null != a) for (c in _e(a)) b.push(c);
                a = b;
            }
            return a;
        }
        function Je(a, b) {
            if (null == a) return {};
            var c = k(rd(a), function(a) {
                return [ a ];
            });
            return b = ud(b), dc(a, c, function(a, c) {
                return b(a, c[0]);
            });
        }
        function Ke(a) {
            return null == a ? [] : D(a, He(a));
        }
        function Le(a) {
            return Oh(Ee(a).toLowerCase());
        }
        function Me(a) {
            return (a = Ee(a)) && a.replace(wa, bb).replace(Da, "");
        }
        function Ne(a, b, c) {
            return a = Ee(a), b = c ? P : b, b === P ? Ha.test(a) ? a.match(Fa) || [] : a.match(na) || [] : a.match(b) || [];
        }
        function Oe(a) {
            return function() {
                return a;
            };
        }
        function Pe(a) {
            return a;
        }
        function Qe(a) {
            return Vb(typeof a == "function" ? a : qb(a, 1));
        }
        function Re(a, b, c) {
            var d = He(b), f = Bb(b, d);
            null != c || se(b) && (f.length || !d.length) || (c = b, b = a, a = this, f = Bb(b, He(b)));
            var g = !(se(c) && "chain" in c && !c.chain), h = pe(a);
            return e(f, function(c) {
                var d = b[c];
                a[c] = d, h && (a.prototype[c] = function() {
                    var b = this.__chain__;
                    if (g || b) {
                        var c = a(this.__wrapped__);
                        return (c.__actions__ = Lc(this.__actions__)).push({
                            func: d,
                            args: arguments,
                            thisArg: a
                        }), c.__chain__ = b, c;
                    }
                    return d.apply(a, l([ this.value() ], arguments));
                });
            }), a;
        }
        function Se() {}
        function Te(a) {
            return Fd(a) ? v(Nd(a)) : ec(a);
        }
        function Ue() {
            return [];
        }
        function Ve() {
            return false;
        }
        za = null == za ? Ra : eb.defaults(Ra.Object(), za, eb.pick(Ra, Ia));
        var We = za.Array, Xe = za.Date, Ye = za.Error, Ze = za.Function, $e = za.Math, _e = za.Object, af = za.RegExp, bf = za.String, cf = za.TypeError, df = We.prototype, ef = _e.prototype, ff = za["__core-js_shared__"], gf = Ze.prototype.toString, hf = ef.hasOwnProperty, jf = 0, kf = function() {
            var a = /[^.]+$/.exec(ff && ff.keys && ff.keys.IE_PROTO || "");
            return a ? "Symbol(src)_1." + a : "";
        }(), lf = ef.toString, mf = gf.call(_e), nf = Ra._, of = af("^" + gf.call(hf).replace(fa, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), pf = Ua ? za.Buffer : P, qf = za.Symbol, rf = za.Uint8Array, sf = pf ? pf.f : P, tf = J(_e.getPrototypeOf, _e), uf = _e.create, vf = ef.propertyIsEnumerable, wf = df.splice, xf = qf ? qf.isConcatSpreadable : P, yf = qf ? qf.iterator : P, zf = qf ? qf.toStringTag : P, Af = function() {
            try {
                var a = xd(_e, "defineProperty");
                return a({}, "", {}), a;
            } catch (a) {}
        }(), Bf = za.clearTimeout !== Ra.clearTimeout && za.clearTimeout, Cf = Xe && Xe.now !== Ra.Date.now && Xe.now, Df = za.setTimeout !== Ra.setTimeout && za.setTimeout, Ef = $e.ceil, Ff = $e.floor, Gf = _e.getOwnPropertySymbols, Hf = pf ? pf.isBuffer : P, If = za.isFinite, Jf = df.join, Kf = J(_e.keys, _e), Lf = $e.max, Mf = $e.min, Nf = Xe.now, Of = za.parseInt, Pf = $e.random, Qf = df.reverse, Rf = xd(za, "DataView"), Sf = xd(za, "Map"), Tf = xd(za, "Promise"), Uf = xd(za, "Set"), Vf = xd(za, "WeakMap"), Wf = xd(_e, "create"), Xf = Vf && new Vf(), Yf = {}, Zf = Od(Rf), $f = Od(Sf), _f = Od(Tf), ag = Od(Uf), bg = Od(Vf), cg = qf ? qf.prototype : P, dg = cg ? cg.valueOf : P, eg = cg ? cg.toString : P, fg = function() {
            function a() {}
            return function(b) {
                return se(b) ? uf ? uf(b) : (a.prototype = b, b = new a(), a.prototype = P, b) : {};
            };
        }();
        Aa.templateSettings = {
            escape: $,
            evaluate: _,
            interpolate: aa,
            variable: "",
            imports: {
                _: Aa
            }
        }, Aa.prototype = Ba.prototype, Aa.prototype.constructor = Aa, Ea.prototype = fg(Ba.prototype), 
        Ea.prototype.constructor = Ea, La.prototype = fg(Ba.prototype), La.prototype.constructor = La, 
        Ma.prototype.clear = function() {
            this.__data__ = Wf ? Wf(null) : {}, this.size = 0;
        }, Ma.prototype.delete = function(a) {
            return a = this.has(a) && delete this.__data__[a], this.size -= a ? 1 : 0, a;
        }, Ma.prototype.get = function(a) {
            var b = this.__data__;
            return Wf ? (a = b[a], "__lodash_hash_undefined__" === a ? P : a) : hf.call(b, a) ? b[a] : P;
        }, Ma.prototype.has = function(a) {
            var b = this.__data__;
            return Wf ? b[a] !== P : hf.call(b, a);
        }, Ma.prototype.set = function(a, b) {
            var c = this.__data__;
            return this.size += this.has(a) ? 0 : 1, c[a] = Wf && b === P ? "__lodash_hash_undefined__" : b, 
            this;
        }, Pa.prototype.clear = function() {
            this.__data__ = [], this.size = 0;
        }, Pa.prototype.delete = function(a) {
            var b = this.__data__;
            return a = jb(b, a), !(0 > a) && (a == b.length - 1 ? b.pop() : wf.call(b, a, 1), 
            --this.size, true);
        }, Pa.prototype.get = function(a) {
            var b = this.__data__;
            return a = jb(b, a), 0 > a ? P : b[a][1];
        }, Pa.prototype.has = function(a) {
            return -1 < jb(this.__data__, a);
        }, Pa.prototype.set = function(a, b) {
            var c = this.__data__, d = jb(c, a);
            return 0 > d ? (++this.size, c.push([ a, b ])) : c[d][1] = b, this;
        }, Qa.prototype.clear = function() {
            this.size = 0, this.__data__ = {
                hash: new Ma(),
                map: new (Sf || Pa)(),
                string: new Ma()
            };
        }, Qa.prototype.delete = function(a) {
            return a = vd(this, a).delete(a), this.size -= a ? 1 : 0, a;
        }, Qa.prototype.get = function(a) {
            return vd(this, a).get(a);
        }, Qa.prototype.has = function(a) {
            return vd(this, a).has(a);
        }, Qa.prototype.set = function(a, b) {
            var c = vd(this, a), d = c.size;
            return c.set(a, b), this.size += c.size == d ? 0 : 1, this;
        }, Sa.prototype.add = Sa.prototype.push = function(a) {
            return this.__data__.set(a, "__lodash_hash_undefined__"), this;
        }, Sa.prototype.has = function(a) {
            return this.__data__.has(a);
        }, Ta.prototype.clear = function() {
            this.__data__ = new Pa(), this.size = 0;
        }, Ta.prototype.delete = function(a) {
            var b = this.__data__;
            return a = b.delete(a), this.size = b.size, a;
        }, Ta.prototype.get = function(a) {
            return this.__data__.get(a);
        }, Ta.prototype.has = function(a) {
            return this.__data__.has(a);
        }, Ta.prototype.set = function(a, b) {
            var c = this.__data__;
            if (c instanceof Pa) {
                var d = c.__data__;
                if (!Sf || 199 > d.length) return d.push([ a, b ]), this.size = ++c.size, this;
                c = this.__data__ = new Qa(d);
            }
            return c.set(a, b), this.size = c.size, this;
        };
        var gg = Rc(zb), hg = Rc(Ab, true), ig = Sc(), jg = Sc(true), kg = Xf ? function(a, b) {
            return Xf.set(a, b), a;
        } : Pe, lg = Af ? function(a, b) {
            return Af(a, "toString", {
                configurable: true,
                enumerable: false,
                value: Oe(b),
                writable: true
            });
        } : Pe, mg = Bf || function(a) {
            return Ra.clearTimeout(a);
        }, ng = Uf && 1 / L(new Uf([ , -0 ]))[1] == Q ? function(a) {
            return new Uf(a);
        } : Se, og = Xf ? function(a) {
            return Xf.get(a);
        } : Se, pg = Gf ? function(a) {
            return null == a ? [] : (a = _e(a), h(Gf(a), function(b) {
                return vf.call(a, b);
            }));
        } : Ue, qg = Gf ? function(a) {
            for (var b = []; a; ) l(b, pg(a)), a = tf(a);
            return b;
        } : Ue, rg = Eb;
        (Rf && "[object DataView]" != rg(new Rf(new ArrayBuffer(1))) || Sf && "[object Map]" != rg(new Sf()) || Tf && "[object Promise]" != rg(Tf.resolve()) || Uf && "[object Set]" != rg(new Uf()) || Vf && "[object WeakMap]" != rg(new Vf())) && (rg = function(a) {
            var b = Eb(a);
            if (a = (a = "[object Object]" == b ? a.constructor : P) ? Od(a) : "") switch (a) {
              case Zf:
                return "[object DataView]";

              case $f:
                return "[object Map]";

              case _f:
                return "[object Promise]";

              case ag:
                return "[object Set]";

              case bg:
                return "[object WeakMap]";
            }
            return b;
        });
        var sg = ff ? pe : Ve, tg = Ld(kg), ug = Df || function(a, b) {
            return Ra.setTimeout(a, b);
        }, vg = Ld(lg), wg = function(a) {
            a = je(a, function(a) {
                return 500 === b.size && b.clear(), a;
            });
            var b = a.cache;
            return a;
        }(function(a) {
            var b = [];
            return da.test(a) && b.push(""), a.replace(ea, function(a, c, d, e) {
                b.push(d ? e.replace(oa, "$1") : c || a);
            }), b;
        }), xg = jc(function(a, b) {
            return ne(a) ? ub(a, yb(b, 1, ne, true)) : [];
        }), yg = jc(function(a, b) {
            var c = Vd(b);
            return ne(c) && (c = P), ne(a) ? ub(a, yb(b, 1, ne, true), ud(c, 2)) : [];
        }), zg = jc(function(a, b) {
            var c = Vd(b);
            return ne(c) && (c = P), ne(a) ? ub(a, yb(b, 1, ne, true), P, c) : [];
        }), Ag = jc(function(a) {
            var b = k(a, Bc);
            return b.length && b[0] === a[0] ? Ib(b) : [];
        }), Bg = jc(function(a) {
            var b = Vd(a), c = k(a, Bc);
            return b === Vd(c) ? b = P : c.pop(), c.length && c[0] === a[0] ? Ib(c, ud(b, 2)) : [];
        }), Cg = jc(function(a) {
            var b = Vd(a), c = k(a, Bc);
            return (b = typeof b == "function" ? b : P) && c.pop(), c.length && c[0] === a[0] ? Ib(c, P, b) : [];
        }), Dg = jc(Wd), Eg = pd(function(a, b) {
            var c = null == a ? 0 : a.length, d = ob(a, b);
            return gc(a, k(b, function(a) {
                return Dd(a, c) ? +a : a;
            }).sort(Ic)), d;
        }), Fg = jc(function(a) {
            return vc(yb(a, 1, ne, true));
        }), Gg = jc(function(a) {
            var b = Vd(a);
            return ne(b) && (b = P), vc(yb(a, 1, ne, true), ud(b, 2));
        }), Hg = jc(function(a) {
            var b = Vd(a), b = typeof b == "function" ? b : P;
            return vc(yb(a, 1, ne, true), P, b);
        }), Ig = jc(function(a, b) {
            return ne(a) ? ub(a, b) : [];
        }), Jg = jc(function(a) {
            return zc(h(a, ne));
        }), Kg = jc(function(a) {
            var b = Vd(a);
            return ne(b) && (b = P), zc(h(a, ne), ud(b, 2));
        }), Lg = jc(function(a) {
            var b = Vd(a), b = typeof b == "function" ? b : P;
            return zc(h(a, ne), P, b);
        }), Mg = jc(Yd), Ng = jc(function(a) {
            var b = a.length, b = 1 < b ? a[b - 1] : P, b = typeof b == "function" ? (a.pop(), 
            b) : P;
            return Zd(a, b);
        }), Og = pd(function(a) {
            function b(b) {
                return ob(b, a);
            }
            var c = a.length, d = c ? a[0] : 0, e = this.__wrapped__;
            return !(1 < c || this.__actions__.length) && e instanceof La && Dd(d) ? (e = e.slice(d, +d + (c ? 1 : 0)), 
            e.__actions__.push({
                func: _d,
                args: [ b ],
                thisArg: P
            }), new Ea(e, this.__chain__).thru(function(a) {
                return c && !a.length && a.push(P), a;
            })) : this.thru(b);
        }), Pg = Pc(function(a, b, c) {
            hf.call(a, c) ? ++a[c] : nb(a, c, 1);
        }), Qg = Yc(Rd), Rg = Yc(Sd), Sg = Pc(function(a, b, c) {
            hf.call(a, c) ? a[c].push(b) : nb(a, c, [ b ]);
        }), Tg = jc(function(a, b, d) {
            var e = -1, f = typeof b == "function", g = me(a) ? We(a.length) : [];
            return gg(a, function(a) {
                g[++e] = f ? c(b, a, d) : Kb(a, b, d);
            }), g;
        }), Ug = Pc(function(a, b, c) {
            nb(a, c, b);
        }), Vg = Pc(function(a, b, c) {
            a[c ? 0 : 1].push(b);
        }, function() {
            return [ [], [] ];
        }), Wg = jc(function(a, b) {
            if (null == a) return [];
            var c = b.length;
            return 1 < c && Ed(a, b[0], b[1]) ? b = [] : 2 < c && Ed(b[0], b[1], b[2]) && (b = [ b[0] ]), 
            bc(a, yb(b, 1), []);
        }), Xg = Cf || function() {
            return Ra.Date.now();
        }, Yg = jc(function(a, b, c) {
            var d = 1;
            if (c.length) var e = K(c, td(Yg)), d = 32 | d;
            return jd(a, d, b, c, e);
        }), Zg = jc(function(a, b, c) {
            var d = 3;
            if (c.length) var e = K(c, td(Zg)), d = 32 | d;
            return jd(b, d, a, c, e);
        }), $g = jc(function(a, b) {
            return tb(a, 1, b);
        }), _g = jc(function(a, b, c) {
            return tb(a, Ce(b) || 0, c);
        });
        je.Cache = Qa;
        var ah = jc(function(a, b) {
            b = 1 == b.length && hh(b[0]) ? k(b[0], C(ud())) : k(yb(b, 1), C(ud()));
            var d = b.length;
            return jc(function(e) {
                for (var f = -1, g = Mf(e.length, d); ++f < g; ) e[f] = b[f].call(this, e[f]);
                return c(a, this, e);
            });
        }), bh = jc(function(a, b) {
            return jd(a, 32, P, b, K(b, td(bh)));
        }), ch = jc(function(a, b) {
            return jd(a, 64, P, b, K(b, td(ch)));
        }), dh = pd(function(a, b) {
            return jd(a, 256, P, P, P, b);
        }), eh = fd(Fb), fh = fd(function(a, b) {
            return a >= b;
        }), gh = Lb(function() {
            return arguments;
        }()) ? Lb : function(a) {
            return te(a) && hf.call(a, "callee") && !vf.call(a, "callee");
        }, hh = We.isArray, ih = Wa ? C(Wa) : Mb, jh = Hf || Ve, kh = Xa ? C(Xa) : Nb, lh = Ya ? C(Ya) : Pb, mh = Za ? C(Za) : Sb, nh = $a ? C($a) : Tb, oh = _a ? C(_a) : Ub, ph = fd(Xb), qh = fd(function(a, b) {
            return a <= b;
        }), rh = Qc(function(a, b) {
            if (Hd(b) || me(b)) Mc(b, He(b), a); else for (var c in b) hf.call(b, c) && ib(a, c, b[c]);
        }), sh = Qc(function(a, b) {
            Mc(b, Ie(b), a);
        }), th = Qc(function(a, b, c, d) {
            Mc(b, Ie(b), a, d);
        }), uh = Qc(function(a, b, c, d) {
            Mc(b, He(b), a, d);
        }), vh = pd(ob), wh = jc(function(a) {
            return a.push(P, kd), c(th, P, a);
        }), xh = jc(function(a) {
            return a.push(P, ld), c(Ch, P, a);
        }), yh = _c(function(a, b, c) {
            a[b] = c;
        }, Oe(Pe)), zh = _c(function(a, b, c) {
            hf.call(a, b) ? a[b].push(c) : a[b] = [ c ];
        }, ud), Ah = jc(Kb), Bh = Qc(function(a, b, c) {
            _b(a, b, c);
        }), Ch = Qc(function(a, b, c, d) {
            _b(a, b, c, d);
        }), Dh = pd(function(a, b) {
            var c = {};
            if (null == a) return c;
            var d = false;
            b = k(b, function(b) {
                return b = Dc(b, a), d || (d = 1 < b.length), b;
            }), Mc(a, rd(a), c), d && (c = qb(c, 7, md));
            for (var e = b.length; e--; ) wc(c, b[e]);
            return c;
        }), Eh = pd(function(a, b) {
            return null == a ? {} : cc(a, b);
        }), Fh = id(He), Gh = id(Ie), Hh = Vc(function(a, b, c) {
            return b = b.toLowerCase(), a + (c ? Le(b) : b);
        }), Ih = Vc(function(a, b, c) {
            return a + (c ? "-" : "") + b.toLowerCase();
        }), Jh = Vc(function(a, b, c) {
            return a + (c ? " " : "") + b.toLowerCase();
        }), Kh = Uc("toLowerCase"), Lh = Vc(function(a, b, c) {
            return a + (c ? "_" : "") + b.toLowerCase();
        }), Mh = Vc(function(a, b, c) {
            return a + (c ? " " : "") + Oh(b);
        }), Nh = Vc(function(a, b, c) {
            return a + (c ? " " : "") + b.toUpperCase();
        }), Oh = Uc("toUpperCase"), Ph = jc(function(a, b) {
            try {
                return c(a, P, b);
            } catch (a) {
                return oe(a) ? a : new Ye(a);
            }
        }), Qh = pd(function(a, b) {
            return e(b, function(b) {
                b = Nd(b), nb(a, b, Yg(a[b], a));
            }), a;
        }), Rh = Zc(), Sh = Zc(true), Th = jc(function(a, b) {
            return function(c) {
                return Kb(c, a, b);
            };
        }), Uh = jc(function(a, b) {
            return function(c) {
                return Kb(a, c, b);
            };
        }), Vh = bd(k), Wh = bd(g), Xh = bd(o), Yh = ed(), Zh = ed(true), $h = ad(function(a, b) {
            return a + b;
        }, 0), _h = hd("ceil"), ai = ad(function(a, b) {
            return a / b;
        }, 1), bi = hd("floor"), ci = ad(function(a, b) {
            return a * b;
        }, 1), di = hd("round"), ei = ad(function(a, b) {
            return a - b;
        }, 0);
        return Aa.after = function(a, b) {
            if (typeof b != "function") throw new cf("Expected a function");
            return a = Ae(a), function() {
                if (1 > --a) return b.apply(this, arguments);
            };
        }, Aa.ary = ee, Aa.assign = rh, Aa.assignIn = sh, Aa.assignInWith = th, Aa.assignWith = uh, 
        Aa.at = vh, Aa.before = fe, Aa.bind = Yg, Aa.bindAll = Qh, Aa.bindKey = Zg, Aa.castArray = function() {
            if (!arguments.length) return [];
            var a = arguments[0];
            return hh(a) ? a : [ a ];
        }, Aa.chain = $d, Aa.chunk = function(a, b, c) {
            if (b = (c ? Ed(a, b, c) : b === P) ? 1 : Lf(Ae(b), 0), c = null == a ? 0 : a.length, 
            !c || 1 > b) return [];
            for (var d = 0, e = 0, f = We(Ef(c / b)); d < c; ) f[e++] = oc(a, d, d += b);
            return f;
        }, Aa.compact = function(a) {
            for (var b = -1, c = null == a ? 0 : a.length, d = 0, e = []; ++b < c; ) {
                var f = a[b];
                f && (e[d++] = f);
            }
            return e;
        }, Aa.concat = function() {
            var a = arguments.length;
            if (!a) return [];
            for (var b = We(a - 1), c = arguments[0]; a--; ) b[a - 1] = arguments[a];
            return l(hh(c) ? Lc(c) : [ c ], yb(b, 1));
        }, Aa.cond = function(a) {
            var b = null == a ? 0 : a.length, d = ud();
            return a = b ? k(a, function(a) {
                if ("function" != typeof a[1]) throw new cf("Expected a function");
                return [ d(a[0]), a[1] ];
            }) : [], jc(function(d) {
                for (var e = -1; ++e < b; ) {
                    var f = a[e];
                    if (c(f[0], this, d)) return c(f[1], this, d);
                }
            });
        }, Aa.conforms = function(a) {
            return rb(qb(a, 1));
        }, Aa.constant = Oe, Aa.countBy = Pg, Aa.create = function(a, b) {
            var c = fg(a);
            return null == b ? c : lb(c, b);
        }, Aa.curry = ge, Aa.curryRight = he, Aa.debounce = ie, Aa.defaults = wh, Aa.defaultsDeep = xh, 
        Aa.defer = $g, Aa.delay = _g, Aa.difference = xg, Aa.differenceBy = yg, Aa.differenceWith = zg, 
        Aa.drop = function(a, b, c) {
            var d = null == a ? 0 : a.length;
            return d ? (b = c || b === P ? 1 : Ae(b), oc(a, 0 > b ? 0 : b, d)) : [];
        }, Aa.dropRight = function(a, b, c) {
            var d = null == a ? 0 : a.length;
            return d ? (b = c || b === P ? 1 : Ae(b), b = d - b, oc(a, 0, 0 > b ? 0 : b)) : [];
        }, Aa.dropRightWhile = function(a, b) {
            return a && a.length ? xc(a, ud(b, 3), true, true) : [];
        }, Aa.dropWhile = function(a, b) {
            return a && a.length ? xc(a, ud(b, 3), true) : [];
        }, Aa.fill = function(a, b, c, d) {
            var e = null == a ? 0 : a.length;
            if (!e) return [];
            for (c && typeof c != "number" && Ed(a, b, c) && (c = 0, d = e), e = a.length, c = Ae(c), 
            0 > c && (c = -c > e ? 0 : e + c), d = d === P || d > e ? e : Ae(d), 0 > d && (d += e), 
            d = c > d ? 0 : Be(d); c < d; ) a[c++] = b;
            return a;
        }, Aa.filter = function(a, b) {
            return (hh(a) ? h : xb)(a, ud(b, 3));
        }, Aa.flatMap = function(a, b) {
            return yb(de(a, b), 1);
        }, Aa.flatMapDeep = function(a, b) {
            return yb(de(a, b), Q);
        }, Aa.flatMapDepth = function(a, b, c) {
            return c = c === P ? 1 : Ae(c), yb(de(a, b), c);
        }, Aa.flatten = Td, Aa.flattenDeep = function(a) {
            return (null == a ? 0 : a.length) ? yb(a, Q) : [];
        }, Aa.flattenDepth = function(a, b) {
            return null != a && a.length ? (b = b === P ? 1 : Ae(b), yb(a, b)) : [];
        }, Aa.flip = function(a) {
            return jd(a, 512);
        }, Aa.flow = Rh, Aa.flowRight = Sh, Aa.fromPairs = function(a) {
            for (var b = -1, c = null == a ? 0 : a.length, d = {}; ++b < c; ) {
                var e = a[b];
                d[e[0]] = e[1];
            }
            return d;
        }, Aa.functions = function(a) {
            return null == a ? [] : Bb(a, He(a));
        }, Aa.functionsIn = function(a) {
            return null == a ? [] : Bb(a, Ie(a));
        }, Aa.groupBy = Sg, Aa.initial = function(a) {
            return (null == a ? 0 : a.length) ? oc(a, 0, -1) : [];
        }, Aa.intersection = Ag, Aa.intersectionBy = Bg, Aa.intersectionWith = Cg, Aa.invert = yh, 
        Aa.invertBy = zh, Aa.invokeMap = Tg, Aa.iteratee = Qe, Aa.keyBy = Ug, Aa.keys = He, 
        Aa.keysIn = Ie, Aa.map = de, Aa.mapKeys = function(a, b) {
            var c = {};
            return b = ud(b, 3), zb(a, function(a, d, e) {
                nb(c, b(a, d, e), a);
            }), c;
        }, Aa.mapValues = function(a, b) {
            var c = {};
            return b = ud(b, 3), zb(a, function(a, d, e) {
                nb(c, d, b(a, d, e));
            }), c;
        }, Aa.matches = function(a) {
            return Zb(qb(a, 1));
        }, Aa.matchesProperty = function(a, b) {
            return $b(a, qb(b, 1));
        }, Aa.memoize = je, Aa.merge = Bh, Aa.mergeWith = Ch, Aa.method = Th, Aa.methodOf = Uh, 
        Aa.mixin = Re, Aa.negate = ke, Aa.nthArg = function(a) {
            return a = Ae(a), jc(function(b) {
                return ac(b, a);
            });
        }, Aa.omit = Dh, Aa.omitBy = function(a, b) {
            return Je(a, ke(ud(b)));
        }, Aa.once = function(a) {
            return fe(2, a);
        }, Aa.orderBy = function(a, b, c, d) {
            return null == a ? [] : (hh(b) || (b = null == b ? [] : [ b ]), c = d ? P : c, hh(c) || (c = null == c ? [] : [ c ]), 
            bc(a, b, c));
        }, Aa.over = Vh, Aa.overArgs = ah, Aa.overEvery = Wh, Aa.overSome = Xh, Aa.partial = bh, 
        Aa.partialRight = ch, Aa.partition = Vg, Aa.pick = Eh, Aa.pickBy = Je, Aa.property = Te, 
        Aa.propertyOf = function(a) {
            return function(b) {
                return null == a ? P : Cb(a, b);
            };
        }, Aa.pull = Dg, Aa.pullAll = Wd, Aa.pullAllBy = function(a, b, c) {
            return a && a.length && b && b.length ? fc(a, b, ud(c, 2)) : a;
        }, Aa.pullAllWith = function(a, b, c) {
            return a && a.length && b && b.length ? fc(a, b, P, c) : a;
        }, Aa.pullAt = Eg, Aa.range = Yh, Aa.rangeRight = Zh, Aa.rearg = dh, Aa.reject = function(a, b) {
            return (hh(a) ? h : xb)(a, ke(ud(b, 3)));
        }, Aa.remove = function(a, b) {
            var c = [];
            if (!a || !a.length) return c;
            var d = -1, e = [], f = a.length;
            for (b = ud(b, 3); ++d < f; ) {
                var g = a[d];
                b(g, d, a) && (c.push(g), e.push(d));
            }
            return gc(a, e), c;
        }, Aa.rest = function(a, b) {
            if (typeof a != "function") throw new cf("Expected a function");
            return b = b === P ? b : Ae(b), jc(a, b);
        }, Aa.reverse = Xd, Aa.sampleSize = function(a, b, c) {
            return b = (c ? Ed(a, b, c) : b === P) ? 1 : Ae(b), (hh(a) ? fb : lc)(a, b);
        }, Aa.set = function(a, b, c) {
            return null == a ? a : mc(a, b, c);
        }, Aa.setWith = function(a, b, c, d) {
            return d = typeof d == "function" ? d : P, null == a ? a : mc(a, b, c, d);
        }, Aa.shuffle = function(a) {
            return (hh(a) ? gb : nc)(a);
        }, Aa.slice = function(a, b, c) {
            var d = null == a ? 0 : a.length;
            return d ? (c && typeof c != "number" && Ed(a, b, c) ? (b = 0, c = d) : (b = null == b ? 0 : Ae(b), 
            c = c === P ? d : Ae(c)), oc(a, b, c)) : [];
        }, Aa.sortBy = Wg, Aa.sortedUniq = function(a) {
            return a && a.length ? sc(a) : [];
        }, Aa.sortedUniqBy = function(a, b) {
            return a && a.length ? sc(a, ud(b, 2)) : [];
        }, Aa.split = function(a, b, c) {
            return c && typeof c != "number" && Ed(a, b, c) && (b = c = P), c = c === P ? 4294967295 : c >>> 0, 
            c ? (a = Ee(a)) && (typeof b == "string" || null != b && !mh(b)) && (b = uc(b), 
            !b && Ga.test(a)) ? Ec(O(a), 0, c) : a.split(b, c) : [];
        }, Aa.spread = function(a, b) {
            if (typeof a != "function") throw new cf("Expected a function");
            return b = null == b ? 0 : Lf(Ae(b), 0), jc(function(d) {
                var e = d[b];
                return d = Ec(d, 0, b), e && l(d, e), c(a, this, d);
            });
        }, Aa.tail = function(a) {
            var b = null == a ? 0 : a.length;
            return b ? oc(a, 1, b) : [];
        }, Aa.take = function(a, b, c) {
            return a && a.length ? (b = c || b === P ? 1 : Ae(b), oc(a, 0, 0 > b ? 0 : b)) : [];
        }, Aa.takeRight = function(a, b, c) {
            var d = null == a ? 0 : a.length;
            return d ? (b = c || b === P ? 1 : Ae(b), b = d - b, oc(a, 0 > b ? 0 : b, d)) : [];
        }, Aa.takeRightWhile = function(a, b) {
            return a && a.length ? xc(a, ud(b, 3), false, true) : [];
        }, Aa.takeWhile = function(a, b) {
            return a && a.length ? xc(a, ud(b, 3)) : [];
        }, Aa.tap = function(a, b) {
            return b(a), a;
        }, Aa.throttle = function(a, b, c) {
            var d = true, e = true;
            if (typeof a != "function") throw new cf("Expected a function");
            return se(c) && (d = "leading" in c ? !!c.leading : d, e = "trailing" in c ? !!c.trailing : e), 
            ie(a, b, {
                leading: d,
                maxWait: b,
                trailing: e
            });
        }, Aa.thru = _d, Aa.toArray = ye, Aa.toPairs = Fh, Aa.toPairsIn = Gh, Aa.toPath = function(a) {
            return hh(a) ? k(a, Nd) : xe(a) ? [ a ] : Lc(wg(Ee(a)));
        }, Aa.toPlainObject = De, Aa.transform = function(a, b, c) {
            var d = hh(a), f = d || jh(a) || oh(a);
            if (b = ud(b, 4), null == c) {
                var g = a && a.constructor;
                c = f ? d ? new g() : [] : se(a) && pe(g) ? fg(tf(a)) : {};
            }
            return (f ? e : zb)(a, function(a, d, e) {
                return b(c, a, d, e);
            }), c;
        }, Aa.unary = function(a) {
            return ee(a, 1);
        }, Aa.union = Fg, Aa.unionBy = Gg, Aa.unionWith = Hg, Aa.uniq = function(a) {
            return a && a.length ? vc(a) : [];
        }, Aa.uniqBy = function(a, b) {
            return a && a.length ? vc(a, ud(b, 2)) : [];
        }, Aa.uniqWith = function(a, b) {
            return b = typeof b == "function" ? b : P, a && a.length ? vc(a, P, b) : [];
        }, Aa.unset = function(a, b) {
            return null == a || wc(a, b);
        }, Aa.unzip = Yd, Aa.unzipWith = Zd, Aa.update = function(a, b, c) {
            return null == a ? a : mc(a, b, Cc(c)(Cb(a, b)), void 0);
        }, Aa.updateWith = function(a, b, c, d) {
            return d = typeof d == "function" ? d : P, null != a && (a = mc(a, b, Cc(c)(Cb(a, b)), d)), 
            a;
        }, Aa.values = Ke, Aa.valuesIn = function(a) {
            return null == a ? [] : D(a, Ie(a));
        }, Aa.without = Ig, Aa.words = Ne, Aa.wrap = function(a, b) {
            return bh(Cc(b), a);
        }, Aa.xor = Jg, Aa.xorBy = Kg, Aa.xorWith = Lg, Aa.zip = Mg, Aa.zipObject = function(a, b) {
            return Ac(a || [], b || [], ib);
        }, Aa.zipObjectDeep = function(a, b) {
            return Ac(a || [], b || [], mc);
        }, Aa.zipWith = Ng, Aa.entries = Fh, Aa.entriesIn = Gh, Aa.extend = sh, Aa.extendWith = th, 
        Re(Aa, Aa), Aa.add = $h, Aa.attempt = Ph, Aa.camelCase = Hh, Aa.capitalize = Le, 
        Aa.ceil = _h, Aa.clamp = function(a, b, c) {
            return c === P && (c = b, b = P), c !== P && (c = Ce(c), c = c === c ? c : 0), b !== P && (b = Ce(b), 
            b = b === b ? b : 0), pb(Ce(a), b, c);
        }, Aa.clone = function(a) {
            return qb(a, 4);
        }, Aa.cloneDeep = function(a) {
            return qb(a, 5);
        }, Aa.cloneDeepWith = function(a, b) {
            return b = typeof b == "function" ? b : P, qb(a, 5, b);
        }, Aa.cloneWith = function(a, b) {
            return b = typeof b == "function" ? b : P, qb(a, 4, b);
        }, Aa.conformsTo = function(a, b) {
            return null == b || sb(a, b, He(b));
        }, Aa.deburr = Me, Aa.defaultTo = function(a, b) {
            return null == a || a !== a ? b : a;
        }, Aa.divide = ai, Aa.endsWith = function(a, b, c) {
            a = Ee(a), b = uc(b);
            var d = a.length, d = c = c === P ? d : pb(Ae(c), 0, d);
            return c -= b.length, 0 <= c && a.slice(c, d) == b;
        }, Aa.eq = le, Aa.escape = function(a) {
            return (a = Ee(a)) && Z.test(a) ? a.replace(X, cb) : a;
        }, Aa.escapeRegExp = function(a) {
            return (a = Ee(a)) && ga.test(a) ? a.replace(fa, "\\$&") : a;
        }, Aa.every = function(a, b, c) {
            var d = hh(a) ? g : vb;
            return c && Ed(a, b, c) && (b = P), d(a, ud(b, 3));
        }, Aa.find = Qg, Aa.findIndex = Rd, Aa.findKey = function(a, b) {
            return p(a, ud(b, 3), zb);
        }, Aa.findLast = Rg, Aa.findLastIndex = Sd, Aa.findLastKey = function(a, b) {
            return p(a, ud(b, 3), Ab);
        }, Aa.floor = bi, Aa.forEach = be, Aa.forEachRight = ce, Aa.forIn = function(a, b) {
            return null == a ? a : ig(a, ud(b, 3), Ie);
        }, Aa.forInRight = function(a, b) {
            return null == a ? a : jg(a, ud(b, 3), Ie);
        }, Aa.forOwn = function(a, b) {
            return a && zb(a, ud(b, 3));
        }, Aa.forOwnRight = function(a, b) {
            return a && Ab(a, ud(b, 3));
        }, Aa.get = Fe, Aa.gt = eh, Aa.gte = fh, Aa.has = function(a, b) {
            return null != a && yd(a, b, Gb);
        }, Aa.hasIn = Ge, Aa.head = Ud, Aa.identity = Pe, Aa.includes = function(a, b, c, d) {
            return a = me(a) ? a : Ke(a), c = c && !d ? Ae(c) : 0, d = a.length, 0 > c && (c = Lf(d + c, 0)), 
            we(a) ? c <= d && -1 < a.indexOf(b, c) : !!d && -1 < r(a, b, c);
        }, Aa.indexOf = function(a, b, c) {
            var d = null == a ? 0 : a.length;
            return d ? (c = null == c ? 0 : Ae(c), 0 > c && (c = Lf(d + c, 0)), r(a, b, c)) : -1;
        }, Aa.inRange = function(a, b, c) {
            return b = ze(b), c === P ? (c = b, b = 0) : c = ze(c), a = Ce(a), a >= Mf(b, c) && a < Lf(b, c);
        }, Aa.invoke = Ah, Aa.isArguments = gh, Aa.isArray = hh, Aa.isArrayBuffer = ih, 
        Aa.isArrayLike = me, Aa.isArrayLikeObject = ne, Aa.isBoolean = function(a) {
            return true === a || false === a || te(a) && "[object Boolean]" == Eb(a);
        }, Aa.isBuffer = jh, Aa.isDate = kh, Aa.isElement = function(a) {
            return te(a) && 1 === a.nodeType && !ve(a);
        }, Aa.isEmpty = function(a) {
            if (null == a) return true;
            if (me(a) && (hh(a) || typeof a == "string" || typeof a.splice == "function" || jh(a) || oh(a) || gh(a))) return !a.length;
            var b = rg(a);
            if ("[object Map]" == b || "[object Set]" == b) return !a.size;
            if (Hd(a)) return !Wb(a).length;
            for (var c in a) if (hf.call(a, c)) return false;
            return true;
        }, Aa.isEqual = function(a, b) {
            return Ob(a, b);
        }, Aa.isEqualWith = function(a, b, c) {
            var d = (c = typeof c == "function" ? c : P) ? c(a, b) : P;
            return d === P ? Ob(a, b, P, c) : !!d;
        }, Aa.isError = oe, Aa.isFinite = function(a) {
            return typeof a == "number" && If(a);
        }, Aa.isFunction = pe, Aa.isInteger = qe, Aa.isLength = re, Aa.isMap = lh, Aa.isMatch = function(a, b) {
            return a === b || Qb(a, b, wd(b));
        }, Aa.isMatchWith = function(a, b, c) {
            return c = typeof c == "function" ? c : P, Qb(a, b, wd(b), c);
        }, Aa.isNaN = function(a) {
            return ue(a) && a != +a;
        }, Aa.isNative = function(a) {
            if (sg(a)) throw new Ye("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");
            return Rb(a);
        }, Aa.isNil = function(a) {
            return null == a;
        }, Aa.isNull = function(a) {
            return null === a;
        }, Aa.isNumber = ue, Aa.isObject = se, Aa.isObjectLike = te, Aa.isPlainObject = ve, 
        Aa.isRegExp = mh, Aa.isSafeInteger = function(a) {
            return qe(a) && -9007199254740991 <= a && 9007199254740991 >= a;
        }, Aa.isSet = nh, Aa.isString = we, Aa.isSymbol = xe, Aa.isTypedArray = oh, Aa.isUndefined = function(a) {
            return a === P;
        }, Aa.isWeakMap = function(a) {
            return te(a) && "[object WeakMap]" == rg(a);
        }, Aa.isWeakSet = function(a) {
            return te(a) && "[object WeakSet]" == Eb(a);
        }, Aa.join = function(a, b) {
            return null == a ? "" : Jf.call(a, b);
        }, Aa.kebabCase = Ih, Aa.last = Vd, Aa.lastIndexOf = function(a, b, c) {
            var d = null == a ? 0 : a.length;
            if (!d) return -1;
            var e = d;
            if (c !== P && (e = Ae(c), e = 0 > e ? Lf(d + e, 0) : Mf(e, d - 1)), b === b) {
                for (c = e + 1; c-- && a[c] !== b; ) ;
                a = c;
            } else a = q(a, t, e, true);
            return a;
        }, Aa.lowerCase = Jh, Aa.lowerFirst = Kh, Aa.lt = ph, Aa.lte = qh, Aa.max = function(a) {
            return a && a.length ? wb(a, Pe, Fb) : P;
        }, Aa.maxBy = function(a, b) {
            return a && a.length ? wb(a, ud(b, 2), Fb) : P;
        }, Aa.mean = function(a) {
            return u(a, Pe);
        }, Aa.meanBy = function(a, b) {
            return u(a, ud(b, 2));
        }, Aa.min = function(a) {
            return a && a.length ? wb(a, Pe, Xb) : P;
        }, Aa.minBy = function(a, b) {
            return a && a.length ? wb(a, ud(b, 2), Xb) : P;
        }, Aa.stubArray = Ue, Aa.stubFalse = Ve, Aa.stubObject = function() {
            return {};
        }, Aa.stubString = function() {
            return "";
        }, Aa.stubTrue = function() {
            return true;
        }, Aa.multiply = ci, Aa.nth = function(a, b) {
            return a && a.length ? ac(a, Ae(b)) : P;
        }, Aa.noConflict = function() {
            return Ra._ === this && (Ra._ = nf), this;
        }, Aa.noop = Se, Aa.now = Xg, Aa.pad = function(a, b, c) {
            a = Ee(a);
            var d = (b = Ae(b)) ? N(a) : 0;
            return !b || d >= b ? a : (b = (b - d) / 2, cd(Ff(b), c) + a + cd(Ef(b), c));
        }, Aa.padEnd = function(a, b, c) {
            a = Ee(a);
            var d = (b = Ae(b)) ? N(a) : 0;
            return b && d < b ? a + cd(b - d, c) : a;
        }, Aa.padStart = function(a, b, c) {
            a = Ee(a);
            var d = (b = Ae(b)) ? N(a) : 0;
            return b && d < b ? cd(b - d, c) + a : a;
        }, Aa.parseInt = function(a, b, c) {
            return c || null == b ? b = 0 : b && (b = +b), Of(Ee(a).replace(ia, ""), b || 0);
        }, Aa.random = function(a, b, c) {
            if (c && typeof c != "boolean" && Ed(a, b, c) && (b = c = P), c === P && (typeof b == "boolean" ? (c = b, 
            b = P) : typeof a == "boolean" && (c = a, a = P)), a === P && b === P ? (a = 0, 
            b = 1) : (a = ze(a), b === P ? (b = a, a = 0) : b = ze(b)), a > b) {
                var d = a;
                a = b, b = d;
            }
            return c || a % 1 || b % 1 ? (c = Pf(), Mf(a + c * (b - a + Na("1e-" + ((c + "").length - 1))), b)) : hc(a, b);
        }, Aa.reduce = function(a, b, c) {
            var d = hh(a) ? m : x, e = 3 > arguments.length;
            return d(a, ud(b, 4), c, e, gg);
        }, Aa.reduceRight = function(a, b, c) {
            var d = hh(a) ? n : x, e = 3 > arguments.length;
            return d(a, ud(b, 4), c, e, hg);
        }, Aa.repeat = function(a, b, c) {
            return b = (c ? Ed(a, b, c) : b === P) ? 1 : Ae(b), ic(Ee(a), b);
        }, Aa.replace = function() {
            var a = arguments, b = Ee(a[0]);
            return 3 > a.length ? b : b.replace(a[1], a[2]);
        }, Aa.result = function(a, b, c) {
            b = Dc(b, a);
            var d = -1, e = b.length;
            for (e || (e = 1, a = P); ++d < e; ) {
                var f = null == a ? P : a[Nd(b[d])];
                f === P && (d = e, f = c), a = pe(f) ? f.call(a) : f;
            }
            return a;
        }, Aa.round = di, Aa.runInContext = w, Aa.sample = function(a) {
            return (hh(a) ? ab : kc)(a);
        }, Aa.size = function(a) {
            if (null == a) return 0;
            if (me(a)) return we(a) ? N(a) : a.length;
            var b = rg(a);
            return "[object Map]" == b || "[object Set]" == b ? a.size : Wb(a).length;
        }, Aa.snakeCase = Lh, Aa.some = function(a, b, c) {
            var d = hh(a) ? o : pc;
            return c && Ed(a, b, c) && (b = P), d(a, ud(b, 3));
        }, Aa.sortedIndex = function(a, b) {
            return qc(a, b);
        }, Aa.sortedIndexBy = function(a, b, c) {
            return rc(a, b, ud(c, 2));
        }, Aa.sortedIndexOf = function(a, b) {
            var c = null == a ? 0 : a.length;
            if (c) {
                var d = qc(a, b);
                if (d < c && le(a[d], b)) return d;
            }
            return -1;
        }, Aa.sortedLastIndex = function(a, b) {
            return qc(a, b, true);
        }, Aa.sortedLastIndexBy = function(a, b, c) {
            return rc(a, b, ud(c, 2), true);
        }, Aa.sortedLastIndexOf = function(a, b) {
            if (null == a ? 0 : a.length) {
                var c = qc(a, b, true) - 1;
                if (le(a[c], b)) return c;
            }
            return -1;
        }, Aa.startCase = Mh, Aa.startsWith = function(a, b, c) {
            return a = Ee(a), c = null == c ? 0 : pb(Ae(c), 0, a.length), b = uc(b), a.slice(c, c + b.length) == b;
        }, Aa.subtract = ei, Aa.sum = function(a) {
            return a && a.length ? z(a, Pe) : 0;
        }, Aa.sumBy = function(a, b) {
            return a && a.length ? z(a, ud(b, 2)) : 0;
        }, Aa.template = function(a, b, c) {
            var d = Aa.templateSettings;
            c && Ed(a, b, c) && (b = P), a = Ee(a), b = th({}, b, d, kd), c = th({}, b.imports, d.imports, kd);
            var e, f, g = He(c), h = D(c, g), i = 0;
            c = b.interpolate || xa;
            var j = "__p+='";
            c = af((b.escape || xa).source + "|" + c.source + "|" + (c === aa ? pa : xa).source + "|" + (b.evaluate || xa).source + "|$", "g");
            var k = "sourceURL" in b ? "//# sourceURL=" + b.sourceURL + "\n" : "";
            if (a.replace(c, function(b, c, d, g, h, k) {
                return d || (d = g), j += a.slice(i, k).replace(ya, H), c && (e = true, j += "'+__e(" + c + ")+'"), 
                h && (f = true, j += "';" + h + ";\n__p+='"), d && (j += "'+((__t=(" + d + "))==null?'':__t)+'"), 
                i = k + b.length, b;
            }), j += "';", (b = b.variable) || (j = "with(obj){" + j + "}"), j = (f ? j.replace(T, "") : j).replace(U, "$1").replace(V, "$1;"), 
            j = "function(" + (b || "obj") + "){" + (b ? "" : "obj||(obj={});") + "var __t,__p=''" + (e ? ",__e=_.escape" : "") + (f ? ",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}" : ";") + j + "return __p}", 
            b = Ph(function() {
                return Ze(g, k + "return " + j).apply(P, h);
            }), b.source = j, oe(b)) throw b;
            return b;
        }, Aa.times = function(a, b) {
            if (a = Ae(a), 1 > a || 9007199254740991 < a) return [];
            var c = 4294967295, d = Mf(a, 4294967295);
            for (b = ud(b), a -= 4294967295, d = A(d, b); ++c < a; ) b(c);
            return d;
        }, Aa.toFinite = ze, Aa.toInteger = Ae, Aa.toLength = Be, Aa.toLower = function(a) {
            return Ee(a).toLowerCase();
        }, Aa.toNumber = Ce, Aa.toSafeInteger = function(a) {
            return a ? pb(Ae(a), -9007199254740991, 9007199254740991) : 0 === a ? a : 0;
        }, Aa.toString = Ee, Aa.toUpper = function(a) {
            return Ee(a).toUpperCase();
        }, Aa.trim = function(a, b, c) {
            return (a = Ee(a)) && (c || b === P) ? a.replace(ha, "") : a && (b = uc(b)) ? (a = O(a), 
            c = O(b), b = F(a, c), c = G(a, c) + 1, Ec(a, b, c).join("")) : a;
        }, Aa.trimEnd = function(a, b, c) {
            return (a = Ee(a)) && (c || b === P) ? a.replace(ja, "") : a && (b = uc(b)) ? (a = O(a), 
            b = G(a, O(b)) + 1, Ec(a, 0, b).join("")) : a;
        }, Aa.trimStart = function(a, b, c) {
            return (a = Ee(a)) && (c || b === P) ? a.replace(ia, "") : a && (b = uc(b)) ? (a = O(a), 
            b = F(a, O(b)), Ec(a, b).join("")) : a;
        }, Aa.truncate = function(a, b) {
            var c = 30, d = "...";
            if (se(b)) var e = "separator" in b ? b.separator : e, c = "length" in b ? Ae(b.length) : c, d = "omission" in b ? uc(b.omission) : d;
            a = Ee(a);
            var f = a.length;
            if (Ga.test(a)) var g = O(a), f = g.length;
            if (c >= f) return a;
            if (f = c - N(d), 1 > f) return d;
            if (c = g ? Ec(g, 0, f).join("") : a.slice(0, f), e === P) return c + d;
            if (g && (f += c.length - f), mh(e)) {
                if (a.slice(f).search(e)) {
                    var h = c;
                    for (e.global || (e = af(e.source, Ee(qa.exec(e)) + "g")), e.lastIndex = 0; g = e.exec(h); ) var i = g.index;
                    c = c.slice(0, i === P ? f : i);
                }
            } else a.indexOf(uc(e), f) != f && (e = c.lastIndexOf(e), -1 < e && (c = c.slice(0, e)));
            return c + d;
        }, Aa.unescape = function(a) {
            return (a = Ee(a)) && Y.test(a) ? a.replace(W, db) : a;
        }, Aa.uniqueId = function(a) {
            var b = ++jf;
            return Ee(a) + b;
        }, Aa.upperCase = Nh, Aa.upperFirst = Oh, Aa.each = be, Aa.eachRight = ce, Aa.first = Ud, 
        Re(Aa, function() {
            var a = {};
            return zb(Aa, function(b, c) {
                hf.call(Aa.prototype, c) || (a[c] = b);
            }), a;
        }(), {
            chain: false
        }), Aa.VERSION = "4.17.4", e("bind bindKey curry curryRight partial partialRight".split(" "), function(a) {
            Aa[a].placeholder = Aa;
        }), e([ "drop", "take" ], function(a, b) {
            La.prototype[a] = function(c) {
                c = c === P ? 1 : Lf(Ae(c), 0);
                var d = this.__filtered__ && !b ? new La(this) : this.clone();
                return d.__filtered__ ? d.__takeCount__ = Mf(c, d.__takeCount__) : d.__views__.push({
                    size: Mf(c, 4294967295),
                    type: a + (0 > d.__dir__ ? "Right" : "")
                }), d;
            }, La.prototype[a + "Right"] = function(b) {
                return this.reverse()[a](b).reverse();
            };
        }), e([ "filter", "map", "takeWhile" ], function(a, b) {
            var c = b + 1, d = 1 == c || 3 == c;
            La.prototype[a] = function(a) {
                var b = this.clone();
                return b.__iteratees__.push({
                    iteratee: ud(a, 3),
                    type: c
                }), b.__filtered__ = b.__filtered__ || d, b;
            };
        }), e([ "head", "last" ], function(a, b) {
            var c = "take" + (b ? "Right" : "");
            La.prototype[a] = function() {
                return this[c](1).value()[0];
            };
        }), e([ "initial", "tail" ], function(a, b) {
            var c = "drop" + (b ? "" : "Right");
            La.prototype[a] = function() {
                return this.__filtered__ ? new La(this) : this[c](1);
            };
        }), La.prototype.compact = function() {
            return this.filter(Pe);
        }, La.prototype.find = function(a) {
            return this.filter(a).head();
        }, La.prototype.findLast = function(a) {
            return this.reverse().find(a);
        }, La.prototype.invokeMap = jc(function(a, b) {
            return typeof a == "function" ? new La(this) : this.map(function(c) {
                return Kb(c, a, b);
            });
        }), La.prototype.reject = function(a) {
            return this.filter(ke(ud(a)));
        }, La.prototype.slice = function(a, b) {
            a = Ae(a);
            var c = this;
            return c.__filtered__ && (0 < a || 0 > b) ? new La(c) : (0 > a ? c = c.takeRight(-a) : a && (c = c.drop(a)), 
            b !== P && (b = Ae(b), c = 0 > b ? c.dropRight(-b) : c.take(b - a)), c);
        }, La.prototype.takeRightWhile = function(a) {
            return this.reverse().takeWhile(a).reverse();
        }, La.prototype.toArray = function() {
            return this.take(4294967295);
        }, zb(La.prototype, function(a, b) {
            var c = /^(?:filter|find|map|reject)|While$/.test(b), d = /^(?:head|last)$/.test(b), e = Aa[d ? "take" + ("last" == b ? "Right" : "") : b], f = d || /^find/.test(b);
            e && (Aa.prototype[b] = function() {
                function b(a) {
                    return a = e.apply(Aa, l([ a ], h)), d && m ? a[0] : a;
                }
                var g = this.__wrapped__, h = d ? [ 1 ] : arguments, i = g instanceof La, j = h[0], k = i || hh(g);
                k && c && typeof j == "function" && 1 != j.length && (i = k = false);
                var m = this.__chain__, n = !!this.__actions__.length, j = f && !m, i = i && !n;
                return !f && k ? (g = i ? g : new La(this), g = a.apply(g, h), g.__actions__.push({
                    func: _d,
                    args: [ b ],
                    thisArg: P
                }), new Ea(g, m)) : j && i ? a.apply(this, h) : (g = this.thru(b), j ? d ? g.value()[0] : g.value() : g);
            });
        }), e("pop push shift sort splice unshift".split(" "), function(a) {
            var b = df[a], c = /^(?:push|sort|unshift)$/.test(a) ? "tap" : "thru", d = /^(?:pop|shift)$/.test(a);
            Aa.prototype[a] = function() {
                var a = arguments;
                if (d && !this.__chain__) {
                    var e = this.value();
                    return b.apply(hh(e) ? e : [], a);
                }
                return this[c](function(c) {
                    return b.apply(hh(c) ? c : [], a);
                });
            };
        }), zb(La.prototype, function(a, b) {
            var c = Aa[b];
            if (c) {
                var d = c.name + "";
                (Yf[d] || (Yf[d] = [])).push({
                    name: b,
                    func: c
                });
            }
        }), Yf[$c(P, 2).name] = [ {
            name: "wrapper",
            func: P
        } ], La.prototype.clone = function() {
            var a = new La(this.__wrapped__);
            return a.__actions__ = Lc(this.__actions__), a.__dir__ = this.__dir__, a.__filtered__ = this.__filtered__, 
            a.__iteratees__ = Lc(this.__iteratees__), a.__takeCount__ = this.__takeCount__, 
            a.__views__ = Lc(this.__views__), a;
        }, La.prototype.reverse = function() {
            if (this.__filtered__) {
                var a = new La(this);
                a.__dir__ = -1, a.__filtered__ = true;
            } else a = this.clone(), a.__dir__ *= -1;
            return a;
        }, La.prototype.value = function() {
            var a, b = this.__wrapped__.value(), c = this.__dir__, d = hh(b), e = 0 > c, f = d ? b.length : 0;
            a = f;
            for (var g = this.__views__, h = 0, i = -1, j = g.length; ++i < j; ) {
                var k = g[i], l = k.size;
                switch (k.type) {
                  case "drop":
                    h += l;
                    break;

                  case "dropRight":
                    a -= l;
                    break;

                  case "take":
                    a = Mf(a, h + l);
                    break;

                  case "takeRight":
                    h = Lf(h, a - l);
                }
            }
            if (a = {
                start: h,
                end: a
            }, g = a.start, h = a.end, a = h - g, g = e ? h : g - 1, h = this.__iteratees__, 
            i = h.length, j = 0, k = Mf(a, this.__takeCount__), !d || !e && f == a && k == a) return yc(b, this.__actions__);
            d = [];
            a: for (;a-- && j < k; ) {
                for (g += c, e = -1, f = b[g]; ++e < i; ) {
                    var m = h[e], l = m.type, m = (0, m.iteratee)(f);
                    if (2 == l) f = m; else if (!m) {
                        if (1 == l) continue a;
                        break a;
                    }
                }
                d[j++] = f;
            }
            return d;
        }, Aa.prototype.at = Og, Aa.prototype.chain = function() {
            return $d(this);
        }, Aa.prototype.commit = function() {
            return new Ea(this.value(), this.__chain__);
        }, Aa.prototype.next = function() {
            this.__values__ === P && (this.__values__ = ye(this.value()));
            var a = this.__index__ >= this.__values__.length;
            return {
                done: a,
                value: a ? P : this.__values__[this.__index__++]
            };
        }, Aa.prototype.plant = function(a) {
            for (var b, c = this; c instanceof Ba; ) {
                var d = Qd(c);
                d.__index__ = 0, d.__values__ = P, b ? e.__wrapped__ = d : b = d;
                var e = d, c = c.__wrapped__;
            }
            return e.__wrapped__ = a, b;
        }, Aa.prototype.reverse = function() {
            var a = this.__wrapped__;
            return a instanceof La ? (this.__actions__.length && (a = new La(this)), a = a.reverse(), 
            a.__actions__.push({
                func: _d,
                args: [ Xd ],
                thisArg: P
            }), new Ea(a, this.__chain__)) : this.thru(Xd);
        }, Aa.prototype.toJSON = Aa.prototype.valueOf = Aa.prototype.value = function() {
            return yc(this.__wrapped__, this.__actions__);
        }, Aa.prototype.first = Aa.prototype.head, yf && (Aa.prototype[yf] = ae), Aa;
    }();
    typeof define == "function" && typeof define.amd == "object" && define.amd ? (Ra._ = eb, 
    define(function() {
        return eb;
    })) : Ta ? ((Ta.exports = eb)._ = eb, Sa._ = eb) : Ra._ = eb;
}).call(this);

!function a(b, c, d) {
    function e(g, h) {
        if (!c[g]) {
            if (!b[g]) {
                var i = "function" == typeof require && require;
                if (!h && i) return i(g, !0);
                if (f) return f(g, !0);
                var j = new Error("Cannot find module '" + g + "'");
                throw j.code = "MODULE_NOT_FOUND", j;
            }
            var k = c[g] = {
                exports: {}
            };
            b[g][0].call(k.exports, function(a) {
                var c = b[g][1][a];
                return e(c ? c : a);
            }, k, k.exports, a, b, c, d);
        }
        return c[g].exports;
    }
    for (var f = "function" == typeof require && require, g = 0; g < d.length; g++) e(d[g]);
    return e;
}({
    1: [ function(a, b, c) {
        angular.module("nemLogging", []), angular.module("nemLogging").provider("nemDebug", function() {
            var b = null;
            return b = a("debug"), this.$get = function() {
                return b;
            }, this.debug = b, this;
        });
        var d = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, e = [].slice;
        angular.module("nemLogging").provider("nemSimpleLogger", [ "nemDebugProvider", function(a) {
            var b, c, f, g, h, i, j, k, l, m, n, o;
            for (n = a.debug, f = {}, g = [ "debug", "info", "warn", "error", "log" ], b = {}, 
            l = k = 0, m = g.length; m > k; l = ++k) o = g[l], b[o] = l;
            return i = function(a, b, c) {
                return a >= b ? c() : void 0;
            }, h = function(a) {
                var b, c, d;
                if (b = !1, !a) return b;
                for (c = 0, d = g.length; d > c && (o = g[c], b = null != a[o] && "function" == typeof a[o], 
                b); c++) ;
                return b;
            }, j = function(a, b) {
                var c, d, e, h;
                for (null == f[a] && (f[a] = n(a)), c = f[a], h = {}, d = 0, e = g.length; e > d; d++) o = g[d], 
                h[o] = "debug" === o ? c : b[o];
                return h;
            }, c = function() {
                function a(a) {
                    var c, f, j, k, l;
                    if (this.$log = a, this.spawn = d(this.spawn, this), !this.$log) throw "internalLogger undefined";
                    if (!h(this.$log)) throw "@$log is invalid";
                    for (this.doLog = !0, l = {}, c = function(a) {
                        return function(c) {
                            return l[c] = function() {
                                var d;
                                return d = 1 <= arguments.length ? e.call(arguments, 0) : [], a.doLog ? i(b[c], a.currentLevel, function() {
                                    var b;
                                    return (b = a.$log)[c].apply(b, d);
                                }) : void 0;
                            }, a[c] = l[c];
                        };
                    }(this), f = 0, j = g.length; j > f; f++) k = g[f], c(k);
                    this.LEVELS = b, this.currentLevel = b.error;
                }
                return a.prototype.spawn = function(b) {
                    if ("string" == typeof b) {
                        if (!h(this.$log)) throw "@$log is invalid";
                        if (!n) throw "nemDebug is undefined this is probably the light version of this library sep debug logggers is not supported!";
                        return j(b, this.$log);
                    }
                    return new a(b || this.$log);
                }, a;
            }(), this.decorator = [ "$log", function(a) {
                var d;
                return d = new c(a), d.currentLevel = b.debug, d;
            } ], this.$get = [ "$log", function(a) {
                return new c(a);
            } ], this;
        } ]);
    }, {
        debug: 2
    } ],
    2: [ function(a, b, c) {
        function d() {
            return "WebkitAppearance" in document.documentElement.style || window.console && (console.firebug || console.exception && console.table) || navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31;
        }
        function e() {
            var a = arguments, b = this.useColors;
            if (a[0] = (b ? "%c" : "") + this.namespace + (b ? " %c" : " ") + a[0] + (b ? "%c " : " ") + "+" + c.humanize(this.diff), 
            !b) return a;
            var d = "color: " + this.color;
            a = [ a[0], d, "color: inherit" ].concat(Array.prototype.slice.call(a, 1));
            var e = 0, f = 0;
            return a[0].replace(/%[a-z%]/g, function(a) {
                "%%" !== a && (e++, "%c" === a && (f = e));
            }), a.splice(f, 0, d), a;
        }
        function f() {
            return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
        }
        function g(a) {
            try {
                null == a ? c.storage.removeItem("debug") : c.storage.debug = a;
            } catch (a) {}
        }
        function h() {
            var a;
            try {
                a = c.storage.debug;
            } catch (a) {}
            return a;
        }
        function i() {
            try {
                return window.localStorage;
            } catch (a) {}
        }
        c = b.exports = a("./debug"), c.log = f, c.formatArgs = e, c.save = g, c.load = h, 
        c.useColors = d, c.storage = "undefined" != typeof chrome && "undefined" != typeof chrome.storage ? chrome.storage.local : i(), 
        c.colors = [ "lightseagreen", "forestgreen", "goldenrod", "dodgerblue", "darkorchid", "crimson" ], 
        c.formatters.j = function(a) {
            return JSON.stringify(a);
        }, c.enable(h());
    }, {
        "./debug": 3
    } ],
    3: [ function(a, b, c) {
        function d() {
            return c.colors[k++ % c.colors.length];
        }
        function e(a) {
            function b() {}
            function e() {
                var a = e, b = +new Date(), f = b - (j || b);
                a.diff = f, a.prev = j, a.curr = b, j = b, null == a.useColors && (a.useColors = c.useColors()), 
                null == a.color && a.useColors && (a.color = d());
                var g = Array.prototype.slice.call(arguments);
                g[0] = c.coerce(g[0]), "string" != typeof g[0] && (g = [ "%o" ].concat(g));
                var h = 0;
                g[0] = g[0].replace(/%([a-z%])/g, function(b, d) {
                    if ("%%" === b) return b;
                    h++;
                    var e = c.formatters[d];
                    if ("function" == typeof e) {
                        var f = g[h];
                        b = e.call(a, f), g.splice(h, 1), h--;
                    }
                    return b;
                }), "function" == typeof c.formatArgs && (g = c.formatArgs.apply(a, g));
                var i = e.log || c.log || console.log.bind(console);
                i.apply(a, g);
            }
            b.enabled = !1, e.enabled = !0;
            var f = c.enabled(a) ? e : b;
            return f.namespace = a, f;
        }
        function f(a) {
            c.save(a);
            for (var b = (a || "").split(/[\s,]+/), d = b.length, e = 0; d > e; e++) b[e] && (a = b[e].replace(/\*/g, ".*?"), 
            "-" === a[0] ? c.skips.push(new RegExp("^" + a.substr(1) + "$")) : c.names.push(new RegExp("^" + a + "$")));
        }
        function g() {
            c.enable("");
        }
        function h(a) {
            var b, d;
            for (b = 0, d = c.skips.length; d > b; b++) if (c.skips[b].test(a)) return !1;
            for (b = 0, d = c.names.length; d > b; b++) if (c.names[b].test(a)) return !0;
            return !1;
        }
        function i(a) {
            return a instanceof Error ? a.stack || a.message : a;
        }
        c = b.exports = e, c.coerce = i, c.disable = g, c.enable = f, c.enabled = h, c.humanize = a("ms"), 
        c.names = [], c.skips = [], c.formatters = {};
        var j, k = 0;
    }, {
        ms: 4
    } ],
    4: [ function(a, b, c) {
        function d(a) {
            if (a = "" + a, !(a.length > 1e4)) {
                var b = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(a);
                if (b) {
                    var c = parseFloat(b[1]), d = (b[2] || "ms").toLowerCase();
                    switch (d) {
                      case "years":
                      case "year":
                      case "yrs":
                      case "yr":
                      case "y":
                        return c * l;

                      case "days":
                      case "day":
                      case "d":
                        return c * k;

                      case "hours":
                      case "hour":
                      case "hrs":
                      case "hr":
                      case "h":
                        return c * j;

                      case "minutes":
                      case "minute":
                      case "mins":
                      case "min":
                      case "m":
                        return c * i;

                      case "seconds":
                      case "second":
                      case "secs":
                      case "sec":
                      case "s":
                        return c * h;

                      case "milliseconds":
                      case "millisecond":
                      case "msecs":
                      case "msec":
                      case "ms":
                        return c;
                    }
                }
            }
        }
        function e(a) {
            return a >= k ? Math.round(a / k) + "d" : a >= j ? Math.round(a / j) + "h" : a >= i ? Math.round(a / i) + "m" : a >= h ? Math.round(a / h) + "s" : a + "ms";
        }
        function f(a) {
            return g(a, k, "day") || g(a, j, "hour") || g(a, i, "minute") || g(a, h, "second") || a + " ms";
        }
        function g(a, b, c) {
            return b > a ? void 0 : 1.5 * b > a ? Math.floor(a / b) + " " + c : Math.ceil(a / b) + " " + c + "s";
        }
        var h = 1e3, i = 60 * h, j = 60 * i, k = 24 * j, l = 365.25 * k;
        b.exports = function(a, b) {
            return b = b || {}, "string" == typeof a ? d(a) : b["long"] ? f(a) : e(a);
        };
    }, {} ]
}, {}, [ 1 ]);

(function(a, b, c, d) {
    "use strict";
    (function() {
        b.module("uiGmapgoogle-maps.providers", [ "nemLogging" ]);
        b.module("uiGmapgoogle-maps.wrapped", []);
        b.module("uiGmapgoogle-maps.extensions", [ "uiGmapgoogle-maps.wrapped", "uiGmapgoogle-maps.providers" ]);
        b.module("uiGmapgoogle-maps.directives.api.utils", [ "uiGmapgoogle-maps.extensions" ]);
        b.module("uiGmapgoogle-maps.directives.api.managers", []);
        b.module("uiGmapgoogle-maps.directives.api.options", [ "uiGmapgoogle-maps.directives.api.utils" ]);
        b.module("uiGmapgoogle-maps.directives.api.options.builders", []);
        b.module("uiGmapgoogle-maps.directives.api.models.child", [ "uiGmapgoogle-maps.directives.api.utils", "uiGmapgoogle-maps.directives.api.options", "uiGmapgoogle-maps.directives.api.options.builders" ]);
        b.module("uiGmapgoogle-maps.directives.api.models.parent", [ "uiGmapgoogle-maps.directives.api.managers", "uiGmapgoogle-maps.directives.api.models.child", "uiGmapgoogle-maps.providers" ]);
        b.module("uiGmapgoogle-maps.directives.api", [ "uiGmapgoogle-maps.directives.api.models.parent" ]);
        b.module("uiGmapgoogle-maps", [ "uiGmapgoogle-maps.directives.api", "uiGmapgoogle-maps.providers" ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.providers").factory("uiGmapMapScriptLoader", [ "$q", "uiGmapuuid", function(d, e) {
            var f, g, h, i, j;
            i = void 0;
            j = void 0;
            f = function(a) {
                if (a.china) {
                    return "http://maps.google.cn/maps/api/js?";
                } else {
                    if (a.transport === "auto") {
                        return "//maps.googleapis.com/maps/api/js?";
                    } else {
                        return a.transport + "://maps.googleapis.com/maps/api/js?";
                    }
                }
            };
            g = function(a) {
                var b, d, g, h;
                b = [ "transport", "isGoogleMapsForWork", "china", "preventLoad" ];
                if (a.isGoogleMapsForWork) {
                    b.push("key");
                }
                d = c.map(c.omit(a, b), function(a, b) {
                    return b + "=" + a;
                });
                if (i) {
                    h = document.getElementById(i);
                    h.parentNode.removeChild(h);
                }
                d = d.join("&");
                g = document.createElement("script");
                g.id = i = "ui_gmap_map_load_" + e.generate();
                g.type = "text/javascript";
                g.src = f(a) + d;
                return document.head.appendChild(g);
            };
            h = function() {
                return b.isDefined(a.google) && b.isDefined(a.google.maps);
            };
            return {
                load: function(b) {
                    var c, e;
                    c = d.defer();
                    if (h()) {
                        c.resolve(a.google.maps);
                        return c.promise;
                    }
                    e = b.callback = "onGoogleMapsReady" + Math.round(Math.random() * 1e3);
                    a[e] = function() {
                        a[e] = null;
                        c.resolve(a.google.maps);
                    };
                    if (a.navigator.connection && a.Connection && a.navigator.connection.type === a.Connection.NONE && !b.preventLoad) {
                        document.addEventListener("online", function() {
                            if (!h()) {
                                return g(b);
                            }
                        });
                    } else if (!b.preventLoad) {
                        g(b);
                    }
                    j = b;
                    j.randomizedFunctionName = e;
                    return c.promise;
                },
                manualLoad: function() {
                    var b;
                    b = j;
                    if (!h()) {
                        return g(b);
                    } else {
                        if (a[b.randomizedFunctionName]) {
                            return a[b.randomizedFunctionName]();
                        }
                    }
                }
            };
        } ]).provider("uiGmapGoogleMapApi", function() {
            this.options = {
                transport: "https",
                isGoogleMapsForWork: false,
                china: false,
                v: "3",
                libraries: "",
                language: "en",
                preventLoad: false
            };
            this.configure = function(a) {
                b.extend(this.options, a);
            };
            this.$get = [ "uiGmapMapScriptLoader", function(a) {
                return function(b) {
                    return b.load(a.options);
                };
            }(this) ];
            return this;
        }).service("uiGmapGoogleMapApiManualLoader", [ "uiGmapMapScriptLoader", function(a) {
            return {
                load: function() {
                    a.manualLoad();
                }
            };
        } ]);
    }).call(this);
    (function() {
        var d = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, e = function(a, b) {
            for (var c in b) {
                if (f.call(b, c)) a[c] = b[c];
            }
            function d() {
                this.constructor = a;
            }
            d.prototype = b.prototype;
            a.prototype = new d();
            a.__super__ = b.prototype;
            return a;
        }, f = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.extensions").service("uiGmapExtendGWin", function() {
            return {
                init: c.once(function() {
                    var b;
                    if (!(google || (typeof google !== "undefined" && google !== null ? google.maps : void 0) || google.maps.InfoWindow != null)) {
                        return;
                    }
                    google.maps.InfoWindow.prototype._open = google.maps.InfoWindow.prototype.open;
                    google.maps.InfoWindow.prototype._close = google.maps.InfoWindow.prototype.close;
                    google.maps.InfoWindow.prototype._isOpen = false;
                    google.maps.InfoWindow.prototype.open = function(a, b, c) {
                        if (c != null) {
                            return;
                        }
                        this._isOpen = true;
                        this._open(a, b, true);
                    };
                    google.maps.InfoWindow.prototype.close = function(a) {
                        if (a != null) {
                            return;
                        }
                        this._isOpen = false;
                        this._close(true);
                    };
                    google.maps.InfoWindow.prototype.isOpen = function(a) {
                        if (a == null) {
                            a = void 0;
                        }
                        if (a == null) {
                            return this._isOpen;
                        } else {
                            return this._isOpen = a;
                        }
                    };
                    if (a.InfoBox) {
                        a.InfoBox.prototype._open = a.InfoBox.prototype.open;
                        a.InfoBox.prototype._close = a.InfoBox.prototype.close;
                        a.InfoBox.prototype._isOpen = false;
                        a.InfoBox.prototype.open = function(a, b) {
                            this._isOpen = true;
                            this._open(a, b);
                        };
                        a.InfoBox.prototype.close = function() {
                            this._isOpen = false;
                            this._close();
                        };
                        a.InfoBox.prototype.isOpen = function(a) {
                            if (a == null) {
                                a = void 0;
                            }
                            if (a == null) {
                                return this._isOpen;
                            } else {
                                return this._isOpen = a;
                            }
                        };
                        b = function(b) {
                            e(f, b);
                            function f(b) {
                                this.getOrigCloseBoxImg_ = d(this.getOrigCloseBoxImg_, this);
                                this.getCloseBoxDiv_ = d(this.getCloseBoxDiv_, this);
                                var e;
                                e = new a.InfoBox(b);
                                c.extend(this, e);
                                if (b.closeBoxDiv != null) {
                                    this.closeBoxDiv_ = b.closeBoxDiv;
                                }
                            }
                            f.prototype.getCloseBoxDiv_ = function() {
                                return this.closeBoxDiv_;
                            };
                            f.prototype.getCloseBoxImg_ = function() {
                                var a, b;
                                a = this.getCloseBoxDiv_();
                                b = this.getOrigCloseBoxImg_();
                                return a || b;
                            };
                            f.prototype.getOrigCloseBoxImg_ = function() {
                                var a;
                                a = "";
                                if (this.closeBoxURL_ !== "") {
                                    a = "<img";
                                    a += " src='" + this.closeBoxURL_ + "'";
                                    a += " align=right";
                                    a += " style='";
                                    a += " position: relative;";
                                    a += " cursor: pointer;";
                                    a += " margin: " + this.closeBoxMargin_ + ";";
                                    a += "'>";
                                }
                                return a;
                            };
                            return f;
                        }(a.InfoBox);
                        a.uiGmapInfoBox = b;
                    }
                    if (a.MarkerLabel_) {
                        return a.MarkerLabel_.prototype.setContent = function() {
                            var a;
                            a = this.marker_.get("labelContent");
                            if (!a || c.isEqual(this.oldContent, a)) {
                                return;
                            }
                            if (typeof (a != null ? a.nodeType : void 0) === "undefined") {
                                this.labelDiv_.innerHTML = a;
                                this.eventDiv_.innerHTML = this.labelDiv_.innerHTML;
                                this.oldContent = a;
                            } else {
                                this.labelDiv_.innerHTML = "";
                                this.labelDiv_.appendChild(a);
                                a = a.cloneNode(true);
                                this.labelDiv_.innerHTML = "";
                                this.eventDiv_.appendChild(a);
                                this.oldContent = a;
                            }
                        };
                    }
                })
            };
        });
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.extensions").service("uiGmapLodash", function() {
            var a, b, d, e, f, g, h, i;
            g = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;
            f = /\\(\\)?/g;
            d = function(a) {
                var b, d, e;
                d = a.missingName, e = a.swapName, b = a.isProto;
                if (c[d] == null) {
                    c[d] = c[e];
                    if (b) {
                        return c.prototype[d] = c[e];
                    }
                }
            };
            [ {
                missingName: "contains",
                swapName: "includes",
                isProto: true
            }, {
                missingName: "includes",
                swapName: "contains",
                isProto: true
            }, {
                missingName: "object",
                swapName: "zipObject"
            }, {
                missingName: "zipObject",
                swapName: "object"
            }, {
                missingName: "all",
                swapName: "every"
            }, {
                missingName: "every",
                swapName: "all"
            }, {
                missingName: "any",
                swapName: "some"
            }, {
                missingName: "some",
                swapName: "any"
            }, {
                missingName: "first",
                swapName: "head"
            }, {
                missingName: "head",
                swapName: "first"
            } ].forEach(function(a) {
                return d(a);
            });
            if (c.get == null) {
                h = function(a) {
                    if (c.isObject(a)) {
                        return a;
                    } else {
                        return Object(a);
                    }
                };
                b = function(a) {
                    if (a === null) {
                        return "";
                    } else {
                        return a + "";
                    }
                };
                i = function(a) {
                    var d;
                    if (c.isArray(a)) {
                        return a;
                    }
                    d = [];
                    b(a).replace(g, function(a, b, c, e) {
                        d.push(c ? e.replace(f, "$1") : b || a);
                    });
                    return d;
                };
                a = function(a, b, d) {
                    var e, f;
                    if (a === null) {
                        return;
                    }
                    if (d !== void 0 && d in h(a)) {
                        b = [ d ];
                    }
                    e = 0;
                    f = b.length;
                    while (!c.isUndefined(a) && e < f) {
                        a = a[b[e++]];
                    }
                    if (e && e === f) {
                        return a;
                    } else {
                        return void 0;
                    }
                };
                e = function(b, c, d) {
                    var e;
                    e = b === null ? void 0 : a(b, i(c), c + "");
                    if (e === void 0) {
                        return d;
                    } else {
                        return e;
                    }
                };
                c.get = e;
            }
            this.intersectionObjects = function(a, b, d) {
                var e;
                if (d == null) {
                    d = void 0;
                }
                e = c.map(a, function(a) {
                    return c.find(b, function(b) {
                        if (d != null) {
                            return d(a, b);
                        } else {
                            return c.isEqual(a, b);
                        }
                    });
                });
                return c.filter(e, function(a) {
                    return a != null;
                });
            };
            this.containsObject = c.includeObject = function(a, b, d) {
                if (d == null) {
                    d = void 0;
                }
                if (a === null) {
                    return false;
                }
                return c.some(a, function(a) {
                    if (d != null) {
                        return d(a, b);
                    } else {
                        return c.isEqual(a, b);
                    }
                });
            };
            this.differenceObjects = function(a, b, d) {
                if (d == null) {
                    d = void 0;
                }
                return c.filter(a, function(a) {
                    return function(c) {
                        return !a.containsObject(b, c, d);
                    };
                }(this));
            };
            this.withoutObjects = this.differenceObjects;
            this.indexOfObject = function(a, b, d, e) {
                var f, g;
                if (a == null) {
                    return -1;
                }
                f = 0;
                g = a.length;
                if (e) {
                    if (typeof e === "number") {
                        f = e < 0 ? Math.max(0, g + e) : e;
                    } else {
                        f = c.sortedIndex(a, b);
                        return a[f] === b ? f : -1;
                    }
                }
                while (f < g) {
                    if (d != null) {
                        if (d(a[f], b)) {
                            return f;
                        }
                    } else {
                        if (c.isEqual(a[f], b)) {
                            return f;
                        }
                    }
                    f++;
                }
                return -1;
            };
            this.isNullOrUndefined = function(a) {
                return c.isNull(a || c.isUndefined(a));
            };
            return this;
        });
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.extensions").factory("uiGmapString", function() {
            return function(a) {
                this.contains = function(b, c) {
                    return a.indexOf(b, c) !== -1;
                };
                return this;
            };
        });
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmap_sync", [ function() {
            return {
                fakePromise: function() {
                    var a;
                    a = void 0;
                    return {
                        then: function(b) {
                            return a = b;
                        },
                        resolve: function() {
                            return a.apply(void 0, arguments);
                        }
                    };
                }
            };
        } ]).service("uiGmap_async", [ "$timeout", "uiGmapPromise", "uiGmapLogger", "$q", "uiGmapDataStructures", "uiGmapGmapUtil", function(a, d, e, f, g, h) {
            var i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B;
            A = d.promiseTypes;
            t = d.isInProgress;
            z = d.promiseStatus;
            i = d.ExposedPromise;
            k = d.SniffedPromise;
            u = function(a, b) {
                var c;
                c = a.promise();
                c.promiseType = a.promiseType;
                if (c.$$state) {
                    e.debug("promiseType: " + c.promiseType + ", state: " + z(c.$$state.status));
                }
                c.cancelCb = b;
                return c;
            };
            p = function(a, b) {
                if (a.promiseType === A.create && b.promiseType !== A["delete"] && b.promiseType !== A.init) {
                    e.debug("lastPromise.promiseType " + b.promiseType + ", newPromiseType: " + a.promiseType + ", SKIPPED MUST COME AFTER DELETE ONLY");
                    return true;
                }
                return false;
            };
            y = function(a, b, d) {
                var f;
                if (b.promiseType === A["delete"] && d.promiseType !== A["delete"]) {
                    if (d.cancelCb != null && c.isFunction(d.cancelCb) && t(d)) {
                        e.debug("promiseType: " + b.promiseType + ", CANCELING LAST PROMISE type: " + d.promiseType);
                        d.cancelCb("cancel safe");
                        f = a.peek();
                        if (f != null && t(f)) {
                            if (f.hasOwnProperty("cancelCb") && c.isFunction(f.cancelCb)) {
                                e.debug("promiseType: " + f.promiseType + ", CANCELING FIRST PROMISE type: " + f.promiseType);
                                return f.cancelCb("cancel safe");
                            } else {
                                return e.warn("first promise was not cancelable");
                            }
                        }
                    }
                }
            };
            j = function(a, b, d) {
                var e, f;
                if (!a.existingPieces) {
                    a.existingPieces = new g.Queue();
                    return a.existingPieces.enqueue(u(b, d));
                } else {
                    e = c.last(a.existingPieces._content);
                    if (p(b, e)) {
                        return;
                    }
                    y(a.existingPieces, b, e);
                    f = i(e["finally"](function() {
                        return u(b, d);
                    }));
                    f.cancelCb = d;
                    f.promiseType = b.promiseType;
                    a.existingPieces.enqueue(f);
                    return e["finally"](function() {
                        return a.existingPieces.dequeue();
                    });
                }
            };
            w = function(a, b, d, f, g) {
                var h;
                if (d == null) {
                    d = "";
                }
                h = function(a) {
                    e.debug(a + ": " + a);
                    if (f != null && c.isFunction(f)) {
                        return f(a);
                    }
                };
                return j(a, k(g, b), h);
            };
            n = 80;
            r = {
                value: null
            };
            B = function(a, b, c) {
                var d, e;
                try {
                    return a.apply(b, c);
                } catch (e) {
                    d = e;
                    r.value = d;
                    return r;
                }
            };
            v = function(a, b, c, d) {
                var f, g;
                g = B(a, b, d);
                if (g === r) {
                    f = "error within chunking iterator: " + r.value;
                    e.error(f);
                    c.reject(f);
                }
                if (g === "cancel safe") {
                    return false;
                }
                return true;
            };
            l = function(a, b, c) {
                var d, e;
                d = a === b;
                e = b[c];
                if (d) {
                    return e;
                }
                return a[e];
            };
            m = [ "length", "forEach", "map" ];
            s = function(a, d, e, f) {
                var g, h, i;
                if (b.isArray(a)) {
                    g = a;
                } else {
                    if (d) {
                        g = d;
                    } else {
                        g = [];
                        for (h in a) {
                            i = a[h];
                            if (a.hasOwnProperty(h) && !c.includes(m, h)) {
                                g.push(h);
                            }
                        }
                    }
                }
                if (f == null) {
                    f = e;
                }
                if (b.isArray(g) && !(g != null ? g.length : void 0)) {
                    if (f !== e) {
                        return e();
                    }
                }
                return f(g, d);
            };
            o = function(d, e, f, g, h, i, j, k) {
                return s(d, k, function(k, m) {
                    var n, p, q, r;
                    if (e && e < k.length) {
                        n = e;
                    } else {
                        n = k.length;
                    }
                    p = j;
                    q = true;
                    while (q && n-- && p < (k ? k.length : p + 1)) {
                        r = l(d, k, p);
                        q = b.isFunction(r) ? true : v(g, void 0, i, [ r, p ]);
                        ++p;
                    }
                    if (k) {
                        if (q && p < k.length) {
                            j = p;
                            if (e) {
                                if (h != null && c.isFunction(h)) {
                                    v(h, void 0, i, []);
                                }
                                return a(function() {
                                    return o(d, e, f, g, h, i, j, m);
                                }, f, false);
                            }
                        } else {
                            return i.resolve();
                        }
                    }
                });
            };
            q = function(a, b, c, f, g, h, i) {
                var j, k, l;
                if (c == null) {
                    c = n;
                }
                if (g == null) {
                    g = 0;
                }
                if (h == null) {
                    h = 1;
                }
                l = void 0;
                k = d.defer();
                l = k.promise;
                if (!h) {
                    j = "pause (delay) must be set from _async!";
                    e.error(j);
                    k.reject(j);
                    return l;
                }
                return s(a, i, function() {
                    k.resolve();
                    return l;
                }, function(d, e) {
                    o(a, c, h, b, f, k, g, e);
                    return l;
                });
            };
            x = function(a, b, c, e, f, g, h) {
                var i;
                i = [];
                return s(a, h, function() {
                    return d.resolve(i);
                }, function(d, h) {
                    return q(a, function(a) {
                        return i.push(b(a));
                    }, c, e, f, g, h).then(function() {
                        return i;
                    });
                });
            };
            return {
                each: q,
                map: x,
                managePromiseQueue: w,
                promiseLock: w,
                defaultChunkSize: n,
                getArrayAndKeys: s,
                chunkSizeFrom: function(a, b) {
                    if (b == null) {
                        b = void 0;
                    }
                    if (c.isNumber(a)) {
                        b = a;
                    }
                    if (h.isFalse(a) || a === false) {
                        b = false;
                    }
                    return b;
                }
            };
        } ]);
    }).call(this);
    (function() {
        var a = [].indexOf || function(a) {
            for (var b = 0, c = this.length; b < c; b++) {
                if (b in this && this[b] === a) return b;
            }
            return -1;
        };
        b.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapBaseObject", function() {
            var b, c;
            c = [ "extended", "included" ];
            b = function() {
                function b() {}
                b.extend = function(b) {
                    var d, e, f;
                    for (d in b) {
                        f = b[d];
                        if (a.call(c, d) < 0) {
                            this[d] = f;
                        }
                    }
                    if ((e = b.extended) != null) {
                        e.apply(this);
                    }
                    return this;
                };
                b.include = function(b) {
                    var d, e, f;
                    for (d in b) {
                        f = b[d];
                        if (a.call(c, d) < 0) {
                            this.prototype[d] = f;
                        }
                    }
                    if ((e = b.included) != null) {
                        e.apply(this);
                    }
                    return this;
                };
                return b;
            }();
            return b;
        });
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapChildEvents", function() {
            return {
                onChildCreation: function(a) {}
            };
        });
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapCtrlHandle", [ "$q", function(a) {
            var b;
            return b = {
                handle: function(c, d) {
                    c.$on("$destroy", function() {
                        return b.handle(c);
                    });
                    c.deferred = a.defer();
                    return {
                        getScope: function() {
                            return c;
                        }
                    };
                },
                mapPromise: function(a, b) {
                    var c;
                    c = b.getScope();
                    c.deferred.promise.then(function(b) {
                        return a.map = b;
                    });
                    return c.deferred.promise;
                }
            };
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapEventsHelper", [ "uiGmapLogger", function(a) {
            var d, e;
            e = function(a) {
                return b.isDefined(a.events) && a.events != null && b.isObject(a.events);
            };
            d = function(a, b) {
                if (e(a)) {
                    return a;
                }
                if (e(b)) {
                    return b;
                }
            };
            return {
                setEvents: function(a, e, f, g) {
                    var h;
                    h = d(e, f);
                    if (h != null) {
                        return c.compact(c.map(h.events, function(d, i) {
                            var j;
                            if (g) {
                                j = c(g).includes(i);
                            }
                            if (h.events.hasOwnProperty(i) && b.isFunction(h.events[i]) && !j) {
                                return google.maps.event.addListener(a, i, function() {
                                    if (!e.$evalAsync) {
                                        e.$evalAsync = function() {};
                                    }
                                    return e.$evalAsync(d.apply(e, [ a, i, f, arguments ]));
                                });
                            }
                        }));
                    }
                },
                removeEvents: function(a) {
                    var b, c;
                    if (!a) {
                        return;
                    }
                    for (b in a) {
                        c = a[b];
                        if (c && a.hasOwnProperty(b)) {
                            google.maps.event.removeListener(c);
                        }
                    }
                }
            };
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapFitHelper", [ "uiGmapLogger", "$timeout", function(a, b) {
            return {
                fit: function(a, d) {
                    var e, f, g, h, i;
                    if (d && (a != null ? a.length : void 0)) {
                        e = new google.maps.LatLngBounds();
                        f = false;
                        for (g in a) {
                            h = a[g];
                            if (h) {
                                if (!f) {
                                    f = true;
                                }
                                i = c.isFunction(h.getPosition) ? h.getPosition() : h;
                            }
                            e.extend(i);
                        }
                        if (f) {
                            return b(function() {
                                return d.fitBounds(e);
                            });
                        }
                    }
                }
            };
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapGmapUtil", [ "uiGmapLogger", "$compile", function(a, d) {
            var e, f, g, h, i, j;
            f = function(a, b, c) {
                return a === b || c.indexOf(a) !== -1;
            };
            e = function(a) {
                return f(a, false, [ "false", "FALSE", 0, "n", "N", "no", "NO" ]);
            };
            h = function(a) {
                if (Array.isArray(a) && a.length === 2) {
                    return a[1];
                } else if (b.isDefined(a.type) && a.type === "Point") {
                    return a.coordinates[1];
                } else {
                    return a.latitude;
                }
            };
            i = function(a) {
                if (Array.isArray(a) && a.length === 2) {
                    return a[0];
                } else if (b.isDefined(a.type) && a.type === "Point") {
                    return a.coordinates[0];
                } else {
                    return a.longitude;
                }
            };
            g = function(a) {
                if (!a) {
                    return;
                }
                if (a instanceof google.maps.LatLng) {
                    return a;
                } else if (Array.isArray(a) && a.length === 2) {
                    return new google.maps.LatLng(a[1], a[0]);
                } else if (b.isDefined(a.type) && a.type === "Point") {
                    return new google.maps.LatLng(a.coordinates[1], a.coordinates[0]);
                } else {
                    return new google.maps.LatLng(a.latitude, a.longitude);
                }
            };
            j = function(a) {
                if (b.isUndefined(a)) {
                    return false;
                }
                if (c.isArray(a)) {
                    if (a.length === 2) {
                        return true;
                    }
                } else if (a != null && (a != null ? a.type : void 0)) {
                    if (a.type === "Point" && c.isArray(a.coordinates) && a.coordinates.length === 2) {
                        return true;
                    }
                }
                if (a && b.isDefined((a != null ? a.latitude : void 0) && b.isDefined(a != null ? a.longitude : void 0))) {
                    return true;
                }
                return false;
            };
            return {
                setCoordsFromEvent: function(a, c) {
                    if (!a) {
                        return;
                    }
                    if (Array.isArray(a) && a.length === 2) {
                        a[1] = c.lat();
                        a[0] = c.lng();
                    } else if (b.isDefined(a.type) && a.type === "Point") {
                        a.coordinates[1] = c.lat();
                        a.coordinates[0] = c.lng();
                    } else {
                        a.latitude = c.lat();
                        a.longitude = c.lng();
                    }
                    return a;
                },
                getLabelPositionPoint: function(a) {
                    var b, c;
                    if (a === void 0) {
                        return void 0;
                    }
                    a = /^([-\d\.]+)\s([-\d\.]+)$/.exec(a);
                    b = parseFloat(a[1]);
                    c = parseFloat(a[2]);
                    if (b != null && c != null) {
                        return new google.maps.Point(b, c);
                    }
                },
                createWindowOptions: function(c, e, f, h) {
                    var i;
                    if (f != null && h != null && d != null) {
                        i = b.extend({}, h, {
                            content: this.buildContent(e, h, f),
                            position: h.position != null ? h.position : b.isObject(c) ? c.getPosition() : g(e.coords)
                        });
                        if (c != null && (i != null ? i.pixelOffset : void 0) == null) {
                            if (i.boxClass == null) {} else {
                                i.pixelOffset = {
                                    height: 0,
                                    width: -2
                                };
                            }
                        }
                        return i;
                    } else {
                        if (!h) {
                            a.error("infoWindow defaults not defined");
                            if (!f) {
                                return a.error("infoWindow content not defined");
                            }
                        } else {
                            return h;
                        }
                    }
                },
                buildContent: function(a, b, c) {
                    var e, f;
                    if (b.content != null) {
                        f = b.content;
                    } else {
                        if (d != null) {
                            c = c.replace(/^\s+|\s+$/g, "");
                            e = c === "" ? "" : d(c)(a);
                            if (e.length > 0) {
                                f = e[0];
                            }
                        } else {
                            f = c;
                        }
                    }
                    return f;
                },
                defaultDelay: 50,
                isTrue: function(a) {
                    return f(a, true, [ "true", "TRUE", 1, "y", "Y", "yes", "YES" ]);
                },
                isFalse: e,
                isFalsy: function(a) {
                    return f(a, false, [ void 0, null ]) || e(a);
                },
                getCoords: g,
                validateCoords: j,
                equalCoords: function(a, b) {
                    return h(a) === h(b) && i(a) === i(b);
                },
                validatePath: function(a) {
                    var d, e, f, g;
                    e = 0;
                    if (b.isUndefined(a.type)) {
                        if (!Array.isArray(a) || a.length < 2) {
                            return false;
                        }
                        while (e < a.length) {
                            if (!(b.isDefined(a[e].latitude) && b.isDefined(a[e].longitude) || typeof a[e].lat === "function" && typeof a[e].lng === "function")) {
                                return false;
                            }
                            e++;
                        }
                        return true;
                    } else {
                        if (b.isUndefined(a.coordinates)) {
                            return false;
                        }
                        if (a.type === "Polygon") {
                            if (a.coordinates[0].length < 4) {
                                return false;
                            }
                            d = a.coordinates[0];
                        } else if (a.type === "MultiPolygon") {
                            g = {
                                max: 0,
                                index: 0
                            };
                            c.forEach(a.coordinates, function(a, b) {
                                if (a[0].length > this.max) {
                                    this.max = a[0].length;
                                    return this.index = b;
                                }
                            }, g);
                            f = a.coordinates[g.index];
                            d = f[0];
                            if (d.length < 4) {
                                return false;
                            }
                        } else if (a.type === "LineString") {
                            if (a.coordinates.length < 2) {
                                return false;
                            }
                            d = a.coordinates;
                        } else {
                            return false;
                        }
                        while (e < d.length) {
                            if (d[e].length !== 2) {
                                return false;
                            }
                            e++;
                        }
                        return true;
                    }
                },
                convertPathPoints: function(a) {
                    var d, e, f, g, h;
                    e = 0;
                    g = new google.maps.MVCArray();
                    if (b.isUndefined(a.type)) {
                        while (e < a.length) {
                            f;
                            if (b.isDefined(a[e].latitude) && b.isDefined(a[e].longitude)) {
                                f = new google.maps.LatLng(a[e].latitude, a[e].longitude);
                            } else if (typeof a[e].lat === "function" && typeof a[e].lng === "function") {
                                f = a[e];
                            }
                            g.push(f);
                            e++;
                        }
                    } else {
                        d;
                        if (a.type === "Polygon") {
                            d = a.coordinates[0];
                        } else if (a.type === "MultiPolygon") {
                            h = {
                                max: 0,
                                index: 0
                            };
                            c.forEach(a.coordinates, function(a, b) {
                                if (a[0].length > this.max) {
                                    this.max = a[0].length;
                                    return this.index = b;
                                }
                            }, h);
                            d = a.coordinates[h.index][0];
                        } else if (a.type === "LineString") {
                            d = a.coordinates;
                        }
                        while (e < d.length) {
                            g.push(new google.maps.LatLng(d[e][1], d[e][0]));
                            e++;
                        }
                    }
                    return g;
                },
                getPath: function(a, b) {
                    var d;
                    if (b == null || !c.isString(b)) {
                        return b;
                    }
                    d = a;
                    c.each(b.split("."), function(a) {
                        if (d) {
                            return d = d[a];
                        }
                    });
                    return d;
                },
                validateBoundPoints: function(a) {
                    if (b.isUndefined(a.sw.latitude) || b.isUndefined(a.sw.longitude) || b.isUndefined(a.ne.latitude) || b.isUndefined(a.ne.longitude)) {
                        return false;
                    }
                    return true;
                },
                convertBoundPoints: function(a) {
                    var b;
                    b = new google.maps.LatLngBounds(new google.maps.LatLng(a.sw.latitude, a.sw.longitude), new google.maps.LatLng(a.ne.latitude, a.ne.longitude));
                    return b;
                },
                fitMapBounds: function(a, b) {
                    return a.fitBounds(b);
                }
            };
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapIsReady", [ "$q", "$timeout", function(a, b) {
            var c, d, e, f;
            d = 0;
            f = [];
            e = function() {
                return a.all(f);
            };
            c = function(a, f, g) {
                return b(function() {
                    if (g <= 0) {
                        a.reject("Your maps are not found we have checked the maximum amount of times. :)");
                        return;
                    }
                    if (d !== f) {
                        c(a, f, g - 1);
                    } else {
                        a.resolve(e());
                    }
                }, 100);
            };
            return {
                spawn: function() {
                    var b;
                    b = a.defer();
                    f.push(b.promise);
                    d += 1;
                    return {
                        instance: d,
                        deferred: b
                    };
                },
                promises: e,
                instances: function() {
                    return d;
                },
                promise: function(b, d) {
                    var e;
                    if (b == null) {
                        b = 1;
                    }
                    if (d == null) {
                        d = 50;
                    }
                    e = a.defer();
                    c(e, b, d);
                    return e.promise;
                },
                reset: function() {
                    d = 0;
                    f.length = 0;
                },
                decrement: function() {
                    if (d > 0) {
                        d -= 1;
                    }
                    if (f.length) {
                        f.length -= 1;
                    }
                }
            };
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var d in b) {
                if (c.call(b, d)) a[d] = b[d];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, c = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapLinked", [ "uiGmapBaseObject", function(b) {
            var c;
            c = function(b) {
                a(c, b);
                function c(a, b, c, d) {
                    this.scope = a;
                    this.element = b;
                    this.attrs = c;
                    this.ctrls = d;
                }
                return c;
            }(b);
            return c;
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapLogger", [ "nemSimpleLogger", function(a) {
            return a.spawn();
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, d = function(a, b) {
            for (var c in b) {
                if (e.call(b, c)) a[c] = b[c];
            }
            function d() {
                this.constructor = a;
            }
            d.prototype = b.prototype;
            a.prototype = new d();
            a.__super__ = b.prototype;
            return a;
        }, e = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapModelKey", [ "uiGmapBaseObject", "uiGmapGmapUtil", function(e, f) {
            return function(e) {
                d(g, e);
                function g(b, c) {
                    this.scope = b;
                    this["interface"] = c != null ? c : {
                        scopeKeys: []
                    };
                    this.modelsLength = a(this.modelsLength, this);
                    this.updateChild = a(this.updateChild, this);
                    this.destroy = a(this.destroy, this);
                    this.setChildScope = a(this.setChildScope, this);
                    this.getChanges = a(this.getChanges, this);
                    this.getProp = a(this.getProp, this);
                    this.setIdKey = a(this.setIdKey, this);
                    this.modelKeyComparison = a(this.modelKeyComparison, this);
                    g.__super__.constructor.call(this);
                    this.defaultIdKey = "id";
                    this.idKey = void 0;
                }
                g.prototype.evalModelHandle = function(a, b) {
                    if (a == null || b == null) {
                        return;
                    }
                    if (b === "self") {
                        return a;
                    } else {
                        if (c.isFunction(b)) {
                            b = b();
                        }
                        return f.getPath(a, b);
                    }
                };
                g.prototype.modelKeyComparison = function(a, b) {
                    var d, e, g, h, i, j;
                    g = this["interface"].scopeKeys.indexOf("coords") >= 0;
                    if (g && this.scope.coords != null || !g) {
                        i = this.scope;
                    }
                    if (i == null) {
                        throw "No scope set!";
                    }
                    if (g) {
                        d = this.scopeOrModelVal("coords", i, a);
                        e = this.scopeOrModelVal("coords", i, b);
                        h = f.equalCoords(d, e);
                        if (!h) {
                            return h;
                        }
                    }
                    j = c.without(this["interface"].scopeKeys, "coords");
                    h = c.every(j, function(d) {
                        return function(e) {
                            var f, g;
                            f = d.scopeOrModelVal(i[e], i, a);
                            g = d.scopeOrModelVal(i[e], i, b);
                            if (i.deepComparison) {
                                return c.isEqual(f, g);
                            } else {
                                return f === g;
                            }
                        };
                    }(this));
                    return h;
                };
                g.prototype.setIdKey = function(a) {
                    return this.idKey = a.idKey != null ? a.idKey : this.defaultIdKey;
                };
                g.prototype.setVal = function(a, b, c) {
                    this.modelOrKey(a, b = c);
                    return a;
                };
                g.prototype.modelOrKey = function(a, b) {
                    if (b == null) {
                        return;
                    }
                    if (b !== "self") {
                        return f.getPath(a, b);
                    }
                    return a;
                };
                g.prototype.getProp = function(a, b, c) {
                    return this.scopeOrModelVal(a, b, c);
                };
                g.prototype.getChanges = function(a, b, d) {
                    var e, f, g;
                    if (d) {
                        b = c.pick(b, d);
                        a = c.pick(a, d);
                    }
                    f = {};
                    g = {};
                    e = {};
                    for (g in a) {
                        if (!b || b[g] !== a[g]) {
                            if (c.isArray(a[g])) {
                                f[g] = a[g];
                            } else if (c.isObject(a[g])) {
                                e = this.getChanges(a[g], b ? b[g] : null);
                                if (!c.isEmpty(e)) {
                                    f[g] = e;
                                }
                            } else {
                                f[g] = a[g];
                            }
                        }
                    }
                    return f;
                };
                g.prototype.scopeOrModelVal = function(a, b, d, e) {
                    var f, g, h, i;
                    if (e == null) {
                        e = false;
                    }
                    f = function(a, b, c) {
                        if (c == null) {
                            c = false;
                        }
                        if (c) {
                            return {
                                isScope: a,
                                value: b
                            };
                        }
                        return b;
                    };
                    i = c.get(b, a);
                    if (c.isFunction(i)) {
                        return f(true, i(d), e);
                    }
                    if (c.isObject(i)) {
                        return f(true, i, e);
                    }
                    if (!c.isString(i)) {
                        return f(true, i, e);
                    }
                    g = i;
                    if (!g) {
                        h = c.get(d, a);
                    } else {
                        h = g === "self" ? d : c.get(d, g);
                    }
                    if (c.isFunction(h)) {
                        return f(false, h(), e);
                    }
                    return f(false, h, e);
                };
                g.prototype.setChildScope = function(a, b, c) {
                    var d, e, f, g;
                    for (e in a) {
                        f = a[e];
                        d = this.scopeOrModelVal(f, b, c, true);
                        if ((d != null ? d.value : void 0) != null) {
                            g = d.value;
                            if (g !== b[f]) {
                                b[f] = g;
                            }
                        }
                    }
                    return b.model = c;
                };
                g.prototype.onDestroy = function(a) {};
                g.prototype.destroy = function(a) {
                    var b;
                    if (a == null) {
                        a = false;
                    }
                    if (this.scope != null && !((b = this.scope) != null ? b.$$destroyed : void 0) && (this.needToManualDestroy || a)) {
                        return this.scope.$destroy();
                    } else {
                        return this.clean();
                    }
                };
                g.prototype.updateChild = function(a, b) {
                    if (b[this.idKey] == null) {
                        this.$log.error("Model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");
                        return;
                    }
                    return a.updateModel(b);
                };
                g.prototype.modelsLength = function(a) {
                    var c, d;
                    if (a == null) {
                        a = void 0;
                    }
                    c = 0;
                    d = a ? a : this.scope.models;
                    if (d == null) {
                        return c;
                    }
                    if (b.isArray(d) || d.length != null) {
                        c = d.length;
                    } else {
                        c = Object.keys(d).length;
                    }
                    return c;
                };
                return g;
            }(e);
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapModelsWatcher", [ "uiGmapLogger", "uiGmap_async", "$q", "uiGmapPromise", function(a, b, c, d) {
            return {
                didQueueInitPromise: function(a, c) {
                    if (c.models.length === 0) {
                        b.promiseLock(a, d.promiseTypes.init, null, null, function() {
                            return d.resolve();
                        });
                        return true;
                    }
                    return false;
                },
                figureOutState: function(b, c, d, e, f) {
                    var g, h, i, j, k;
                    g = [];
                    i = {};
                    j = [];
                    k = [];
                    c.models.forEach(function(f) {
                        var h;
                        if (f[b] != null) {
                            i[f[b]] = {};
                            if (d.get(f[b]) == null) {
                                return g.push(f);
                            } else {
                                h = d.get(f[b]);
                                if (!e(f, h.clonedModel, c)) {
                                    return k.push({
                                        model: f,
                                        child: h
                                    });
                                }
                            }
                        } else {
                            return a.error(" id missing for model #{m.toString()},\ncan not use do comparison/insertion");
                        }
                    });
                    h = d.values();
                    h.forEach(function(c) {
                        var d;
                        if (c == null) {
                            a.error("child undefined in ModelsWatcher.");
                            return;
                        }
                        if (c.model == null) {
                            a.error("child.model undefined in ModelsWatcher.");
                            return;
                        }
                        d = c.model[b];
                        if (i[d] == null) {
                            return j.push(c);
                        }
                    });
                    return {
                        adds: g,
                        removals: j,
                        updates: k
                    };
                }
            };
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.utils").service("uiGmapPromise", [ "$q", "$timeout", "uiGmapLogger", function(a, b, d) {
            var e, f, g, h, i, j, k, l, m, n, o;
            m = {
                create: "create",
                update: "update",
                delete: "delete",
                init: "init"
            };
            l = {
                IN_PROGRESS: 0,
                RESOLVED: 1,
                REJECTED: 2
            };
            o = function() {
                var a;
                a = {};
                a["" + l.IN_PROGRESS] = "in-progress";
                a["" + l.RESOLVED] = "resolved";
                a["" + l.REJECTED] = "rejected";
                return a;
            }();
            h = function(a) {
                if (a.$$state) {
                    return a.$$state.status === l.IN_PROGRESS;
                }
                if (!a.hasOwnProperty("$$v")) {
                    return true;
                }
            };
            i = function(a) {
                if (a.$$state) {
                    return a.$$state.status === l.RESOLVED;
                }
                if (a.hasOwnProperty("$$v")) {
                    return true;
                }
            };
            k = function(a) {
                return o[a] || "done w error";
            };
            e = function(b) {
                var c, d, e;
                c = a.defer();
                d = a.all([ b, c.promise ]);
                e = a.defer();
                b.then(c.resolve, function() {}, function(a) {
                    c.notify(a);
                    return e.notify(a);
                });
                d.then(function(a) {
                    return e.resolve(a[0] || a[1]);
                }, function(a) {
                    return e.reject(a);
                });
                e.promise.cancel = function(a) {
                    if (a == null) {
                        a = "canceled";
                    }
                    return c.reject(a);
                };
                e.promise.notify = function(a) {
                    if (a == null) {
                        a = "cancel safe";
                    }
                    e.notify(a);
                    if (b.hasOwnProperty("notify")) {
                        return b.notify(a);
                    }
                };
                if (b.promiseType != null) {
                    e.promise.promiseType = b.promiseType;
                }
                return e.promise;
            };
            f = function(a, b) {
                return {
                    promise: a,
                    promiseType: b
                };
            };
            g = function() {
                return a.defer();
            };
            n = function() {
                var b;
                b = a.defer();
                b.resolve.apply(void 0, arguments);
                return b.promise;
            };
            j = function(e) {
                var f;
                if (!c.isFunction(e)) {
                    d.error("uiGmapPromise.promise() only accepts functions");
                    return;
                }
                f = a.defer();
                b(function() {
                    var a;
                    a = e();
                    return f.resolve(a);
                });
                return f.promise;
            };
            return {
                defer: g,
                promise: j,
                resolve: n,
                promiseTypes: m,
                isInProgress: h,
                isResolved: i,
                promiseStatus: k,
                ExposedPromise: e,
                SniffedPromise: f
            };
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        };
        b.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapPropMap", function() {
            var b;
            return b = function() {
                function b() {
                    this.removeAll = a(this.removeAll, this);
                    this.slice = a(this.slice, this);
                    this.push = a(this.push, this);
                    this.keys = a(this.keys, this);
                    this.values = a(this.values, this);
                    this.remove = a(this.remove, this);
                    this.put = a(this.put, this);
                    this.stateChanged = a(this.stateChanged, this);
                    this.get = a(this.get, this);
                    this.length = 0;
                    this.dict = {};
                    this.didValsStateChange = false;
                    this.didKeysStateChange = false;
                    this.allVals = [];
                    this.allKeys = [];
                }
                b.prototype.get = function(a) {
                    return this.dict[a];
                };
                b.prototype.stateChanged = function() {
                    this.didValsStateChange = true;
                    return this.didKeysStateChange = true;
                };
                b.prototype.put = function(a, b) {
                    if (this.get(a) == null) {
                        this.length++;
                    }
                    this.stateChanged();
                    return this.dict[a] = b;
                };
                b.prototype.remove = function(a, b) {
                    var c;
                    if (b == null) {
                        b = false;
                    }
                    if (b && !this.get(a)) {
                        return void 0;
                    }
                    c = this.dict[a];
                    delete this.dict[a];
                    this.length--;
                    this.stateChanged();
                    return c;
                };
                b.prototype.valuesOrKeys = function(a) {
                    var b, d;
                    if (a == null) {
                        a = "Keys";
                    }
                    if (!this["did" + a + "StateChange"]) {
                        return this["all" + a];
                    }
                    d = [];
                    b = [];
                    c.each(this.dict, function(a, c) {
                        d.push(a);
                        return b.push(c);
                    });
                    this.didKeysStateChange = false;
                    this.didValsStateChange = false;
                    this.allVals = d;
                    this.allKeys = b;
                    return this["all" + a];
                };
                b.prototype.values = function() {
                    return this.valuesOrKeys("Vals");
                };
                b.prototype.keys = function() {
                    return this.valuesOrKeys();
                };
                b.prototype.push = function(a, b) {
                    if (b == null) {
                        b = "key";
                    }
                    return this.put(a[b], a);
                };
                b.prototype.slice = function() {
                    return this.keys().map(function(a) {
                        return function(b) {
                            return a.remove(b);
                        };
                    }(this));
                };
                b.prototype.removeAll = function() {
                    return this.slice();
                };
                b.prototype.each = function(a) {
                    return c.each(this.dict, function(b, c) {
                        return a(b);
                    });
                };
                b.prototype.map = function(a) {
                    return c.map(this.dict, function(b, c) {
                        return a(b);
                    });
                };
                return b;
            }();
        });
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapPropertyAction", [ "uiGmapLogger", function(a) {
            var b;
            b = function(a) {
                this.setIfChange = function(b) {
                    return function(d, e) {
                        if (!c.isEqual(e, d)) {
                            return a(b, d);
                        }
                    };
                };
                this.sic = this.setIfChange;
                return this;
            };
            return b;
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        };
        b.module("uiGmapgoogle-maps.directives.api.managers").factory("uiGmapClustererMarkerManager", [ "uiGmapLogger", "uiGmapFitHelper", "uiGmapPropMap", "uiGmapEventsHelper", function(c, d, e, f) {
            var g;
            g = function() {
                g.type = "ClustererMarkerManager";
                function g(b, d, f, h) {
                    if (d == null) {
                        d = {};
                    }
                    this.opt_options = f != null ? f : {};
                    this.opt_events = h;
                    this.getGMarkers = a(this.getGMarkers, this);
                    this.fit = a(this.fit, this);
                    this.destroy = a(this.destroy, this);
                    this.attachEvents = a(this.attachEvents, this);
                    this.clear = a(this.clear, this);
                    this.draw = a(this.draw, this);
                    this.removeMany = a(this.removeMany, this);
                    this.remove = a(this.remove, this);
                    this.addMany = a(this.addMany, this);
                    this.update = a(this.update, this);
                    this.add = a(this.add, this);
                    this.type = g.type;
                    this.clusterer = new NgMapMarkerClusterer(b, d, this.opt_options);
                    this.propMapGMarkers = new e();
                    this.attachEvents(this.opt_events, "opt_events");
                    this.clusterer.setIgnoreHidden(true);
                    this.noDrawOnSingleAddRemoves = true;
                    c.info(this);
                }
                g.prototype.checkKey = function(a) {
                    var b;
                    if (a.key == null) {
                        b = "gMarker.key undefined and it is REQUIRED!!";
                        return c.error(b);
                    }
                };
                g.prototype.add = function(a) {
                    this.checkKey(a);
                    this.clusterer.addMarker(a, this.noDrawOnSingleAddRemoves);
                    this.propMapGMarkers.put(a.key, a);
                    return this.checkSync();
                };
                g.prototype.update = function(a) {
                    this.remove(a);
                    return this.add(a);
                };
                g.prototype.addMany = function(a) {
                    return a.forEach(function(a) {
                        return function(b) {
                            return a.add(b);
                        };
                    }(this));
                };
                g.prototype.remove = function(a) {
                    var b;
                    this.checkKey(a);
                    b = this.propMapGMarkers.get(a.key);
                    if (b) {
                        this.clusterer.removeMarker(a, this.noDrawOnSingleAddRemoves);
                        this.propMapGMarkers.remove(a.key);
                    }
                    return this.checkSync();
                };
                g.prototype.removeMany = function(a) {
                    return a.forEach(function(a) {
                        return function(b) {
                            return a.remove(b);
                        };
                    }(this));
                };
                g.prototype.draw = function() {
                    return this.clusterer.repaint();
                };
                g.prototype.clear = function() {
                    this.removeMany(this.getGMarkers());
                    return this.clusterer.repaint();
                };
                g.prototype.attachEvents = function(a, d) {
                    var e, f, g;
                    this.listeners = [];
                    if (b.isDefined(a) && a != null && b.isObject(a)) {
                        g = [];
                        for (f in a) {
                            e = a[f];
                            if (a.hasOwnProperty(f) && b.isFunction(a[f])) {
                                c.info(d + ": Attaching event: " + f + " to clusterer");
                                g.push(this.listeners.push(google.maps.event.addListener(this.clusterer, f, a[f])));
                            } else {
                                g.push(void 0);
                            }
                        }
                        return g;
                    }
                };
                g.prototype.clearEvents = function() {
                    f.removeEvents(this.listeners);
                    return this.listeners = [];
                };
                g.prototype.destroy = function() {
                    this.clearEvents();
                    return this.clear();
                };
                g.prototype.fit = function() {
                    return d.fit(this.getGMarkers(), this.clusterer.getMap());
                };
                g.prototype.getGMarkers = function() {
                    return this.clusterer.getMarkers().values();
                };
                g.prototype.checkSync = function() {};
                return g;
            }();
            return g;
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.managers").service("uiGmapGoogleMapObjectManager", [ function() {
            var a, c;
            a = [];
            c = [];
            return {
                createMapInstance: function(d, e) {
                    var f;
                    f = null;
                    if (a.length === 0) {
                        f = new google.maps.Map(d, e);
                        c.push(f);
                    } else {
                        f = a.pop();
                        b.element(d).append(f.getDiv());
                        f.setOptions(e);
                        c.push(f);
                    }
                    return f;
                },
                recycleMapInstance: function(b) {
                    var d;
                    d = c.indexOf(b);
                    if (d < 0) {
                        throw new Error("Expected map instance to be a previously used instance");
                    }
                    c.splice(d, 1);
                    return a.push(b);
                }
            };
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        };
        b.module("uiGmapgoogle-maps.directives.api.managers").factory("uiGmapMarkerManager", [ "uiGmapLogger", "uiGmapFitHelper", "uiGmapPropMap", function(b, c, d) {
            var e;
            e = function() {
                e.type = "MarkerManager";
                function e(c, f, g) {
                    this.getGMarkers = a(this.getGMarkers, this);
                    this.fit = a(this.fit, this);
                    this.handleOptDraw = a(this.handleOptDraw, this);
                    this.clear = a(this.clear, this);
                    this.destroy = a(this.destroy, this);
                    this.draw = a(this.draw, this);
                    this.removeMany = a(this.removeMany, this);
                    this.remove = a(this.remove, this);
                    this.addMany = a(this.addMany, this);
                    this.update = a(this.update, this);
                    this.add = a(this.add, this);
                    this.type = e.type;
                    this.gMap = c;
                    this.gMarkers = new d();
                    this.$log = b;
                    this.$log.info(this);
                }
                e.prototype.add = function(a, c) {
                    var d, e;
                    if (c == null) {
                        c = true;
                    }
                    if (a.key == null) {
                        e = "gMarker.key undefined and it is REQUIRED!!";
                        b.error(e);
                        throw e;
                    }
                    d = this.gMarkers.get(a.key);
                    if (!d) {
                        this.handleOptDraw(a, c, true);
                        return this.gMarkers.put(a.key, a);
                    }
                };
                e.prototype.update = function(a, b) {
                    if (b == null) {
                        b = true;
                    }
                    this.remove(a, b);
                    return this.add(a, b);
                };
                e.prototype.addMany = function(a) {
                    return a.forEach(function(a) {
                        return function(b) {
                            return a.add(b);
                        };
                    }(this));
                };
                e.prototype.remove = function(a, b) {
                    if (b == null) {
                        b = true;
                    }
                    this.handleOptDraw(a, b, false);
                    if (this.gMarkers.get(a.key)) {
                        return this.gMarkers.remove(a.key);
                    }
                };
                e.prototype.removeMany = function(a) {
                    return a.forEach(function(a) {
                        return function(b) {
                            return a.remove(b);
                        };
                    }(this));
                };
                e.prototype.draw = function() {
                    var a;
                    a = [];
                    this.gMarkers.each(function(b) {
                        return function(c) {
                            if (!c.isDrawn) {
                                if (c.doAdd) {
                                    c.setMap(b.gMap);
                                    return c.isDrawn = true;
                                } else {
                                    return a.push(c);
                                }
                            }
                        };
                    }(this));
                    return a.forEach(function(a) {
                        return function(b) {
                            b.isDrawn = false;
                            return a.remove(b, true);
                        };
                    }(this));
                };
                e.prototype.destroy = function() {
                    return this.clear();
                };
                e.prototype.clear = function() {
                    this.gMarkers.each(function(a) {
                        return a.setMap(null);
                    });
                    delete this.gMarkers;
                    return this.gMarkers = new d();
                };
                e.prototype.handleOptDraw = function(a, b, c) {
                    if (b === true) {
                        if (c) {
                            a.setMap(this.gMap);
                        } else {
                            a.setMap(null);
                        }
                        return a.isDrawn = true;
                    } else {
                        a.isDrawn = false;
                        return a.doAdd = c;
                    }
                };
                e.prototype.fit = function() {
                    return c.fit(this.getGMarkers(), this.gMap);
                };
                e.prototype.getGMarkers = function() {
                    return this.gMarkers.values();
                };
                return e;
            }();
            return e;
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        };
        b.module("uiGmapgoogle-maps.directives.api.managers").factory("uiGmapSpiderfierMarkerManager", [ "uiGmapLogger", "uiGmapFitHelper", "uiGmapPropMap", "uiGmapMarkerSpiderfier", function(d, e, f, g) {
            var h;
            return h = function() {
                h.type = "SpiderfierMarkerManager";
                function h(b, c, e, i, j) {
                    if (c == null) {
                        c = {};
                    }
                    this.opt_options = e != null ? e : {};
                    this.opt_events = i;
                    this.scope = j;
                    this.isSpiderfied = a(this.isSpiderfied, this);
                    this.getGMarkers = a(this.getGMarkers, this);
                    this.fit = a(this.fit, this);
                    this.destroy = a(this.destroy, this);
                    this.attachEvents = a(this.attachEvents, this);
                    this.clear = a(this.clear, this);
                    this.removeMany = a(this.removeMany, this);
                    this.remove = a(this.remove, this);
                    this.addMany = a(this.addMany, this);
                    this.update = a(this.update, this);
                    this.add = a(this.add, this);
                    this.type = h.type;
                    this.markerSpiderfier = new g(b, this.opt_options);
                    this.propMapGMarkers = new f();
                    this.attachEvents(this.opt_events, "opt_events");
                    this.noDrawOnSingleAddRemoves = true;
                    d.info(this);
                }
                h.prototype.checkKey = function(a) {
                    var b;
                    if (a.key == null) {
                        b = "gMarker.key undefined and it is REQUIRED!!";
                        return d.error(b);
                    }
                };
                h.prototype.add = function(a) {
                    a.setMap(this.markerSpiderfier.map);
                    this.checkKey(a);
                    this.markerSpiderfier.addMarker(a, this.noDrawOnSingleAddRemoves);
                    this.propMapGMarkers.put(a.key, a);
                    return this.checkSync();
                };
                h.prototype.update = function(a) {
                    this.remove(a);
                    return this.add(a);
                };
                h.prototype.addMany = function(a) {
                    return a.forEach(function(a) {
                        return function(b) {
                            return a.add(b);
                        };
                    }(this));
                };
                h.prototype.remove = function(a) {
                    var b;
                    this.checkKey(a);
                    b = this.propMapGMarkers.get(a.key);
                    if (b) {
                        a.setMap(null);
                        this.markerSpiderfier.removeMarker(a, this.noDrawOnSingleAddRemoves);
                        this.propMapGMarkers.remove(a.key);
                    }
                    return this.checkSync();
                };
                h.prototype.removeMany = function(a) {
                    return a.forEach(function(a) {
                        return function(b) {
                            return a.remove(b);
                        };
                    }(this));
                };
                h.prototype.draw = function() {};
                h.prototype.clear = function() {
                    return this.removeMany(this.getGMarkers());
                };
                h.prototype.attachEvents = function(a, e) {
                    if (b.isDefined(a) && a != null && b.isObject(a)) {
                        return c.each(a, function(c) {
                            return function(f, g) {
                                if (a.hasOwnProperty(g) && b.isFunction(a[g])) {
                                    d.info(e + ": Attaching event: " + g + " to markerSpiderfier");
                                    return c.markerSpiderfier.addListener(g, function() {
                                        if (g === "spiderfy" || g === "unspiderfy") {
                                            return c.scope.$evalAsync(a[g].apply(a, arguments));
                                        } else {
                                            return c.scope.$evalAsync(a[g].apply(a, [ arguments[0], g, arguments[0].model, arguments ]));
                                        }
                                    });
                                }
                            };
                        }(this));
                    }
                };
                h.prototype.clearEvents = function(a, c) {
                    var e, f;
                    if (b.isDefined(a) && a != null && b.isObject(a)) {
                        for (f in a) {
                            e = a[f];
                            if (a.hasOwnProperty(f) && b.isFunction(a[f])) {
                                d.info(c + ": Clearing event: " + f + " to markerSpiderfier");
                                this.markerSpiderfier.clearListeners(f);
                            }
                        }
                    }
                };
                h.prototype.destroy = function() {
                    this.clearEvents(this.opt_events, "opt_events");
                    return this.clear();
                };
                h.prototype.fit = function() {
                    return e.fit(this.getGMarkers(), this.markerSpiderfier.map);
                };
                h.prototype.getGMarkers = function() {
                    return this.markerSpiderfier.getMarkers();
                };
                h.prototype.isSpiderfied = function() {
                    return c.find(this.getGMarkers(), function(a) {
                        return (a != null ? a._omsData : void 0) != null;
                    });
                };
                h.prototype.checkSync = function() {};
                return h;
            }();
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").factory("uiGmapadd-events", [ "$timeout", function(a) {
            var c, d;
            c = function(b, c, d) {
                return google.maps.event.addListener(b, c, function() {
                    d.apply(this, arguments);
                    return a(function() {}, true);
                });
            };
            d = function(a, d, e) {
                var f;
                if (e) {
                    return c(a, d, e);
                }
                f = [];
                b.forEach(d, function(b, d) {
                    return f.push(c(a, d, b));
                });
                return function() {
                    b.forEach(f, function(a) {
                        return google.maps.event.removeListener(a);
                    });
                    return f = null;
                };
            };
            return d;
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").factory("uiGmaparray-sync", [ "uiGmapadd-events", function(a) {
            return function(c, d, e, f) {
                var g, h, i, j, k, l, m, n, o;
                j = false;
                n = d.$eval(e);
                if (!d["static"]) {
                    k = {
                        set_at: function(a) {
                            var b;
                            if (j) {
                                return;
                            }
                            b = c.getAt(a);
                            if (!b) {
                                return;
                            }
                            if (!b.lng || !b.lat) {
                                return n[a] = b;
                            } else {
                                n[a].latitude = b.lat();
                                return n[a].longitude = b.lng();
                            }
                        },
                        insert_at: function(a) {
                            var b;
                            if (j) {
                                return;
                            }
                            b = c.getAt(a);
                            if (!b) {
                                return;
                            }
                            if (!b.lng || !b.lat) {
                                return n.splice(a, 0, b);
                            } else {
                                return n.splice(a, 0, {
                                    latitude: b.lat(),
                                    longitude: b.lng()
                                });
                            }
                        },
                        remove_at: function(a) {
                            if (j) {
                                return;
                            }
                            return n.splice(a, 1);
                        }
                    };
                    g;
                    if (n.type === "Polygon") {
                        g = n.coordinates[0];
                    } else if (n.type === "LineString") {
                        g = n.coordinates;
                    }
                    h = {
                        set_at: function(a) {
                            var b;
                            if (j) {
                                return;
                            }
                            b = c.getAt(a);
                            if (!(b && b.lng && b.lat)) {
                                return;
                            }
                            g[a][1] = b.lat();
                            return g[a][0] = b.lng();
                        },
                        insert_at: function(a) {
                            var b;
                            if (j) {
                                return;
                            }
                            b = c.getAt(a);
                            if (!b) {
                                return;
                            }
                            if (!b.lng || !b.lat) {
                                return;
                            }
                            return g.splice(a, 0, [ b.lng(), b.lat() ]);
                        },
                        remove_at: function(a) {
                            if (j) {
                                return;
                            }
                            return g.splice(a, 1);
                        }
                    };
                    m = a(c, b.isUndefined(n.type) ? k : h);
                }
                l = function(a) {
                    var b, d, e, g, h, i, k, l;
                    j = true;
                    i = c;
                    b = false;
                    if (a) {
                        d = 0;
                        k = i.getLength();
                        g = a.length;
                        e = Math.min(k, g);
                        h = void 0;
                        while (d < e) {
                            l = i.getAt(d);
                            h = a[d];
                            if (typeof h.equals === "function") {
                                if (!h.equals(l)) {
                                    i.setAt(d, h);
                                    b = true;
                                }
                            } else {
                                if (l.lat() !== h.latitude || l.lng() !== h.longitude) {
                                    i.setAt(d, new google.maps.LatLng(h.latitude, h.longitude));
                                    b = true;
                                }
                            }
                            d++;
                        }
                        while (d < g) {
                            h = a[d];
                            if (typeof h.lat === "function" && typeof h.lng === "function") {
                                i.push(h);
                            } else {
                                i.push(new google.maps.LatLng(h.latitude, h.longitude));
                            }
                            b = true;
                            d++;
                        }
                        while (d < k) {
                            i.pop();
                            b = true;
                            d++;
                        }
                    }
                    j = false;
                    if (b) {
                        return f(i);
                    }
                };
                i = function(a) {
                    var b, d, e, g, h, i, k, l, m;
                    j = true;
                    k = c;
                    d = false;
                    if (a) {
                        b;
                        if (n.type === "Polygon") {
                            b = a.coordinates[0];
                        } else if (n.type === "LineString") {
                            b = a.coordinates;
                        }
                        e = 0;
                        l = k.getLength();
                        h = b.length;
                        g = Math.min(l, h);
                        i = void 0;
                        while (e < g) {
                            m = k.getAt(e);
                            i = b[e];
                            if (m.lat() !== i[1] || m.lng() !== i[0]) {
                                k.setAt(e, new google.maps.LatLng(i[1], i[0]));
                                d = true;
                            }
                            e++;
                        }
                        while (e < h) {
                            i = b[e];
                            k.push(new google.maps.LatLng(i[1], i[0]));
                            d = true;
                            e++;
                        }
                        while (e < l) {
                            k.pop();
                            d = true;
                            e++;
                        }
                    }
                    j = false;
                    if (d) {
                        return f(k);
                    }
                };
                o;
                if (!d["static"]) {
                    if (b.isUndefined(n.type)) {
                        o = d.$watchCollection(e, l);
                    } else {
                        o = d.$watch(e, i, true);
                    }
                }
                return function() {
                    if (m) {
                        m();
                        m = null;
                    }
                    if (o) {
                        o();
                        return o = null;
                    }
                };
            };
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.utils").factory("uiGmapChromeFixes", [ "$timeout", function(a) {
            return {
                maybeRepaint: function(b) {
                    if (b) {
                        b.style.opacity = .9;
                        return a(function() {
                            return b.style.opacity = 1;
                        });
                    }
                }
            };
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").service("uiGmapObjectIterators", function() {
            var a, b, d, e;
            a = [ "length", "forEach", "map" ];
            b = [];
            d = function(b) {
                b.forEach = function(d) {
                    return c.each(c.omit(b, a), function(a) {
                        if (!c.isFunction(a)) {
                            return d(a);
                        }
                    });
                };
                return b;
            };
            b.push(d);
            e = function(b) {
                b.map = function(d) {
                    return c.map(c.omit(b, a), function(a) {
                        if (!c.isFunction(a)) {
                            return d(a);
                        }
                    });
                };
                return b;
            };
            b.push(e);
            return {
                slapMap: e,
                slapForEach: d,
                slapAll: function(a) {
                    b.forEach(function(b) {
                        return b(a);
                    });
                    return a;
                }
            };
        });
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, c = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.options.builders").service("uiGmapCommonOptionsBuilder", [ "uiGmapBaseObject", "uiGmapLogger", "uiGmapModelKey", function(d, e, f) {
            var g;
            return g = function(d) {
                c(f, d);
                function f() {
                    this.watchProps = a(this.watchProps, this);
                    this.buildOpts = a(this.buildOpts, this);
                    return f.__super__.constructor.apply(this, arguments);
                }
                f.prototype.props = [ "clickable", "draggable", "editable", "visible", {
                    prop: "stroke",
                    isColl: true
                } ];
                f.prototype.getCorrectModel = function(a) {
                    if (b.isDefined(a != null ? a.model : void 0)) {
                        return a.model;
                    } else {
                        return a;
                    }
                };
                f.prototype.buildOpts = function(a, c, d) {
                    var f, g, h;
                    if (a == null) {
                        a = {};
                    }
                    if (d == null) {
                        d = {};
                    }
                    if (!this.scope) {
                        e.error("this.scope not defined in CommonOptionsBuilder can not buildOpts");
                        return;
                    }
                    if (!this.gMap) {
                        e.error("this.map not defined in CommonOptionsBuilder can not buildOpts");
                        return;
                    }
                    f = this.getCorrectModel(this.scope);
                    h = this.scopeOrModelVal("stroke", this.scope, f);
                    g = b.extend(a, this.DEFAULTS, {
                        map: this.gMap,
                        strokeColor: h != null ? h.color : void 0,
                        strokeOpacity: h != null ? h.opacity : void 0,
                        strokeWeight: h != null ? h.weight : void 0
                    });
                    b.forEach(b.extend(d, {
                        clickable: true,
                        draggable: false,
                        editable: false,
                        static: false,
                        fit: false,
                        visible: true,
                        zIndex: 0,
                        icons: []
                    }), function(a) {
                        return function(d, e) {
                            var h;
                            h = c ? c[e] : a.scopeOrModelVal(e, a.scope, f);
                            if (b.isUndefined(h)) {
                                return g[e] = d;
                            } else {
                                return g[e] = f[e];
                            }
                        };
                    }(this));
                    if (g["static"]) {
                        g.editable = false;
                    }
                    return g;
                };
                f.prototype.watchProps = function(a) {
                    if (a == null) {
                        a = this.props;
                    }
                    return a.forEach(function(a) {
                        return function(b) {
                            if (a.attrs[b] != null || a.attrs[b != null ? b.prop : void 0] != null) {
                                if (b != null ? b.isColl : void 0) {
                                    return a.scope.$watchCollection(b.prop, a.setMyOptions);
                                } else {
                                    return a.scope.$watch(b, a.setMyOptions);
                                }
                            }
                        };
                    }(this));
                };
                return f;
            }(f);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var d in b) {
                if (c.call(b, d)) a[d] = b[d];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, c = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.options.builders").factory("uiGmapPolylineOptionsBuilder", [ "uiGmapCommonOptionsBuilder", function(b) {
            var c;
            return c = function(b) {
                a(c, b);
                function c() {
                    return c.__super__.constructor.apply(this, arguments);
                }
                c.prototype.buildOpts = function(a, b) {
                    return c.__super__.buildOpts.call(this, {
                        path: a
                    }, b, {
                        geodesic: false
                    });
                };
                return c;
            }(b);
        } ]).factory("uiGmapShapeOptionsBuilder", [ "uiGmapCommonOptionsBuilder", function(c) {
            var d;
            return d = function(c) {
                a(d, c);
                function d() {
                    return d.__super__.constructor.apply(this, arguments);
                }
                d.prototype.buildOpts = function(a, c, e) {
                    var f, g;
                    g = this.getCorrectModel(this.scope);
                    f = c ? c["fill"] : this.scopeOrModelVal("fill", this.scope, g);
                    a = b.extend(a, {
                        fillColor: f != null ? f.color : void 0,
                        fillOpacity: f != null ? f.opacity : void 0
                    });
                    return d.__super__.buildOpts.call(this, a, c, e);
                };
                return d;
            }(c);
        } ]).factory("uiGmapPolygonOptionsBuilder", [ "uiGmapShapeOptionsBuilder", function(b) {
            var c;
            return c = function(b) {
                a(c, b);
                function c() {
                    return c.__super__.constructor.apply(this, arguments);
                }
                c.prototype.buildOpts = function(a, b) {
                    return c.__super__.buildOpts.call(this, {
                        path: a
                    }, b, {
                        geodesic: false
                    });
                };
                return c;
            }(b);
        } ]).factory("uiGmapRectangleOptionsBuilder", [ "uiGmapShapeOptionsBuilder", function(b) {
            var c;
            return c = function(b) {
                a(c, b);
                function c() {
                    return c.__super__.constructor.apply(this, arguments);
                }
                c.prototype.buildOpts = function(a, b) {
                    return c.__super__.buildOpts.call(this, {
                        bounds: a
                    }, b);
                };
                return c;
            }(b);
        } ]).factory("uiGmapCircleOptionsBuilder", [ "uiGmapShapeOptionsBuilder", function(b) {
            var c;
            return c = function(b) {
                a(c, b);
                function c() {
                    return c.__super__.constructor.apply(this, arguments);
                }
                c.prototype.buildOpts = function(a, b, d) {
                    return c.__super__.buildOpts.call(this, {
                        center: a,
                        radius: b
                    }, d);
                };
                return c;
            }(b);
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.options").service("uiGmapMarkerOptions", [ "uiGmapLogger", "uiGmapGmapUtil", function(a, d) {
            return c.extend(d, {
                createOptions: function(a, c, e, f) {
                    var g;
                    if (e == null) {
                        e = {};
                    }
                    g = b.extend({}, e, {
                        position: e.position != null ? e.position : d.getCoords(a),
                        visible: e.visible != null ? e.visible : d.validateCoords(a)
                    });
                    if (e.icon != null || c != null) {
                        g = b.extend(g, {
                            icon: e.icon != null ? e.icon : c
                        });
                    }
                    if (f != null) {
                        g.map = f;
                    }
                    return g;
                },
                isLabel: function(a) {
                    if (a == null) {
                        return false;
                    }
                    return a.labelContent != null || a.labelAnchor != null || a.labelClass != null || a.labelStyle != null || a.labelVisible != null;
                }
            });
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, d = function(a, b) {
            for (var c in b) {
                if (e.call(b, c)) a[c] = b[c];
            }
            function d() {
                this.constructor = a;
            }
            d.prototype = b.prototype;
            a.prototype = new d();
            a.__super__ = b.prototype;
            return a;
        }, e = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapBasePolyChildModel", [ "uiGmapLogger", "$timeout", "uiGmaparray-sync", "uiGmapGmapUtil", "uiGmapEventsHelper", function(e, f, g, h, i) {
            return function(e, f) {
                var j;
                return j = function(e) {
                    d(j, e);
                    j.include(h);
                    function j(d) {
                        var e, h, j;
                        this.scope = d.scope, this.attrs = d.attrs, this.gMap = d.gMap, this.defaults = d.defaults, 
                        this.model = d.model, h = d.gObjectChangeCb, this.isScopeModel = (j = d.isScopeModel) != null ? j : false;
                        this.clean = a(this.clean, this);
                        if (this.isScopeModel) {
                            this.clonedModel = c.clone(this.model, true);
                        }
                        this.isDragging = false;
                        this.internalEvents = {
                            dragend: function(a) {
                                return function() {
                                    return c.defer(function() {
                                        return a.isDragging = false;
                                    });
                                };
                            }(this),
                            dragstart: function(a) {
                                return function() {
                                    return a.isDragging = true;
                                };
                            }(this)
                        };
                        e = function(a) {
                            return function() {
                                var c;
                                if (a.isDragging) {
                                    return;
                                }
                                a.pathPoints = a.convertPathPoints(a.scope.path);
                                if (a.gObject != null) {
                                    a.clean();
                                }
                                if (a.scope.model != null) {
                                    c = a.scope;
                                }
                                if (a.pathPoints.length > 0) {
                                    a.gObject = f(a.buildOpts(a.pathPoints, c));
                                }
                                if (a.gObject) {
                                    g(a.gObject.getPath(), a.scope, "path", function(b) {
                                        a.pathPoints = b;
                                        if (h != null) {
                                            return h();
                                        }
                                    });
                                    if (b.isDefined(a.scope.events) && b.isObject(a.scope.events)) {
                                        a.listeners = a.model ? i.setEvents(a.gObject, a.scope, a.model) : i.setEvents(a.gObject, a.scope, a.scope);
                                    }
                                    return a.internalListeners = a.model ? i.setEvents(a.gObject, {
                                        events: a.internalEvents
                                    }, a.model) : i.setEvents(a.gObject, {
                                        events: a.internalEvents
                                    }, a.scope);
                                }
                            };
                        }(this);
                        e();
                        this.scope.$watch("path", function(a) {
                            return function(b, d) {
                                if (!c.isEqual(b, d) || !a.gObject) {
                                    return e();
                                }
                            };
                        }(this), true);
                        if (!this.scope["static"] && b.isDefined(this.scope.editable)) {
                            this.scope.$watch("editable", function(a) {
                                return function(b, c) {
                                    var d;
                                    if (b !== c) {
                                        b = !a.isFalse(b);
                                        return (d = a.gObject) != null ? d.setEditable(b) : void 0;
                                    }
                                };
                            }(this), true);
                        }
                        if (b.isDefined(this.scope.draggable)) {
                            this.scope.$watch("draggable", function(a) {
                                return function(b, c) {
                                    var d;
                                    if (b !== c) {
                                        b = !a.isFalse(b);
                                        return (d = a.gObject) != null ? d.setDraggable(b) : void 0;
                                    }
                                };
                            }(this), true);
                        }
                        if (b.isDefined(this.scope.visible)) {
                            this.scope.$watch("visible", function(a) {
                                return function(b, c) {
                                    var d;
                                    if (b !== c) {
                                        b = !a.isFalse(b);
                                    }
                                    return (d = a.gObject) != null ? d.setVisible(b) : void 0;
                                };
                            }(this), true);
                        }
                        if (b.isDefined(this.scope.geodesic)) {
                            this.scope.$watch("geodesic", function(a) {
                                return function(b, c) {
                                    var d;
                                    if (b !== c) {
                                        b = !a.isFalse(b);
                                        return (d = a.gObject) != null ? d.setOptions(a.buildOpts(a.gObject.getPath())) : void 0;
                                    }
                                };
                            }(this), true);
                        }
                        if (b.isDefined(this.scope.stroke) && b.isDefined(this.scope.stroke.weight)) {
                            this.scope.$watch("stroke.weight", function(a) {
                                return function(b, c) {
                                    var d;
                                    if (b !== c) {
                                        return (d = a.gObject) != null ? d.setOptions(a.buildOpts(a.gObject.getPath())) : void 0;
                                    }
                                };
                            }(this), true);
                        }
                        if (b.isDefined(this.scope.stroke) && b.isDefined(this.scope.stroke.color)) {
                            this.scope.$watch("stroke.color", function(a) {
                                return function(b, c) {
                                    var d;
                                    if (b !== c) {
                                        return (d = a.gObject) != null ? d.setOptions(a.buildOpts(a.gObject.getPath())) : void 0;
                                    }
                                };
                            }(this), true);
                        }
                        if (b.isDefined(this.scope.stroke) && b.isDefined(this.scope.stroke.opacity)) {
                            this.scope.$watch("stroke.opacity", function(a) {
                                return function(b, c) {
                                    var d;
                                    if (b !== c) {
                                        return (d = a.gObject) != null ? d.setOptions(a.buildOpts(a.gObject.getPath())) : void 0;
                                    }
                                };
                            }(this), true);
                        }
                        if (b.isDefined(this.scope.icons)) {
                            this.scope.$watch("icons", function(a) {
                                return function(b, c) {
                                    var d;
                                    if (b !== c) {
                                        return (d = a.gObject) != null ? d.setOptions(a.buildOpts(a.gObject.getPath())) : void 0;
                                    }
                                };
                            }(this), true);
                        }
                        this.scope.$on("$destroy", function(a) {
                            return function() {
                                a.clean();
                                return a.scope = null;
                            };
                        }(this));
                        if (b.isDefined(this.scope.fill) && b.isDefined(this.scope.fill.color)) {
                            this.scope.$watch("fill.color", function(a) {
                                return function(b, c) {
                                    if (b !== c) {
                                        return a.gObject.setOptions(a.buildOpts(a.gObject.getPath()));
                                    }
                                };
                            }(this));
                        }
                        if (b.isDefined(this.scope.fill) && b.isDefined(this.scope.fill.opacity)) {
                            this.scope.$watch("fill.opacity", function(a) {
                                return function(b, c) {
                                    if (b !== c) {
                                        return a.gObject.setOptions(a.buildOpts(a.gObject.getPath()));
                                    }
                                };
                            }(this));
                        }
                        if (b.isDefined(this.scope.zIndex)) {
                            this.scope.$watch("zIndex", function(a) {
                                return function(b, c) {
                                    if (b !== c) {
                                        return a.gObject.setOptions(a.buildOpts(a.gObject.getPath()));
                                    }
                                };
                            }(this));
                        }
                    }
                    j.prototype.clean = function() {
                        var a;
                        i.removeEvents(this.listeners);
                        i.removeEvents(this.internalListeners);
                        if ((a = this.gObject) != null) {
                            a.setMap(null);
                        }
                        return this.gObject = null;
                    };
                    return j;
                }(e);
            };
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api.models.child").factory("uiGmapDrawFreeHandChildModel", [ "uiGmapLogger", "$q", function(a, b) {
            var d, e;
            d = function(a, b, c) {
                var d, e;
                e = new google.maps.Polyline({
                    map: a,
                    clickable: false
                });
                d = google.maps.event.addListener(a, "mousemove", function(a) {
                    return e.getPath().push(a.latLng);
                });
                google.maps.event.addListenerOnce(a, "mouseup", function(f) {
                    var g;
                    google.maps.event.removeListener(d);
                    g = e.getPath();
                    e.setMap(null);
                    b.push(new google.maps.Polygon({
                        map: a,
                        path: g
                    }));
                    e = null;
                    google.maps.event.clearListeners(a.getDiv(), "mousedown");
                    return c();
                });
                return void 0;
            };
            e = function(e, f) {
                var g, h;
                this.map = e;
                g = function(b) {
                    return function() {
                        var c;
                        c = {
                            draggable: false,
                            disableDefaultUI: true,
                            scrollwheel: false,
                            disableDoubleClickZoom: false
                        };
                        a.info("disabling map move");
                        return b.map.setOptions(c);
                    };
                }(this);
                h = function(a) {
                    return function() {
                        var b, d;
                        b = {
                            draggable: true,
                            disableDefaultUI: false,
                            scrollwheel: true,
                            disableDoubleClickZoom: true
                        };
                        if ((d = a.deferred) != null) {
                            d.resolve();
                        }
                        return c.defer(function() {
                            return a.map.setOptions(c.extend(b, f.options));
                        });
                    };
                }(this);
                this.engage = function(c) {
                    return function(e) {
                        c.polys = e;
                        c.deferred = b.defer();
                        g();
                        a.info("DrawFreeHandChildModel is engaged (drawing).");
                        google.maps.event.addDomListener(c.map.getDiv(), "mousedown", function(a) {
                            return d(c.map, c.polys, h);
                        });
                        return c.deferred.promise;
                    };
                }(this);
                return this;
            };
            return e;
        } ]);
    }).call(this);
    (function() {
        var d = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, e = function(a, b) {
            for (var c in b) {
                if (f.call(b, c)) a[c] = b[c];
            }
            function d() {
                this.constructor = a;
            }
            d.prototype = b.prototype;
            a.prototype = new d();
            a.__super__ = b.prototype;
            return a;
        }, f = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.child").factory("uiGmapMarkerChildModel", [ "uiGmapModelKey", "uiGmapGmapUtil", "uiGmapLogger", "uiGmapEventsHelper", "uiGmapPropertyAction", "uiGmapMarkerOptions", "uiGmapIMarker", "uiGmapMarkerManager", "uiGmapPromise", function(f, g, h, i, j, k, l, m, n) {
            var o;
            o = function(f) {
                var o;
                e(p, f);
                p.include(g);
                p.include(i);
                p.include(k);
                o = function(a) {
                    if ((a != null ? a.gObject : void 0) != null) {
                        a.removeEvents(a.externalListeners);
                        a.removeEvents(a.internalListeners);
                        if (a != null ? a.gObject : void 0) {
                            if (a.removeFromManager) {
                                a.gManager.remove(a.gObject);
                            }
                            a.gObject.setMap(null);
                            return a.gObject = null;
                        }
                    }
                };
                function p(a) {
                    this.internalEvents = d(this.internalEvents, this);
                    this.setLabelOptions = d(this.setLabelOptions, this);
                    this.setOptions = d(this.setOptions, this);
                    this.setIcon = d(this.setIcon, this);
                    this.setCoords = d(this.setCoords, this);
                    this.isNotValid = d(this.isNotValid, this);
                    this.maybeSetScopeValue = d(this.maybeSetScopeValue, this);
                    this.createMarker = d(this.createMarker, this);
                    this.setMyScope = d(this.setMyScope, this);
                    this.updateModel = d(this.updateModel, this);
                    this.handleModelChanges = d(this.handleModelChanges, this);
                    this.destroy = d(this.destroy, this);
                    var b, e, f, g, i, k, l;
                    l = a.scope, this.model = a.model, this.keys = a.keys, this.gMap = a.gMap, this.defaults = (e = a.defaults) != null ? e : {}, 
                    this.doClick = a.doClick, this.gManager = a.gManager, this.doDrawSelf = (f = a.doDrawSelf) != null ? f : true, 
                    this.trackModel = (g = a.trackModel) != null ? g : true, this.needRedraw = (i = a.needRedraw) != null ? i : false, 
                    this.isScopeModel = (k = a.isScopeModel) != null ? k : false;
                    if (this.isScopeModel) {
                        this.clonedModel = c.clone(this.model, true);
                    }
                    this.deferred = n.defer();
                    c.each(this.keys, function(a) {
                        return function(b, d) {
                            var e;
                            e = a.keys[d];
                            if (e != null && !c.isFunction(e) && c.isString(e)) {
                                return a[d + "Key"] = e;
                            }
                        };
                    }(this));
                    this.idKey = this.idKeyKey || "id";
                    if (this.model[this.idKey] != null) {
                        this.id = this.model[this.idKey];
                    }
                    p.__super__.constructor.call(this, l);
                    this.scope.getGMarker = function(a) {
                        return function() {
                            return a.gObject;
                        };
                    }(this);
                    this.firstTime = true;
                    if (this.trackModel) {
                        this.scope.model = this.model;
                        this.scope.$watch("model", function(a) {
                            return function(b, c) {
                                if (b !== c) {
                                    return a.handleModelChanges(b, c);
                                }
                            };
                        }(this), true);
                    } else {
                        b = new j(function(a) {
                            return function(b) {
                                if (c.isFunction(b)) {
                                    b = "all";
                                }
                                if (!a.firstTime) {
                                    return a.setMyScope(b, l);
                                }
                            };
                        }(this), false);
                        c.each(this.keys, function(a, c) {
                            return l.$watch(c, b.sic(c), true);
                        });
                    }
                    this.scope.$on("$destroy", function(a) {
                        return function() {
                            return o(a);
                        };
                    }(this));
                    this.createMarker(this.model);
                    h.info(this);
                }
                p.prototype.destroy = function(a) {
                    if (a == null) {
                        a = true;
                    }
                    this.removeFromManager = a;
                    return this.scope.$destroy();
                };
                p.prototype.handleModelChanges = function(a, b) {
                    var d, e, f;
                    d = this.getChanges(a, b, l.keys);
                    if (!this.firstTime) {
                        e = 0;
                        f = c.keys(d).length;
                        return c.each(d, function(c) {
                            return function(d, g) {
                                var h;
                                e += 1;
                                h = f === e;
                                c.setMyScope(g, a, b, false, true, h);
                                return c.needRedraw = true;
                            };
                        }(this));
                    }
                };
                p.prototype.updateModel = function(a) {
                    if (this.isScopeModel) {
                        this.clonedModel = c.clone(a, true);
                    }
                    return this.setMyScope("all", a, this.model);
                };
                p.prototype.renderGMarker = function(b, c) {
                    var d, e, f;
                    if (b == null) {
                        b = true;
                    }
                    d = this.getProp("coords", this.scope, this.model);
                    if (((f = this.gManager) != null ? f.isSpiderfied : void 0) != null) {
                        e = this.gManager.isSpiderfied();
                    }
                    if (d != null) {
                        if (!this.validateCoords(d)) {
                            h.debug("MarkerChild does not have coords yet. They may be defined later.");
                            return;
                        }
                        if (c != null) {
                            c();
                        }
                        if (b && this.gObject) {
                            this.gManager.add(this.gObject);
                        }
                        if (e) {
                            return this.gManager.markerSpiderfier.spiderListener(this.gObject, a.event);
                        }
                    } else {
                        if (b && this.gObject) {
                            return this.gManager.remove(this.gObject);
                        }
                    }
                };
                p.prototype.setMyScope = function(a, b, d, e, f) {
                    var g;
                    if (d == null) {
                        d = void 0;
                    }
                    if (e == null) {
                        e = false;
                    }
                    if (f == null) {
                        f = true;
                    }
                    if (b == null) {
                        b = this.model;
                    } else {
                        this.model = b;
                    }
                    if (!this.gObject) {
                        this.setOptions(this.scope, f);
                        g = true;
                    }
                    switch (a) {
                      case "all":
                        return c.each(this.keys, function(a) {
                            return function(c, g) {
                                return a.setMyScope(g, b, d, e, f);
                            };
                        }(this));

                      case "icon":
                        return this.maybeSetScopeValue({
                            gSetter: this.setIcon,
                            doDraw: f
                        });

                      case "coords":
                        return this.maybeSetScopeValue({
                            gSetter: this.setCoords,
                            doDraw: f
                        });

                      case "options":
                        if (!g) {
                            return this.createMarker(b, d, e, f);
                        }
                    }
                };
                p.prototype.createMarker = function(a, b, c, d) {
                    if (b == null) {
                        b = void 0;
                    }
                    if (c == null) {
                        c = false;
                    }
                    if (d == null) {
                        d = true;
                    }
                    this.maybeSetScopeValue({
                        gSetter: this.setOptions,
                        doDraw: d
                    });
                    return this.firstTime = false;
                };
                p.prototype.maybeSetScopeValue = function(a) {
                    var b, c, d;
                    c = a.gSetter, b = (d = a.doDraw) != null ? d : true;
                    if (c != null) {
                        c(this.scope, b);
                    }
                    if (this.doDrawSelf && b) {
                        return this.gManager.draw();
                    }
                };
                p.prototype.isNotValid = function(a, b) {
                    var c, d;
                    if (b == null) {
                        b = true;
                    }
                    d = !b ? false : this.gObject === void 0;
                    c = !this.trackModel ? a.$id !== this.scope.$id : false;
                    return c || d;
                };
                p.prototype.setCoords = function(a, b) {
                    if (b == null) {
                        b = true;
                    }
                    if (this.isNotValid(a) || this.gObject == null) {
                        return;
                    }
                    return this.renderGMarker(b, function(b) {
                        return function() {
                            var c, d, e;
                            d = b.getProp("coords", a, b.model);
                            c = b.getCoords(d);
                            e = b.gObject.getPosition();
                            if (e != null && c != null) {
                                if (c.lng() === e.lng() && c.lat() === e.lat()) {
                                    return;
                                }
                            }
                            b.gObject.setPosition(c);
                            return b.gObject.setVisible(b.validateCoords(d));
                        };
                    }(this));
                };
                p.prototype.setIcon = function(a, b) {
                    if (b == null) {
                        b = true;
                    }
                    if (this.isNotValid(a) || this.gObject == null) {
                        return;
                    }
                    return this.renderGMarker(b, function(b) {
                        return function() {
                            var c, d, e;
                            e = b.gObject.getIcon();
                            d = b.getProp("icon", a, b.model);
                            if (e === d) {
                                return;
                            }
                            b.gObject.setIcon(d);
                            c = b.getProp("coords", a, b.model);
                            b.gObject.setPosition(b.getCoords(c));
                            return b.gObject.setVisible(b.validateCoords(c));
                        };
                    }(this));
                };
                p.prototype.setOptions = function(a, b) {
                    var d;
                    if (b == null) {
                        b = true;
                    }
                    if (this.isNotValid(a, false)) {
                        return;
                    }
                    this.renderGMarker(b, function(b) {
                        return function() {
                            var d, e, f;
                            e = b.getProp("coords", a, b.model);
                            f = b.getProp("icon", a, b.model);
                            d = b.getProp("options", a, b.model);
                            b.opts = b.createOptions(e, f, d);
                            if (b.isLabel(b.gObject) !== b.isLabel(b.opts) && b.gObject != null) {
                                b.gManager.remove(b.gObject);
                                b.gObject = void 0;
                            }
                            if (b.gObject != null) {
                                b.gObject.setOptions(b.setLabelOptions(b.opts));
                            }
                            if (!b.gObject) {
                                if (b.isLabel(b.opts)) {
                                    b.gObject = new MarkerWithLabel(b.setLabelOptions(b.opts));
                                } else if (b.opts.content) {
                                    b.gObject = new RichMarker(b.opts);
                                    b.gObject.getIcon = b.gObject.getContent;
                                    b.gObject.setIcon = b.gObject.setContent;
                                } else {
                                    b.gObject = new google.maps.Marker(b.opts);
                                }
                                c.extend(b.gObject, {
                                    model: b.model
                                });
                            }
                            if (b.externalListeners) {
                                b.removeEvents(b.externalListeners);
                            }
                            if (b.internalListeners) {
                                b.removeEvents(b.internalListeners);
                            }
                            b.externalListeners = b.setEvents(b.gObject, b.scope, b.model, [ "dragend" ]);
                            b.internalListeners = b.setEvents(b.gObject, {
                                events: b.internalEvents(),
                                $evalAsync: function() {}
                            }, b.model);
                            if (b.id != null) {
                                return b.gObject.key = b.id;
                            }
                        };
                    }(this));
                    if (this.gObject && (this.gObject.getMap() || this.gManager.type !== m.type)) {
                        this.deferred.resolve(this.gObject);
                    } else {
                        if (!this.gObject) {
                            return this.deferred.reject("gObject is null");
                        }
                        if (!(((d = this.gObject) != null ? d.getMap() : void 0) && this.gManager.type === m.type)) {
                            h.debug("gObject has no map yet");
                            this.deferred.resolve(this.gObject);
                        }
                    }
                    if (this.model[this.fitKey]) {
                        return this.gManager.fit();
                    }
                };
                p.prototype.setLabelOptions = function(a) {
                    if (a.labelAnchor) {
                        a.labelAnchor = this.getLabelPositionPoint(a.labelAnchor);
                    }
                    return a;
                };
                p.prototype.internalEvents = function() {
                    return {
                        dragend: function(a) {
                            return function(b, c, d, e) {
                                var f, g, h;
                                g = a.trackModel ? a.scope.model : a.model;
                                h = a.setCoordsFromEvent(a.modelOrKey(g, a.coordsKey), a.gObject.getPosition());
                                g = a.setVal(d, a.coordsKey, h);
                                f = a.scope.events;
                                if ((f != null ? f.dragend : void 0) != null) {
                                    f.dragend(b, c, g, e);
                                }
                                return a.scope.$apply();
                            };
                        }(this),
                        click: function(a) {
                            return function(c, d, e, f) {
                                var g;
                                g = a.getProp("click", a.scope, a.model);
                                if (a.doClick && b.isFunction(g)) {
                                    return a.scope.$evalAsync(g(c, d, a.model, f));
                                }
                            };
                        }(this)
                    };
                };
                return p;
            }(f);
            return o;
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var d in b) {
                if (c.call(b, d)) a[d] = b[d];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, c = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolygonChildModel", [ "uiGmapBasePolyChildModel", "uiGmapPolygonOptionsBuilder", function(b, c) {
            var d, e, f;
            f = function(a) {
                return new google.maps.Polygon(a);
            };
            e = new b(c, f);
            return d = function(b) {
                a(c, b);
                function c() {
                    return c.__super__.constructor.apply(this, arguments);
                }
                return c;
            }(e);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var d in b) {
                if (c.call(b, d)) a[d] = b[d];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, c = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolylineChildModel", [ "uiGmapBasePolyChildModel", "uiGmapPolylineOptionsBuilder", function(b, c) {
            var d, e, f;
            f = function(a) {
                return new google.maps.Polyline(a);
            };
            e = b(c, f);
            return d = function(b) {
                a(c, b);
                function c() {
                    return c.__super__.constructor.apply(this, arguments);
                }
                return c;
            }(e);
        } ]);
    }).call(this);
    (function() {
        var d = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, e = function(a, b) {
            for (var c in b) {
                if (f.call(b, c)) a[c] = b[c];
            }
            function d() {
                this.constructor = a;
            }
            d.prototype = b.prototype;
            a.prototype = new d();
            a.__super__ = b.prototype;
            return a;
        }, f = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.child").factory("uiGmapWindowChildModel", [ "uiGmapBaseObject", "uiGmapGmapUtil", "uiGmapLogger", "$compile", "$http", "$templateCache", "uiGmapChromeFixes", "uiGmapEventsHelper", function(f, g, h, i, j, k, l, m) {
            var n;
            n = function(f) {
                e(n, f);
                n.include(g);
                n.include(m);
                function n(a) {
                    this.updateModel = d(this.updateModel, this);
                    this.destroy = d(this.destroy, this);
                    this.remove = d(this.remove, this);
                    this.getLatestPosition = d(this.getLatestPosition, this);
                    this.hideWindow = d(this.hideWindow, this);
                    this.showWindow = d(this.showWindow, this);
                    this.handleClick = d(this.handleClick, this);
                    this.watchOptions = d(this.watchOptions, this);
                    this.watchCoords = d(this.watchCoords, this);
                    this.createGWin = d(this.createGWin, this);
                    this.watchElement = d(this.watchElement, this);
                    this.watchAndDoShow = d(this.watchAndDoShow, this);
                    this.doShow = d(this.doShow, this);
                    var b, e, f, g, i;
                    this.model = (e = a.model) != null ? e : {}, this.scope = a.scope, this.opts = a.opts, 
                    this.isIconVisibleOnClick = a.isIconVisibleOnClick, this.gMap = a.gMap, this.markerScope = a.markerScope, 
                    this.element = a.element, this.needToManualDestroy = (f = a.needToManualDestroy) != null ? f : false, 
                    this.markerIsVisibleAfterWindowClose = (g = a.markerIsVisibleAfterWindowClose) != null ? g : true, 
                    this.isScopeModel = (i = a.isScopeModel) != null ? i : false;
                    if (this.isScopeModel) {
                        this.clonedModel = c.clone(this.model, true);
                    }
                    this.getGmarker = function() {
                        var a, b;
                        if (((a = this.markerScope) != null ? a["getGMarker"] : void 0) != null) {
                            return (b = this.markerScope) != null ? b.getGMarker() : void 0;
                        }
                    };
                    this.listeners = [];
                    this.createGWin();
                    b = this.getGmarker();
                    if (b != null) {
                        b.setClickable(true);
                    }
                    this.watchElement();
                    this.watchOptions();
                    this.watchCoords();
                    this.watchAndDoShow();
                    this.scope.$on("$destroy", function(a) {
                        return function() {
                            return a.destroy();
                        };
                    }(this));
                    h.info(this);
                }
                n.prototype.doShow = function(a) {
                    if (this.scope.show === true || a) {
                        return this.showWindow();
                    } else {
                        return this.hideWindow();
                    }
                };
                n.prototype.watchAndDoShow = function() {
                    if (this.model.show != null) {
                        this.scope.show = this.model.show;
                    }
                    this.scope.$watch("show", this.doShow, true);
                    return this.doShow();
                };
                n.prototype.watchElement = function() {
                    return this.scope.$watch(function(a) {
                        return function() {
                            var b, c;
                            if (!(a.element || a.html)) {
                                return;
                            }
                            if (a.html !== a.element.html() && a.gObject) {
                                if ((b = a.opts) != null) {
                                    b.content = void 0;
                                }
                                c = a.gObject.isOpen();
                                a.remove();
                                return a.createGWin(c);
                            }
                        };
                    }(this));
                };
                n.prototype.createGWin = function(b) {
                    var d, e, f, g, h;
                    if (b == null) {
                        b = false;
                    }
                    f = this.getGmarker();
                    e = {};
                    if (this.opts != null) {
                        if (this.scope.coords) {
                            this.opts.position = this.getCoords(this.scope.coords);
                        }
                        e = this.opts;
                    }
                    if (this.element) {
                        this.html = c.isObject(this.element) ? this.element.html() : this.element;
                    }
                    d = this.scope.options ? this.scope.options : e;
                    this.opts = this.createWindowOptions(f, this.markerScope || this.scope, this.html, d);
                    if (this.opts != null) {
                        if (!this.gObject) {
                            if (this.opts.boxClass && (a.InfoBox && typeof a.InfoBox === "function")) {
                                this.gObject = new a.InfoBox(this.opts);
                            } else {
                                this.gObject = new google.maps.InfoWindow(this.opts);
                            }
                            this.listeners.push(google.maps.event.addListener(this.gObject, "domready", function() {
                                return l.maybeRepaint(this.content);
                            }));
                            this.listeners.push(google.maps.event.addListener(this.gObject, "closeclick", function(a) {
                                return function() {
                                    if (f) {
                                        f.setAnimation(a.oldMarkerAnimation);
                                        if (a.markerIsVisibleAfterWindowClose) {
                                            c.delay(function() {
                                                f.setVisible(false);
                                                return f.setVisible(a.markerIsVisibleAfterWindowClose);
                                            }, 250);
                                        }
                                    }
                                    a.gObject.close();
                                    a.model.show = false;
                                    if (a.scope.closeClick != null) {
                                        return a.scope.$evalAsync(a.scope.closeClick());
                                    } else {
                                        return a.scope.$evalAsync();
                                    }
                                };
                            }(this)));
                        }
                        this.gObject.setContent(this.opts.content);
                        this.handleClick(((g = this.scope) != null ? (h = g.options) != null ? h.forceClick : void 0 : void 0) || b);
                        return this.doShow(this.gObject.isOpen());
                    }
                };
                n.prototype.watchCoords = function() {
                    var a;
                    a = this.markerScope != null ? this.markerScope : this.scope;
                    return a.$watch("coords", function(a) {
                        return function(b, c) {
                            var d;
                            if (b !== c) {
                                if (b == null) {
                                    a.hideWindow();
                                } else if (!a.validateCoords(b)) {
                                    h.error("WindowChildMarker cannot render marker as scope.coords as no position on marker: " + JSON.stringify(a.model));
                                    return;
                                }
                                d = a.getCoords(b);
                                a.doShow();
                                a.gObject.setPosition(d);
                                if (a.opts) {
                                    return a.opts.position = d;
                                }
                            }
                        };
                    }(this), true);
                };
                n.prototype.watchOptions = function() {
                    return this.scope.$watch("options", function(a) {
                        return function(b, c) {
                            if (b !== c) {
                                a.opts = b;
                                if (a.gObject != null) {
                                    a.gObject.setOptions(a.opts);
                                    if (a.opts.visible != null && a.opts.visible) {
                                        return a.showWindow();
                                    } else if (a.opts.visible != null) {
                                        return a.hideWindow();
                                    }
                                }
                            }
                        };
                    }(this), true);
                };
                n.prototype.handleClick = function(a) {
                    var b, c;
                    if (this.gObject == null) {
                        return;
                    }
                    c = this.getGmarker();
                    b = function(a) {
                        return function() {
                            if (a.gObject == null) {
                                a.createGWin();
                            }
                            a.showWindow();
                            if (c != null) {
                                a.initialMarkerVisibility = c.getVisible();
                                a.oldMarkerAnimation = c.getAnimation();
                                return c.setVisible(a.isIconVisibleOnClick);
                            }
                        };
                    }(this);
                    if (a) {
                        b();
                    }
                    if (c) {
                        return this.listeners = this.listeners.concat(this.setEvents(c, {
                            events: {
                                click: b
                            }
                        }, this.model));
                    }
                };
                n.prototype.showWindow = function() {
                    var a, c, d;
                    if (this.gObject == null) {
                        return;
                    }
                    d = null;
                    c = function(a) {
                        return function() {
                            var b, c, d;
                            if (!a.gObject.isOpen()) {
                                c = a.getGmarker();
                                if (a.gObject != null && a.gObject.getPosition != null) {
                                    d = a.gObject.getPosition();
                                }
                                if (c) {
                                    d = c.getPosition();
                                }
                                if (!d) {
                                    return;
                                }
                                a.gObject.open(a.gMap, c);
                                b = a.gObject.isOpen();
                                if (a.model.show !== b) {
                                    return a.model.show = b;
                                }
                            }
                        };
                    }(this);
                    if (this.scope.templateUrl) {
                        j.get(this.scope.templateUrl, {
                            cache: k
                        }).then(function(a) {
                            return function(e) {
                                var f;
                                d = a.scope.$new();
                                if (b.isDefined(a.scope.templateParameter)) {
                                    d.parameter = a.scope.templateParameter;
                                }
                                f = i(e.data)(d);
                                a.gObject.setContent(f[0]);
                                return c();
                            };
                        }(this));
                    } else if (this.scope.template) {
                        d = this.scope.$new();
                        if (b.isDefined(this.scope.templateParameter)) {
                            d.parameter = this.scope.templateParameter;
                        }
                        a = i(this.scope.template)(d);
                        this.gObject.setContent(a[0]);
                        c();
                    } else {
                        c();
                    }
                    return this.scope.$on("destroy", function() {
                        return d.$destroy();
                    });
                };
                n.prototype.hideWindow = function() {
                    if (this.gObject != null && this.gObject.isOpen()) {
                        return this.gObject.close();
                    }
                };
                n.prototype.getLatestPosition = function(a) {
                    var b;
                    b = this.getGmarker();
                    if (this.gObject != null && b != null && !a) {
                        return this.gObject.setPosition(b.getPosition());
                    } else {
                        if (a) {
                            return this.gObject.setPosition(a);
                        }
                    }
                };
                n.prototype.remove = function() {
                    this.hideWindow();
                    this.removeEvents(this.listeners);
                    this.listeners.length = 0;
                    delete this.gObject;
                    return delete this.opts;
                };
                n.prototype.destroy = function(a) {
                    var b;
                    if (a == null) {
                        a = false;
                    }
                    this.remove();
                    if (this.scope != null && !((b = this.scope) != null ? b.$$destroyed : void 0) && (this.needToManualDestroy || a)) {
                        return this.scope.$destroy();
                    }
                };
                n.prototype.updateModel = function(a) {
                    if (this.isScopeModel) {
                        this.clonedModel = c.clone(a, true);
                    }
                    return c.extend(this.model, this.clonedModel || a);
                };
                return n;
            }(f);
            return n;
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, d = function(a, b) {
            for (var c in b) {
                if (e.call(b, c)) a[c] = b[c];
            }
            function d() {
                this.constructor = a;
            }
            d.prototype = b.prototype;
            a.prototype = new d();
            a.__super__ = b.prototype;
            return a;
        }, e = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapBasePolysParentModel", [ "$timeout", "uiGmapLogger", "uiGmapModelKey", "uiGmapModelsWatcher", "uiGmapPropMap", "uiGmap_async", "uiGmapPromise", "uiGmapFitHelper", function(e, f, g, h, i, j, k, l) {
            return function(e, m, n) {
                var o;
                return o = function(g) {
                    d(o, g);
                    o.include(h);
                    function o(b, d, g, h, j) {
                        this.element = d;
                        this.attrs = g;
                        this.gMap = h;
                        this.defaults = j;
                        this.maybeFit = a(this.maybeFit, this);
                        this.createChild = a(this.createChild, this);
                        this.pieceMeal = a(this.pieceMeal, this);
                        this.createAllNew = a(this.createAllNew, this);
                        this.watchIdKey = a(this.watchIdKey, this);
                        this.createChildScopes = a(this.createChildScopes, this);
                        this.watchDestroy = a(this.watchDestroy, this);
                        this.onDestroy = a(this.onDestroy, this);
                        this.rebuildAll = a(this.rebuildAll, this);
                        this.doINeedToWipe = a(this.doINeedToWipe, this);
                        this.watchModels = a(this.watchModels, this);
                        o.__super__.constructor.call(this, b);
                        this["interface"] = e;
                        this.$log = f;
                        this.plurals = new i();
                        c.each(e.scopeKeys, function(a) {
                            return function(b) {
                                return a[b + "Key"] = void 0;
                            };
                        }(this));
                        this.models = void 0;
                        this.firstTime = true;
                        this.$log.info(this);
                        this.createChildScopes();
                    }
                    o.prototype.watchModels = function(a) {
                        return a.$watch("models", function(b) {
                            return function(c, d) {
                                if (c !== d) {
                                    if (b.doINeedToWipe(c) || a.doRebuildAll) {
                                        return b.rebuildAll(a, true, true);
                                    } else {
                                        return b.createChildScopes(false);
                                    }
                                }
                            };
                        }(this), true);
                    };
                    o.prototype.doINeedToWipe = function(a) {
                        var b;
                        b = a != null ? a.length === 0 : true;
                        return this.plurals.length > 0 && b;
                    };
                    o.prototype.rebuildAll = function(a, b, c) {
                        return this.onDestroy(c).then(function(a) {
                            return function() {
                                if (b) {
                                    return a.createChildScopes();
                                }
                            };
                        }(this));
                    };
                    o.prototype.onDestroy = function() {
                        o.__super__.onDestroy.call(this, this.scope);
                        return j.promiseLock(this, k.promiseTypes["delete"], void 0, void 0, function(a) {
                            return function() {
                                return j.each(a.plurals.values(), function(a) {
                                    return a.destroy(true);
                                }, j.chunkSizeFrom(a.scope.cleanchunk, false)).then(function() {
                                    var b;
                                    return (b = a.plurals) != null ? b.removeAll() : void 0;
                                });
                            };
                        }(this));
                    };
                    o.prototype.watchDestroy = function(a) {
                        return a.$on("$destroy", function(b) {
                            return function() {
                                return b.rebuildAll(a, false, true);
                            };
                        }(this));
                    };
                    o.prototype.createChildScopes = function(a) {
                        if (a == null) {
                            a = true;
                        }
                        if (b.isUndefined(this.scope.models)) {
                            this.$log.error("No models to create " + n + "s from! I Need direct models!");
                            return;
                        }
                        if (this.gMap == null || this.scope.models == null) {
                            return;
                        }
                        this.watchIdKey(this.scope);
                        if (a) {
                            return this.createAllNew(this.scope, false);
                        } else {
                            return this.pieceMeal(this.scope, false);
                        }
                    };
                    o.prototype.watchIdKey = function(a) {
                        this.setIdKey(a);
                        return a.$watch("idKey", function(b) {
                            return function(c, d) {
                                if (c !== d && c == null) {
                                    b.idKey = c;
                                    return b.rebuildAll(a, true, true);
                                }
                            };
                        }(this));
                    };
                    o.prototype.createAllNew = function(a, b) {
                        var c;
                        if (b == null) {
                            b = false;
                        }
                        this.models = a.models;
                        if (this.firstTime) {
                            this.watchModels(a);
                            this.watchDestroy(a);
                        }
                        if (this.didQueueInitPromise(this, a)) {
                            return;
                        }
                        c = null;
                        return j.promiseLock(this, k.promiseTypes.create, "createAllNew", function(a) {
                            return c = a;
                        }, function(b) {
                            return function() {
                                return j.map(a.models, function(a) {
                                    var d;
                                    d = b.createChild(a, b.gMap);
                                    if (c) {
                                        f.debug("createNew should fall through safely");
                                        d.isEnabled = false;
                                    }
                                    c;
                                    return d.pathPoints.getArray();
                                }, j.chunkSizeFrom(a.chunk)).then(function(a) {
                                    b.maybeFit(a);
                                    return b.firstTime = false;
                                });
                            };
                        }(this));
                    };
                    o.prototype.pieceMeal = function(a, b) {
                        var d, e;
                        if (b == null) {
                            b = true;
                        }
                        if (a.$$destroyed) {
                            return;
                        }
                        d = null;
                        e = null;
                        this.models = a.models;
                        if (a != null && this.modelsLength() && this.plurals.length) {
                            return j.promiseLock(this, k.promiseTypes.update, "pieceMeal", function(a) {
                                return d = a;
                            }, function(b) {
                                return function() {
                                    return k.promise(function() {
                                        return b.figureOutState(b.idKey, a, b.plurals, b.modelKeyComparison);
                                    }).then(function(f) {
                                        e = f;
                                        if (e.updates.length) {
                                            j.each(e.updates, function(a) {
                                                c.extend(a.child.scope, a.model);
                                                return a.child.model = a.model;
                                            });
                                        }
                                        return j.each(e.removals, function(a) {
                                            if (a != null) {
                                                a.destroy();
                                                b.plurals.remove(a.model[b.idKey]);
                                                return d;
                                            }
                                        }, j.chunkSizeFrom(a.chunk));
                                    }).then(function() {
                                        return j.each(e.adds, function(a) {
                                            if (d) {
                                                f.debug("pieceMeal should fall through safely");
                                            }
                                            b.createChild(a, b.gMap);
                                            return d;
                                        }, j.chunkSizeFrom(a.chunk)).then(function() {
                                            return b.maybeFit();
                                        });
                                    });
                                };
                            }(this));
                        } else {
                            this.inProgress = false;
                            return this.rebuildAll(this.scope, true, true);
                        }
                    };
                    o.prototype.createChild = function(a, b) {
                        var c, d;
                        d = this.scope.$new(false);
                        this.setChildScope(e.scopeKeys, d, a);
                        d.$watch("model", function(a) {
                            return function(b, c) {
                                if (b !== c) {
                                    return a.setChildScope(e.scopeKeys, d, b);
                                }
                            };
                        }(this), true);
                        d["static"] = this.scope["static"];
                        c = new m({
                            isScopeModel: true,
                            scope: d,
                            attrs: this.attrs,
                            gMap: b,
                            defaults: this.defaults,
                            model: a,
                            gObjectChangeCb: function(a) {
                                return function() {
                                    return a.maybeFit();
                                };
                            }(this)
                        });
                        if (a[this.idKey] == null) {
                            this.$log.error(n + " model has no id to assign a child to.\nThis is required for performance. Please assign id,\nor redirect id to a different key.");
                            return;
                        }
                        this.plurals.put(a[this.idKey], c);
                        return c;
                    };
                    o.prototype.maybeFit = function(a) {
                        if (a == null) {
                            a = this.plurals.map(function(a) {
                                return a.pathPoints;
                            });
                        }
                        if (this.scope.fit) {
                            a = c.flatten(a);
                            return l.fit(a, this.gMap);
                        }
                    };
                    return o;
                }(g);
            };
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapCircleParentModel", [ "uiGmapLogger", "$timeout", "uiGmapGmapUtil", "uiGmapEventsHelper", "uiGmapCircleOptionsBuilder", function(d, e, f, g, h) {
            var i, j;
            j = function(a, b) {
                a.settingFromDirective = true;
                b();
                return e(function() {
                    return a.settingFromDirective = false;
                });
            };
            return i = function(e) {
                a(h, e);
                h.include(f);
                h.include(g);
                function h(a, e, g, h, i) {
                    var k, l, m;
                    this.attrs = g;
                    this.gMap = h;
                    this.DEFAULTS = i;
                    this.scope = a;
                    m = null;
                    k = function(a) {
                        return function() {
                            m = null;
                            if (a.listeners != null) {
                                a.removeEvents(a.listeners);
                                return a.listeners = void 0;
                            }
                        };
                    }(this);
                    l = new google.maps.Circle(this.buildOpts(f.getCoords(a.center), a.radius));
                    this.setMyOptions = function(b) {
                        return function(d, e) {
                            if (a.settingFromDirective) {
                                return;
                            }
                            if (!(c.isEqual(d, e) && d === e && (d != null && e != null ? d.coordinates === e.coordinates : true))) {
                                return l.setOptions(b.buildOpts(f.getCoords(a.center), a.radius));
                            }
                        };
                    }(this);
                    this.props = this.props.concat([ {
                        prop: "center",
                        isColl: true
                    }, {
                        prop: "fill",
                        isColl: true
                    }, "radius", "zIndex" ]);
                    this.watchProps();
                    if (this.scope.control != null) {
                        this.scope.control.getCircle = function() {
                            return l;
                        };
                    }
                    k();
                    this.listeners = this.setEvents(l, a, a, [ "radius_changed" ]) || [];
                    this.listeners.push(google.maps.event.addListener(l, "radius_changed", function() {
                        var d, e;
                        d = l.getRadius();
                        if (d === m) {
                            return;
                        }
                        m = d;
                        e = function() {
                            return j(a, function() {
                                var b, e;
                                if (d !== a.radius) {
                                    a.radius = d;
                                }
                                if (((b = a.events) != null ? b.radius_changed : void 0) && c.isFunction((e = a.events) != null ? e.radius_changed : void 0)) {
                                    return a.events.radius_changed(l, "radius_changed", a, arguments);
                                }
                            });
                        };
                        if (!b.mock) {
                            return a.$evalAsync(function() {
                                return e();
                            });
                        } else {
                            return e();
                        }
                    }));
                    this.listeners.push(google.maps.event.addListener(l, "center_changed", function() {
                        return a.$evalAsync(function() {
                            return j(a, function() {
                                if (b.isDefined(a.center.type)) {
                                    a.center.coordinates[1] = l.getCenter().lat();
                                    return a.center.coordinates[0] = l.getCenter().lng();
                                } else {
                                    a.center.latitude = l.getCenter().lat();
                                    return a.center.longitude = l.getCenter().lng();
                                }
                            });
                        });
                    }));
                    a.$on("$destroy", function() {
                        k();
                        return l.setMap(null);
                    });
                    d.info(this);
                }
                return h;
            }(h);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapDrawingManagerParentModel", [ "uiGmapLogger", "$timeout", "uiGmapBaseObject", "uiGmapEventsHelper", function(b, d, e, f) {
            var g;
            return g = function(b) {
                a(d, b);
                d.include(f);
                function d(a, b, d, e) {
                    var f, g;
                    this.scope = a;
                    this.attrs = d;
                    this.map = e;
                    f = new google.maps.drawing.DrawingManager(this.scope.options);
                    f.setMap(this.map);
                    g = void 0;
                    if (this.scope.control != null) {
                        this.scope.control.getDrawingManager = function() {
                            return f;
                        };
                    }
                    if (!this.scope["static"] && this.scope.options) {
                        this.scope.$watch("options", function(a) {
                            return f != null ? f.setOptions(a) : void 0;
                        }, true);
                    }
                    if (this.scope.events != null) {
                        g = this.setEvents(f, this.scope, this.scope);
                        this.scope.$watch("events", function(a) {
                            return function(b, d) {
                                if (!c.isEqual(b, d)) {
                                    if (g != null) {
                                        a.removeEvents(g);
                                    }
                                    return g = a.setEvents(f, a.scope, a.scope);
                                }
                            };
                        }(this));
                    }
                    this.scope.$on("$destroy", function(a) {
                        return function() {
                            if (g != null) {
                                a.removeEvents(g);
                            }
                            f.setMap(null);
                            return f = null;
                        };
                    }(this));
                }
                return d;
            }(e);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, d = function(a, b) {
            for (var c in b) {
                if (e.call(b, c)) a[c] = b[c];
            }
            function d() {
                this.constructor = a;
            }
            d.prototype = b.prototype;
            a.prototype = new d();
            a.__super__ = b.prototype;
            return a;
        }, e = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapIMarkerParentModel", [ "uiGmapModelKey", "uiGmapLogger", function(e, f) {
            var g;
            g = function(e) {
                d(g, e);
                g.prototype.DEFAULTS = {};
                function g(c, d, e, h) {
                    this.scope = c;
                    this.element = d;
                    this.attrs = e;
                    this.map = h;
                    this.onWatch = a(this.onWatch, this);
                    this.watch = a(this.watch, this);
                    this.validateScope = a(this.validateScope, this);
                    g.__super__.constructor.call(this, this.scope);
                    this.$log = f;
                    if (!this.validateScope(this.scope)) {
                        throw new String("Unable to construct IMarkerParentModel due to invalid scope");
                    }
                    this.doClick = b.isDefined(this.attrs.click);
                    if (this.scope.options != null) {
                        this.DEFAULTS = this.scope.options;
                    }
                    this.watch("coords", this.scope);
                    this.watch("icon", this.scope);
                    this.watch("options", this.scope);
                    this.scope.$on("$destroy", function(a) {
                        return function() {
                            return a.onDestroy(a.scope);
                        };
                    }(this));
                }
                g.prototype.validateScope = function(a) {
                    var b;
                    if (a == null) {
                        this.$log.error(this.constructor.name + ": invalid scope used");
                        return false;
                    }
                    b = a.coords != null;
                    if (!b) {
                        this.$log.error(this.constructor.name + ": no valid coords attribute found");
                        return false;
                    }
                    return b;
                };
                g.prototype.watch = function(a, b, d) {
                    if (d == null) {
                        d = true;
                    }
                    return b.$watch(a, function(d) {
                        return function(e, f) {
                            if (!c.isEqual(e, f)) {
                                return d.onWatch(a, b, e, f);
                            }
                        };
                    }(this), d);
                };
                g.prototype.onWatch = function(a, b, c, d) {};
                return g;
            }(e);
            return g;
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var d in b) {
                if (c.call(b, d)) a[d] = b[d];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, c = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapIWindowParentModel", [ "uiGmapModelKey", "uiGmapGmapUtil", "uiGmapLogger", function(b, c, d) {
            var e;
            return e = function(b) {
                a(e, b);
                e.include(c);
                function e(a, b, c, f, g, h, i, j) {
                    e.__super__.constructor.call(this, a);
                    this.$log = d;
                    this.$timeout = g;
                    this.$compile = h;
                    this.$http = i;
                    this.$templateCache = j;
                    this.DEFAULTS = {};
                    if (a.options != null) {
                        this.DEFAULTS = a.options;
                    }
                }
                e.prototype.getItem = function(a, b, c) {
                    if (b === "models") {
                        return a[b][c];
                    }
                    return a[b].get(c);
                };
                return e;
            }(b);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, c = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapLayerParentModel", [ "uiGmapBaseObject", "uiGmapLogger", "$timeout", function(d, e, f) {
            var g;
            g = function(d) {
                c(f, d);
                function f(c, d, f, g, h, i) {
                    this.scope = c;
                    this.element = d;
                    this.attrs = f;
                    this.gMap = g;
                    this.onLayerCreated = h != null ? h : void 0;
                    this.$log = i != null ? i : e;
                    this.createGoogleLayer = a(this.createGoogleLayer, this);
                    if (this.attrs.type == null) {
                        this.$log.info("type attribute for the layer directive is mandatory. Layer creation aborted!!");
                        return;
                    }
                    this.createGoogleLayer();
                    this.doShow = true;
                    if (b.isDefined(this.attrs.show)) {
                        this.doShow = this.scope.show;
                    }
                    if (this.doShow && this.gMap != null) {
                        this.gObject.setMap(this.gMap);
                    }
                    this.scope.$watch("show", function(a) {
                        return function(b, c) {
                            if (b !== c) {
                                a.doShow = b;
                                if (b) {
                                    return a.gObject.setMap(a.gMap);
                                } else {
                                    return a.gObject.setMap(null);
                                }
                            }
                        };
                    }(this), true);
                    this.scope.$watch("options", function(a) {
                        return function(b, c) {
                            if (b !== c && a.doShow) {
                                return a.gObject.setOptions(b);
                            }
                        };
                    }(this), true);
                    this.scope.$on("$destroy", function(a) {
                        return function() {
                            return a.gObject.setMap(null);
                        };
                    }(this));
                }
                f.prototype.createGoogleLayer = function() {
                    var a;
                    if (this.attrs.options == null) {
                        this.gObject = this.attrs.namespace === void 0 ? new google.maps[this.attrs.type]() : new google.maps[this.attrs.namespace][this.attrs.type]();
                    } else {
                        this.gObject = this.attrs.namespace === void 0 ? new google.maps[this.attrs.type](this.scope.options) : new google.maps[this.attrs.namespace][this.attrs.type](this.scope.options);
                    }
                    if (this.gObject != null && this.doShow) {
                        this.gObject.setMap(this.gMap);
                    }
                    if (this.gObject != null && this.onLayerCreated != null) {
                        return typeof (a = this.onLayerCreated(this.scope, this.gObject)) === "function" ? a(this.gObject) : void 0;
                    }
                };
                return f;
            }(d);
            return g;
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, d = function(a, b) {
            for (var c in b) {
                if (e.call(b, c)) a[c] = b[c];
            }
            function d() {
                this.constructor = a;
            }
            d.prototype = b.prototype;
            a.prototype = new d();
            a.__super__ = b.prototype;
            return a;
        }, e = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapMapTypeParentModel", [ "uiGmapBaseObject", "uiGmapLogger", function(e, f) {
            var g;
            g = function(e) {
                d(g, e);
                function g(d, e, g, h, i, j, k) {
                    var l, m, n, o;
                    this.scope = d;
                    this.element = e;
                    this.attrs = g;
                    this.gMap = h;
                    this.$log = i != null ? i : f;
                    this.childModel = j;
                    this.propMap = k;
                    this.refreshShown = a(this.refreshShown, this);
                    this.hideOverlay = a(this.hideOverlay, this);
                    this.showOverlay = a(this.showOverlay, this);
                    this.refreshMapType = a(this.refreshMapType, this);
                    this.createMapType = a(this.createMapType, this);
                    if (this.scope.options == null) {
                        this.$log.info("options attribute for the map-type directive is mandatory. Map type creation aborted!!");
                        return;
                    }
                    this.id = this.gMap.overlayMapTypesCount = this.gMap.overlayMapTypesCount + 1 || 0;
                    this.doShow = true;
                    this.createMapType();
                    this.refreshShown();
                    if (this.doShow && this.gMap != null) {
                        this.showOverlay();
                    }
                    m = function(a) {
                        return function() {
                            return a.childModel[a.attrs.show];
                        };
                    }(this);
                    o = this.childModel ? m : "show";
                    this.scope.$watch(o, function(a) {
                        return function(b, c) {
                            if (b !== c) {
                                a.doShow = b;
                                if (b) {
                                    return a.showOverlay();
                                } else {
                                    return a.hideOverlay();
                                }
                            }
                        };
                    }(this));
                    l = function(a) {
                        return function() {
                            return a.childModel[a.attrs.options];
                        };
                    }(this);
                    n = this.childModel ? l : "options";
                    this.scope.$watchCollection(n, function(a) {
                        return function(b, d) {
                            var e, f;
                            if (!c.isEqual(b, d)) {
                                f = [ "tileSize", "maxZoom", "minZoom", "name", "alt" ];
                                e = c.some(f, function(a) {
                                    return !d || !b || !c.isEqual(b[a], d[a]);
                                });
                                if (e) {
                                    return a.refreshMapType();
                                }
                            }
                        };
                    }(this));
                    if (b.isDefined(this.attrs.refresh)) {
                        this.scope.$watch("refresh", function(a) {
                            return function(b, d) {
                                if (!c.isEqual(b, d)) {
                                    return a.refreshMapType();
                                }
                            };
                        }(this), true);
                    }
                    this.scope.$on("$destroy", function(a) {
                        return function() {
                            a.hideOverlay();
                            return a.mapType = null;
                        };
                    }(this));
                }
                g.prototype.createMapType = function() {
                    var a, c, d;
                    d = this.childModel ? this.attrs.options ? this.childModel[this.attrs.options] : this.childModel : this.scope.options;
                    if (d.getTile != null) {
                        this.mapType = d;
                    } else if (d.getTileUrl != null) {
                        this.mapType = new google.maps.ImageMapType(d);
                    } else {
                        this.$log.info("options should provide either getTile or getTileUrl methods. Map type creation aborted!!");
                        return;
                    }
                    c = this.attrs.id ? this.childModel ? this.attrs.id : "id" : void 0;
                    a = c ? this.childModel ? this.childModel[c] : this.scope[c] : void 0;
                    if (a) {
                        this.gMap.mapTypes.set(a, this.mapType);
                        if (!b.isDefined(this.attrs.show)) {
                            this.doShow = false;
                        }
                    }
                    this.mapType.layerId = this.id;
                    if (this.childModel && b.isDefined(this.scope.index)) {
                        return this.propMap.put(this.mapType.layerId, this.scope.index);
                    }
                };
                g.prototype.refreshMapType = function() {
                    this.hideOverlay();
                    this.mapType = null;
                    this.createMapType();
                    if (this.doShow && this.gMap != null) {
                        return this.showOverlay();
                    }
                };
                g.prototype.showOverlay = function() {
                    var a;
                    if (b.isDefined(this.scope.index)) {
                        a = false;
                        if (this.gMap.overlayMapTypes.getLength()) {
                            this.gMap.overlayMapTypes.forEach(function(c) {
                                return function(d, e) {
                                    var f;
                                    if (!a) {
                                        f = c.propMap.get(d.layerId.toString());
                                        if (f > c.scope.index || !b.isDefined(f)) {
                                            a = true;
                                            c.gMap.overlayMapTypes.insertAt(e, c.mapType);
                                        }
                                    }
                                };
                            }(this));
                            if (!a) {
                                return this.gMap.overlayMapTypes.push(this.mapType);
                            }
                        } else {
                            return this.gMap.overlayMapTypes.push(this.mapType);
                        }
                    } else {
                        return this.gMap.overlayMapTypes.push(this.mapType);
                    }
                };
                g.prototype.hideOverlay = function() {
                    var a;
                    a = false;
                    return this.gMap.overlayMapTypes.forEach(function(b) {
                        return function(c, d) {
                            if (!a && c.layerId === b.id) {
                                a = true;
                                b.gMap.overlayMapTypes.removeAt(d);
                            }
                        };
                    }(this));
                };
                g.prototype.refreshShown = function() {
                    return this.doShow = b.isDefined(this.attrs.show) ? this.childModel ? this.childModel[this.attrs.show] : this.scope.show : true;
                };
                return g;
            }(e);
            return g;
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var d in b) {
                if (c.call(b, d)) a[d] = b[d];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, c = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapMapTypesParentModel", [ "uiGmapBaseObject", "uiGmapLogger", "uiGmapMapTypeParentModel", "uiGmapPropMap", function(b, c, d, e) {
            var f;
            f = function(b) {
                a(f, b);
                function f(a, b, f, g, h) {
                    var i;
                    this.scope = a;
                    this.element = b;
                    this.attrs = f;
                    this.gMap = g;
                    this.$log = h != null ? h : c;
                    if (this.attrs.mapTypes == null) {
                        this.$log.info("layers attribute for the map-types directive is mandatory. Map types creation aborted!!");
                        return;
                    }
                    i = new e();
                    this.scope.mapTypes.forEach(function(a) {
                        return function(b, c) {
                            var e, f;
                            f = {
                                options: a.scope.options,
                                show: a.scope.show,
                                refresh: a.scope.refresh
                            };
                            e = a.scope.$new();
                            e.index = c;
                            new d(e, null, f, a.gMap, a.$log, b, i);
                        };
                    }(this));
                }
                return f;
            }(b);
            return f;
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, d = function(a, b) {
            for (var c in b) {
                if (e.call(b, c)) a[c] = b[c];
            }
            function d() {
                this.constructor = a;
            }
            d.prototype = b.prototype;
            a.prototype = new d();
            a.__super__ = b.prototype;
            return a;
        }, e = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapMarkersParentModel", [ "uiGmapIMarkerParentModel", "uiGmapModelsWatcher", "uiGmapPropMap", "uiGmapMarkerChildModel", "uiGmap_async", "uiGmapClustererMarkerManager", "uiGmapMarkerManager", "$timeout", "uiGmapIMarker", "uiGmapPromise", "uiGmapGmapUtil", "uiGmapLogger", "uiGmapSpiderfierMarkerManager", function(e, f, g, h, i, j, k, l, m, n, o, p, q) {
            var r, s;
            s = function(a, b) {
                b.plurals = new g();
                b.scope.plurals = b.plurals;
                return b;
            };
            r = function(e) {
                d(l, e);
                l.include(o);
                l.include(f);
                function l(b, d, e, f) {
                    this.maybeExecMappedEvent = a(this.maybeExecMappedEvent, this);
                    this.onDestroy = a(this.onDestroy, this);
                    this.newChildMarker = a(this.newChildMarker, this);
                    this.pieceMeal = a(this.pieceMeal, this);
                    this.rebuildAll = a(this.rebuildAll, this);
                    this.createAllNew = a(this.createAllNew, this);
                    this.bindToTypeEvents = a(this.bindToTypeEvents, this);
                    this.createChildScopes = a(this.createChildScopes, this);
                    this.validateScope = a(this.validateScope, this);
                    this.onWatch = a(this.onWatch, this);
                    l.__super__.constructor.call(this, b, d, e, f);
                    this["interface"] = m;
                    s(new g(), this);
                    this.scope.pluralsUpdate = {
                        updateCtr: 0
                    };
                    this.$log.info(this);
                    this.doRebuildAll = this.scope.doRebuildAll != null ? this.scope.doRebuildAll : false;
                    this.setIdKey(this.scope);
                    this.scope.$watch("doRebuildAll", function(a) {
                        return function(b, c) {
                            if (b !== c) {
                                return a.doRebuildAll = b;
                            }
                        };
                    }(this));
                    if (!this.modelsLength()) {
                        this.modelsRendered = false;
                    }
                    this.scope.$watch("models", function(a) {
                        return function(b, d) {
                            if (!c.isEqual(b, d) || !a.modelsRendered) {
                                if (b.length === 0 && d.length === 0) {
                                    return;
                                }
                                a.modelsRendered = true;
                                return a.onWatch("models", a.scope, b, d);
                            }
                        };
                    }(this), !this.isTrue(e.modelsbyref));
                    this.watch("doCluster", this.scope);
                    this.watch("type", this.scope);
                    this.watch("clusterOptions", this.scope);
                    this.watch("clusterEvents", this.scope);
                    this.watch("typeOptions", this.scope);
                    this.watch("typeEvents", this.scope);
                    this.watch("fit", this.scope);
                    this.watch("idKey", this.scope);
                    this.gManager = void 0;
                    this.createAllNew(this.scope);
                }
                l.prototype.onWatch = function(a, b, c, d) {
                    if (a === "idKey" && c !== d) {
                        this.idKey = c;
                    }
                    if (this.doRebuildAll || (a === "doCluster" || a === "type")) {
                        return this.rebuildAll(b);
                    } else {
                        return this.pieceMeal(b);
                    }
                };
                l.prototype.validateScope = function(a) {
                    var c;
                    c = b.isUndefined(a.models) || a.models === void 0;
                    if (c) {
                        this.$log.error(this.constructor.name + ": no valid models attribute found");
                    }
                    return l.__super__.validateScope.call(this, a) || c;
                };
                l.prototype.createChildScopes = function(a) {
                    if (this.gMap == null || this.scope.models == null) {
                        return;
                    }
                    if (a) {
                        return this.createAllNew(this.scope, false);
                    } else {
                        return this.pieceMeal(this.scope, false);
                    }
                };
                l.prototype.bindToTypeEvents = function(a, d) {
                    var e, f;
                    if (d == null) {
                        d = [ "click", "mouseout", "mouseover" ];
                    }
                    f = this;
                    if (!this.origTypeEvents) {
                        this.origTypeEvents = {};
                        c.each(d, function(b) {
                            return function(c) {
                                return b.origTypeEvents[c] = a != null ? a[c] : void 0;
                            };
                        }(this));
                    } else {
                        b.extend(a, this.origTypeEvents);
                    }
                    e = {};
                    c.each(d, function(a) {
                        return e[a] = function(b) {
                            return f.maybeExecMappedEvent(b, a);
                        };
                    });
                    return b.extend(a, e);
                };
                l.prototype.createAllNew = function(a) {
                    var b, c, d, e;
                    if (this.gManager != null) {
                        if (this.gManager instanceof q) {
                            b = this.gManager.isSpiderfied();
                        }
                        this.gManager.clear();
                        delete this.gManager;
                    }
                    d = a.typeEvents || a.clusterEvents;
                    e = a.typeOptions || a.clusterOptions;
                    if (a.doCluster || a.type === "cluster") {
                        if (d != null) {
                            this.bindToTypeEvents(d);
                        }
                        this.gManager = new j(this.map, void 0, e, d);
                    } else if (a.type === "spider") {
                        if (d != null) {
                            this.bindToTypeEvents(d, [ "spiderfy", "unspiderfy" ]);
                        }
                        this.gManager = new q(this.map, void 0, e, d, this.scope);
                        if (b) {
                            this.gManager.spiderfy();
                        }
                    } else {
                        this.gManager = new k(this.map);
                    }
                    if (this.didQueueInitPromise(this, a)) {
                        return;
                    }
                    c = null;
                    return i.promiseLock(this, n.promiseTypes.create, "createAllNew", function(a) {
                        return c = a;
                    }, function(b) {
                        return function() {
                            return i.each(a.models, function(d) {
                                b.newChildMarker(d, a);
                                return c;
                            }, i.chunkSizeFrom(a.chunk)).then(function() {
                                b.modelsRendered = true;
                                if (a.fit) {
                                    b.gManager.fit();
                                }
                                b.gManager.draw();
                                return b.scope.pluralsUpdate.updateCtr += 1;
                            }, i.chunkSizeFrom(a.chunk));
                        };
                    }(this));
                };
                l.prototype.rebuildAll = function(a) {
                    var b;
                    if (!a.doRebuild && a.doRebuild !== void 0) {
                        return;
                    }
                    if ((b = this.scope.plurals) != null ? b.length : void 0) {
                        return this.onDestroy(a).then(function(b) {
                            return function() {
                                return b.createAllNew(a);
                            };
                        }(this));
                    } else {
                        return this.createAllNew(a);
                    }
                };
                l.prototype.pieceMeal = function(a) {
                    var b, c;
                    if (a.$$destroyed) {
                        return;
                    }
                    b = null;
                    c = null;
                    if (this.modelsLength() && this.scope.plurals.length) {
                        return i.promiseLock(this, n.promiseTypes.update, "pieceMeal", function(a) {
                            return b = a;
                        }, function(d) {
                            return function() {
                                return n.promise(function() {
                                    return d.figureOutState(d.idKey, a, d.scope.plurals, d.modelKeyComparison);
                                }).then(function(e) {
                                    c = e;
                                    return i.each(c.removals, function(a) {
                                        if (a != null) {
                                            if (a.destroy != null) {
                                                a.destroy();
                                            }
                                            d.scope.plurals.remove(a.id);
                                            return b;
                                        }
                                    }, i.chunkSizeFrom(a.chunk));
                                }).then(function() {
                                    return i.each(c.adds, function(c) {
                                        d.newChildMarker(c, a);
                                        return b;
                                    }, i.chunkSizeFrom(a.chunk));
                                }).then(function() {
                                    return i.each(c.updates, function(a) {
                                        d.updateChild(a.child, a.model);
                                        return b;
                                    }, i.chunkSizeFrom(a.chunk));
                                }).then(function() {
                                    if (c.adds.length > 0 || c.removals.length > 0 || c.updates.length > 0) {
                                        a.plurals = d.scope.plurals;
                                        if (a.fit) {
                                            d.gManager.fit();
                                        }
                                        d.gManager.draw();
                                    }
                                    return d.scope.pluralsUpdate.updateCtr += 1;
                                });
                            };
                        }(this));
                    } else {
                        this.inProgress = false;
                        return this.rebuildAll(a);
                    }
                };
                l.prototype.newChildMarker = function(a, b) {
                    var c, d, e;
                    if (!a) {
                        throw "model undefined";
                    }
                    if (a[this.idKey] == null) {
                        this.$log.error("Marker model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");
                        return;
                    }
                    this.$log.info("child", c, "markers", this.scope.markerModels);
                    d = b.$new(false);
                    d.events = b.events;
                    e = {};
                    m.scopeKeys.forEach(function(a) {
                        return e[a] = b[a];
                    });
                    c = new h({
                        scope: d,
                        model: a,
                        keys: e,
                        gMap: this.map,
                        defaults: this.DEFAULTS,
                        doClick: this.doClick,
                        gManager: this.gManager,
                        doDrawSelf: false,
                        isScopeModel: true
                    });
                    this.scope.plurals.put(a[this.idKey], c);
                    return c;
                };
                l.prototype.onDestroy = function(a) {
                    l.__super__.onDestroy.call(this, a);
                    return i.promiseLock(this, n.promiseTypes["delete"], void 0, void 0, function(a) {
                        return function() {
                            return i.each(a.scope.plurals.values(), function(a) {
                                if (a != null) {
                                    return a.destroy(false);
                                }
                            }, i.chunkSizeFrom(a.scope.cleanchunk, false)).then(function() {
                                if (a.gManager != null) {
                                    a.gManager.destroy();
                                }
                                a.plurals.removeAll();
                                if (a.plurals !== a.scope.plurals) {
                                    console.error("plurals out of sync for MarkersParentModel");
                                }
                                return a.scope.pluralsUpdate.updateCtr += 1;
                            });
                        };
                    }(this));
                };
                l.prototype.maybeExecMappedEvent = function(a, b) {
                    var d, e;
                    if (this.scope.$$destroyed) {
                        return;
                    }
                    e = this.scope.typeEvents || this.scope.clusterEvents;
                    if (c.isFunction(e != null ? e[b] : void 0)) {
                        d = this.mapTypeToPlurals(a);
                        if (this.origTypeEvents[b]) {
                            return this.origTypeEvents[b](d.group, d.mapped);
                        }
                    }
                };
                l.prototype.mapTypeToPlurals = function(a) {
                    var b, d, e;
                    if (c.isArray(a)) {
                        b = a;
                    } else if (c.isFunction(a.getMarkers)) {
                        b = a.getMarkers();
                    }
                    if (b == null) {
                        p.error("Unable to map event as we cannot find the array group to map");
                        return;
                    }
                    if ((e = this.scope.plurals.values()) != null ? e.length : void 0) {
                        d = b.map(function(a) {
                            return function(b) {
                                return a.scope.plurals.get(b.key).model;
                            };
                        }(this));
                    } else {
                        d = [];
                    }
                    return {
                        cluster: a,
                        mapped: d,
                        group: a
                    };
                };
                l.prototype.getItem = function(a, b, c) {
                    if (b === "models") {
                        return a[b][c];
                    }
                    return a[b].get(c);
                };
                return l;
            }(e);
            return r;
        } ]);
    }).call(this);
    (function() {
        [ "Polygon", "Polyline" ].forEach(function(a) {
            return b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmap" + a + "sParentModel", [ "uiGmapBasePolysParentModel", "uiGmap" + a + "ChildModel", "uiGmapI" + a, function(b, c, d) {
                return b(d, c, a);
            } ]);
        });
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapRectangleParentModel", [ "uiGmapLogger", "uiGmapGmapUtil", "uiGmapEventsHelper", "uiGmapRectangleOptionsBuilder", function(b, d, e, f) {
            var g;
            return g = function(f) {
                a(g, f);
                g.include(d);
                g.include(e);
                function g(a, d, e, f, g) {
                    var h, i, j, k, l, m, n, o, p, q, r;
                    this.scope = a;
                    this.attrs = e;
                    this.gMap = f;
                    this.DEFAULTS = g;
                    h = void 0;
                    k = false;
                    p = [];
                    o = void 0;
                    l = function(a) {
                        return function() {
                            if (a.isTrue(a.attrs.fit)) {
                                return a.fitMapBounds(a.gMap, h);
                            }
                        };
                    }(this);
                    j = function(a) {
                        return function() {
                            var c, d, e;
                            if (a.scope.bounds != null && ((c = a.scope.bounds) != null ? c.sw : void 0) != null && ((d = a.scope.bounds) != null ? d.ne : void 0) != null && a.validateBoundPoints(a.scope.bounds)) {
                                h = a.convertBoundPoints(a.scope.bounds);
                                return b.info("new new bounds created: " + JSON.stringify(h));
                            } else if (a.scope.bounds.getNorthEast != null && a.scope.bounds.getSouthWest != null) {
                                return h = a.scope.bounds;
                            } else {
                                if (a.scope.bounds != null) {
                                    return b.error("Invalid bounds for newValue: " + JSON.stringify((e = a.scope) != null ? e.bounds : void 0));
                                }
                            }
                        };
                    }(this);
                    j();
                    m = new google.maps.Rectangle(this.buildOpts(h));
                    b.info("gObject (rectangle) created: " + m);
                    q = false;
                    r = function(a) {
                        return function() {
                            var b, c, d;
                            b = m.getBounds();
                            c = b.getNorthEast();
                            d = b.getSouthWest();
                            if (q) {
                                return;
                            }
                            return a.scope.$evalAsync(function(a) {
                                if (a.bounds != null && a.bounds.sw != null && a.bounds.ne != null) {
                                    a.bounds.ne = {
                                        latitude: c.lat(),
                                        longitude: c.lng()
                                    };
                                    a.bounds.sw = {
                                        latitude: d.lat(),
                                        longitude: d.lng()
                                    };
                                }
                                if (a.bounds.getNorthEast != null && a.bounds.getSouthWest != null) {
                                    return a.bounds = b;
                                }
                            });
                        };
                    }(this);
                    n = function(a) {
                        return function() {
                            l();
                            a.removeEvents(p);
                            p.push(google.maps.event.addListener(m, "dragstart", function() {
                                return k = true;
                            }));
                            p.push(google.maps.event.addListener(m, "dragend", function() {
                                k = false;
                                return r();
                            }));
                            return p.push(google.maps.event.addListener(m, "bounds_changed", function() {
                                if (k) {
                                    return;
                                }
                                return r();
                            }));
                        };
                    }(this);
                    i = function(a) {
                        return function() {
                            a.removeEvents(p);
                            if (o != null) {
                                a.removeEvents(o);
                            }
                            return m.setMap(null);
                        };
                    }(this);
                    if (h != null) {
                        n();
                    }
                    this.scope.$watch("bounds", function(a, b) {
                        var d;
                        if (c.isEqual(a, b) && h != null || k) {
                            return;
                        }
                        q = true;
                        if (a == null) {
                            i();
                            return;
                        }
                        if (h == null) {
                            d = true;
                        } else {
                            l();
                        }
                        j();
                        m.setBounds(h);
                        q = false;
                        if (d && h != null) {
                            return n();
                        }
                    }, true);
                    this.setMyOptions = function(a) {
                        return function(b, d) {
                            if (!c.isEqual(b, d)) {
                                if (h != null && b != null) {
                                    return m.setOptions(a.buildOpts(h));
                                }
                            }
                        };
                    }(this);
                    this.props.push("bounds");
                    this.watchProps(this.props);
                    if (this.attrs.events != null) {
                        o = this.setEvents(m, this.scope, this.scope);
                        this.scope.$watch("events", function(a) {
                            return function(b, d) {
                                if (!c.isEqual(b, d)) {
                                    if (o != null) {
                                        a.removeEvents(o);
                                    }
                                    return o = a.setEvents(m, a.scope, a.scope);
                                }
                            };
                        }(this));
                    }
                    this.scope.$on("$destroy", function() {
                        return i();
                    });
                    b.info(this);
                }
                return g;
            }(f);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, c = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapSearchBoxParentModel", [ "uiGmapBaseObject", "uiGmapLogger", "uiGmapEventsHelper", function(d, e, f) {
            var g;
            g = function(d) {
                c(g, d);
                g.include(f);
                function g(c, d, f, g, h, i, j) {
                    var k;
                    this.scope = c;
                    this.element = d;
                    this.attrs = f;
                    this.gMap = g;
                    this.ctrlPosition = h;
                    this.template = i;
                    this.$log = j != null ? j : e;
                    this.setVisibility = a(this.setVisibility, this);
                    this.getBounds = a(this.getBounds, this);
                    this.setBounds = a(this.setBounds, this);
                    this.createSearchBox = a(this.createSearchBox, this);
                    this.addToParentDiv = a(this.addToParentDiv, this);
                    this.addAsMapControl = a(this.addAsMapControl, this);
                    this.init = a(this.init, this);
                    if (this.attrs.template == null) {
                        this.$log.error("template attribute for the search-box directive is mandatory. Places Search Box creation aborted!!");
                        return;
                    }
                    if (b.isUndefined(this.scope.options)) {
                        this.scope.options = {};
                        this.scope.options.visible = true;
                    }
                    if (b.isUndefined(this.scope.options.visible)) {
                        this.scope.options.visible = true;
                    }
                    if (b.isUndefined(this.scope.options.autocomplete)) {
                        this.scope.options.autocomplete = false;
                    }
                    this.visible = this.scope.options.visible;
                    this.autocomplete = this.scope.options.autocomplete;
                    k = b.element("<div></div>");
                    k.append(this.template);
                    this.input = k.find("input")[0];
                    this.init();
                }
                g.prototype.init = function() {
                    this.createSearchBox();
                    this.scope.$watch("options", function(a) {
                        return function(c, d) {
                            if (b.isObject(c)) {
                                if (c.bounds != null) {
                                    a.setBounds(c.bounds);
                                }
                                if (c.visible != null) {
                                    if (a.visible !== c.visible) {
                                        return a.setVisibility(c.visible);
                                    }
                                }
                            }
                        };
                    }(this), true);
                    if (this.attrs.parentdiv != null) {
                        this.addToParentDiv();
                    } else {
                        this.addAsMapControl();
                    }
                    if (!this.visible) {
                        this.setVisibility(this.visible);
                    }
                    if (this.autocomplete) {
                        this.listener = google.maps.event.addListener(this.gObject, "place_changed", function(a) {
                            return function() {
                                return a.places = a.gObject.getPlace();
                            };
                        }(this));
                    } else {
                        this.listener = google.maps.event.addListener(this.gObject, "places_changed", function(a) {
                            return function() {
                                return a.places = a.gObject.getPlaces();
                            };
                        }(this));
                    }
                    this.listeners = this.setEvents(this.gObject, this.scope, this.scope);
                    this.$log.info(this);
                    this.scope.$on("$stateChangeSuccess", function(a) {
                        return function() {
                            if (a.attrs.parentdiv != null) {
                                return a.addToParentDiv();
                            }
                        };
                    }(this));
                    return this.scope.$on("$destroy", function(a) {
                        return function() {
                            return a.gObject = null;
                        };
                    }(this));
                };
                g.prototype.addAsMapControl = function() {
                    return this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].push(this.input);
                };
                g.prototype.addToParentDiv = function() {
                    var a;
                    this.parentDiv = b.element(document.getElementById(this.scope.parentdiv));
                    if ((a = this.parentDiv) != null ? a.length : void 0) {
                        return this.parentDiv.append(this.input);
                    }
                };
                g.prototype.createSearchBox = function() {
                    if (this.autocomplete) {
                        return this.gObject = new google.maps.places.Autocomplete(this.input, this.scope.options);
                    } else {
                        return this.gObject = new google.maps.places.SearchBox(this.input, this.scope.options);
                    }
                };
                g.prototype.setBounds = function(a) {
                    if (b.isUndefined(a.isEmpty)) {
                        this.$log.error("Error: SearchBoxParentModel setBounds. Bounds not an instance of LatLngBounds.");
                    } else {
                        if (a.isEmpty() === false) {
                            if (this.gObject != null) {
                                return this.gObject.setBounds(a);
                            }
                        }
                    }
                };
                g.prototype.getBounds = function() {
                    return this.gObject.getBounds();
                };
                g.prototype.setVisibility = function(a) {
                    if (this.attrs.parentdiv != null) {
                        if (a === false) {
                            this.parentDiv.addClass("ng-hide");
                        } else {
                            this.parentDiv.removeClass("ng-hide");
                        }
                    } else {
                        if (a === false) {
                            this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].clear();
                        } else {
                            this.gMap.controls[google.maps.ControlPosition[this.ctrlPosition]].push(this.input);
                        }
                    }
                    return this.visible = a;
                };
                return g;
            }(d);
            return g;
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, d = function(a, b) {
            for (var c in b) {
                if (e.call(b, c)) a[c] = b[c];
            }
            function d() {
                this.constructor = a;
            }
            d.prototype = b.prototype;
            a.prototype = new d();
            a.__super__ = b.prototype;
            return a;
        }, e = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api.models.parent").factory("uiGmapWindowsParentModel", [ "uiGmapIWindowParentModel", "uiGmapModelsWatcher", "uiGmapPropMap", "uiGmapWindowChildModel", "uiGmapLinked", "uiGmap_async", "uiGmapLogger", "$timeout", "$compile", "$http", "$templateCache", "$interpolate", "uiGmapPromise", "uiGmapIWindow", "uiGmapGmapUtil", function(e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
            var t;
            t = function(e) {
                d(t, e);
                t.include(f);
                function t(b, d, e, f, h, j) {
                    this.gMap = h;
                    this.markersScope = j;
                    this.modelKeyComparison = a(this.modelKeyComparison, this);
                    this.interpolateContent = a(this.interpolateContent, this);
                    this.setChildScope = a(this.setChildScope, this);
                    this.createWindow = a(this.createWindow, this);
                    this.setContentKeys = a(this.setContentKeys, this);
                    this.pieceMeal = a(this.pieceMeal, this);
                    this.createAllNew = a(this.createAllNew, this);
                    this.watchIdKey = a(this.watchIdKey, this);
                    this.createChildScopes = a(this.createChildScopes, this);
                    this.watchOurScope = a(this.watchOurScope, this);
                    this.watchDestroy = a(this.watchDestroy, this);
                    this.onDestroy = a(this.onDestroy, this);
                    this.rebuildAll = a(this.rebuildAll, this);
                    this.doINeedToWipe = a(this.doINeedToWipe, this);
                    this.watchModels = a(this.watchModels, this);
                    this.go = a(this.go, this);
                    t.__super__.constructor.call(this, b, d, e, f, l, m, n, o);
                    this["interface"] = r;
                    this.plurals = new g();
                    c.each(r.scopeKeys, function(a) {
                        return function(b) {
                            return a[b + "Key"] = void 0;
                        };
                    }(this));
                    this.linked = new i(b, d, e, f);
                    this.contentKeys = void 0;
                    this.isIconVisibleOnClick = void 0;
                    this.firstTime = true;
                    this.firstWatchModels = true;
                    this.$log.info(self);
                    this.parentScope = void 0;
                    this.go(b);
                }
                t.prototype.go = function(a) {
                    this.watchOurScope(a);
                    this.doRebuildAll = this.scope.doRebuildAll != null ? this.scope.doRebuildAll : false;
                    a.$watch("doRebuildAll", function(a) {
                        return function(b, c) {
                            if (b !== c) {
                                return a.doRebuildAll = b;
                            }
                        };
                    }(this));
                    return this.createChildScopes();
                };
                t.prototype.watchModels = function(a) {
                    var b;
                    b = this.markersScope != null ? "pluralsUpdate" : "models";
                    return a.$watch(b, function(b) {
                        return function(d, e) {
                            var f;
                            if (!c.isEqual(d, e) || b.firstWatchModels) {
                                b.firstWatchModels = false;
                                if (b.doRebuildAll || b.doINeedToWipe(a.models)) {
                                    return b.rebuildAll(a, true, true);
                                } else {
                                    f = b.plurals.length === 0;
                                    if (b.existingPieces != null) {
                                        return c.last(b.existingPieces._content).then(function() {
                                            return b.createChildScopes(f);
                                        });
                                    } else {
                                        return b.createChildScopes(f);
                                    }
                                }
                            }
                        };
                    }(this), true);
                };
                t.prototype.doINeedToWipe = function(a) {
                    var b;
                    b = a != null ? a.length === 0 : true;
                    return this.plurals.length > 0 && b;
                };
                t.prototype.rebuildAll = function(a, b, c) {
                    return this.onDestroy(c).then(function(a) {
                        return function() {
                            if (b) {
                                return a.createChildScopes();
                            }
                        };
                    }(this));
                };
                t.prototype.onDestroy = function(a) {
                    t.__super__.onDestroy.call(this, this.scope);
                    return j.promiseLock(this, q.promiseTypes["delete"], void 0, void 0, function(a) {
                        return function() {
                            return j.each(a.plurals.values(), function(a) {
                                return a.destroy(true);
                            }, j.chunkSizeFrom(a.scope.cleanchunk, false)).then(function() {
                                var b;
                                return (b = a.plurals) != null ? b.removeAll() : void 0;
                            });
                        };
                    }(this));
                };
                t.prototype.watchDestroy = function(a) {
                    return a.$on("$destroy", function(b) {
                        return function() {
                            b.firstWatchModels = true;
                            b.firstTime = true;
                            return b.rebuildAll(a, false, true);
                        };
                    }(this));
                };
                t.prototype.watchOurScope = function(a) {
                    return c.each(r.scopeKeys, function(b) {
                        return function(c) {
                            var d;
                            d = c + "Key";
                            return b[d] = typeof a[c] === "function" ? a[c]() : a[c];
                        };
                    }(this));
                };
                t.prototype.createChildScopes = function(a) {
                    var c, d, e;
                    if (a == null) {
                        a = true;
                    }
                    this.isIconVisibleOnClick = true;
                    if (b.isDefined(this.linked.attrs.isiconvisibleonclick)) {
                        this.isIconVisibleOnClick = this.linked.scope.isIconVisibleOnClick;
                    }
                    c = b.isUndefined(this.linked.scope.models);
                    if (c && (this.markersScope === void 0 || (((d = this.markersScope) != null ? d.plurals : void 0) === void 0 || ((e = this.markersScope) != null ? e.models : void 0) === void 0))) {
                        this.$log.error("No models to create windows from! Need direct models or models derived from markers!");
                        return;
                    }
                    if (this.gMap != null) {
                        if (this.linked.scope.models != null) {
                            this.watchIdKey(this.linked.scope);
                            if (a) {
                                return this.createAllNew(this.linked.scope, false);
                            } else {
                                return this.pieceMeal(this.linked.scope, false);
                            }
                        } else {
                            this.parentScope = this.markersScope;
                            this.watchIdKey(this.parentScope);
                            if (a) {
                                return this.createAllNew(this.markersScope, true, "plurals", false);
                            } else {
                                return this.pieceMeal(this.markersScope, true, "plurals", false);
                            }
                        }
                    }
                };
                t.prototype.watchIdKey = function(a) {
                    this.setIdKey(a);
                    return a.$watch("idKey", function(b) {
                        return function(c, d) {
                            if (c !== d && c == null) {
                                b.idKey = c;
                                return b.rebuildAll(a, true, true);
                            }
                        };
                    }(this));
                };
                t.prototype.createAllNew = function(a, b, c, d) {
                    var e;
                    if (c == null) {
                        c = "models";
                    }
                    if (d == null) {
                        d = false;
                    }
                    if (this.firstTime) {
                        this.watchModels(a);
                        this.watchDestroy(a);
                    }
                    this.setContentKeys(a.models);
                    if (this.didQueueInitPromise(this, a)) {
                        return;
                    }
                    e = null;
                    return j.promiseLock(this, q.promiseTypes.create, "createAllNew", function(a) {
                        return e = a;
                    }, function(d) {
                        return function() {
                            return j.each(a.models, function(f) {
                                var g, h;
                                g = b ? (h = d.getItem(a, c, f[d.idKey])) != null ? h.gObject : void 0 : void 0;
                                if (!e) {
                                    if (!g && d.markersScope) {
                                        k.error("Unable to get gMarker from markersScope!");
                                    }
                                    d.createWindow(f, g, d.gMap);
                                }
                                return e;
                            }, j.chunkSizeFrom(a.chunk)).then(function() {
                                return d.firstTime = false;
                            });
                        };
                    }(this));
                };
                t.prototype.pieceMeal = function(a, b, c, d) {
                    var e, f;
                    if (c == null) {
                        c = "models";
                    }
                    if (d == null) {
                        d = true;
                    }
                    if (a.$$destroyed) {
                        return;
                    }
                    e = null;
                    f = null;
                    if (a != null && this.modelsLength() && this.plurals.length) {
                        return j.promiseLock(this, q.promiseTypes.update, "pieceMeal", function(a) {
                            return e = a;
                        }, function(b) {
                            return function() {
                                return q.promise(function() {
                                    return b.figureOutState(b.idKey, a, b.plurals, b.modelKeyComparison);
                                }).then(function(c) {
                                    f = c;
                                    return j.each(f.removals, function(a) {
                                        if (a != null) {
                                            b.plurals.remove(a.id);
                                            if (a.destroy != null) {
                                                a.destroy(true);
                                            }
                                            return e;
                                        }
                                    }, j.chunkSizeFrom(a.chunk));
                                }).then(function() {
                                    return j.each(f.adds, function(d) {
                                        var f, g;
                                        f = (g = b.getItem(a, c, d[b.idKey])) != null ? g.gObject : void 0;
                                        if (!f) {
                                            throw "Gmarker undefined";
                                        }
                                        b.createWindow(d, f, b.gMap);
                                        return e;
                                    });
                                }).then(function() {
                                    return j.each(f.updates, function(a) {
                                        b.updateChild(a.child, a.model);
                                        return e;
                                    }, j.chunkSizeFrom(a.chunk));
                                });
                            };
                        }(this));
                    } else {
                        k.debug("pieceMeal: rebuildAll");
                        return this.rebuildAll(this.scope, true, true);
                    }
                };
                t.prototype.setContentKeys = function(a) {
                    if (this.modelsLength(a)) {
                        return this.contentKeys = Object.keys(a[0]);
                    }
                };
                t.prototype.createWindow = function(a, b, c) {
                    var d, e, f, g, i, j;
                    e = this.linked.scope.$new(false);
                    this.setChildScope(e, a);
                    e.$watch("model", function(a) {
                        return function(b, c) {
                            if (b !== c) {
                                return a.setChildScope(e, b);
                            }
                        };
                    }(this), true);
                    f = {
                        html: function(b) {
                            return function() {
                                return b.interpolateContent(b.linked.element.html(), a);
                            };
                        }(this)
                    };
                    this.DEFAULTS = this.scopeOrModelVal(this.optionsKey, this.scope, a) || {};
                    g = this.createWindowOptions(b, e, f.html(), this.DEFAULTS);
                    d = new h({
                        model: a,
                        scope: e,
                        opts: g,
                        isIconVisibleOnClick: this.isIconVisibleOnClick,
                        gMap: c,
                        markerScope: (i = this.markersScope) != null ? (j = i.plurals.get(a[this.idKey])) != null ? j.scope : void 0 : void 0,
                        element: f,
                        needToManualDestroy: false,
                        markerIsVisibleAfterWindowClose: true,
                        isScopeModel: true
                    });
                    if (a[this.idKey] == null) {
                        this.$log.error("Window model has no id to assign a child to. This is required for performance. Please assign id, or redirect id to a different key.");
                        return;
                    }
                    this.plurals.put(a[this.idKey], d);
                    return d;
                };
                t.prototype.setChildScope = function(a, b) {
                    c.each(r.scopeKeys, function(c) {
                        return function(d) {
                            var e, f;
                            e = d + "Key";
                            f = c[e] === "self" ? b : b[c[e]];
                            if (f !== a[d]) {
                                return a[d] = f;
                            }
                        };
                    }(this));
                    return a.model = b;
                };
                t.prototype.interpolateContent = function(a, b) {
                    var c, d, e, f, g, h;
                    if (this.contentKeys === void 0 || this.contentKeys.length === 0) {
                        return;
                    }
                    c = p(a);
                    e = {};
                    h = this.contentKeys;
                    for (d = 0, g = h.length; d < g; d++) {
                        f = h[d];
                        e[f] = b[f];
                    }
                    return c(e);
                };
                t.prototype.modelKeyComparison = function(a, b) {
                    var d, e;
                    e = this.scope.coords != null ? this.scope : this.parentScope;
                    if (e == null) {
                        throw "No scope or parentScope set!";
                    }
                    d = s.equalCoords(this.evalModelHandle(a, e.coords), this.evalModelHandle(b, e.coords));
                    if (!d) {
                        return d;
                    }
                    d = c.every(c.without(this["interface"].scopeKeys, "coords"), function(c) {
                        return function(d) {
                            return c.evalModelHandle(a, e[d]) === c.evalModelHandle(b, e[d]);
                        };
                    }(this));
                    return d;
                };
                return t;
            }(e);
            return t;
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapCircle", [ "uiGmapICircle", "uiGmapCircleParentModel", function(a, b) {
            return c.extend(a, {
                link: function(a, c, d, e) {
                    return e.getScope().deferred.promise.then(function(e) {
                        return new b(a, c, d, e);
                    });
                }
            });
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, c = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapControl", [ "uiGmapIControl", "$http", "$templateCache", "$compile", "$controller", "uiGmapGoogleMapApi", function(d, e, f, g, h, i) {
            var j;
            return j = function(j) {
                c(k, j);
                function k() {
                    this.link = a(this.link, this);
                    k.__super__.constructor.call(this);
                }
                k.prototype.transclude = true;
                k.prototype.link = function(a, c, j, k, l) {
                    return i.then(function(c) {
                        return function(i) {
                            var j, m, n;
                            j = b.isUndefined(a.template);
                            m = b.isDefined(a.index && !isNaN(parseInt(a.index))) ? parseInt(a.index) : void 0;
                            n = b.isDefined(a.position) ? a.position.toUpperCase().replace(/-/g, "_") : "TOP_CENTER";
                            if (!i.ControlPosition[n]) {
                                c.$log.error("mapControl: invalid position property");
                                return;
                            }
                            return d.mapPromise(a, k).then(function(d) {
                                var i, k, o;
                                i = void 0;
                                k = b.element("<div></div>");
                                o = function(a, b, c) {
                                    if (c) {
                                        b[0].index = c;
                                    }
                                    return a.controls[google.maps.ControlPosition[n]].push(b[0]);
                                };
                                if (j) {
                                    return l(function(a) {
                                        k.append(a);
                                        return o(d, k.children(), m);
                                    });
                                } else {
                                    return e.get(a.template, {
                                        cache: f
                                    }).then(function(c) {
                                        var d, e, f;
                                        d = c.data;
                                        f = a.$new();
                                        k.append(d);
                                        if (b.isDefined(a.controller)) {
                                            e = h(a.controller, {
                                                $scope: f
                                            });
                                            k.children().data("$ngControllerController", e);
                                        }
                                        return i = g(k.children())(f);
                                    })["catch"](function(a) {
                                        return c.$log.error("mapControl: template could not be found");
                                    }).then(function() {
                                        return o(d, i, m);
                                    });
                                }
                            });
                        };
                    }(this));
                };
                return k;
            }(d);
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api").service("uiGmapDragZoom", [ "uiGmapCtrlHandle", "uiGmapPropertyAction", function(a, b) {
            return {
                restrict: "EMA",
                transclude: true,
                template: '<div class="angular-google-map-dragzoom" ng-transclude style="display: none"></div>',
                require: "^" + "uiGmapGoogleMap",
                scope: {
                    keyboardkey: "=",
                    options: "=",
                    spec: "="
                },
                controller: [ "$scope", "$element", function(b, d) {
                    b.ctrlType = "uiGmapDragZoom";
                    return c.extend(this, a.handle(b, d));
                } ],
                link: function(c, d, e, f) {
                    return a.mapPromise(c, f).then(function(a) {
                        var d, e, f;
                        d = function(b) {
                            return a.enableKeyDragZoom(b);
                        };
                        e = new b(function(a, b) {
                            if (b) {
                                return d({
                                    key: b
                                });
                            } else {
                                return d();
                            }
                        });
                        f = new b(function(a, b) {
                            if (b) {
                                return d(b);
                            }
                        });
                        c.$watch("keyboardkey", e.sic("keyboardkey"));
                        e.sic(c.keyboardkey);
                        c.$watch("options", f.sic("options"));
                        return f.sic(c.options);
                    });
                }
            };
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapDrawingManager", [ "uiGmapIDrawingManager", "uiGmapDrawingManagerParentModel", function(a, b) {
            return c.extend(a, {
                link: function(a, c, d, e) {
                    return e.getScope().deferred.promise.then(function(e) {
                        return new b(a, c, d, e);
                    });
                }
            });
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, d = function(a, b) {
            for (var c in b) {
                if (e.call(b, c)) a[c] = b[c];
            }
            function d() {
                this.constructor = a;
            }
            d.prototype = b.prototype;
            a.prototype = new d();
            a.__super__ = b.prototype;
            return a;
        }, e = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapApiFreeDrawPolygons", [ "uiGmapLogger", "uiGmapBaseObject", "uiGmapCtrlHandle", "uiGmapDrawFreeHandChildModel", "uiGmapLodash", function(b, e, f, g, h) {
            var i;
            return i = function(e) {
                d(i, e);
                function i() {
                    this.link = a(this.link, this);
                    return i.__super__.constructor.apply(this, arguments);
                }
                i.include(f);
                i.prototype.restrict = "EMA";
                i.prototype.replace = true;
                i.prototype.require = "^" + "uiGmapGoogleMap";
                i.prototype.scope = {
                    polygons: "=",
                    draw: "="
                };
                i.prototype.link = function(a, d, e, f) {
                    return this.mapPromise(a, f).then(function(d) {
                        return function(d) {
                            var e, i;
                            if (!a.polygons) {
                                return b.error("No polygons to bind to!");
                            }
                            if (!c.isArray(a.polygons)) {
                                return b.error("Free Draw Polygons must be of type Array!");
                            }
                            e = new g(d, f.getScope());
                            i = void 0;
                            return a.draw = function() {
                                if (typeof i === "function") {
                                    i();
                                }
                                return e.engage(a.polygons).then(function() {
                                    var b;
                                    b = true;
                                    return i = a.$watchCollection("polygons", function(a, c) {
                                        var d;
                                        if (b || a === c) {
                                            b = false;
                                            return;
                                        }
                                        d = h.differenceObjects(c, a);
                                        return d.forEach(function(a) {
                                            return a.setMap(null);
                                        });
                                    });
                                });
                            };
                        };
                    }(this));
                };
                return i;
            }(e);
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api").service("uiGmapICircle", [ function() {
            return {
                restrict: "EA",
                replace: true,
                require: "^" + "uiGmapGoogleMap",
                scope: {
                    center: "=center",
                    radius: "=radius",
                    stroke: "=stroke",
                    fill: "=fill",
                    clickable: "=",
                    draggable: "=",
                    editable: "=",
                    geodesic: "=",
                    icons: "=icons",
                    visible: "=",
                    events: "=",
                    control: "=",
                    zIndex: "=zindex"
                }
            };
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var d in b) {
                if (c.call(b, d)) a[d] = b[d];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, c = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIControl", [ "uiGmapBaseObject", "uiGmapLogger", "uiGmapCtrlHandle", function(b, c, d) {
            var e;
            return e = function(b) {
                a(e, b);
                e.extend(d);
                function e() {
                    this.restrict = "EA";
                    this.replace = true;
                    this.require = "^" + "uiGmapGoogleMap";
                    this.scope = {
                        template: "@template",
                        position: "@position",
                        controller: "@controller",
                        index: "@index"
                    };
                    this.$log = c;
                }
                e.prototype.link = function(a, b, c, d) {
                    throw new Error("Not implemented!!");
                };
                return e;
            }(b);
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api").service("uiGmapIDrawingManager", [ function() {
            return {
                restrict: "EA",
                replace: true,
                require: "^" + "uiGmapGoogleMap",
                scope: {
                    static: "@",
                    control: "=",
                    options: "=",
                    events: "="
                }
            };
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIMarker", [ "uiGmapBaseObject", "uiGmapCtrlHandle", function(b, d) {
            var e;
            return e = function(b) {
                a(e, b);
                e.scope = {
                    coords: "=coords",
                    icon: "=icon",
                    click: "&click",
                    options: "=options",
                    events: "=events",
                    fit: "=fit",
                    idKey: "=idkey",
                    control: "=control"
                };
                e.scopeKeys = c.keys(e.scope);
                e.keys = e.scopeKeys;
                e.extend(d);
                function e() {
                    this.restrict = "EMA";
                    this.require = "^" + "uiGmapGoogleMap";
                    this.priority = -1;
                    this.transclude = true;
                    this.replace = true;
                    this.scope = c.extend(this.scope || {}, e.scope);
                }
                return e;
            }(b);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIPolygon", [ "uiGmapGmapUtil", "uiGmapBaseObject", "uiGmapLogger", "uiGmapCtrlHandle", function(b, d, e, f) {
            var g;
            return g = function(d) {
                a(g, d);
                g.scope = {
                    path: "=path",
                    stroke: "=stroke",
                    clickable: "=",
                    draggable: "=",
                    editable: "=",
                    geodesic: "=",
                    fill: "=",
                    icons: "=icons",
                    visible: "=",
                    static: "=",
                    events: "=",
                    zIndex: "=zindex",
                    fit: "=",
                    control: "=control"
                };
                g.scopeKeys = c.keys(g.scope);
                g.include(b);
                g.extend(f);
                function g() {}
                g.prototype.restrict = "EMA";
                g.prototype.replace = true;
                g.prototype.require = "^" + "uiGmapGoogleMap";
                g.prototype.scope = g.scope;
                g.prototype.DEFAULTS = {};
                g.prototype.$log = e;
                return g;
            }(d);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIPolyline", [ "uiGmapGmapUtil", "uiGmapBaseObject", "uiGmapLogger", "uiGmapCtrlHandle", function(b, d, e, f) {
            var g;
            return g = function(d) {
                a(g, d);
                g.scope = {
                    path: "=",
                    stroke: "=",
                    clickable: "=",
                    draggable: "=",
                    editable: "=",
                    geodesic: "=",
                    icons: "=",
                    visible: "=",
                    static: "=",
                    fit: "=",
                    events: "=",
                    zIndex: "=zindex"
                };
                g.scopeKeys = c.keys(g.scope);
                g.include(b);
                g.extend(f);
                function g() {}
                g.prototype.restrict = "EMA";
                g.prototype.replace = true;
                g.prototype.require = "^" + "uiGmapGoogleMap";
                g.prototype.scope = g.scope;
                g.prototype.DEFAULTS = {};
                g.prototype.$log = e;
                return g;
            }(d);
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api").service("uiGmapIRectangle", [ function() {
            "use strict";
            return {
                restrict: "EMA",
                require: "^" + "uiGmapGoogleMap",
                replace: true,
                scope: {
                    bounds: "=",
                    stroke: "=",
                    clickable: "=",
                    draggable: "=",
                    editable: "=",
                    fill: "=",
                    visible: "=",
                    events: "="
                }
            };
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapIWindow", [ "uiGmapBaseObject", "uiGmapChildEvents", "uiGmapCtrlHandle", function(b, d, e) {
            var f;
            return f = function(b) {
                a(f, b);
                f.scope = {
                    coords: "=coords",
                    template: "=template",
                    templateUrl: "=templateurl",
                    templateParameter: "=templateparameter",
                    isIconVisibleOnClick: "=isiconvisibleonclick",
                    closeClick: "&closeclick",
                    options: "=options",
                    control: "=control",
                    show: "=show"
                };
                f.scopeKeys = c.keys(f.scope);
                f.include(d);
                f.extend(e);
                function f() {
                    this.restrict = "EMA";
                    this.template = void 0;
                    this.transclude = true;
                    this.priority = -100;
                    this.require = "^" + "uiGmapGoogleMap";
                    this.replace = true;
                    this.scope = c.extend(this.scope || {}, f.scope);
                }
                return f;
            }(b);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, d = function(a, b) {
            for (var c in b) {
                if (e.call(b, c)) a[c] = b[c];
            }
            function d() {
                this.constructor = a;
            }
            d.prototype = b.prototype;
            a.prototype = new d();
            a.__super__ = b.prototype;
            return a;
        }, e = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapMap", [ "$timeout", "$q", "$log", "uiGmapGmapUtil", "uiGmapBaseObject", "uiGmapCtrlHandle", "uiGmapIsReady", "uiGmapuuid", "uiGmapExtendGWin", "uiGmapExtendMarkerClusterer", "uiGmapGoogleMapsUtilV3", "uiGmapGoogleMapApi", "uiGmapEventsHelper", "uiGmapGoogleMapObjectManager", function(e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
            var s, t, u;
            s = void 0;
            u = [ o, m, n ];
            return t = function(f) {
                d(i, f);
                i.include(h);
                function i() {
                    this.link = a(this.link, this);
                    var b;
                    b = function(a) {
                        var b, d;
                        d = void 0;
                        a.$on("$destroy", function() {
                            return k.decrement();
                        });
                        b = j.handle(a);
                        a.ctrlType = "Map";
                        a.deferred.promise.then(function() {
                            return u.forEach(function(a) {
                                return a.init();
                            });
                        });
                        b.getMap = function() {
                            return a.map;
                        };
                        d = c.extend(this, b);
                        return d;
                    };
                    this.controller = [ "$scope", b ];
                }
                i.prototype.restrict = "EMA";
                i.prototype.transclude = true;
                i.prototype.replace = false;
                i.prototype.template = '<div class="angular-google-map"><div class="angular-google-map-container">\n</div><div ng-transclude style="display: none"></div></div>';
                i.prototype.scope = {
                    center: "=",
                    zoom: "=",
                    dragging: "=",
                    control: "=",
                    options: "=",
                    events: "=",
                    eventOpts: "=",
                    styles: "=",
                    bounds: "=",
                    update: "="
                };
                i.prototype.link = function(a, d, f) {
                    var h;
                    h = [];
                    a.$on("$destroy", function() {
                        q.removeEvents(h);
                        if (f.recycleMapInstance === "true" && a.map) {
                            r.recycleMapInstance(a.map);
                            return a.map = null;
                        }
                    });
                    a.idleAndZoomChanged = false;
                    return p.then(function(i) {
                        return function(j) {
                            var m, n, o, p, t, u, v, w, x, y, z, A, B, C, D, E, F;
                            s = {
                                mapTypeId: j.MapTypeId.ROADMAP
                            };
                            C = k.spawn();
                            A = function() {
                                return C.deferred.resolve({
                                    instance: C.instance,
                                    map: m
                                });
                            };
                            if (!b.isDefined(a.center) && !b.isDefined(a.bounds)) {
                                g.error("angular-google-maps: a center or bounds property is required");
                                return;
                            }
                            if (!b.isDefined(a.center)) {
                                a.center = new google.maps.LatLngBounds(i.getCoords(a.bounds.southwest), i.getCoords(a.bounds.northeast)).getCenter();
                            }
                            if (!b.isDefined(a.zoom)) {
                                a.zoom = 10;
                            }
                            t = b.element(d);
                            t.addClass("angular-google-map");
                            y = {
                                options: {}
                            };
                            if (f.options) {
                                y.options = a.options;
                            }
                            if (f.styles) {
                                y.styles = a.styles;
                            }
                            if (f.type) {
                                D = f.type.toUpperCase();
                                if (google.maps.MapTypeId.hasOwnProperty(D)) {
                                    y.mapTypeId = google.maps.MapTypeId[f.type.toUpperCase()];
                                } else {
                                    g.error("angular-google-maps: invalid map type '" + f.type + "'");
                                }
                            }
                            w = b.extend({}, s, y, {
                                center: i.getCoords(a.center),
                                zoom: a.zoom,
                                bounds: a.bounds
                            });
                            if (f.recycleMapInstance === "true") {
                                m = r.createMapInstance(t.find("div")[1], w);
                            } else {
                                m = new google.maps.Map(t.find("div")[1], w);
                            }
                            m["uiGmap_id"] = l.generate();
                            p = false;
                            h.push(google.maps.event.addListenerOnce(m, "idle", function() {
                                a.deferred.resolve(m);
                                return A();
                            }));
                            o = f.events && ((z = a.events) != null ? z.blacklist : void 0) != null ? a.events.blacklist : [];
                            if (c.isString(o)) {
                                o = [ o ];
                            }
                            x = function(b, d, e) {
                                if (!c.includes(o, b)) {
                                    if (e) {
                                        e();
                                    }
                                    return h.push(google.maps.event.addListener(m, b, function() {
                                        var b;
                                        if (!((b = a.update) != null ? b.lazy : void 0)) {
                                            return d();
                                        }
                                    }));
                                }
                            };
                            if (!c.includes(o, "all")) {
                                x("dragstart", function() {
                                    p = true;
                                    return a.$evalAsync(function(a) {
                                        if (a.dragging != null) {
                                            return a.dragging = p;
                                        }
                                    });
                                });
                                x("dragend", function() {
                                    p = false;
                                    return a.$evalAsync(function(a) {
                                        if (a.dragging != null) {
                                            return a.dragging = p;
                                        }
                                    });
                                });
                                E = function(d, e) {
                                    var f, g;
                                    if (d == null) {
                                        d = m.center;
                                    }
                                    if (e == null) {
                                        e = a;
                                    }
                                    if (!c.includes(o, "center")) {
                                        f = d.lat();
                                        g = d.lng();
                                        if (b.isDefined(e.center.type)) {
                                            if (e.center.coordinates[1] !== f) {
                                                e.center.coordinates[1] = f;
                                            }
                                            if (e.center.coordinates[0] !== g) {
                                                return e.center.coordinates[0] = g;
                                            }
                                        } else {
                                            if (e.center.latitude !== f) {
                                                e.center.latitude = f;
                                            }
                                            if (e.center.longitude !== g) {
                                                return e.center.longitude = g;
                                            }
                                        }
                                    }
                                };
                                B = false;
                                x("idle", function() {
                                    var b, d, e;
                                    b = m.getBounds();
                                    d = b.getNorthEast();
                                    e = b.getSouthWest();
                                    B = true;
                                    return a.$evalAsync(function(b) {
                                        E();
                                        if (!c.isUndefined(b.bounds) && !c.includes(o, "bounds")) {
                                            b.bounds.northeast = {
                                                latitude: d.lat(),
                                                longitude: d.lng()
                                            };
                                            b.bounds.southwest = {
                                                latitude: e.lat(),
                                                longitude: e.lng()
                                            };
                                        }
                                        if (!c.includes(o, "zoom")) {
                                            b.zoom = m.zoom;
                                            a.idleAndZoomChanged = !a.idleAndZoomChanged;
                                        }
                                        return B = false;
                                    });
                                });
                            }
                            if (b.isDefined(a.events) && a.events !== null && b.isObject(a.events)) {
                                v = function(b) {
                                    return function() {
                                        return a.events[b].apply(a, [ m, b, arguments ]);
                                    };
                                };
                                n = [];
                                for (u in a.events) {
                                    if (a.events.hasOwnProperty(u) && b.isFunction(a.events[u])) {
                                        n.push(google.maps.event.addListener(m, u, v(u)));
                                    }
                                }
                                h.concat(n);
                            }
                            m.getOptions = function() {
                                return w;
                            };
                            a.map = m;
                            if (f.control != null && a.control != null) {
                                a.control.refresh = function(a) {
                                    var b, c, d;
                                    if (m == null) {
                                        return;
                                    }
                                    if ((typeof google !== "undefined" && google !== null ? (c = google.maps) != null ? (d = c.event) != null ? d.trigger : void 0 : void 0 : void 0) != null && m != null) {
                                        google.maps.event.trigger(m, "resize");
                                    }
                                    if ((a != null ? a.latitude : void 0) != null && (a != null ? a.longitude : void 0) != null) {
                                        b = i.getCoords(a);
                                        if (i.isTrue(f.pan)) {
                                            return m.panTo(b);
                                        } else {
                                            return m.setCenter(b);
                                        }
                                    }
                                };
                                a.control.getGMap = function() {
                                    return m;
                                };
                                a.control.getMapOptions = function() {
                                    return w;
                                };
                                a.control.getCustomEventListeners = function() {
                                    return n;
                                };
                                a.control.removeEvents = function(a) {
                                    return q.removeEvents(a);
                                };
                            }
                            a.$watch("center", function(b, c) {
                                var d;
                                if (b === c || B) {
                                    return;
                                }
                                d = i.getCoords(a.center);
                                if (d.lat() === m.center.lat() && d.lng() === m.center.lng()) {
                                    return;
                                }
                                if (!p) {
                                    if (!i.validateCoords(b)) {
                                        g.error("Invalid center for newValue: " + JSON.stringify(b));
                                    }
                                    if (i.isTrue(f.pan) && a.zoom === m.zoom) {
                                        return m.panTo(d);
                                    } else {
                                        return m.setCenter(d);
                                    }
                                }
                            }, true);
                            F = null;
                            a.$watch("zoom", function(b, d) {
                                var f, g;
                                if (b == null) {
                                    return;
                                }
                                if (c.isEqual(b, d) || (m != null ? m.getZoom() : void 0) === (a != null ? a.zoom : void 0) || B) {
                                    return;
                                }
                                if (F != null) {
                                    e.cancel(F);
                                }
                                return F = e(function() {
                                    return m.setZoom(b);
                                }, ((f = a.eventOpts) != null ? (g = f.debounce) != null ? g.zoomMs : void 0 : void 0) + 20, false);
                            });
                            a.$watch("bounds", function(a, b) {
                                var c, d, e, f, h, i, j;
                                if (a === b) {
                                    return;
                                }
                                if ((a != null ? (e = a.northeast) != null ? e.latitude : void 0 : void 0) == null || (a != null ? (f = a.northeast) != null ? f.longitude : void 0 : void 0) == null || (a != null ? (h = a.southwest) != null ? h.latitude : void 0 : void 0) == null || (a != null ? (i = a.southwest) != null ? i.longitude : void 0 : void 0) == null) {
                                    g.error("Invalid map bounds for new value: " + JSON.stringify(a));
                                    return;
                                }
                                d = new google.maps.LatLng(a.northeast.latitude, a.northeast.longitude);
                                j = new google.maps.LatLng(a.southwest.latitude, a.southwest.longitude);
                                c = new google.maps.LatLngBounds(j, d);
                                return m.fitBounds(c);
                            });
                            return [ "options", "styles" ].forEach(function(b) {
                                return a.$watch(b, function(a, d) {
                                    if (c.isEqual(a, d)) {
                                        return;
                                    }
                                    if (b === "options") {
                                        y.options = a;
                                    } else {
                                        y.options[b] = a;
                                    }
                                    if (m != null) {
                                        return m.setOptions(y);
                                    }
                                }, true);
                            });
                        };
                    }(this));
                };
                return i;
            }(i);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapMarker", [ "uiGmapIMarker", "uiGmapMarkerChildModel", "uiGmapMarkerManager", "uiGmapLogger", function(b, d, e, f) {
            var g;
            return g = function(g) {
                a(h, g);
                function h() {
                    h.__super__.constructor.call(this);
                    this.template = '<span class="angular-google-map-marker" ng-transclude></span>';
                    f.info(this);
                }
                h.prototype.controller = [ "$scope", "$element", function(a, d) {
                    a.ctrlType = "Marker";
                    return c.extend(this, b.handle(a, d));
                } ];
                h.prototype.link = function(a, f, g, h) {
                    var i;
                    i = b.mapPromise(a, h);
                    i.then(function(f) {
                        var g, h, i;
                        g = new e(f);
                        h = c.object(b.keys, b.keys);
                        i = new d({
                            scope: a,
                            model: a,
                            keys: h,
                            gMap: f,
                            doClick: true,
                            gManager: g,
                            doDrawSelf: false,
                            trackModel: false
                        });
                        i.deferred.promise.then(function(b) {
                            return a.deferred.resolve(b);
                        });
                        if (a.control != null) {
                            return a.control.getGMarkers = g.getGMarkers;
                        }
                    });
                    return a.$on("$destroy", function() {
                        var a;
                        if (typeof a !== "undefined" && a !== null) {
                            a.clear();
                        }
                        return a = null;
                    });
                };
                return h;
            }(b);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapMarkers", [ "uiGmapIMarker", "uiGmapPlural", "uiGmapMarkersParentModel", "uiGmap_sync", "uiGmapLogger", function(b, d, e, f, g) {
            var h;
            return h = function(f) {
                a(h, f);
                function h() {
                    h.__super__.constructor.call(this);
                    this.template = '<span class="angular-google-map-markers" ng-transclude></span>';
                    d.extend(this, {
                        doCluster: "=?docluster",
                        clusterOptions: "=clusteroptions",
                        clusterEvents: "=clusterevents",
                        modelsByRef: "=modelsbyref",
                        type: "=?type",
                        typeOptions: "=?typeoptions",
                        typeEvents: "=?typeevents",
                        deepComparison: "=?deepcomparison"
                    });
                    g.info(this);
                }
                h.prototype.controller = [ "$scope", "$element", function(a, d) {
                    a.ctrlType = "Markers";
                    return c.extend(this, b.handle(a, d));
                } ];
                h.prototype.link = function(a, f, g, h) {
                    var i, j;
                    i = void 0;
                    j = function() {
                        return a.deferred.resolve();
                    };
                    return b.mapPromise(a, h).then(function(b) {
                        var k;
                        k = h.getScope();
                        k.$watch("idleAndZoomChanged", function() {
                            return c.defer(i.gManager.draw);
                        });
                        i = new e(a, f, g, b);
                        d.link(a, i);
                        if (a.control != null) {
                            a.control.getGMarkers = function() {
                                var a;
                                return (a = i.gManager) != null ? a.getGMarkers() : void 0;
                            };
                            a.control.getChildMarkers = function() {
                                return i.plurals;
                            };
                        }
                        return c.last(i.existingPieces._content).then(function() {
                            return j();
                        });
                    });
                };
                return h;
            }(b);
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api").service("uiGmapPlural", [ function() {
            var a;
            a = function(a, b) {
                if (a.control == null) {
                    return;
                }
                a.control.updateModels = function(c) {
                    a.models = c;
                    return b.createChildScopes(false);
                };
                a.control.newModels = function(c) {
                    a.models = c;
                    return b.rebuildAll(a, true, true);
                };
                a.control.clean = function() {
                    return b.rebuildAll(a, false, true);
                };
                a.control.getPlurals = function() {
                    return b.plurals;
                };
                a.control.getManager = function() {
                    return b.gManager;
                };
                a.control.hasManager = function() {
                    return b.gManager != null === true;
                };
                return a.control.managerDraw = function() {
                    var b;
                    if (a.control.hasManager()) {
                        return (b = a.control.getManager()) != null ? b.draw() : void 0;
                    }
                };
            };
            return {
                extend: function(a, b) {
                    return c.extend(a.scope || {}, b || {}, {
                        idKey: "=idkey",
                        doRebuildAll: "=dorebuildall",
                        models: "=models",
                        chunk: "=chunk",
                        cleanchunk: "=cleanchunk",
                        control: "=control",
                        deepComparison: "=deepcomparison"
                    });
                },
                link: function(b, c) {
                    return a(b, c);
                }
            };
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, c = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolygon", [ "uiGmapIPolygon", "$timeout", "uiGmapPolygonChildModel", function(b, d, e) {
            var f;
            return f = function(d) {
                c(f, d);
                function f() {
                    this.link = a(this.link, this);
                    return f.__super__.constructor.apply(this, arguments);
                }
                f.prototype.link = function(a, c, d, f) {
                    var g, h;
                    g = [];
                    h = b.mapPromise(a, f);
                    if (a.control != null) {
                        a.control.getInstance = this;
                        a.control.polygons = g;
                        a.control.promise = h;
                    }
                    return h.then(function(b) {
                        return function(c) {
                            return g.push(new e({
                                scope: a,
                                attrs: d,
                                gMap: c,
                                defaults: b.DEFAULTS
                            }));
                        };
                    }(this));
                };
                return f;
            }(b);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, c = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolygons", [ "uiGmapIPolygon", "$timeout", "uiGmapPolygonsParentModel", "uiGmapPlural", function(d, e, f, g) {
            var h;
            return h = function(d) {
                c(e, d);
                function e() {
                    this.link = a(this.link, this);
                    e.__super__.constructor.call(this);
                    g.extend(this);
                    this.$log.info(this);
                }
                e.prototype.link = function(a, c, d, e) {
                    return e.getScope().deferred.promise.then(function(e) {
                        return function(h) {
                            if (b.isUndefined(a.path) || a.path === null) {
                                e.$log.warn("polygons: no valid path attribute found");
                            }
                            if (!a.models) {
                                e.$log.warn("polygons: no models found to create from");
                            }
                            return g.link(a, new f(a, c, d, h, e.DEFAULTS));
                        };
                    }(this));
                };
                return e;
            }(d);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, c = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolyline", [ "uiGmapIPolyline", "$timeout", "uiGmapPolylineChildModel", function(d, e, f) {
            var g;
            return g = function(e) {
                c(g, e);
                function g() {
                    this.link = a(this.link, this);
                    return g.__super__.constructor.apply(this, arguments);
                }
                g.prototype.link = function(a, c, e, g) {
                    return d.mapPromise(a, g).then(function(c) {
                        return function(d) {
                            if (b.isUndefined(a.path) || a.path === null || !c.validatePath(a.path)) {
                                c.$log.warn("polyline: no valid path attribute found");
                            }
                            return new f({
                                scope: a,
                                attrs: e,
                                gMap: d,
                                defaults: c.DEFAULTS
                            });
                        };
                    }(this));
                };
                return g;
            }(d);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, c = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapPolylines", [ "uiGmapIPolyline", "$timeout", "uiGmapPolylinesParentModel", "uiGmapPlural", function(d, e, f, g) {
            var h;
            return h = function(d) {
                c(e, d);
                function e() {
                    this.link = a(this.link, this);
                    e.__super__.constructor.call(this);
                    g.extend(this);
                    this.$log.info(this);
                }
                e.prototype.link = function(a, c, d, e) {
                    return e.getScope().deferred.promise.then(function(e) {
                        return function(h) {
                            if (b.isUndefined(a.path) || a.path === null) {
                                e.$log.warn("polylines: no valid path attribute found");
                            }
                            if (!a.models) {
                                e.$log.warn("polylines: no models found to create from");
                            }
                            return g.link(a, new f(a, c, d, h, e.DEFAULTS));
                        };
                    }(this));
                };
                return e;
            }(d);
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapRectangle", [ "uiGmapLogger", "uiGmapGmapUtil", "uiGmapIRectangle", "uiGmapRectangleParentModel", function(a, b, d, e) {
            return c.extend(d, {
                link: function(a, b, c, d) {
                    return d.getScope().deferred.promise.then(function(d) {
                        return new e(a, b, c, d);
                    });
                }
            });
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, c = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapWindow", [ "uiGmapIWindow", "uiGmapGmapUtil", "uiGmapWindowChildModel", "uiGmapLodash", "uiGmapLogger", function(d, e, f, g, h) {
            var i;
            return i = function(i) {
                c(j, i);
                j.include(e);
                function j() {
                    this.link = a(this.link, this);
                    j.__super__.constructor.call(this);
                    this.require = [ "^" + "uiGmapGoogleMap", "^?" + "uiGmapMarker" ];
                    this.template = '<span class="angular-google-maps-window" ng-transclude></span>';
                    h.debug(this);
                    this.childWindows = [];
                }
                j.prototype.link = function(a, c, e, f) {
                    var g, h;
                    g = f.length > 1 && f[1] != null ? f[1] : void 0;
                    h = g != null ? g.getScope() : void 0;
                    this.mapPromise = d.mapPromise(a, f[0]);
                    return this.mapPromise.then(function(d) {
                        return function(f) {
                            var i;
                            i = true;
                            if (b.isDefined(e.isiconvisibleonclick)) {
                                i = a.isIconVisibleOnClick;
                            }
                            if (!g) {
                                d.init(a, c, i, f);
                                return;
                            }
                            return h.deferred.promise.then(function(b) {
                                return d.init(a, c, i, f, h);
                            });
                        };
                    }(this));
                };
                j.prototype.init = function(a, b, c, d, e) {
                    var h, i, j, k, l;
                    i = a.options != null ? a.options : {};
                    k = a != null && this.validateCoords(a.coords);
                    if ((e != null ? e["getGMarker"] : void 0) != null) {
                        j = e.getGMarker();
                    }
                    l = k ? this.createWindowOptions(j, a, b.html(), i) : i;
                    if (d != null) {
                        h = new f({
                            scope: a,
                            opts: l,
                            isIconVisibleOnClick: c,
                            gMap: d,
                            markerScope: e,
                            element: b
                        });
                        this.childWindows.push(h);
                        a.$on("$destroy", function(a) {
                            return function() {
                                a.childWindows = g.withoutObjects(a.childWindows, [ h ], function(a, b) {
                                    return a.scope.$id === b.scope.$id;
                                });
                                return a.childWindows.length = 0;
                            };
                        }(this));
                    }
                    if (a.control != null) {
                        a.control.getGWindows = function(a) {
                            return function() {
                                return a.childWindows.map(function(a) {
                                    return a.gObject;
                                });
                            };
                        }(this);
                        a.control.getChildWindows = function(a) {
                            return function() {
                                return a.childWindows;
                            };
                        }(this);
                        a.control.getPlurals = a.control.getChildWindows;
                        a.control.showWindow = function(a) {
                            return function() {
                                return a.childWindows.map(function(a) {
                                    return a.showWindow();
                                });
                            };
                        }(this);
                        a.control.hideWindow = function(a) {
                            return function() {
                                return a.childWindows.map(function(a) {
                                    return a.hideWindow();
                                });
                            };
                        }(this);
                    }
                    if (this.onChildCreation != null && h != null) {
                        return this.onChildCreation(h);
                    }
                };
                return j;
            }(d);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        }, c = function(a, b) {
            for (var c in b) {
                if (d.call(b, c)) a[c] = b[c];
            }
            function e() {
                this.constructor = a;
            }
            e.prototype = b.prototype;
            a.prototype = new e();
            a.__super__ = b.prototype;
            return a;
        }, d = {}.hasOwnProperty;
        b.module("uiGmapgoogle-maps.directives.api").factory("uiGmapWindows", [ "uiGmapIWindow", "uiGmapPlural", "uiGmapWindowsParentModel", "uiGmapPromise", "uiGmapLogger", function(b, d, e, f, g) {
            var h;
            return h = function(b) {
                c(h, b);
                function h() {
                    this.link = a(this.link, this);
                    h.__super__.constructor.call(this);
                    this.require = [ "^" + "uiGmapGoogleMap", "^?" + "uiGmapMarkers" ];
                    this.template = '<span class="angular-google-maps-windows" ng-transclude></span>';
                    d.extend(this);
                    g.debug(this);
                }
                h.prototype.link = function(a, b, c, d) {
                    var e, g, h;
                    e = d[0].getScope();
                    g = d.length > 1 && d[1] != null ? d[1] : void 0;
                    h = g != null ? g.getScope() : void 0;
                    return e.deferred.promise.then(function(e) {
                        return function(g) {
                            var i, j;
                            i = (h != null ? (j = h.deferred) != null ? j.promise : void 0 : void 0) || f.resolve();
                            return i.then(function() {
                                var f, i;
                                f = (i = e.parentModel) != null ? i.existingPieces : void 0;
                                if (f) {
                                    return f.then(function() {
                                        return e.init(a, b, c, d, g, h);
                                    });
                                } else {
                                    return e.init(a, b, c, d, g, h);
                                }
                            });
                        };
                    }(this));
                };
                h.prototype.init = function(a, b, c, f, g, h) {
                    var i;
                    i = new e(a, b, c, f, g, h);
                    d.link(a, i);
                    if (a.control != null) {
                        a.control.getGWindows = function() {
                            return i.plurals.map(function(a) {
                                return a.gObject;
                            });
                        };
                        return a.control.getChildWindows = function() {
                            return i.plurals;
                        };
                    }
                };
                return h;
            }(b);
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapGoogleMap", [ "uiGmapMap", function(a) {
            return new a();
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapMarker", [ "$timeout", "uiGmapMarker", function(a, b) {
            return new b(a);
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapMarkers", [ "$timeout", "uiGmapMarkers", function(a, b) {
            return new b(a);
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapPolygon", [ "uiGmapPolygon", function(a) {
            return new a();
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapCircle", [ "uiGmapCircle", function(a) {
            return a;
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapPolyline", [ "uiGmapPolyline", function(a) {
            return new a();
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapPolylines", [ "uiGmapPolylines", function(a) {
            return new a();
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapRectangle", [ "uiGmapLogger", "uiGmapRectangle", function(a, b) {
            return b;
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapWindow", [ "$timeout", "$compile", "$http", "$templateCache", "uiGmapWindow", function(a, b, c, d, e) {
            return new e(a, b, c, d);
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapWindows", [ "$timeout", "$compile", "$http", "$templateCache", "$interpolate", "uiGmapWindows", function(a, b, c, d, e, f) {
            return new f(a, b, c, d, e);
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        };
        b.module("uiGmapgoogle-maps").directive("uiGmapLayer", [ "$timeout", "uiGmapLogger", "uiGmapLayerParentModel", function(b, c, d) {
            var e;
            e = function() {
                function b() {
                    this.link = a(this.link, this);
                    this.$log = c;
                    this.restrict = "EMA";
                    this.require = "^" + "uiGmapGoogleMap";
                    this.priority = -1;
                    this.transclude = true;
                    this.template = "<span class='angular-google-map-layer' ng-transclude></span>";
                    this.replace = true;
                    this.scope = {
                        show: "=show",
                        type: "=type",
                        namespace: "=namespace",
                        options: "=options",
                        onCreated: "&oncreated"
                    };
                }
                b.prototype.link = function(a, b, c, e) {
                    return e.getScope().deferred.promise.then(function(e) {
                        return function(e) {
                            if (a.onCreated != null) {
                                return new d(a, b, c, e, a.onCreated);
                            } else {
                                return new d(a, b, c, e);
                            }
                        };
                    }(this));
                };
                return b;
            }();
            return new e();
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapMapControl", [ "uiGmapControl", function(a) {
            return new a();
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapDragZoom", [ "uiGmapDragZoom", function(a) {
            return a;
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapDrawingManager", [ "uiGmapDrawingManager", function(a) {
            return a;
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapFreeDrawPolygons", [ "uiGmapApiFreeDrawPolygons", function(a) {
            return new a();
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        };
        b.module("uiGmapgoogle-maps").directive("uiGmapMapType", [ "$timeout", "uiGmapLogger", "uiGmapMapTypeParentModel", function(b, c, d) {
            var e;
            e = function() {
                function b() {
                    this.link = a(this.link, this);
                    this.$log = c;
                    this.restrict = "EMA";
                    this.require = "^" + "uiGmapGoogleMap";
                    this.priority = -1;
                    this.transclude = true;
                    this.template = '<span class="angular-google-map-layer" ng-transclude></span>';
                    this.replace = true;
                    this.scope = {
                        show: "=show",
                        options: "=options",
                        refresh: "=refresh",
                        id: "@"
                    };
                }
                b.prototype.link = function(a, b, c, e) {
                    return e.getScope().deferred.promise.then(function(e) {
                        return function(e) {
                            return new d(a, b, c, e);
                        };
                    }(this));
                };
                return b;
            }();
            return new e();
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        };
        b.module("uiGmapgoogle-maps").directive("uiGmapMapTypes", [ "$timeout", "uiGmapLogger", "uiGmapMapTypesParentModel", function(b, c, d) {
            var e;
            e = function() {
                function b() {
                    this.link = a(this.link, this);
                    this.$log = c;
                    this.restrict = "EMA";
                    this.require = "^" + "uiGmapGoogleMap";
                    this.priority = -1;
                    this.transclude = true;
                    this.template = '<span class="angular-google-map-layers" ng-transclude></span>';
                    this.scope = {
                        mapTypes: "=mapTypes",
                        show: "=show",
                        options: "=options",
                        refresh: "=refresh",
                        id: "=idKey"
                    };
                }
                b.prototype.link = function(a, b, c, e) {
                    return e.getScope().deferred.promise.then(function(e) {
                        return function(e) {
                            return new d(a, b, c, e);
                        };
                    }(this));
                };
                return b;
            }();
            return new e();
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapPolygons", [ "uiGmapPolygons", function(a) {
            return new a();
        } ]);
    }).call(this);
    (function() {
        var a = function(a, b) {
            return function() {
                return a.apply(b, arguments);
            };
        };
        b.module("uiGmapgoogle-maps").directive("uiGmapSearchBox", [ "uiGmapGoogleMapApi", "uiGmapLogger", "uiGmapSearchBoxParentModel", "$http", "$templateCache", "$compile", function(c, d, e, f, g, h) {
            var i;
            i = function() {
                i.prototype.require = "ngModel";
                function i() {
                    this.link = a(this.link, this);
                    this.$log = d;
                    this.restrict = "EMA";
                    this.require = "^" + "uiGmapGoogleMap";
                    this.priority = -1;
                    this.transclude = true;
                    this.template = "<span class='angular-google-map-search' ng-transclude></span>";
                    this.replace = true;
                    this.scope = {
                        template: "=template",
                        events: "=events",
                        position: "=?position",
                        options: "=?options",
                        parentdiv: "=?parentdiv",
                        ngModel: "=?"
                    };
                }
                i.prototype.link = function(a, d, i, j) {
                    return c.then(function(c) {
                        return function(k) {
                            if (a.template == null) {
                                g.put("uigmap-searchbox-default.tpl.html", '<input type="text">');
                                a.template = "uigmap-searchbox-default.tpl.html";
                            }
                            return f.get(a.template, {
                                cache: g
                            }).then(function(f) {
                                var g;
                                g = f.data;
                                if (b.isUndefined(a.events)) {
                                    c.$log.error("searchBox: the events property is required");
                                    return;
                                }
                                return j.getScope().deferred.promise.then(function(f) {
                                    var j;
                                    j = b.isDefined(a.position) ? a.position.toUpperCase().replace(/-/g, "_") : "TOP_LEFT";
                                    if (!k.ControlPosition[j]) {
                                        c.$log.error("searchBox: invalid position property");
                                        return;
                                    }
                                    return new e(a, d, i, f, j, h(g)(a));
                                });
                            });
                        };
                    }(this));
                };
                return i;
            }();
            return new i();
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapShow", [ "$animate", "uiGmapLogger", function(a, c) {
            return {
                scope: {
                    uiGmapShow: "=",
                    uiGmapAfterShow: "&",
                    uiGmapAfterHide: "&"
                },
                link: function(d, e) {
                    var f, g, h;
                    f = function(b, c) {
                        return a[b](e, "ng-hide").then(function() {
                            return c();
                        });
                    };
                    g = function(b, c) {
                        return a[b](e, "ng-hide", c);
                    };
                    h = function(a, d) {
                        if (b.version.major > 1) {
                            return c.error("uiGmapShow is not supported for Angular Major greater than 1.\nYour Major is " + b.version.major + '"');
                        }
                        if (b.version.major === 1 && b.version.minor < 3) {
                            return g(a, d);
                        }
                        return f(a, d);
                    };
                    return d.$watch("uiGmapShow", function(a) {
                        if (a) {
                            h("removeClass", d.uiGmapAfterShow);
                        }
                        if (!a) {
                            return h("addClass", d.uiGmapAfterHide);
                        }
                    });
                }
            };
        } ]);
    }).call(this);
    (function() {
        b.module("uiGmapgoogle-maps").directive("uiGmapStreetViewPanorama", [ "uiGmapGoogleMapApi", "uiGmapLogger", "uiGmapGmapUtil", "uiGmapEventsHelper", function(a, c, d, e) {
            var f;
            f = "uiGmapStreetViewPanorama";
            return {
                restrict: "EMA",
                template: '<div class="angular-google-map-street-view-panorama"></div>',
                replace: true,
                scope: {
                    focalcoord: "=",
                    radius: "=?",
                    events: "=?",
                    options: "=?",
                    control: "=?",
                    povoptions: "=?",
                    imagestatus: "="
                },
                link: function(g, h, i) {
                    return a.then(function(a) {
                        return function(a) {
                            var i, j, k, l, m, n, o, p, q, r;
                            p = void 0;
                            r = void 0;
                            k = false;
                            n = void 0;
                            o = null;
                            q = null;
                            i = function() {
                                e.removeEvents(n);
                                if (p != null) {
                                    p.unbind("position");
                                    p.setVisible(false);
                                }
                                if (r != null) {
                                    if ((r != null ? r.setVisible : void 0) != null) {
                                        r.setVisible(false);
                                    }
                                    return r = void 0;
                                }
                            };
                            m = function(a, c) {
                                var d;
                                d = google.maps.geometry.spherical.computeHeading(a, c);
                                k = true;
                                g.radius = g.radius || 50;
                                q = b.extend({
                                    heading: d,
                                    zoom: 1,
                                    pitch: 0
                                }, g.povoptions || {});
                                o = o = b.extend({
                                    navigationControl: false,
                                    addressControl: false,
                                    linksControl: false,
                                    position: a,
                                    pov: q,
                                    visible: true
                                }, g.options || {});
                                return k = false;
                            };
                            j = function() {
                                var a;
                                if (!g.focalcoord) {
                                    c.error(f + ": focalCoord needs to be defined");
                                    return;
                                }
                                if (!g.radius) {
                                    c.error(f + ": needs a radius to set the camera view from its focal target.");
                                    return;
                                }
                                i();
                                if (r == null) {
                                    r = new google.maps.StreetViewService();
                                }
                                if (g.events) {
                                    n = e.setEvents(r, g, g);
                                }
                                a = d.getCoords(g.focalcoord);
                                return r.getPanoramaByLocation(a, g.radius, function(b, c) {
                                    var d, e, f;
                                    if (g.imagestatus != null) {
                                        g.imagestatus = c;
                                    }
                                    if (((f = g.events) != null ? f.image_status_changed : void 0) != null) {
                                        g.events.image_status_changed(r, "image_status_changed", g, c);
                                    }
                                    if (c === "OK") {
                                        e = b.location.latLng;
                                        m(e, a);
                                        d = h[0];
                                        return p = new google.maps.StreetViewPanorama(d, o);
                                    }
                                });
                            };
                            if (g.control != null) {
                                g.control.getOptions = function() {
                                    return o;
                                };
                                g.control.getPovOptions = function() {
                                    return q;
                                };
                                g.control.getGObject = function() {
                                    return r;
                                };
                                g.control.getGPano = function() {
                                    return p;
                                };
                            }
                            g.$watch("options", function(a, b) {
                                if (a === b || a === o || k) {
                                    return;
                                }
                                return j();
                            });
                            l = true;
                            g.$watch("focalcoord", function(a, b) {
                                if (a === b && !l) {
                                    return;
                                }
                                if (a == null) {
                                    return;
                                }
                                l = false;
                                return j();
                            });
                            return g.$on("$destroy", function() {
                                return i();
                            });
                        };
                    }(this));
                }
            };
        } ]);
    }).call(this);
    b.module("uiGmapgoogle-maps.wrapped").service("uiGmapuuid", function() {
        function a() {}
        a.generate = function() {
            var b = a._gri, c = a._ha;
            return c(b(32), 8) + "-" + c(b(16), 4) + "-" + c(16384 | b(12), 4) + "-" + c(32768 | b(14), 4) + "-" + c(b(48), 12);
        };
        a._gri = function(a) {
            return 0 > a ? NaN : 30 >= a ? 0 | Math.random() * (1 << a) : 53 >= a ? (0 | 1073741824 * Math.random()) + 1073741824 * (0 | Math.random() * (1 << a - 30)) : NaN;
        };
        a._ha = function(a, b) {
            for (var c = a.toString(16), d = b - c.length, e = "0"; 0 < d; d >>>= 1, e += e) d & 1 && (c = e + c);
            return c;
        };
        return a;
    });
    b.module("uiGmapgoogle-maps.wrapped").service("uiGmapGoogleMapsUtilV3", function() {
        return {
            init: c.once(function() {
                +function() {
                    function b(a, c) {
                        a.getMarkerClusterer().extend(b, google.maps.OverlayView), this.cluster_ = a, this.className_ = a.getMarkerClusterer().getClusterClass(), 
                        this.styles_ = c, this.center_ = null, this.div_ = null, this.sums_ = null, this.visible_ = !1, 
                        this.setMap(a.getMap());
                    }
                    function c(a) {
                        this.markerClusterer_ = a, this.map_ = a.getMap(), this.gridSize_ = a.getGridSize(), 
                        this.minClusterSize_ = a.getMinimumClusterSize(), this.averageCenter_ = a.getAverageCenter(), 
                        this.hideLabel_ = a.getHideLabel(), this.markers_ = [], this.center_ = null, this.bounds_ = null, 
                        this.clusterIcon_ = new b(this, a.getStyles());
                    }
                    function e(a, b, c) {
                        this.extend(e, google.maps.OverlayView), b = b || [], c = c || {}, this.markers_ = [], 
                        this.clusters_ = [], this.listeners_ = [], this.activeMap_ = null, this.ready_ = !1, 
                        this.gridSize_ = c.gridSize || 60, this.minClusterSize_ = c.minimumClusterSize || 2, 
                        this.maxZoom_ = c.maxZoom || null, this.styles_ = c.styles || [], this.title_ = c.title || "", 
                        this.zoomOnClick_ = !0, void 0 !== c.zoomOnClick && (this.zoomOnClick_ = c.zoomOnClick), 
                        this.averageCenter_ = !1, void 0 !== c.averageCenter && (this.averageCenter_ = c.averageCenter), 
                        this.ignoreHidden_ = !1, void 0 !== c.ignoreHidden && (this.ignoreHidden_ = c.ignoreHidden), 
                        this.enableRetinaIcons_ = !1, void 0 !== c.enableRetinaIcons && (this.enableRetinaIcons_ = c.enableRetinaIcons), 
                        this.hideLabel_ = !1, void 0 !== c.hideLabel && (this.hideLabel_ = c.hideLabel), 
                        this.imagePath_ = c.imagePath || e.IMAGE_PATH, this.imageExtension_ = c.imageExtension || e.IMAGE_EXTENSION, 
                        this.imageSizes_ = c.imageSizes || e.IMAGE_SIZES, this.calculator_ = c.calculator || e.CALCULATOR, 
                        this.batchSize_ = c.batchSize || e.BATCH_SIZE, this.batchSizeIE_ = c.batchSizeIE || e.BATCH_SIZE_IE, 
                        this.clusterClass_ = c.clusterClass || "cluster", -1 !== navigator.userAgent.toLowerCase().indexOf("msie") && (this.batchSize_ = this.batchSizeIE_), 
                        this.setupStyles_(), this.addMarkers(b, !0), this.setMap(a);
                    }
                    b.prototype.onAdd = function() {
                        var a, b, c = this;
                        this.div_ = document.createElement("div"), this.div_.className = this.className_, 
                        this.visible_ && this.show(), this.getPanes().overlayMouseTarget.appendChild(this.div_), 
                        this.boundsChangedListener_ = google.maps.event.addListener(this.getMap(), "bounds_changed", function() {
                            b = a;
                        }), google.maps.event.addDomListener(this.div_, "mousedown", function() {
                            a = !0, b = !1;
                        }), google.maps.event.addDomListener(this.div_, "click", function(d) {
                            if (a = !1, !b) {
                                var e, f, g = c.cluster_.getMarkerClusterer();
                                google.maps.event.trigger(g, "click", c.cluster_), google.maps.event.trigger(g, "clusterclick", c.cluster_), 
                                g.getZoomOnClick() && (f = g.getMaxZoom(), e = c.cluster_.getBounds(), g.getMap().fitBounds(e), 
                                setTimeout(function() {
                                    g.getMap().fitBounds(e), null !== f && g.getMap().getZoom() > f && g.getMap().setZoom(f + 1);
                                }, 100)), d.cancelBubble = !0, d.stopPropagation && d.stopPropagation();
                            }
                        }), google.maps.event.addDomListener(this.div_, "mouseover", function() {
                            var a = c.cluster_.getMarkerClusterer();
                            google.maps.event.trigger(a, "mouseover", c.cluster_);
                        }), google.maps.event.addDomListener(this.div_, "mouseout", function() {
                            var a = c.cluster_.getMarkerClusterer();
                            google.maps.event.trigger(a, "mouseout", c.cluster_);
                        });
                    }, b.prototype.onRemove = function() {
                        this.div_ && this.div_.parentNode && (this.hide(), google.maps.event.removeListener(this.boundsChangedListener_), 
                        google.maps.event.clearInstanceListeners(this.div_), this.div_.parentNode.removeChild(this.div_), 
                        this.div_ = null);
                    }, b.prototype.draw = function() {
                        if (this.visible_) {
                            var a = this.getPosFromLatLng_(this.center_);
                            this.div_.style.top = a.y + "px", this.div_.style.left = a.x + "px";
                        }
                    }, b.prototype.hide = function() {
                        this.div_ && (this.div_.style.display = "none"), this.visible_ = !1;
                    }, b.prototype.show = function() {
                        if (this.div_) {
                            var a = "", b = this.backgroundPosition_.split(" "), c = parseInt(b[0].trim(), 10), d = parseInt(b[1].trim(), 10), e = this.getPosFromLatLng_(this.center_);
                            this.div_.style.cssText = this.createCss(e), a = "<img src='" + this.url_ + "' style='position: absolute; top: " + d + "px; left: " + c + "px; ", 
                            a += this.cluster_.getMarkerClusterer().enableRetinaIcons_ ? "width: " + this.width_ + "px;height: " + this.height_ + "px;" : "clip: rect(" + -1 * d + "px, " + (-1 * c + this.width_) + "px, " + (-1 * d + this.height_) + "px, " + -1 * c + "px);", 
                            a += "'>", this.div_.innerHTML = a + "<div style='position: absolute;top: " + this.anchorText_[0] + "px;left: " + this.anchorText_[1] + "px;color: " + this.textColor_ + ";font-size: " + this.textSize_ + "px;font-family: " + this.fontFamily_ + ";font-weight: " + this.fontWeight_ + ";font-style: " + this.fontStyle_ + ";text-decoration: " + this.textDecoration_ + ";text-align: center;width: " + this.width_ + "px;line-height:" + this.height_ + "px;'>" + (this.cluster_.hideLabel_ ? " " : this.sums_.text) + "</div>", 
                            this.div_.title = "undefined" == typeof this.sums_.title || "" === this.sums_.title ? this.cluster_.getMarkerClusterer().getTitle() : this.sums_.title, 
                            this.div_.style.display = "";
                        }
                        this.visible_ = !0;
                    }, b.prototype.useStyle = function(a) {
                        this.sums_ = a;
                        var b = Math.max(0, a.index - 1);
                        b = Math.min(this.styles_.length - 1, b);
                        var c = this.styles_[b];
                        this.url_ = c.url, this.height_ = c.height, this.width_ = c.width, this.anchorText_ = c.anchorText || [ 0, 0 ], 
                        this.anchorIcon_ = c.anchorIcon || [ parseInt(this.height_ / 2, 10), parseInt(this.width_ / 2, 10) ], 
                        this.textColor_ = c.textColor || "black", this.textSize_ = c.textSize || 11, this.textDecoration_ = c.textDecoration || "none", 
                        this.fontWeight_ = c.fontWeight || "bold", this.fontStyle_ = c.fontStyle || "normal", 
                        this.fontFamily_ = c.fontFamily || "Arial,sans-serif", this.backgroundPosition_ = c.backgroundPosition || "0 0";
                    }, b.prototype.setCenter = function(a) {
                        this.center_ = a;
                    }, b.prototype.createCss = function(a) {
                        var b = [];
                        return b.push("cursor: pointer;"), b.push("position: absolute; top: " + a.y + "px; left: " + a.x + "px;"), 
                        b.push("width: " + this.width_ + "px; height: " + this.height_ + "px;"), b.join("");
                    }, b.prototype.getPosFromLatLng_ = function(a) {
                        var b = this.getProjection().fromLatLngToDivPixel(a);
                        return b.x -= this.anchorIcon_[1], b.y -= this.anchorIcon_[0], b.x = parseInt(b.x, 10), 
                        b.y = parseInt(b.y, 10), b;
                    }, c.prototype.getSize = function() {
                        return this.markers_.length;
                    }, c.prototype.getMarkers = function() {
                        return this.markers_;
                    }, c.prototype.getCenter = function() {
                        return this.center_;
                    }, c.prototype.getMap = function() {
                        return this.map_;
                    }, c.prototype.getMarkerClusterer = function() {
                        return this.markerClusterer_;
                    }, c.prototype.getBounds = function() {
                        var a, b = new google.maps.LatLngBounds(this.center_, this.center_), c = this.getMarkers();
                        for (a = 0; a < c.length; a++) b.extend(c[a].getPosition());
                        return b;
                    }, c.prototype.remove = function() {
                        this.clusterIcon_.setMap(null), this.markers_ = [], delete this.markers_;
                    }, c.prototype.addMarker = function(a) {
                        var b, c, d;
                        if (this.isMarkerAlreadyAdded_(a)) return !1;
                        if (this.center_) {
                            if (this.averageCenter_) {
                                var e = this.markers_.length + 1, f = (this.center_.lat() * (e - 1) + a.getPosition().lat()) / e, g = (this.center_.lng() * (e - 1) + a.getPosition().lng()) / e;
                                this.center_ = new google.maps.LatLng(f, g), this.calculateBounds_();
                            }
                        } else this.center_ = a.getPosition(), this.calculateBounds_();
                        if (a.isAdded = !0, this.markers_.push(a), c = this.markers_.length, d = this.markerClusterer_.getMaxZoom(), 
                        null !== d && this.map_.getZoom() > d) a.getMap() !== this.map_ && a.setMap(this.map_); else if (c < this.minClusterSize_) a.getMap() !== this.map_ && a.setMap(this.map_); else if (c === this.minClusterSize_) for (b = 0; c > b; b++) this.markers_[b].setMap(null); else a.setMap(null);
                        return !0;
                    }, c.prototype.isMarkerInClusterBounds = function(a) {
                        return this.bounds_.contains(a.getPosition());
                    }, c.prototype.calculateBounds_ = function() {
                        var a = new google.maps.LatLngBounds(this.center_, this.center_);
                        this.bounds_ = this.markerClusterer_.getExtendedBounds(a);
                    }, c.prototype.updateIcon_ = function() {
                        var a = this.markers_.length, b = this.markerClusterer_.getMaxZoom();
                        if (null !== b && this.map_.getZoom() > b) return void this.clusterIcon_.hide();
                        if (a < this.minClusterSize_) return void this.clusterIcon_.hide();
                        var c = this.markerClusterer_.getStyles().length, d = this.markerClusterer_.getCalculator()(this.markers_, c);
                        this.clusterIcon_.setCenter(this.center_), this.clusterIcon_.useStyle(d), this.clusterIcon_.show();
                    }, c.prototype.isMarkerAlreadyAdded_ = function(a) {
                        for (var b = 0, c = this.markers_.length; c > b; b++) if (a === this.markers_[b]) return !0;
                        return !1;
                    }, e.prototype.onAdd = function() {
                        var a = this;
                        this.activeMap_ = this.getMap(), this.ready_ = !0, this.repaint(), this.listeners_ = [ google.maps.event.addListener(this.getMap(), "zoom_changed", function() {
                            a.resetViewport_(!1), (this.getZoom() === (this.get("minZoom") || 0) || this.getZoom() === this.get("maxZoom")) && google.maps.event.trigger(this, "idle");
                        }), google.maps.event.addListener(this.getMap(), "idle", function() {
                            a.redraw_();
                        }) ];
                    }, e.prototype.onRemove = function() {
                        var a;
                        for (a = 0; a < this.markers_.length; a++) this.markers_[a].getMap() !== this.activeMap_ && this.markers_[a].setMap(this.activeMap_);
                        for (a = 0; a < this.clusters_.length; a++) this.clusters_[a].remove();
                        for (this.clusters_ = [], a = 0; a < this.listeners_.length; a++) google.maps.event.removeListener(this.listeners_[a]);
                        this.listeners_ = [], this.activeMap_ = null, this.ready_ = !1;
                    }, e.prototype.draw = function() {}, e.prototype.setupStyles_ = function() {
                        var a, b;
                        if (!(this.styles_.length > 0)) for (a = 0; a < this.imageSizes_.length; a++) b = this.imageSizes_[a], 
                        this.styles_.push({
                            url: this.imagePath_ + (a + 1) + "." + this.imageExtension_,
                            height: b,
                            width: b
                        });
                    }, e.prototype.fitMapToMarkers = function() {
                        var a, b = this.getMarkers(), c = new google.maps.LatLngBounds();
                        for (a = 0; a < b.length; a++) c.extend(b[a].getPosition());
                        this.getMap().fitBounds(c);
                    }, e.prototype.getGridSize = function() {
                        return this.gridSize_;
                    }, e.prototype.setGridSize = function(a) {
                        this.gridSize_ = a;
                    }, e.prototype.getMinimumClusterSize = function() {
                        return this.minClusterSize_;
                    }, e.prototype.setMinimumClusterSize = function(a) {
                        this.minClusterSize_ = a;
                    }, e.prototype.getMaxZoom = function() {
                        return this.maxZoom_;
                    }, e.prototype.setMaxZoom = function(a) {
                        this.maxZoom_ = a;
                    }, e.prototype.getStyles = function() {
                        return this.styles_;
                    }, e.prototype.setStyles = function(a) {
                        this.styles_ = a;
                    }, e.prototype.getTitle = function() {
                        return this.title_;
                    }, e.prototype.setTitle = function(a) {
                        this.title_ = a;
                    }, e.prototype.getZoomOnClick = function() {
                        return this.zoomOnClick_;
                    }, e.prototype.setZoomOnClick = function(a) {
                        this.zoomOnClick_ = a;
                    }, e.prototype.getAverageCenter = function() {
                        return this.averageCenter_;
                    }, e.prototype.setAverageCenter = function(a) {
                        this.averageCenter_ = a;
                    }, e.prototype.getIgnoreHidden = function() {
                        return this.ignoreHidden_;
                    }, e.prototype.setIgnoreHidden = function(a) {
                        this.ignoreHidden_ = a;
                    }, e.prototype.getEnableRetinaIcons = function() {
                        return this.enableRetinaIcons_;
                    }, e.prototype.setEnableRetinaIcons = function(a) {
                        this.enableRetinaIcons_ = a;
                    }, e.prototype.getImageExtension = function() {
                        return this.imageExtension_;
                    }, e.prototype.setImageExtension = function(a) {
                        this.imageExtension_ = a;
                    }, e.prototype.getImagePath = function() {
                        return this.imagePath_;
                    }, e.prototype.setImagePath = function(a) {
                        this.imagePath_ = a;
                    }, e.prototype.getImageSizes = function() {
                        return this.imageSizes_;
                    }, e.prototype.setImageSizes = function(a) {
                        this.imageSizes_ = a;
                    }, e.prototype.getCalculator = function() {
                        return this.calculator_;
                    }, e.prototype.setCalculator = function(a) {
                        this.calculator_ = a;
                    }, e.prototype.setHideLabel = function(a) {
                        this.hideLabel_ = a;
                    }, e.prototype.getHideLabel = function() {
                        return this.hideLabel_;
                    }, e.prototype.getBatchSizeIE = function() {
                        return this.batchSizeIE_;
                    }, e.prototype.setBatchSizeIE = function(a) {
                        this.batchSizeIE_ = a;
                    }, e.prototype.getClusterClass = function() {
                        return this.clusterClass_;
                    }, e.prototype.setClusterClass = function(a) {
                        this.clusterClass_ = a;
                    }, e.prototype.getMarkers = function() {
                        return this.markers_;
                    }, e.prototype.getTotalMarkers = function() {
                        return this.markers_.length;
                    }, e.prototype.getClusters = function() {
                        return this.clusters_;
                    }, e.prototype.getTotalClusters = function() {
                        return this.clusters_.length;
                    }, e.prototype.addMarker = function(a, b) {
                        this.pushMarkerTo_(a), b || this.redraw_();
                    }, e.prototype.addMarkers = function(a, b) {
                        var c;
                        for (c in a) a.hasOwnProperty(c) && this.pushMarkerTo_(a[c]);
                        b || this.redraw_();
                    }, e.prototype.pushMarkerTo_ = function(a) {
                        if (a.getDraggable()) {
                            var b = this;
                            google.maps.event.addListener(a, "dragend", function() {
                                b.ready_ && (this.isAdded = !1, b.repaint());
                            });
                        }
                        a.isAdded = !1, this.markers_.push(a);
                    }, e.prototype.removeMarker = function(a, b, c) {
                        var d = !0 && !c, e = this.removeMarker_(a, d);
                        return !b && e && this.repaint(), e;
                    }, e.prototype.removeMarkers = function(a, b, c) {
                        var d, e, f = !1, g = !0 && !c;
                        for (d = 0; d < a.length; d++) e = this.removeMarker_(a[d], g), f = f || e;
                        return !b && f && this.repaint(), f;
                    }, e.prototype.removeMarker_ = function(a, b) {
                        var c, d = -1;
                        if (this.markers_.indexOf) d = this.markers_.indexOf(a); else for (c = 0; c < this.markers_.length; c++) if (a === this.markers_[c]) {
                            d = c;
                            break;
                        }
                        return -1 === d ? !1 : (b && a.setMap(null), this.markers_.splice(d, 1), !0);
                    }, e.prototype.clearMarkers = function() {
                        this.resetViewport_(!0), this.markers_ = [];
                    }, e.prototype.repaint = function() {
                        var a = this.clusters_.slice();
                        this.clusters_ = [], this.resetViewport_(!1), this.redraw_(), setTimeout(function() {
                            var b;
                            for (b = 0; b < a.length; b++) a[b].remove();
                        }, 0);
                    }, e.prototype.getExtendedBounds = function(a) {
                        var b = this.getProjection(), c = new google.maps.LatLng(a.getNorthEast().lat(), a.getNorthEast().lng()), d = new google.maps.LatLng(a.getSouthWest().lat(), a.getSouthWest().lng()), e = b.fromLatLngToDivPixel(c);
                        e.x += this.gridSize_, e.y -= this.gridSize_;
                        var f = b.fromLatLngToDivPixel(d);
                        f.x -= this.gridSize_, f.y += this.gridSize_;
                        var g = b.fromDivPixelToLatLng(e), h = b.fromDivPixelToLatLng(f);
                        return a.extend(g), a.extend(h), a;
                    }, e.prototype.redraw_ = function() {
                        this.createClusters_(0);
                    }, e.prototype.resetViewport_ = function(a) {
                        var b, c;
                        for (b = 0; b < this.clusters_.length; b++) this.clusters_[b].remove();
                        for (this.clusters_ = [], b = 0; b < this.markers_.length; b++) c = this.markers_[b], 
                        c.isAdded = !1, a && c.setMap(null);
                    }, e.prototype.distanceBetweenPoints_ = function(a, b) {
                        var c = 6371, d = (b.lat() - a.lat()) * Math.PI / 180, e = (b.lng() - a.lng()) * Math.PI / 180, f = Math.sin(d / 2) * Math.sin(d / 2) + Math.cos(a.lat() * Math.PI / 180) * Math.cos(b.lat() * Math.PI / 180) * Math.sin(e / 2) * Math.sin(e / 2), g = 2 * Math.atan2(Math.sqrt(f), Math.sqrt(1 - f)), h = c * g;
                        return h;
                    }, e.prototype.isMarkerInBounds_ = function(a, b) {
                        return b.contains(a.getPosition());
                    }, e.prototype.addToClosestCluster_ = function(a) {
                        var b, d, e, f, g = 4e4, h = null;
                        for (b = 0; b < this.clusters_.length; b++) e = this.clusters_[b], f = e.getCenter(), 
                        f && (d = this.distanceBetweenPoints_(f, a.getPosition()), g > d && (g = d, h = e));
                        h && h.isMarkerInClusterBounds(a) ? h.addMarker(a) : (e = new c(this), e.addMarker(a), 
                        this.clusters_.push(e));
                    }, e.prototype.createClusters_ = function(a) {
                        var b, c, d, e = this;
                        if (this.ready_) {
                            0 === a && (google.maps.event.trigger(this, "clusteringbegin", this), "undefined" != typeof this.timerRefStatic && (clearTimeout(this.timerRefStatic), 
                            delete this.timerRefStatic)), d = this.getMap().getZoom() > 3 ? new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(), this.getMap().getBounds().getNorthEast()) : new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));
                            var f = this.getExtendedBounds(d), g = Math.min(a + this.batchSize_, this.markers_.length);
                            for (b = a; g > b; b++) c = this.markers_[b], !c.isAdded && this.isMarkerInBounds_(c, f) && (!this.ignoreHidden_ || this.ignoreHidden_ && c.getVisible()) && this.addToClosestCluster_(c);
                            if (g < this.markers_.length) this.timerRefStatic = setTimeout(function() {
                                e.createClusters_(g);
                            }, 0); else for (delete this.timerRefStatic, google.maps.event.trigger(this, "clusteringend", this), 
                            b = 0; b < this.clusters_.length; b++) this.clusters_[b].updateIcon_();
                        }
                    }, e.prototype.extend = function(a, b) {
                        return function(a) {
                            var b;
                            for (b in a.prototype) this.prototype[b] = a.prototype[b];
                            return this;
                        }.apply(a, [ b ]);
                    }, e.CALCULATOR = function(a, b) {
                        for (var c = 0, d = "", e = a.length.toString(), f = e; 0 !== f; ) f = parseInt(f / 10, 10), 
                        c++;
                        return c = Math.min(c, b), {
                            text: e,
                            index: c,
                            title: d
                        };
                    }, e.BATCH_SIZE = 2e3, e.BATCH_SIZE_IE = 500, e.IMAGE_PATH = "//cdn.rawgit.com/mahnunchik/markerclustererplus/master/images/m", 
                    e.IMAGE_EXTENSION = "png", e.IMAGE_SIZES = [ 53, 56, 66, 78, 90 ], "function" != typeof String.prototype.trim && (String.prototype.trim = function() {
                        return this.replace(/^\s+|\s+$/g, "");
                    });
                    function f(a) {
                        a = a || {};
                        google.maps.OverlayView.apply(this, arguments);
                        this.content_ = a.content || "";
                        this.disableAutoPan_ = a.disableAutoPan || false;
                        this.maxWidth_ = a.maxWidth || 0;
                        this.pixelOffset_ = a.pixelOffset || new google.maps.Size(0, 0);
                        this.position_ = a.position || new google.maps.LatLng(0, 0);
                        this.zIndex_ = a.zIndex || null;
                        this.boxClass_ = a.boxClass || "infoBox";
                        this.boxStyle_ = a.boxStyle || {};
                        this.closeBoxMargin_ = a.closeBoxMargin || "2px";
                        this.closeBoxURL_ = a.closeBoxURL || "http://www.google.com/intl/en_us/mapfiles/close.gif";
                        if (a.closeBoxURL === "") {
                            this.closeBoxURL_ = "";
                        }
                        this.infoBoxClearance_ = a.infoBoxClearance || new google.maps.Size(1, 1);
                        if (typeof a.visible === "undefined") {
                            if (typeof a.isHidden === "undefined") {
                                a.visible = true;
                            } else {
                                a.visible = !a.isHidden;
                            }
                        }
                        this.isHidden_ = !a.visible;
                        this.alignBottom_ = a.alignBottom || false;
                        this.pane_ = a.pane || "floatPane";
                        this.enableEventPropagation_ = a.enableEventPropagation || false;
                        this.div_ = null;
                        this.closeListener_ = null;
                        this.moveListener_ = null;
                        this.contextListener_ = null;
                        this.eventListeners_ = null;
                        this.fixedWidthSet_ = null;
                    }
                    f.prototype = new google.maps.OverlayView();
                    f.prototype.createInfoBoxDiv_ = function() {
                        var a;
                        var b;
                        var c;
                        var d = this;
                        var e = function(a) {
                            a.cancelBubble = true;
                            if (a.stopPropagation) {
                                a.stopPropagation();
                            }
                        };
                        var f = function(a) {
                            a.returnValue = false;
                            if (a.preventDefault) {
                                a.preventDefault();
                            }
                            if (!d.enableEventPropagation_) {
                                e(a);
                            }
                        };
                        if (!this.div_) {
                            this.div_ = document.createElement("div");
                            this.setBoxStyle_();
                            if (typeof this.content_.nodeType === "undefined") {
                                this.div_.innerHTML = this.getCloseBoxImg_() + this.content_;
                            } else {
                                this.div_.innerHTML = this.getCloseBoxImg_();
                                this.div_.appendChild(this.content_);
                            }
                            this.getPanes()[this.pane_].appendChild(this.div_);
                            this.addClickHandler_();
                            if (this.div_.style.width) {
                                this.fixedWidthSet_ = true;
                            } else {
                                if (this.maxWidth_ !== 0 && this.div_.offsetWidth > this.maxWidth_) {
                                    this.div_.style.width = this.maxWidth_;
                                    this.div_.style.overflow = "auto";
                                    this.fixedWidthSet_ = true;
                                } else {
                                    c = this.getBoxWidths_();
                                    this.div_.style.width = this.div_.offsetWidth - c.left - c.right + "px";
                                    this.fixedWidthSet_ = false;
                                }
                            }
                            this.panBox_(this.disableAutoPan_);
                            if (!this.enableEventPropagation_) {
                                this.eventListeners_ = [];
                                b = [ "mousedown", "mouseover", "mouseout", "mouseup", "click", "dblclick", "touchstart", "touchend", "touchmove" ];
                                for (a = 0; a < b.length; a++) {
                                    this.eventListeners_.push(google.maps.event.addDomListener(this.div_, b[a], e));
                                }
                                this.eventListeners_.push(google.maps.event.addDomListener(this.div_, "mouseover", function(a) {
                                    this.style.cursor = "default";
                                }));
                            }
                            this.contextListener_ = google.maps.event.addDomListener(this.div_, "contextmenu", f);
                            google.maps.event.trigger(this, "domready");
                        }
                    };
                    f.prototype.getCloseBoxImg_ = function() {
                        var a = "";
                        if (this.closeBoxURL_ !== "") {
                            a = "<img";
                            a += " src='" + this.closeBoxURL_ + "'";
                            a += " align=right";
                            a += " style='";
                            a += " position: relative;";
                            a += " cursor: pointer;";
                            a += " margin: " + this.closeBoxMargin_ + ";";
                            a += "'>";
                        }
                        return a;
                    };
                    f.prototype.addClickHandler_ = function() {
                        var a;
                        if (this.closeBoxURL_ !== "") {
                            a = this.div_.firstChild;
                            this.closeListener_ = google.maps.event.addDomListener(a, "click", this.getCloseClickHandler_());
                        } else {
                            this.closeListener_ = null;
                        }
                    };
                    f.prototype.getCloseClickHandler_ = function() {
                        var a = this;
                        return function(b) {
                            b.cancelBubble = true;
                            if (b.stopPropagation) {
                                b.stopPropagation();
                            }
                            google.maps.event.trigger(a, "closeclick");
                            a.close();
                        };
                    };
                    f.prototype.panBox_ = function(a) {
                        var b;
                        var c;
                        var d = 0, e = 0;
                        if (!a) {
                            b = this.getMap();
                            if (b instanceof google.maps.Map) {
                                if (!b.getBounds().contains(this.position_)) {
                                    b.setCenter(this.position_);
                                }
                                c = b.getBounds();
                                var f = b.getDiv();
                                var g = f.offsetWidth;
                                var h = f.offsetHeight;
                                var i = this.pixelOffset_.width;
                                var j = this.pixelOffset_.height;
                                var k = this.div_.offsetWidth;
                                var l = this.div_.offsetHeight;
                                var m = this.infoBoxClearance_.width;
                                var n = this.infoBoxClearance_.height;
                                var o = this.getProjection().fromLatLngToContainerPixel(this.position_);
                                if (o.x < -i + m) {
                                    d = o.x + i - m;
                                } else if (o.x + k + i + m > g) {
                                    d = o.x + k + i + m - g;
                                }
                                if (this.alignBottom_) {
                                    if (o.y < -j + n + l) {
                                        e = o.y + j - n - l;
                                    } else if (o.y + j + n > h) {
                                        e = o.y + j + n - h;
                                    }
                                } else {
                                    if (o.y < -j + n) {
                                        e = o.y + j - n;
                                    } else if (o.y + l + j + n > h) {
                                        e = o.y + l + j + n - h;
                                    }
                                }
                                if (!(d === 0 && e === 0)) {
                                    var p = b.getCenter();
                                    b.panBy(d, e);
                                }
                            }
                        }
                    };
                    f.prototype.setBoxStyle_ = function() {
                        var a, b;
                        if (this.div_) {
                            this.div_.className = this.boxClass_;
                            this.div_.style.cssText = "";
                            b = this.boxStyle_;
                            for (a in b) {
                                if (b.hasOwnProperty(a)) {
                                    this.div_.style[a] = b[a];
                                }
                            }
                            this.div_.style.WebkitTransform = "translateZ(0)";
                            if (typeof this.div_.style.opacity !== "undefined" && this.div_.style.opacity !== "") {
                                this.div_.style.MsFilter = '"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + this.div_.style.opacity * 100 + ')"';
                                this.div_.style.filter = "alpha(opacity=" + this.div_.style.opacity * 100 + ")";
                            }
                            this.div_.style.position = "absolute";
                            this.div_.style.visibility = "hidden";
                            if (this.zIndex_ !== null) {
                                this.div_.style.zIndex = this.zIndex_;
                            }
                        }
                    };
                    f.prototype.getBoxWidths_ = function() {
                        var a;
                        var b = {
                            top: 0,
                            bottom: 0,
                            left: 0,
                            right: 0
                        };
                        var c = this.div_;
                        if (document.defaultView && document.defaultView.getComputedStyle) {
                            a = c.ownerDocument.defaultView.getComputedStyle(c, "");
                            if (a) {
                                b.top = parseInt(a.borderTopWidth, 10) || 0;
                                b.bottom = parseInt(a.borderBottomWidth, 10) || 0;
                                b.left = parseInt(a.borderLeftWidth, 10) || 0;
                                b.right = parseInt(a.borderRightWidth, 10) || 0;
                            }
                        } else if (document.documentElement.currentStyle) {
                            if (c.currentStyle) {
                                b.top = parseInt(c.currentStyle.borderTopWidth, 10) || 0;
                                b.bottom = parseInt(c.currentStyle.borderBottomWidth, 10) || 0;
                                b.left = parseInt(c.currentStyle.borderLeftWidth, 10) || 0;
                                b.right = parseInt(c.currentStyle.borderRightWidth, 10) || 0;
                            }
                        }
                        return b;
                    };
                    f.prototype.onRemove = function() {
                        if (this.div_) {
                            this.div_.parentNode.removeChild(this.div_);
                            this.div_ = null;
                        }
                    };
                    f.prototype.draw = function() {
                        this.createInfoBoxDiv_();
                        var a = this.getProjection().fromLatLngToDivPixel(this.position_);
                        this.div_.style.left = a.x + this.pixelOffset_.width + "px";
                        if (this.alignBottom_) {
                            this.div_.style.bottom = -(a.y + this.pixelOffset_.height) + "px";
                        } else {
                            this.div_.style.top = a.y + this.pixelOffset_.height + "px";
                        }
                        if (this.isHidden_) {
                            this.div_.style.visibility = "hidden";
                        } else {
                            this.div_.style.visibility = "visible";
                        }
                    };
                    f.prototype.setOptions = function(a) {
                        if (typeof a.boxClass !== "undefined") {
                            this.boxClass_ = a.boxClass;
                            this.setBoxStyle_();
                        }
                        if (typeof a.boxStyle !== "undefined") {
                            this.boxStyle_ = a.boxStyle;
                            this.setBoxStyle_();
                        }
                        if (typeof a.content !== "undefined") {
                            this.setContent(a.content);
                        }
                        if (typeof a.disableAutoPan !== "undefined") {
                            this.disableAutoPan_ = a.disableAutoPan;
                        }
                        if (typeof a.maxWidth !== "undefined") {
                            this.maxWidth_ = a.maxWidth;
                        }
                        if (typeof a.pixelOffset !== "undefined") {
                            this.pixelOffset_ = a.pixelOffset;
                        }
                        if (typeof a.alignBottom !== "undefined") {
                            this.alignBottom_ = a.alignBottom;
                        }
                        if (typeof a.position !== "undefined") {
                            this.setPosition(a.position);
                        }
                        if (typeof a.zIndex !== "undefined") {
                            this.setZIndex(a.zIndex);
                        }
                        if (typeof a.closeBoxMargin !== "undefined") {
                            this.closeBoxMargin_ = a.closeBoxMargin;
                        }
                        if (typeof a.closeBoxURL !== "undefined") {
                            this.closeBoxURL_ = a.closeBoxURL;
                        }
                        if (typeof a.infoBoxClearance !== "undefined") {
                            this.infoBoxClearance_ = a.infoBoxClearance;
                        }
                        if (typeof a.isHidden !== "undefined") {
                            this.isHidden_ = a.isHidden;
                        }
                        if (typeof a.visible !== "undefined") {
                            this.isHidden_ = !a.visible;
                        }
                        if (typeof a.enableEventPropagation !== "undefined") {
                            this.enableEventPropagation_ = a.enableEventPropagation;
                        }
                        if (this.div_) {
                            this.draw();
                        }
                    };
                    f.prototype.setContent = function(a) {
                        this.content_ = a;
                        if (this.div_) {
                            if (this.closeListener_) {
                                google.maps.event.removeListener(this.closeListener_);
                                this.closeListener_ = null;
                            }
                            if (!this.fixedWidthSet_) {
                                this.div_.style.width = "";
                            }
                            if (typeof a.nodeType === "undefined") {
                                this.div_.innerHTML = this.getCloseBoxImg_() + a;
                            } else {
                                this.div_.innerHTML = this.getCloseBoxImg_();
                                this.div_.appendChild(a);
                            }
                            if (!this.fixedWidthSet_) {
                                this.div_.style.width = this.div_.offsetWidth + "px";
                                if (typeof a.nodeType === "undefined") {
                                    this.div_.innerHTML = this.getCloseBoxImg_() + a;
                                } else {
                                    this.div_.innerHTML = this.getCloseBoxImg_();
                                    this.div_.appendChild(a);
                                }
                            }
                            this.addClickHandler_();
                        }
                        google.maps.event.trigger(this, "content_changed");
                    };
                    f.prototype.setPosition = function(a) {
                        this.position_ = a;
                        if (this.div_) {
                            this.draw();
                        }
                        google.maps.event.trigger(this, "position_changed");
                    };
                    f.prototype.setZIndex = function(a) {
                        this.zIndex_ = a;
                        if (this.div_) {
                            this.div_.style.zIndex = a;
                        }
                        google.maps.event.trigger(this, "zindex_changed");
                    };
                    f.prototype.setVisible = function(a) {
                        this.isHidden_ = !a;
                        if (this.div_) {
                            this.div_.style.visibility = this.isHidden_ ? "hidden" : "visible";
                        }
                    };
                    f.prototype.getContent = function() {
                        return this.content_;
                    };
                    f.prototype.getPosition = function() {
                        return this.position_;
                    };
                    f.prototype.getZIndex = function() {
                        return this.zIndex_;
                    };
                    f.prototype.getVisible = function() {
                        var a;
                        if (typeof this.getMap() === "undefined" || this.getMap() === null) {
                            a = false;
                        } else {
                            a = !this.isHidden_;
                        }
                        return a;
                    };
                    f.prototype.show = function() {
                        this.isHidden_ = false;
                        if (this.div_) {
                            this.div_.style.visibility = "visible";
                        }
                    };
                    f.prototype.hide = function() {
                        this.isHidden_ = true;
                        if (this.div_) {
                            this.div_.style.visibility = "hidden";
                        }
                    };
                    f.prototype.open = function(a, b) {
                        var c = this;
                        if (b) {
                            this.position_ = b.getPosition();
                            this.moveListener_ = google.maps.event.addListener(b, "position_changed", function() {
                                c.setPosition(this.getPosition());
                            });
                        }
                        this.setMap(a);
                        if (this.div_) {
                            this.panBox_();
                        }
                    };
                    f.prototype.close = function() {
                        var a;
                        if (this.closeListener_) {
                            google.maps.event.removeListener(this.closeListener_);
                            this.closeListener_ = null;
                        }
                        if (this.eventListeners_) {
                            for (a = 0; a < this.eventListeners_.length; a++) {
                                google.maps.event.removeListener(this.eventListeners_[a]);
                            }
                            this.eventListeners_ = null;
                        }
                        if (this.moveListener_) {
                            google.maps.event.removeListener(this.moveListener_);
                            this.moveListener_ = null;
                        }
                        if (this.contextListener_) {
                            google.maps.event.removeListener(this.contextListener_);
                            this.contextListener_ = null;
                        }
                        this.setMap(null);
                    };
                    (function() {
                        var b = function(a) {
                            var b;
                            switch (a) {
                              case "thin":
                                b = "2px";
                                break;

                              case "medium":
                                b = "4px";
                                break;

                              case "thick":
                                b = "6px";
                                break;

                              default:
                                b = a;
                            }
                            return b;
                        };
                        var c = function(a) {
                            var c;
                            var d = {};
                            if (document.defaultView && document.defaultView.getComputedStyle) {
                                c = a.ownerDocument.defaultView.getComputedStyle(a, "");
                                if (c) {
                                    d.top = parseInt(c.borderTopWidth, 10) || 0;
                                    d.bottom = parseInt(c.borderBottomWidth, 10) || 0;
                                    d.left = parseInt(c.borderLeftWidth, 10) || 0;
                                    d.right = parseInt(c.borderRightWidth, 10) || 0;
                                    return d;
                                }
                            } else if (document.documentElement.currentStyle) {
                                if (a.currentStyle) {
                                    d.top = parseInt(b(a.currentStyle.borderTopWidth), 10) || 0;
                                    d.bottom = parseInt(b(a.currentStyle.borderBottomWidth), 10) || 0;
                                    d.left = parseInt(b(a.currentStyle.borderLeftWidth), 10) || 0;
                                    d.right = parseInt(b(a.currentStyle.borderRightWidth), 10) || 0;
                                    return d;
                                }
                            }
                            d.top = parseInt(a.style["border-top-width"], 10) || 0;
                            d.bottom = parseInt(a.style["border-bottom-width"], 10) || 0;
                            d.left = parseInt(a.style["border-left-width"], 10) || 0;
                            d.right = parseInt(a.style["border-right-width"], 10) || 0;
                            return d;
                        };
                        var d = {
                            x: 0,
                            y: 0
                        };
                        var e = function(a) {
                            d.x = typeof document.documentElement.scrollLeft !== "undefined" ? document.documentElement.scrollLeft : document.body.scrollLeft;
                            d.y = typeof document.documentElement.scrollTop !== "undefined" ? document.documentElement.scrollTop : document.body.scrollTop;
                        };
                        e();
                        var f = function(b) {
                            var c = 0, e = 0;
                            b = b || a.event;
                            if (typeof b.pageX !== "undefined") {
                                c = b.pageX;
                                e = b.pageY;
                            } else if (typeof b.clientX !== "undefined") {
                                c = b.clientX + d.x;
                                e = b.clientY + d.y;
                            }
                            return {
                                left: c,
                                top: e
                            };
                        };
                        var g = function(b) {
                            var c = b.offsetLeft;
                            var d = b.offsetTop;
                            var e = b.offsetParent;
                            while (e !== null) {
                                if (e !== document.body && e !== document.documentElement) {
                                    c -= e.scrollLeft;
                                    d -= e.scrollTop;
                                }
                                var f = e;
                                var g = f.offsetLeft;
                                var h = f.offsetTop;
                                if (!g && !h && a.getComputedStyle) {
                                    var i = document.defaultView.getComputedStyle(f, null).MozTransform || document.defaultView.getComputedStyle(f, null).WebkitTransform;
                                    if (i) {
                                        if (typeof i === "string") {
                                            var j = i.split(",");
                                            g += parseInt(j[4], 10) || 0;
                                            h += parseInt(j[5], 10) || 0;
                                        }
                                    }
                                }
                                c += g;
                                d += h;
                                e = e.offsetParent;
                            }
                            return {
                                left: c,
                                top: d
                            };
                        };
                        var h = function(a, b) {
                            if (a && b) {
                                for (var c in b) {
                                    if (b.hasOwnProperty(c)) {
                                        a[c] = b[c];
                                    }
                                }
                            }
                            return a;
                        };
                        var i = function(a, b) {
                            if (typeof b !== "undefined") {
                                a.style.opacity = b;
                            }
                            if (typeof a.style.opacity !== "undefined" && a.style.opacity !== "") {
                                a.style.filter = "alpha(opacity=" + a.style.opacity * 100 + ")";
                            }
                        };
                        function j(a, b) {
                            var c = this;
                            var d = new google.maps.OverlayView();
                            d.onAdd = function() {
                                c.init_(a, b);
                            };
                            d.draw = function() {};
                            d.onRemove = function() {};
                            d.setMap(a);
                            this.prjov_ = d;
                        }
                        j.prototype.init_ = function(b, d) {
                            var f;
                            var g = this;
                            this.map_ = b;
                            d = d || {};
                            this.key_ = d.key || "shift";
                            this.key_ = this.key_.toLowerCase();
                            this.borderWidths_ = c(this.map_.getDiv());
                            this.veilDiv_ = [];
                            for (f = 0; f < 4; f++) {
                                this.veilDiv_[f] = document.createElement("div");
                                this.veilDiv_[f].onselectstart = function() {
                                    return false;
                                };
                                h(this.veilDiv_[f].style, {
                                    backgroundColor: "gray",
                                    opacity: .25,
                                    cursor: "crosshair"
                                });
                                h(this.veilDiv_[f].style, d.paneStyle);
                                h(this.veilDiv_[f].style, d.veilStyle);
                                h(this.veilDiv_[f].style, {
                                    position: "absolute",
                                    overflow: "hidden",
                                    display: "none"
                                });
                                if (this.key_ === "shift") {
                                    this.veilDiv_[f].style.MozUserSelect = "none";
                                }
                                i(this.veilDiv_[f]);
                                if (this.veilDiv_[f].style.backgroundColor === "transparent") {
                                    this.veilDiv_[f].style.backgroundColor = "white";
                                    i(this.veilDiv_[f], 0);
                                }
                                this.map_.getDiv().appendChild(this.veilDiv_[f]);
                            }
                            this.noZoom_ = d.noZoom || false;
                            this.visualEnabled_ = d.visualEnabled || false;
                            this.visualClass_ = d.visualClass || "";
                            this.visualPosition_ = d.visualPosition || google.maps.ControlPosition.LEFT_TOP;
                            this.visualPositionOffset_ = d.visualPositionOffset || new google.maps.Size(35, 0);
                            this.visualPositionIndex_ = d.visualPositionIndex || null;
                            this.visualSprite_ = d.visualSprite || "http" + (document.location.protocol === "https:" ? "s" : "") + "://maps.gstatic.com/mapfiles/ftr/controls/dragzoom_btn.png";
                            this.visualSize_ = d.visualSize || new google.maps.Size(20, 20);
                            this.visualTips_ = d.visualTips || {};
                            this.visualTips_.off = this.visualTips_.off || "Turn on drag zoom mode";
                            this.visualTips_.on = this.visualTips_.on || "Turn off drag zoom mode";
                            this.boxDiv_ = document.createElement("div");
                            h(this.boxDiv_.style, {
                                border: "4px solid #736AFF"
                            });
                            h(this.boxDiv_.style, d.boxStyle);
                            h(this.boxDiv_.style, {
                                position: "absolute",
                                display: "none"
                            });
                            i(this.boxDiv_);
                            this.map_.getDiv().appendChild(this.boxDiv_);
                            this.boxBorderWidths_ = c(this.boxDiv_);
                            this.listeners_ = [ google.maps.event.addDomListener(document, "keydown", function(a) {
                                g.onKeyDown_(a);
                            }), google.maps.event.addDomListener(document, "keyup", function(a) {
                                g.onKeyUp_(a);
                            }), google.maps.event.addDomListener(this.veilDiv_[0], "mousedown", function(a) {
                                g.onMouseDown_(a);
                            }), google.maps.event.addDomListener(this.veilDiv_[1], "mousedown", function(a) {
                                g.onMouseDown_(a);
                            }), google.maps.event.addDomListener(this.veilDiv_[2], "mousedown", function(a) {
                                g.onMouseDown_(a);
                            }), google.maps.event.addDomListener(this.veilDiv_[3], "mousedown", function(a) {
                                g.onMouseDown_(a);
                            }), google.maps.event.addDomListener(document, "mousedown", function(a) {
                                g.onMouseDownDocument_(a);
                            }), google.maps.event.addDomListener(document, "mousemove", function(a) {
                                g.onMouseMove_(a);
                            }), google.maps.event.addDomListener(document, "mouseup", function(a) {
                                g.onMouseUp_(a);
                            }), google.maps.event.addDomListener(a, "scroll", e) ];
                            this.hotKeyDown_ = false;
                            this.mouseDown_ = false;
                            this.dragging_ = false;
                            this.startPt_ = null;
                            this.endPt_ = null;
                            this.mapWidth_ = null;
                            this.mapHeight_ = null;
                            this.mousePosn_ = null;
                            this.mapPosn_ = null;
                            if (this.visualEnabled_) {
                                this.buttonDiv_ = this.initControl_(this.visualPositionOffset_);
                                if (this.visualPositionIndex_ !== null) {
                                    this.buttonDiv_.index = this.visualPositionIndex_;
                                }
                                this.map_.controls[this.visualPosition_].push(this.buttonDiv_);
                                this.controlIndex_ = this.map_.controls[this.visualPosition_].length - 1;
                            }
                        };
                        j.prototype.initControl_ = function(a) {
                            var b;
                            var c;
                            var d = this;
                            b = document.createElement("div");
                            b.className = this.visualClass_;
                            b.style.position = "relative";
                            b.style.overflow = "hidden";
                            b.style.height = this.visualSize_.height + "px";
                            b.style.width = this.visualSize_.width + "px";
                            b.title = this.visualTips_.off;
                            c = document.createElement("img");
                            c.src = this.visualSprite_;
                            c.style.position = "absolute";
                            c.style.left = -(this.visualSize_.width * 2) + "px";
                            c.style.top = 0 + "px";
                            b.appendChild(c);
                            b.onclick = function(a) {
                                d.hotKeyDown_ = !d.hotKeyDown_;
                                if (d.hotKeyDown_) {
                                    d.buttonDiv_.firstChild.style.left = -(d.visualSize_.width * 0) + "px";
                                    d.buttonDiv_.title = d.visualTips_.on;
                                    d.activatedByControl_ = true;
                                    google.maps.event.trigger(d, "activate");
                                } else {
                                    d.buttonDiv_.firstChild.style.left = -(d.visualSize_.width * 2) + "px";
                                    d.buttonDiv_.title = d.visualTips_.off;
                                    google.maps.event.trigger(d, "deactivate");
                                }
                                d.onMouseMove_(a);
                            };
                            b.onmouseover = function() {
                                d.buttonDiv_.firstChild.style.left = -(d.visualSize_.width * 1) + "px";
                            };
                            b.onmouseout = function() {
                                if (d.hotKeyDown_) {
                                    d.buttonDiv_.firstChild.style.left = -(d.visualSize_.width * 0) + "px";
                                    d.buttonDiv_.title = d.visualTips_.on;
                                } else {
                                    d.buttonDiv_.firstChild.style.left = -(d.visualSize_.width * 2) + "px";
                                    d.buttonDiv_.title = d.visualTips_.off;
                                }
                            };
                            b.ondragstart = function() {
                                return false;
                            };
                            h(b.style, {
                                cursor: "pointer",
                                marginTop: a.height + "px",
                                marginLeft: a.width + "px"
                            });
                            return b;
                        };
                        j.prototype.isHotKeyDown_ = function(b) {
                            var c;
                            b = b || a.event;
                            c = b.shiftKey && this.key_ === "shift" || b.altKey && this.key_ === "alt" || b.ctrlKey && this.key_ === "ctrl";
                            if (!c) {
                                switch (b.keyCode) {
                                  case 16:
                                    if (this.key_ === "shift") {
                                        c = true;
                                    }
                                    break;

                                  case 17:
                                    if (this.key_ === "ctrl") {
                                        c = true;
                                    }
                                    break;

                                  case 18:
                                    if (this.key_ === "alt") {
                                        c = true;
                                    }
                                    break;
                                }
                            }
                            return c;
                        };
                        j.prototype.isMouseOnMap_ = function() {
                            var a = this.mousePosn_;
                            if (a) {
                                var b = this.mapPosn_;
                                var c = this.map_.getDiv();
                                return a.left > b.left && a.left < b.left + c.offsetWidth && a.top > b.top && a.top < b.top + c.offsetHeight;
                            } else {
                                return false;
                            }
                        };
                        j.prototype.setVeilVisibility_ = function() {
                            var a;
                            if (this.map_ && this.hotKeyDown_ && this.isMouseOnMap_()) {
                                var b = this.map_.getDiv();
                                this.mapWidth_ = b.offsetWidth - (this.borderWidths_.left + this.borderWidths_.right);
                                this.mapHeight_ = b.offsetHeight - (this.borderWidths_.top + this.borderWidths_.bottom);
                                if (this.activatedByControl_) {
                                    var c = parseInt(this.buttonDiv_.style.left, 10) + this.visualPositionOffset_.width;
                                    var d = parseInt(this.buttonDiv_.style.top, 10) + this.visualPositionOffset_.height;
                                    var e = this.visualSize_.width;
                                    var f = this.visualSize_.height;
                                    this.veilDiv_[0].style.top = "0px";
                                    this.veilDiv_[0].style.left = "0px";
                                    this.veilDiv_[0].style.width = c + "px";
                                    this.veilDiv_[0].style.height = this.mapHeight_ + "px";
                                    this.veilDiv_[1].style.top = "0px";
                                    this.veilDiv_[1].style.left = c + e + "px";
                                    this.veilDiv_[1].style.width = this.mapWidth_ - (c + e) + "px";
                                    this.veilDiv_[1].style.height = this.mapHeight_ + "px";
                                    this.veilDiv_[2].style.top = "0px";
                                    this.veilDiv_[2].style.left = c + "px";
                                    this.veilDiv_[2].style.width = e + "px";
                                    this.veilDiv_[2].style.height = d + "px";
                                    this.veilDiv_[3].style.top = d + f + "px";
                                    this.veilDiv_[3].style.left = c + "px";
                                    this.veilDiv_[3].style.width = e + "px";
                                    this.veilDiv_[3].style.height = this.mapHeight_ - (d + f) + "px";
                                    for (a = 0; a < this.veilDiv_.length; a++) {
                                        this.veilDiv_[a].style.display = "block";
                                    }
                                } else {
                                    this.veilDiv_[0].style.left = "0px";
                                    this.veilDiv_[0].style.top = "0px";
                                    this.veilDiv_[0].style.width = this.mapWidth_ + "px";
                                    this.veilDiv_[0].style.height = this.mapHeight_ + "px";
                                    for (a = 1; a < this.veilDiv_.length; a++) {
                                        this.veilDiv_[a].style.width = "0px";
                                        this.veilDiv_[a].style.height = "0px";
                                    }
                                    for (a = 0; a < this.veilDiv_.length; a++) {
                                        this.veilDiv_[a].style.display = "block";
                                    }
                                }
                            } else {
                                for (a = 0; a < this.veilDiv_.length; a++) {
                                    this.veilDiv_[a].style.display = "none";
                                }
                            }
                        };
                        j.prototype.onKeyDown_ = function(a) {
                            if (this.map_ && !this.hotKeyDown_ && this.isHotKeyDown_(a)) {
                                this.mapPosn_ = g(this.map_.getDiv());
                                this.hotKeyDown_ = true;
                                this.activatedByControl_ = false;
                                this.setVeilVisibility_();
                                google.maps.event.trigger(this, "activate");
                            }
                        };
                        j.prototype.getMousePoint_ = function(a) {
                            var b = f(a);
                            var c = new google.maps.Point();
                            c.x = b.left - this.mapPosn_.left - this.borderWidths_.left;
                            c.y = b.top - this.mapPosn_.top - this.borderWidths_.top;
                            c.x = Math.min(c.x, this.mapWidth_);
                            c.y = Math.min(c.y, this.mapHeight_);
                            c.x = Math.max(c.x, 0);
                            c.y = Math.max(c.y, 0);
                            return c;
                        };
                        j.prototype.onMouseDown_ = function(a) {
                            if (this.map_ && this.hotKeyDown_) {
                                this.mapPosn_ = g(this.map_.getDiv());
                                this.dragging_ = true;
                                this.startPt_ = this.endPt_ = this.getMousePoint_(a);
                                this.boxDiv_.style.width = this.boxDiv_.style.height = "0px";
                                var b = this.prjov_.getProjection();
                                var c = b.fromContainerPixelToLatLng(this.startPt_);
                                google.maps.event.trigger(this, "dragstart", c);
                            }
                        };
                        j.prototype.onMouseDownDocument_ = function(a) {
                            this.mouseDown_ = true;
                        };
                        j.prototype.onMouseMove_ = function(a) {
                            this.mousePosn_ = f(a);
                            if (this.dragging_) {
                                this.endPt_ = this.getMousePoint_(a);
                                var b = Math.min(this.startPt_.x, this.endPt_.x);
                                var c = Math.min(this.startPt_.y, this.endPt_.y);
                                var d = Math.abs(this.startPt_.x - this.endPt_.x);
                                var e = Math.abs(this.startPt_.y - this.endPt_.y);
                                var h = Math.max(0, d - (this.boxBorderWidths_.left + this.boxBorderWidths_.right));
                                var i = Math.max(0, e - (this.boxBorderWidths_.top + this.boxBorderWidths_.bottom));
                                this.veilDiv_[0].style.top = "0px";
                                this.veilDiv_[0].style.left = "0px";
                                this.veilDiv_[0].style.width = b + "px";
                                this.veilDiv_[0].style.height = this.mapHeight_ + "px";
                                this.veilDiv_[1].style.top = "0px";
                                this.veilDiv_[1].style.left = b + d + "px";
                                this.veilDiv_[1].style.width = this.mapWidth_ - (b + d) + "px";
                                this.veilDiv_[1].style.height = this.mapHeight_ + "px";
                                this.veilDiv_[2].style.top = "0px";
                                this.veilDiv_[2].style.left = b + "px";
                                this.veilDiv_[2].style.width = d + "px";
                                this.veilDiv_[2].style.height = c + "px";
                                this.veilDiv_[3].style.top = c + e + "px";
                                this.veilDiv_[3].style.left = b + "px";
                                this.veilDiv_[3].style.width = d + "px";
                                this.veilDiv_[3].style.height = this.mapHeight_ - (c + e) + "px";
                                this.boxDiv_.style.top = c + "px";
                                this.boxDiv_.style.left = b + "px";
                                this.boxDiv_.style.width = h + "px";
                                this.boxDiv_.style.height = i + "px";
                                this.boxDiv_.style.display = "block";
                                google.maps.event.trigger(this, "drag", new google.maps.Point(b, c + e), new google.maps.Point(b + d, c), this.prjov_.getProjection());
                            } else if (!this.mouseDown_) {
                                this.mapPosn_ = g(this.map_.getDiv());
                                this.setVeilVisibility_();
                            }
                        };
                        j.prototype.onMouseUp_ = function(a) {
                            var b;
                            var c = this;
                            this.mouseDown_ = false;
                            if (this.dragging_) {
                                if (this.getMousePoint_(a).x === this.startPt_.x && this.getMousePoint_(a).y === this.startPt_.y) {
                                    this.onKeyUp_(a);
                                    return;
                                }
                                var d = Math.min(this.startPt_.x, this.endPt_.x);
                                var e = Math.min(this.startPt_.y, this.endPt_.y);
                                var f = Math.abs(this.startPt_.x - this.endPt_.x);
                                var g = Math.abs(this.startPt_.y - this.endPt_.y);
                                var h = true;
                                if (h) {
                                    d += this.borderWidths_.left;
                                    e += this.borderWidths_.top;
                                }
                                var i = this.prjov_.getProjection();
                                var j = i.fromContainerPixelToLatLng(new google.maps.Point(d, e + g));
                                var k = i.fromContainerPixelToLatLng(new google.maps.Point(d + f, e));
                                var l = new google.maps.LatLngBounds(j, k);
                                if (this.noZoom_) {
                                    this.boxDiv_.style.display = "none";
                                } else {
                                    b = this.map_.getZoom();
                                    this.map_.fitBounds(l);
                                    if (this.map_.getZoom() < b) {
                                        this.map_.setZoom(b);
                                    }
                                    var m = i.fromLatLngToContainerPixel(j);
                                    var n = i.fromLatLngToContainerPixel(k);
                                    if (h) {
                                        m.x -= this.borderWidths_.left;
                                        m.y -= this.borderWidths_.top;
                                        n.x -= this.borderWidths_.left;
                                        n.y -= this.borderWidths_.top;
                                    }
                                    this.boxDiv_.style.left = m.x + "px";
                                    this.boxDiv_.style.top = n.y + "px";
                                    this.boxDiv_.style.width = Math.abs(n.x - m.x) - (this.boxBorderWidths_.left + this.boxBorderWidths_.right) + "px";
                                    this.boxDiv_.style.height = Math.abs(n.y - m.y) - (this.boxBorderWidths_.top + this.boxBorderWidths_.bottom) + "px";
                                    setTimeout(function() {
                                        c.boxDiv_.style.display = "none";
                                    }, 1e3);
                                }
                                this.dragging_ = false;
                                this.onMouseMove_(a);
                                google.maps.event.trigger(this, "dragend", l);
                                if (!this.isHotKeyDown_(a)) {
                                    this.onKeyUp_(a);
                                }
                            }
                        };
                        j.prototype.onKeyUp_ = function(a) {
                            var b;
                            var c, d, e, f, g, h, i;
                            var j = null;
                            if (this.map_ && this.hotKeyDown_) {
                                this.hotKeyDown_ = false;
                                if (this.dragging_) {
                                    this.boxDiv_.style.display = "none";
                                    this.dragging_ = false;
                                    c = Math.min(this.startPt_.x, this.endPt_.x);
                                    d = Math.min(this.startPt_.y, this.endPt_.y);
                                    e = Math.abs(this.startPt_.x - this.endPt_.x);
                                    f = Math.abs(this.startPt_.y - this.endPt_.y);
                                    g = this.prjov_.getProjection();
                                    h = g.fromContainerPixelToLatLng(new google.maps.Point(c, d + f));
                                    i = g.fromContainerPixelToLatLng(new google.maps.Point(c + e, d));
                                    j = new google.maps.LatLngBounds(h, i);
                                }
                                for (b = 0; b < this.veilDiv_.length; b++) {
                                    this.veilDiv_[b].style.display = "none";
                                }
                                if (this.visualEnabled_) {
                                    this.buttonDiv_.firstChild.style.left = -(this.visualSize_.width * 2) + "px";
                                    this.buttonDiv_.title = this.visualTips_.off;
                                    this.buttonDiv_.style.display = "";
                                }
                                google.maps.event.trigger(this, "deactivate", j);
                            }
                        };
                        google.maps.Map.prototype.enableKeyDragZoom = function(a) {
                            this.dragZoom_ = new j(this, a);
                        };
                        google.maps.Map.prototype.disableKeyDragZoom = function() {
                            var a;
                            var b = this.dragZoom_;
                            if (b) {
                                for (a = 0; a < b.listeners_.length; ++a) {
                                    google.maps.event.removeListener(b.listeners_[a]);
                                }
                                this.getDiv().removeChild(b.boxDiv_);
                                for (a = 0; a < b.veilDiv_.length; a++) {
                                    this.getDiv().removeChild(b.veilDiv_[a]);
                                }
                                if (b.visualEnabled_) {
                                    this.controls[b.visualPosition_].removeAt(b.controlIndex_);
                                }
                                b.prjov_.setMap(null);
                                this.dragZoom_ = null;
                            }
                        };
                        google.maps.Map.prototype.keyDragZoomEnabled = function() {
                            return this.dragZoom_ !== null;
                        };
                        google.maps.Map.prototype.getDragZoomObject = function() {
                            return this.dragZoom_;
                        };
                    })();
                    function g(a, b) {
                        function c() {}
                        c.prototype = b.prototype;
                        a.superClass_ = b.prototype;
                        a.prototype = new c();
                        a.prototype.constructor = a;
                    }
                    function h(a, b, c) {
                        this.marker_ = a;
                        this.handCursorURL_ = a.handCursorURL;
                        this.labelDiv_ = document.createElement("div");
                        this.labelDiv_.style.cssText = "position: absolute; overflow: hidden;";
                        this.eventDiv_ = document.createElement("div");
                        this.eventDiv_.style.cssText = this.labelDiv_.style.cssText;
                        this.eventDiv_.setAttribute("onselectstart", "return false;");
                        this.eventDiv_.setAttribute("ondragstart", "return false;");
                        this.crossDiv_ = h.getSharedCross(b);
                    }
                    g(h, google.maps.OverlayView);
                    h.getSharedCross = function(a) {
                        var b;
                        if (typeof h.getSharedCross.crossDiv === "undefined") {
                            b = document.createElement("img");
                            b.style.cssText = "position: absolute; z-index: 1000002; display: none;";
                            b.style.marginLeft = "-8px";
                            b.style.marginTop = "-9px";
                            b.src = a;
                            h.getSharedCross.crossDiv = b;
                        }
                        return h.getSharedCross.crossDiv;
                    };
                    h.prototype.onAdd = function() {
                        var a = this;
                        var b = false;
                        var c = false;
                        var d;
                        var e, f;
                        var g;
                        var i;
                        var j;
                        var k;
                        var l = 20;
                        var m = "url(" + this.handCursorURL_ + ")";
                        var n = function(a) {
                            if (a.preventDefault) {
                                a.preventDefault();
                            }
                            a.cancelBubble = true;
                            if (a.stopPropagation) {
                                a.stopPropagation();
                            }
                        };
                        var o = function() {
                            a.marker_.setAnimation(null);
                        };
                        this.getPanes().overlayImage.appendChild(this.labelDiv_);
                        this.getPanes().overlayMouseTarget.appendChild(this.eventDiv_);
                        if (typeof h.getSharedCross.processed === "undefined") {
                            this.getPanes().overlayImage.appendChild(this.crossDiv_);
                            h.getSharedCross.processed = true;
                        }
                        this.listeners_ = [ google.maps.event.addDomListener(this.eventDiv_, "mouseover", function(b) {
                            if (a.marker_.getDraggable() || a.marker_.getClickable()) {
                                this.style.cursor = "pointer";
                                google.maps.event.trigger(a.marker_, "mouseover", b);
                            }
                        }), google.maps.event.addDomListener(this.eventDiv_, "mouseout", function(b) {
                            if ((a.marker_.getDraggable() || a.marker_.getClickable()) && !c) {
                                this.style.cursor = a.marker_.getCursor();
                                google.maps.event.trigger(a.marker_, "mouseout", b);
                            }
                        }), google.maps.event.addDomListener(this.eventDiv_, "mousedown", function(d) {
                            c = false;
                            if (a.marker_.getDraggable()) {
                                b = true;
                                this.style.cursor = m;
                            }
                            if (a.marker_.getDraggable() || a.marker_.getClickable()) {
                                google.maps.event.trigger(a.marker_, "mousedown", d);
                                n(d);
                            }
                        }), google.maps.event.addDomListener(document, "mouseup", function(e) {
                            var f;
                            if (b) {
                                b = false;
                                a.eventDiv_.style.cursor = "pointer";
                                google.maps.event.trigger(a.marker_, "mouseup", e);
                            }
                            if (c) {
                                if (i) {
                                    f = a.getProjection().fromLatLngToDivPixel(a.marker_.getPosition());
                                    f.y += l;
                                    a.marker_.setPosition(a.getProjection().fromDivPixelToLatLng(f));
                                    try {
                                        a.marker_.setAnimation(google.maps.Animation.BOUNCE);
                                        setTimeout(o, 1406);
                                    } catch (a) {}
                                }
                                a.crossDiv_.style.display = "none";
                                a.marker_.setZIndex(d);
                                g = true;
                                c = false;
                                e.latLng = a.marker_.getPosition();
                                google.maps.event.trigger(a.marker_, "dragend", e);
                            }
                        }), google.maps.event.addListener(a.marker_.getMap(), "mousemove", function(g) {
                            var h;
                            if (b) {
                                if (c) {
                                    g.latLng = new google.maps.LatLng(g.latLng.lat() - e, g.latLng.lng() - f);
                                    h = a.getProjection().fromLatLngToDivPixel(g.latLng);
                                    if (i) {
                                        a.crossDiv_.style.left = h.x + "px";
                                        a.crossDiv_.style.top = h.y + "px";
                                        a.crossDiv_.style.display = "";
                                        h.y -= l;
                                    }
                                    a.marker_.setPosition(a.getProjection().fromDivPixelToLatLng(h));
                                    if (i) {
                                        a.eventDiv_.style.top = h.y + l + "px";
                                    }
                                    google.maps.event.trigger(a.marker_, "drag", g);
                                } else {
                                    e = g.latLng.lat() - a.marker_.getPosition().lat();
                                    f = g.latLng.lng() - a.marker_.getPosition().lng();
                                    d = a.marker_.getZIndex();
                                    j = a.marker_.getPosition();
                                    k = a.marker_.getMap().getCenter();
                                    i = a.marker_.get("raiseOnDrag");
                                    c = true;
                                    a.marker_.setZIndex(1e6);
                                    g.latLng = a.marker_.getPosition();
                                    google.maps.event.trigger(a.marker_, "dragstart", g);
                                }
                            }
                        }), google.maps.event.addDomListener(document, "keydown", function(b) {
                            if (c) {
                                if (b.keyCode === 27) {
                                    i = false;
                                    a.marker_.setPosition(j);
                                    a.marker_.getMap().setCenter(k);
                                    google.maps.event.trigger(document, "mouseup", b);
                                }
                            }
                        }), google.maps.event.addDomListener(this.eventDiv_, "click", function(b) {
                            if (a.marker_.getDraggable() || a.marker_.getClickable()) {
                                if (g) {
                                    g = false;
                                } else {
                                    google.maps.event.trigger(a.marker_, "click", b);
                                    n(b);
                                }
                            }
                        }), google.maps.event.addDomListener(this.eventDiv_, "dblclick", function(b) {
                            if (a.marker_.getDraggable() || a.marker_.getClickable()) {
                                google.maps.event.trigger(a.marker_, "dblclick", b);
                                n(b);
                            }
                        }), google.maps.event.addListener(this.marker_, "dragstart", function(a) {
                            if (!c) {
                                i = this.get("raiseOnDrag");
                            }
                        }), google.maps.event.addListener(this.marker_, "drag", function(b) {
                            if (!c) {
                                if (i) {
                                    a.setPosition(l);
                                    a.labelDiv_.style.zIndex = 1e6 + (this.get("labelInBackground") ? -1 : +1);
                                }
                            }
                        }), google.maps.event.addListener(this.marker_, "dragend", function(b) {
                            if (!c) {
                                if (i) {
                                    a.setPosition(0);
                                }
                            }
                        }), google.maps.event.addListener(this.marker_, "position_changed", function() {
                            a.setPosition();
                        }), google.maps.event.addListener(this.marker_, "zindex_changed", function() {
                            a.setZIndex();
                        }), google.maps.event.addListener(this.marker_, "visible_changed", function() {
                            a.setVisible();
                        }), google.maps.event.addListener(this.marker_, "labelvisible_changed", function() {
                            a.setVisible();
                        }), google.maps.event.addListener(this.marker_, "title_changed", function() {
                            a.setTitle();
                        }), google.maps.event.addListener(this.marker_, "labelcontent_changed", function() {
                            a.setContent();
                        }), google.maps.event.addListener(this.marker_, "labelanchor_changed", function() {
                            a.setAnchor();
                        }), google.maps.event.addListener(this.marker_, "labelclass_changed", function() {
                            a.setStyles();
                        }), google.maps.event.addListener(this.marker_, "labelstyle_changed", function() {
                            a.setStyles();
                        }) ];
                    };
                    h.prototype.onRemove = function() {
                        var a;
                        this.labelDiv_.parentNode.removeChild(this.labelDiv_);
                        this.eventDiv_.parentNode.removeChild(this.eventDiv_);
                        for (a = 0; a < this.listeners_.length; a++) {
                            google.maps.event.removeListener(this.listeners_[a]);
                        }
                    };
                    h.prototype.draw = function() {
                        this.setContent();
                        this.setTitle();
                        this.setStyles();
                    };
                    h.prototype.setContent = function() {
                        var a = this.marker_.get("labelContent");
                        if (typeof a.nodeType === "undefined") {
                            this.labelDiv_.innerHTML = a;
                            this.eventDiv_.innerHTML = this.labelDiv_.innerHTML;
                        } else {
                            this.labelDiv_.innerHTML = "";
                            this.labelDiv_.appendChild(a);
                            a = a.cloneNode(true);
                            this.eventDiv_.innerHTML = "";
                            this.eventDiv_.appendChild(a);
                        }
                    };
                    h.prototype.setTitle = function() {
                        this.eventDiv_.title = this.marker_.getTitle() || "";
                    };
                    h.prototype.setStyles = function() {
                        var a, b;
                        this.labelDiv_.className = this.marker_.get("labelClass");
                        this.eventDiv_.className = this.labelDiv_.className;
                        this.labelDiv_.style.cssText = "";
                        this.eventDiv_.style.cssText = "";
                        b = this.marker_.get("labelStyle");
                        for (a in b) {
                            if (b.hasOwnProperty(a)) {
                                this.labelDiv_.style[a] = b[a];
                                this.eventDiv_.style[a] = b[a];
                            }
                        }
                        this.setMandatoryStyles();
                    };
                    h.prototype.setMandatoryStyles = function() {
                        this.labelDiv_.style.position = "absolute";
                        this.labelDiv_.style.overflow = "hidden";
                        if (typeof this.labelDiv_.style.opacity !== "undefined" && this.labelDiv_.style.opacity !== "") {
                            this.labelDiv_.style.MsFilter = '"progid:DXImageTransform.Microsoft.Alpha(opacity=' + this.labelDiv_.style.opacity * 100 + ')"';
                            this.labelDiv_.style.filter = "alpha(opacity=" + this.labelDiv_.style.opacity * 100 + ")";
                        }
                        this.eventDiv_.style.position = this.labelDiv_.style.position;
                        this.eventDiv_.style.overflow = this.labelDiv_.style.overflow;
                        this.eventDiv_.style.opacity = .01;
                        this.eventDiv_.style.MsFilter = '"progid:DXImageTransform.Microsoft.Alpha(opacity=1)"';
                        this.eventDiv_.style.filter = "alpha(opacity=1)";
                        this.setAnchor();
                        this.setPosition();
                        this.setVisible();
                    };
                    h.prototype.setAnchor = function() {
                        var a = this.marker_.get("labelAnchor");
                        this.labelDiv_.style.marginLeft = -a.x + "px";
                        this.labelDiv_.style.marginTop = -a.y + "px";
                        this.eventDiv_.style.marginLeft = -a.x + "px";
                        this.eventDiv_.style.marginTop = -a.y + "px";
                    };
                    h.prototype.setPosition = function(a) {
                        var b = this.getProjection().fromLatLngToDivPixel(this.marker_.getPosition());
                        if (typeof a === "undefined") {
                            a = 0;
                        }
                        this.labelDiv_.style.left = Math.round(b.x) + "px";
                        this.labelDiv_.style.top = Math.round(b.y - a) + "px";
                        this.eventDiv_.style.left = this.labelDiv_.style.left;
                        this.eventDiv_.style.top = this.labelDiv_.style.top;
                        this.setZIndex();
                    };
                    h.prototype.setZIndex = function() {
                        var a = this.marker_.get("labelInBackground") ? -1 : +1;
                        if (typeof this.marker_.getZIndex() === "undefined") {
                            this.labelDiv_.style.zIndex = parseInt(this.labelDiv_.style.top, 10) + a;
                            this.eventDiv_.style.zIndex = this.labelDiv_.style.zIndex;
                        } else {
                            this.labelDiv_.style.zIndex = this.marker_.getZIndex() + a;
                            this.eventDiv_.style.zIndex = this.labelDiv_.style.zIndex;
                        }
                    };
                    h.prototype.setVisible = function() {
                        if (this.marker_.get("labelVisible")) {
                            this.labelDiv_.style.display = this.marker_.getVisible() ? "block" : "none";
                        } else {
                            this.labelDiv_.style.display = "none";
                        }
                        this.eventDiv_.style.display = this.labelDiv_.style.display;
                    };
                    function i(a) {
                        a = a || {};
                        a.labelContent = a.labelContent || "";
                        a.labelAnchor = a.labelAnchor || new google.maps.Point(0, 0);
                        a.labelClass = a.labelClass || "markerLabels";
                        a.labelStyle = a.labelStyle || {};
                        a.labelInBackground = a.labelInBackground || false;
                        if (typeof a.labelVisible === "undefined") {
                            a.labelVisible = true;
                        }
                        if (typeof a.raiseOnDrag === "undefined") {
                            a.raiseOnDrag = true;
                        }
                        if (typeof a.clickable === "undefined") {
                            a.clickable = true;
                        }
                        if (typeof a.draggable === "undefined") {
                            a.draggable = false;
                        }
                        if (typeof a.optimized === "undefined") {
                            a.optimized = false;
                        }
                        a.crossImage = a.crossImage || "http" + (document.location.protocol === "https:" ? "s" : "") + "://maps.gstatic.com/intl/en_us/mapfiles/drag_cross_67_16.png";
                        a.handCursor = a.handCursor || "http" + (document.location.protocol === "https:" ? "s" : "") + "://maps.gstatic.com/intl/en_us/mapfiles/closedhand_8_8.cur";
                        a.optimized = false;
                        this.label = new h(this, a.crossImage, a.handCursor);
                        google.maps.Marker.apply(this, arguments);
                    }
                    g(i, google.maps.Marker);
                    i.prototype.setMap = function(a) {
                        google.maps.Marker.prototype.setMap.apply(this, arguments);
                        this.label.setMap(a);
                    };
                    function j(a) {
                        var b = a || {};
                        this.ready_ = false;
                        this.dragging_ = false;
                        if (a["visible"] == d) {
                            a["visible"] = true;
                        }
                        if (a["shadow"] == d) {
                            a["shadow"] = "7px -3px 5px rgba(88,88,88,0.7)";
                        }
                        if (a["anchor"] == d) {
                            a["anchor"] = k["BOTTOM"];
                        }
                        this.setValues(b);
                    }
                    j.prototype = new google.maps.OverlayView();
                    a["RichMarker"] = j;
                    j.prototype.getVisible = function() {
                        return this.get("visible");
                    };
                    j.prototype["getVisible"] = j.prototype.getVisible;
                    j.prototype.setVisible = function(a) {
                        this.set("visible", a);
                    };
                    j.prototype["setVisible"] = j.prototype.setVisible;
                    j.prototype.visible_changed = function() {
                        if (this.ready_) {
                            this.markerWrapper_.style["display"] = this.getVisible() ? "" : "none";
                            this.draw();
                        }
                    };
                    j.prototype["visible_changed"] = j.prototype.visible_changed;
                    j.prototype.setFlat = function(a) {
                        this.set("flat", !!a);
                    };
                    j.prototype["setFlat"] = j.prototype.setFlat;
                    j.prototype.getFlat = function() {
                        return this.get("flat");
                    };
                    j.prototype["getFlat"] = j.prototype.getFlat;
                    j.prototype.getWidth = function() {
                        return this.get("width");
                    };
                    j.prototype["getWidth"] = j.prototype.getWidth;
                    j.prototype.getHeight = function() {
                        return this.get("height");
                    };
                    j.prototype["getHeight"] = j.prototype.getHeight;
                    j.prototype.setShadow = function(a) {
                        this.set("shadow", a);
                        this.flat_changed();
                    };
                    j.prototype["setShadow"] = j.prototype.setShadow;
                    j.prototype.getShadow = function() {
                        return this.get("shadow");
                    };
                    j.prototype["getShadow"] = j.prototype.getShadow;
                    j.prototype.flat_changed = function() {
                        if (!this.ready_) {
                            return;
                        }
                        this.markerWrapper_.style["boxShadow"] = this.markerWrapper_.style["webkitBoxShadow"] = this.markerWrapper_.style["MozBoxShadow"] = this.getFlat() ? "" : this.getShadow();
                    };
                    j.prototype["flat_changed"] = j.prototype.flat_changed;
                    j.prototype.setZIndex = function(a) {
                        this.set("zIndex", a);
                    };
                    j.prototype["setZIndex"] = j.prototype.setZIndex;
                    j.prototype.getZIndex = function() {
                        return this.get("zIndex");
                    };
                    j.prototype["getZIndex"] = j.prototype.getZIndex;
                    j.prototype.zIndex_changed = function() {
                        if (this.getZIndex() && this.ready_) {
                            this.markerWrapper_.style.zIndex = this.getZIndex();
                        }
                    };
                    j.prototype["zIndex_changed"] = j.prototype.zIndex_changed;
                    j.prototype.getDraggable = function() {
                        return this.get("draggable");
                    };
                    j.prototype["getDraggable"] = j.prototype.getDraggable;
                    j.prototype.setDraggable = function(a) {
                        this.set("draggable", !!a);
                    };
                    j.prototype["setDraggable"] = j.prototype.setDraggable;
                    j.prototype.draggable_changed = function() {
                        if (this.ready_) {
                            if (this.getDraggable()) {
                                this.addDragging_(this.markerWrapper_);
                            } else {
                                this.removeDragListeners_();
                            }
                        }
                    };
                    j.prototype["draggable_changed"] = j.prototype.draggable_changed;
                    j.prototype.getPosition = function() {
                        return this.get("position");
                    };
                    j.prototype["getPosition"] = j.prototype.getPosition;
                    j.prototype.setPosition = function(a) {
                        this.set("position", a);
                    };
                    j.prototype["setPosition"] = j.prototype.setPosition;
                    j.prototype.position_changed = function() {
                        this.draw();
                    };
                    j.prototype["position_changed"] = j.prototype.position_changed;
                    j.prototype.getAnchor = function() {
                        return this.get("anchor");
                    };
                    j.prototype["getAnchor"] = j.prototype.getAnchor;
                    j.prototype.setAnchor = function(a) {
                        this.set("anchor", a);
                    };
                    j.prototype["setAnchor"] = j.prototype.setAnchor;
                    j.prototype.anchor_changed = function() {
                        this.draw();
                    };
                    j.prototype["anchor_changed"] = j.prototype.anchor_changed;
                    j.prototype.htmlToDocumentFragment_ = function(a) {
                        var b = document.createElement("DIV");
                        b.innerHTML = a;
                        if (b.childNodes.length == 1) {
                            return b.removeChild(b.firstChild);
                        } else {
                            var c = document.createDocumentFragment();
                            while (b.firstChild) {
                                c.appendChild(b.firstChild);
                            }
                            return c;
                        }
                    };
                    j.prototype.removeChildren_ = function(a) {
                        if (!a) {
                            return;
                        }
                        var b;
                        while (b = a.firstChild) {
                            a.removeChild(b);
                        }
                    };
                    j.prototype.setContent = function(a) {
                        this.set("content", a);
                    };
                    j.prototype["setContent"] = j.prototype.setContent;
                    j.prototype.getContent = function() {
                        return this.get("content");
                    };
                    j.prototype["getContent"] = j.prototype.getContent;
                    j.prototype.content_changed = function() {
                        if (!this.markerContent_) {
                            return;
                        }
                        this.removeChildren_(this.markerContent_);
                        var a = this.getContent();
                        if (a) {
                            if (typeof a == "string") {
                                a = a.replace(/^\s*([\S\s]*)\b\s*$/, "$1");
                                a = this.htmlToDocumentFragment_(a);
                            }
                            this.markerContent_.appendChild(a);
                            var b = this;
                            var c = this.markerContent_.getElementsByTagName("IMG");
                            for (var d = 0, e; e = c[d]; d++) {
                                google.maps.event.addDomListener(e, "mousedown", function(a) {
                                    if (b.getDraggable()) {
                                        if (a.preventDefault) {
                                            a.preventDefault();
                                        }
                                        a.returnValue = false;
                                    }
                                });
                                google.maps.event.addDomListener(e, "load", function() {
                                    b.draw();
                                });
                            }
                            google.maps.event.trigger(this, "domready");
                        }
                        if (this.ready_) {
                            this.draw();
                        }
                    };
                    j.prototype["content_changed"] = j.prototype.content_changed;
                    j.prototype.setCursor_ = function(a) {
                        if (!this.ready_) {
                            return;
                        }
                        var b = "";
                        if (navigator.userAgent.indexOf("Gecko/") !== -1) {
                            if (a == "dragging") {
                                b = "-moz-grabbing";
                            }
                            if (a == "dragready") {
                                b = "-moz-grab";
                            }
                            if (a == "draggable") {
                                b = "pointer";
                            }
                        } else {
                            if (a == "dragging" || a == "dragready") {
                                b = "move";
                            }
                            if (a == "draggable") {
                                b = "pointer";
                            }
                        }
                        if (this.markerWrapper_.style.cursor != b) {
                            this.markerWrapper_.style.cursor = b;
                        }
                    };
                    j.prototype.startDrag = function(a) {
                        if (!this.getDraggable()) {
                            return;
                        }
                        if (!this.dragging_) {
                            this.dragging_ = true;
                            var b = this.getMap();
                            this.mapDraggable_ = b.get("draggable");
                            b.set("draggable", false);
                            this.mouseX_ = a.clientX;
                            this.mouseY_ = a.clientY;
                            this.setCursor_("dragready");
                            this.markerWrapper_.style["MozUserSelect"] = "none";
                            this.markerWrapper_.style["KhtmlUserSelect"] = "none";
                            this.markerWrapper_.style["WebkitUserSelect"] = "none";
                            this.markerWrapper_["unselectable"] = "on";
                            this.markerWrapper_["onselectstart"] = function() {
                                return false;
                            };
                            this.addDraggingListeners_();
                            google.maps.event.trigger(this, "dragstart");
                        }
                    };
                    j.prototype.stopDrag = function() {
                        if (!this.getDraggable()) {
                            return;
                        }
                        if (this.dragging_) {
                            this.dragging_ = false;
                            this.getMap().set("draggable", this.mapDraggable_);
                            this.mouseX_ = this.mouseY_ = this.mapDraggable_ = null;
                            this.markerWrapper_.style["MozUserSelect"] = "";
                            this.markerWrapper_.style["KhtmlUserSelect"] = "";
                            this.markerWrapper_.style["WebkitUserSelect"] = "";
                            this.markerWrapper_["unselectable"] = "off";
                            this.markerWrapper_["onselectstart"] = function() {};
                            this.removeDraggingListeners_();
                            this.setCursor_("draggable");
                            google.maps.event.trigger(this, "dragend");
                            this.draw();
                        }
                    };
                    j.prototype.drag = function(a) {
                        if (!this.getDraggable() || !this.dragging_) {
                            this.stopDrag();
                            return;
                        }
                        var b = this.mouseX_ - a.clientX;
                        var c = this.mouseY_ - a.clientY;
                        this.mouseX_ = a.clientX;
                        this.mouseY_ = a.clientY;
                        var d = parseInt(this.markerWrapper_.style["left"], 10) - b;
                        var e = parseInt(this.markerWrapper_.style["top"], 10) - c;
                        this.markerWrapper_.style["left"] = d + "px";
                        this.markerWrapper_.style["top"] = e + "px";
                        var f = this.getOffset_();
                        var g = new google.maps.Point(d - f.width, e - f.height);
                        var h = this.getProjection();
                        this.setPosition(h.fromDivPixelToLatLng(g));
                        this.setCursor_("dragging");
                        google.maps.event.trigger(this, "drag");
                    };
                    j.prototype.removeDragListeners_ = function() {
                        if (this.draggableListener_) {
                            google.maps.event.removeListener(this.draggableListener_);
                            delete this.draggableListener_;
                        }
                        this.setCursor_("");
                    };
                    j.prototype.addDragging_ = function(a) {
                        if (!a) {
                            return;
                        }
                        var b = this;
                        this.draggableListener_ = google.maps.event.addDomListener(a, "mousedown", function(a) {
                            b.startDrag(a);
                        });
                        this.setCursor_("draggable");
                    };
                    j.prototype.addDraggingListeners_ = function() {
                        var b = this;
                        if (this.markerWrapper_.setCapture) {
                            this.markerWrapper_.setCapture(true);
                            this.draggingListeners_ = [ google.maps.event.addDomListener(this.markerWrapper_, "mousemove", function(a) {
                                b.drag(a);
                            }, true), google.maps.event.addDomListener(this.markerWrapper_, "mouseup", function() {
                                b.stopDrag();
                                b.markerWrapper_.releaseCapture();
                            }, true) ];
                        } else {
                            this.draggingListeners_ = [ google.maps.event.addDomListener(a, "mousemove", function(a) {
                                b.drag(a);
                            }, true), google.maps.event.addDomListener(a, "mouseup", function() {
                                b.stopDrag();
                            }, true) ];
                        }
                    };
                    j.prototype.removeDraggingListeners_ = function() {
                        if (this.draggingListeners_) {
                            for (var a = 0, b; b = this.draggingListeners_[a]; a++) {
                                google.maps.event.removeListener(b);
                            }
                            this.draggingListeners_.length = 0;
                        }
                    };
                    j.prototype.getOffset_ = function() {
                        var a = this.getAnchor();
                        if (typeof a == "object") {
                            return a;
                        }
                        var b = new google.maps.Size(0, 0);
                        if (!this.markerContent_) {
                            return b;
                        }
                        var c = this.markerContent_.offsetWidth;
                        var d = this.markerContent_.offsetHeight;
                        switch (a) {
                          case k["TOP_LEFT"]:
                            break;

                          case k["TOP"]:
                            b.width = -c / 2;
                            break;

                          case k["TOP_RIGHT"]:
                            b.width = -c;
                            break;

                          case k["LEFT"]:
                            b.height = -d / 2;
                            break;

                          case k["MIDDLE"]:
                            b.width = -c / 2;
                            b.height = -d / 2;
                            break;

                          case k["RIGHT"]:
                            b.width = -c;
                            b.height = -d / 2;
                            break;

                          case k["BOTTOM_LEFT"]:
                            b.height = -d;
                            break;

                          case k["BOTTOM"]:
                            b.width = -c / 2;
                            b.height = -d;
                            break;

                          case k["BOTTOM_RIGHT"]:
                            b.width = -c;
                            b.height = -d;
                            break;
                        }
                        return b;
                    };
                    j.prototype.onAdd = function() {
                        if (!this.markerWrapper_) {
                            this.markerWrapper_ = document.createElement("DIV");
                            this.markerWrapper_.style["position"] = "absolute";
                        }
                        if (this.getZIndex()) {
                            this.markerWrapper_.style["zIndex"] = this.getZIndex();
                        }
                        this.markerWrapper_.style["display"] = this.getVisible() ? "" : "none";
                        if (!this.markerContent_) {
                            this.markerContent_ = document.createElement("DIV");
                            this.markerWrapper_.appendChild(this.markerContent_);
                            var a = this;
                            google.maps.event.addDomListener(this.markerContent_, "click", function(b) {
                                google.maps.event.trigger(a, "click");
                            });
                            google.maps.event.addDomListener(this.markerContent_, "mouseover", function(b) {
                                google.maps.event.trigger(a, "mouseover");
                            });
                            google.maps.event.addDomListener(this.markerContent_, "mouseout", function(b) {
                                google.maps.event.trigger(a, "mouseout");
                            });
                        }
                        this.ready_ = true;
                        this.content_changed();
                        this.flat_changed();
                        this.draggable_changed();
                        var b = this.getPanes();
                        if (b) {
                            b.overlayMouseTarget.appendChild(this.markerWrapper_);
                        }
                        google.maps.event.trigger(this, "ready");
                    };
                    j.prototype["onAdd"] = j.prototype.onAdd;
                    j.prototype.draw = function() {
                        if (!this.ready_ || this.dragging_) {
                            return;
                        }
                        var a = this.getProjection();
                        if (!a) {
                            return;
                        }
                        var b = this.get("position");
                        var c = a.fromLatLngToDivPixel(b);
                        var d = this.getOffset_();
                        this.markerWrapper_.style["top"] = c.y + d.height + "px";
                        this.markerWrapper_.style["left"] = c.x + d.width + "px";
                        var e = this.markerContent_.offsetHeight;
                        var f = this.markerContent_.offsetWidth;
                        if (f != this.get("width")) {
                            this.set("width", f);
                        }
                        if (e != this.get("height")) {
                            this.set("height", e);
                        }
                    };
                    j.prototype["draw"] = j.prototype.draw;
                    j.prototype.onRemove = function() {
                        if (this.markerWrapper_ && this.markerWrapper_.parentNode) {
                            this.markerWrapper_.parentNode.removeChild(this.markerWrapper_);
                        }
                        this.removeDragListeners_();
                    };
                    j.prototype["onRemove"] = j.prototype.onRemove;
                    var k = {
                        TOP_LEFT: 1,
                        TOP: 2,
                        TOP_RIGHT: 3,
                        LEFT: 4,
                        MIDDLE: 5,
                        RIGHT: 6,
                        BOTTOM_LEFT: 7,
                        BOTTOM: 8,
                        BOTTOM_RIGHT: 9
                    };
                    a["RichMarkerPosition"] = k;
                    a.InfoBox = f;
                    a.Cluster = c;
                    a.ClusterIcon = b;
                    a.MarkerClusterer = e;
                    a.MarkerLabel_ = h;
                    a.MarkerWithLabel = i;
                    a.RichMarker = j;
                }();
            })
        };
    });
    (function(a) {
        var b = {};
        function c(d) {
            if (b[d]) return b[d].exports;
            var e = b[d] = {
                exports: {},
                id: d,
                loaded: false
            };
            a[d].call(e.exports, e, e.exports, c);
            e.loaded = true;
            return e.exports;
        }
        c.m = a;
        c.c = b;
        c.p = "";
        return c(0);
    })([ function(a, c, d) {
        b.module("uiGmapgoogle-maps.wrapped").service("uiGmapDataStructures", function() {
            return {
                Graph: d(1).Graph,
                Queue: d(1).Queue
            };
        });
    }, function(a, b, c) {
        (function() {
            a.exports = {
                Graph: c(2),
                Heap: c(3),
                LinkedList: c(4),
                Map: c(5),
                Queue: c(6),
                RedBlackTree: c(7),
                Trie: c(8)
            };
        }).call(this);
    }, function(a, b) {
        (function() {
            var b, c = {}.hasOwnProperty;
            b = function() {
                function a() {
                    this._nodes = {};
                    this.nodeSize = 0;
                    this.edgeSize = 0;
                }
                a.prototype.addNode = function(a) {
                    if (!this._nodes[a]) {
                        this.nodeSize++;
                        return this._nodes[a] = {
                            _outEdges: {},
                            _inEdges: {}
                        };
                    }
                };
                a.prototype.getNode = function(a) {
                    return this._nodes[a];
                };
                a.prototype.removeNode = function(a) {
                    var b, d, e, f, g;
                    d = this._nodes[a];
                    if (!d) {
                        return;
                    } else {
                        f = d._outEdges;
                        for (e in f) {
                            if (!c.call(f, e)) continue;
                            this.removeEdge(a, e);
                        }
                        g = d._inEdges;
                        for (b in g) {
                            if (!c.call(g, b)) continue;
                            this.removeEdge(b, a);
                        }
                        this.nodeSize--;
                        delete this._nodes[a];
                    }
                    return d;
                };
                a.prototype.addEdge = function(a, b, c) {
                    var d, e, f;
                    if (c == null) {
                        c = 1;
                    }
                    if (this.getEdge(a, b)) {
                        return;
                    }
                    e = this._nodes[a];
                    f = this._nodes[b];
                    if (!e || !f) {
                        return;
                    }
                    d = {
                        weight: c
                    };
                    e._outEdges[b] = d;
                    f._inEdges[a] = d;
                    this.edgeSize++;
                    return d;
                };
                a.prototype.getEdge = function(a, b) {
                    var c, d;
                    c = this._nodes[a];
                    d = this._nodes[b];
                    if (!c || !d) {} else {
                        return c._outEdges[b];
                    }
                };
                a.prototype.removeEdge = function(a, b) {
                    var c, d, e;
                    d = this._nodes[a];
                    e = this._nodes[b];
                    c = this.getEdge(a, b);
                    if (!c) {
                        return;
                    }
                    delete d._outEdges[b];
                    delete e._inEdges[a];
                    this.edgeSize--;
                    return c;
                };
                a.prototype.getInEdgesOf = function(a) {
                    var b, d, e, f;
                    e = this._nodes[a];
                    d = [];
                    f = e != null ? e._inEdges : void 0;
                    for (b in f) {
                        if (!c.call(f, b)) continue;
                        d.push(this.getEdge(b, a));
                    }
                    return d;
                };
                a.prototype.getOutEdgesOf = function(a) {
                    var b, d, e, f;
                    b = this._nodes[a];
                    d = [];
                    f = b != null ? b._outEdges : void 0;
                    for (e in f) {
                        if (!c.call(f, e)) continue;
                        d.push(this.getEdge(a, e));
                    }
                    return d;
                };
                a.prototype.getAllEdgesOf = function(a) {
                    var b, c, d, e, f, g, h;
                    c = this.getInEdgesOf(a);
                    d = this.getOutEdgesOf(a);
                    if (c.length === 0) {
                        return d;
                    }
                    e = this.getEdge(a, a);
                    for (b = f = 0, g = c.length; 0 <= g ? f < g : f > g; b = 0 <= g ? ++f : --f) {
                        if (c[b] === e) {
                            h = [ c[c.length - 1], c[b] ], c[b] = h[0], c[c.length - 1] = h[1];
                            c.pop();
                            break;
                        }
                    }
                    return c.concat(d);
                };
                a.prototype.forEachNode = function(a) {
                    var b, d, e;
                    e = this._nodes;
                    for (b in e) {
                        if (!c.call(e, b)) continue;
                        d = e[b];
                        a(d, b);
                    }
                };
                a.prototype.forEachEdge = function(a) {
                    var b, d, e, f, g, h;
                    g = this._nodes;
                    for (d in g) {
                        if (!c.call(g, d)) continue;
                        e = g[d];
                        h = e._outEdges;
                        for (f in h) {
                            if (!c.call(h, f)) continue;
                            b = h[f];
                            a(b);
                        }
                    }
                };
                return a;
            }();
            a.exports = b;
        }).call(this);
    }, function(a, b) {
        (function() {
            var b, c, d, e;
            b = function() {
                function a(a) {
                    var b, c, d, e, f, g;
                    if (a == null) {
                        a = [];
                    }
                    this._data = [ void 0 ];
                    for (d = 0, f = a.length; d < f; d++) {
                        c = a[d];
                        if (c != null) {
                            this._data.push(c);
                        }
                    }
                    if (this._data.length > 1) {
                        for (b = e = 2, g = this._data.length; 2 <= g ? e < g : e > g; b = 2 <= g ? ++e : --e) {
                            this._upHeap(b);
                        }
                    }
                    this.size = this._data.length - 1;
                }
                a.prototype.add = function(a) {
                    if (a == null) {
                        return;
                    }
                    this._data.push(a);
                    this._upHeap(this._data.length - 1);
                    this.size++;
                    return a;
                };
                a.prototype.removeMin = function() {
                    var a;
                    if (this._data.length === 1) {
                        return;
                    }
                    this.size--;
                    if (this._data.length === 2) {
                        return this._data.pop();
                    }
                    a = this._data[1];
                    this._data[1] = this._data.pop();
                    this._downHeap();
                    return a;
                };
                a.prototype.peekMin = function() {
                    return this._data[1];
                };
                a.prototype._upHeap = function(a) {
                    var b, c;
                    b = this._data[a];
                    while (this._data[a] < this._data[d(a)] && a > 1) {
                        c = [ this._data[d(a)], this._data[a] ], this._data[a] = c[0], this._data[d(a)] = c[1];
                        a = d(a);
                    }
                };
                a.prototype._downHeap = function() {
                    var a, b, d;
                    a = 1;
                    while (c(a < this._data.length)) {
                        b = c(a);
                        if (b < this._data.length - 1) {
                            if (this._data[e(a)] < this._data[b]) {
                                b = e(a);
                            }
                        }
                        if (this._data[b] < this._data[a]) {
                            d = [ this._data[a], this._data[b] ], this._data[b] = d[0], this._data[a] = d[1];
                            a = b;
                        } else {
                            break;
                        }
                    }
                };
                return a;
            }();
            d = function(a) {
                return a >> 1;
            };
            c = function(a) {
                return a << 1;
            };
            e = function(a) {
                return (a << 1) + 1;
            };
            a.exports = b;
        }).call(this);
    }, function(a, b) {
        (function() {
            var b;
            b = function() {
                function a(a) {
                    var b, c, d;
                    if (a == null) {
                        a = [];
                    }
                    this.head = {
                        prev: void 0,
                        value: void 0,
                        next: void 0
                    };
                    this.tail = {
                        prev: void 0,
                        value: void 0,
                        next: void 0
                    };
                    this.size = 0;
                    for (c = 0, d = a.length; c < d; c++) {
                        b = a[c];
                        this.add(b);
                    }
                }
                a.prototype.at = function(a) {
                    var b, c, d, e, f;
                    if (!(-this.size <= a && a < this.size)) {
                        return;
                    }
                    a = this._adjust(a);
                    if (a * 2 < this.size) {
                        b = this.head;
                        for (c = d = 1; d <= a; c = d += 1) {
                            b = b.next;
                        }
                    } else {
                        b = this.tail;
                        for (c = e = 1, f = this.size - a - 1; e <= f; c = e += 1) {
                            b = b.prev;
                        }
                    }
                    return b;
                };
                a.prototype.add = function(a, b) {
                    var c, d, e, f, g;
                    if (b == null) {
                        b = this.size;
                    }
                    if (!(-this.size <= b && b <= this.size)) {
                        return;
                    }
                    d = {
                        value: a
                    };
                    b = this._adjust(b);
                    if (this.size === 0) {
                        this.head = d;
                    } else {
                        if (b === 0) {
                            e = [ d, this.head, d ], this.head.prev = e[0], d.next = e[1], this.head = e[2];
                        } else {
                            c = this.at(b - 1);
                            f = [ c.next, d, d, c ], d.next = f[0], (g = c.next) != null ? g.prev = f[1] : void 0, 
                            c.next = f[2], d.prev = f[3];
                        }
                    }
                    if (b === this.size) {
                        this.tail = d;
                    }
                    this.size++;
                    return a;
                };
                a.prototype.removeAt = function(a) {
                    var b, c, d;
                    if (a == null) {
                        a = this.size - 1;
                    }
                    if (!(-this.size <= a && a < this.size)) {
                        return;
                    }
                    if (this.size === 0) {
                        return;
                    }
                    a = this._adjust(a);
                    if (this.size === 1) {
                        c = this.head.value;
                        this.head.value = this.tail.value = void 0;
                    } else {
                        if (a === 0) {
                            c = this.head.value;
                            this.head = this.head.next;
                            this.head.prev = void 0;
                        } else {
                            b = this.at(a);
                            c = b.value;
                            b.prev.next = b.next;
                            if ((d = b.next) != null) {
                                d.prev = b.prev;
                            }
                            if (a === this.size - 1) {
                                this.tail = b.prev;
                            }
                        }
                    }
                    this.size--;
                    return c;
                };
                a.prototype.remove = function(a) {
                    var b;
                    if (a == null) {
                        return;
                    }
                    b = this.head;
                    while (b && b.value !== a) {
                        b = b.next;
                    }
                    if (!b) {
                        return;
                    }
                    if (this.size === 1) {
                        this.head.value = this.tail.value = void 0;
                    } else if (b === this.head) {
                        this.head = this.head.next;
                        this.head.prev = void 0;
                    } else if (b === this.tail) {
                        this.tail = this.tail.prev;
                        this.tail.next = void 0;
                    } else {
                        b.prev.next = b.next;
                        b.next.prev = b.prev;
                    }
                    this.size--;
                    return a;
                };
                a.prototype.indexOf = function(a, b) {
                    var c, d;
                    if (b == null) {
                        b = 0;
                    }
                    if (this.head.value == null && !this.head.next || b >= this.size) {
                        return -1;
                    }
                    b = Math.max(0, this._adjust(b));
                    c = this.at(b);
                    d = b;
                    while (c) {
                        if (c.value === a) {
                            break;
                        }
                        c = c.next;
                        d++;
                    }
                    if (d === this.size) {
                        return -1;
                    } else {
                        return d;
                    }
                };
                a.prototype._adjust = function(a) {
                    if (a < 0) {
                        return this.size + a;
                    } else {
                        return a;
                    }
                };
                return a;
            }();
            a.exports = b;
        }).call(this);
    }, function(a, b) {
        (function() {
            var b, c, d, e, f = {}.hasOwnProperty;
            c = "_mapId_";
            b = function() {
                a._mapIdTracker = 0;
                a._newMapId = function() {
                    return this._mapIdTracker++;
                };
                function a(b) {
                    var c, d;
                    this._content = {};
                    this._itemId = 0;
                    this._id = a._newMapId();
                    this.size = 0;
                    for (c in b) {
                        if (!f.call(b, c)) continue;
                        d = b[c];
                        this.set(c, d);
                    }
                }
                a.prototype.hash = function(a, b) {
                    var f, g;
                    if (b == null) {
                        b = false;
                    }
                    g = d(a);
                    if (e(a)) {
                        f = c + this._id;
                        if (b && !a[f]) {
                            a[f] = this._itemId++;
                        }
                        return f + "_" + a[f];
                    } else {
                        return g + "_" + a;
                    }
                };
                a.prototype.set = function(a, b) {
                    if (!this.has(a)) {
                        this.size++;
                    }
                    this._content[this.hash(a, true)] = [ b, a ];
                    return b;
                };
                a.prototype.get = function(a) {
                    var b;
                    return (b = this._content[this.hash(a)]) != null ? b[0] : void 0;
                };
                a.prototype.has = function(a) {
                    return this.hash(a) in this._content;
                };
                a.prototype["delete"] = function(a) {
                    var b;
                    b = this.hash(a);
                    if (b in this._content) {
                        delete this._content[b];
                        if (e(a)) {
                            delete a[c + this._id];
                        }
                        this.size--;
                        return true;
                    }
                    return false;
                };
                a.prototype.forEach = function(a) {
                    var b, c, d;
                    d = this._content;
                    for (b in d) {
                        if (!f.call(d, b)) continue;
                        c = d[b];
                        a(c[1], c[0]);
                    }
                };
                return a;
            }();
            e = function(a) {
                var b, c, e, f, g;
                b = [ "Boolean", "Number", "String", "Undefined", "Null", "RegExp", "Function" ];
                e = d(a);
                for (f = 0, g = b.length; f < g; f++) {
                    c = b[f];
                    if (e === c) {
                        return false;
                    }
                }
                return true;
            };
            d = function(a) {
                return Object.prototype.toString.apply(a).match(/\[object (.+)\]/)[1];
            };
            a.exports = b;
        }).call(this);
    }, function(a, b) {
        (function() {
            var b;
            b = function() {
                function a(a) {
                    if (a == null) {
                        a = [];
                    }
                    this._content = a;
                    this._dequeueIndex = 0;
                    this.size = this._content.length;
                }
                a.prototype.enqueue = function(a) {
                    this.size++;
                    this._content.push(a);
                    return a;
                };
                a.prototype.dequeue = function() {
                    var a;
                    if (this.size === 0) {
                        return;
                    }
                    this.size--;
                    a = this._content[this._dequeueIndex];
                    this._dequeueIndex++;
                    if (this._dequeueIndex * 2 > this._content.length) {
                        this._content = this._content.slice(this._dequeueIndex);
                        this._dequeueIndex = 0;
                    }
                    return a;
                };
                a.prototype.peek = function() {
                    return this._content[this._dequeueIndex];
                };
                return a;
            }();
            a.exports = b;
        }).call(this);
    }, function(a, b) {
        (function() {
            var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p;
            c = 0;
            d = 1;
            e = 2;
            h = 3;
            f = 1;
            b = 2;
            g = function() {
                function a(a) {
                    var b, c, d;
                    if (a == null) {
                        a = [];
                    }
                    this._root;
                    this.size = 0;
                    for (c = 0, d = a.length; c < d; c++) {
                        b = a[c];
                        if (b != null) {
                            this.add(b);
                        }
                    }
                }
                a.prototype.add = function(a) {
                    var g, l, m, n;
                    if (a == null) {
                        return;
                    }
                    this.size++;
                    m = {
                        value: a,
                        _color: f
                    };
                    if (!this._root) {
                        this._root = m;
                    } else {
                        l = i(this._root, function(b) {
                            if (a === b.value) {
                                return c;
                            } else {
                                if (a < b.value) {
                                    if (b._left) {
                                        return d;
                                    } else {
                                        m._parent = b;
                                        b._left = m;
                                        return h;
                                    }
                                } else {
                                    if (b._right) {
                                        return e;
                                    } else {
                                        m._parent = b;
                                        b._right = m;
                                        return h;
                                    }
                                }
                            }
                        });
                        if (l != null) {
                            return;
                        }
                    }
                    g = m;
                    while (true) {
                        if (g === this._root) {
                            g._color = b;
                            break;
                        }
                        if (g._parent._color === b) {
                            break;
                        }
                        if (((n = p(g)) != null ? n._color : void 0) === f) {
                            g._parent._color = b;
                            p(g)._color = b;
                            j(g)._color = f;
                            g = j(g);
                            continue;
                        }
                        if (!k(g) && k(g._parent)) {
                            this._rotateLeft(g._parent);
                            g = g._left;
                        } else if (k(g) && !k(g._parent)) {
                            this._rotateRight(g._parent);
                            g = g._right;
                        }
                        g._parent._color = b;
                        j(g)._color = f;
                        if (k(g)) {
                            this._rotateRight(j(g));
                        } else {
                            this._rotateLeft(j(g));
                        }
                        break;
                    }
                    return a;
                };
                a.prototype.has = function(a) {
                    var b;
                    b = i(this._root, function(b) {
                        if (a === b.value) {
                            return c;
                        } else if (a < b.value) {
                            return d;
                        } else {
                            return e;
                        }
                    });
                    if (b) {
                        return true;
                    } else {
                        return false;
                    }
                };
                a.prototype.peekMin = function() {
                    var a;
                    return (a = n(this._root)) != null ? a.value : void 0;
                };
                a.prototype.peekMax = function() {
                    var a;
                    return (a = m(this._root)) != null ? a.value : void 0;
                };
                a.prototype.remove = function(a) {
                    var b;
                    b = i(this._root, function(b) {
                        if (a === b.value) {
                            return c;
                        } else if (a < b.value) {
                            return d;
                        } else {
                            return e;
                        }
                    });
                    if (!b) {
                        return;
                    }
                    this._removeNode(this._root, b);
                    this.size--;
                    return a;
                };
                a.prototype.removeMin = function() {
                    var a, b;
                    a = n(this._root);
                    if (!a) {
                        return;
                    }
                    b = a.value;
                    this._removeNode(this._root, a);
                    return b;
                };
                a.prototype.removeMax = function() {
                    var a, b;
                    a = m(this._root);
                    if (!a) {
                        return;
                    }
                    b = a.value;
                    this._removeNode(this._root, a);
                    return b;
                };
                a.prototype._removeNode = function(a, c) {
                    var d, e, g, h, i, j, m, p, q, r;
                    if (c._left && c._right) {
                        e = n(c._right);
                        c.value = e.value;
                        c = e;
                    }
                    e = c._left || c._right;
                    if (!e) {
                        e = {
                            color: b,
                            _right: void 0,
                            _left: void 0,
                            isLeaf: true
                        };
                    }
                    e._parent = c._parent;
                    if ((g = c._parent) != null) {
                        g[l(c)] = e;
                    }
                    if (c._color === b) {
                        if (e._color === f) {
                            e._color = b;
                            if (!e._parent) {
                                this._root = e;
                            }
                        } else {
                            while (true) {
                                if (!e._parent) {
                                    if (!e.isLeaf) {
                                        this._root = e;
                                    } else {
                                        this._root = void 0;
                                    }
                                    break;
                                }
                                d = o(e);
                                if ((d != null ? d._color : void 0) === f) {
                                    e._parent._color = f;
                                    d._color = b;
                                    if (k(e)) {
                                        this._rotateLeft(e._parent);
                                    } else {
                                        this._rotateRight(e._parent);
                                    }
                                }
                                d = o(e);
                                if (e._parent._color === b && (!d || d._color === b && (!d._left || d._left._color === b) && (!d._right || d._right._color === b))) {
                                    if (d != null) {
                                        d._color = f;
                                    }
                                    if (e.isLeaf) {
                                        e._parent[l(e)] = void 0;
                                    }
                                    e = e._parent;
                                    continue;
                                }
                                if (e._parent._color === f && (!d || d._color === b && (!d._left || ((h = d._left) != null ? h._color : void 0) === b) && (!d._right || ((i = d._right) != null ? i._color : void 0) === b))) {
                                    if (d != null) {
                                        d._color = f;
                                    }
                                    e._parent._color = b;
                                    break;
                                }
                                if ((d != null ? d._color : void 0) === b) {
                                    if (k(e) && (!d._right || d._right._color === b) && ((j = d._left) != null ? j._color : void 0) === f) {
                                        d._color = f;
                                        if ((m = d._left) != null) {
                                            m._color = b;
                                        }
                                        this._rotateRight(d);
                                    } else if (!k(e) && (!d._left || d._left._color === b) && ((p = d._right) != null ? p._color : void 0) === f) {
                                        d._color = f;
                                        if ((q = d._right) != null) {
                                            q._color = b;
                                        }
                                        this._rotateLeft(d);
                                    }
                                    break;
                                }
                                d = o(e);
                                d._color = e._parent._color;
                                if (k(e)) {
                                    d._right._color = b;
                                    this._rotateRight(e._parent);
                                } else {
                                    d._left._color = b;
                                    this._rotateLeft(e._parent);
                                }
                            }
                        }
                    }
                    if (e.isLeaf) {
                        return (r = e._parent) != null ? r[l(e)] = void 0 : void 0;
                    }
                };
                a.prototype._rotateLeft = function(a) {
                    var b, c;
                    if ((b = a._parent) != null) {
                        b[l(a)] = a._right;
                    }
                    a._right._parent = a._parent;
                    a._parent = a._right;
                    a._right = a._right._left;
                    a._parent._left = a;
                    if ((c = a._right) != null) {
                        c._parent = a;
                    }
                    if (a._parent._parent == null) {
                        return this._root = a._parent;
                    }
                };
                a.prototype._rotateRight = function(a) {
                    var b, c;
                    if ((b = a._parent) != null) {
                        b[l(a)] = a._left;
                    }
                    a._left._parent = a._parent;
                    a._parent = a._left;
                    a._left = a._left._right;
                    a._parent._right = a;
                    if ((c = a._left) != null) {
                        c._parent = a;
                    }
                    if (a._parent._parent == null) {
                        return this._root = a._parent;
                    }
                };
                return a;
            }();
            k = function(a) {
                return a === a._parent._left;
            };
            l = function(a) {
                if (k(a)) {
                    return "_left";
                } else {
                    return "_right";
                }
            };
            i = function(a, b) {
                var f, g, i;
                g = a;
                i = void 0;
                while (g) {
                    f = b(g);
                    if (f === c) {
                        i = g;
                        break;
                    }
                    if (f === d) {
                        g = g._left;
                    } else if (f === e) {
                        g = g._right;
                    } else if (f === h) {
                        break;
                    }
                }
                return i;
            };
            n = function(a) {
                return i(a, function(a) {
                    if (a._left) {
                        return d;
                    } else {
                        return c;
                    }
                });
            };
            m = function(a) {
                return i(a, function(a) {
                    if (a._right) {
                        return e;
                    } else {
                        return c;
                    }
                });
            };
            j = function(a) {
                var b;
                return (b = a._parent) != null ? b._parent : void 0;
            };
            p = function(a) {
                if (!j(a)) {
                    return;
                }
                if (k(a._parent)) {
                    return j(a)._right;
                } else {
                    return j(a)._left;
                }
            };
            o = function(a) {
                if (k(a)) {
                    return a._parent._right;
                } else {
                    return a._parent._left;
                }
            };
            a.exports = g;
        }).call(this);
    }, function(a, b, c) {
        (function() {
            var b, d, e, f, g = {}.hasOwnProperty;
            b = c(6);
            e = "end";
            d = function() {
                function a(a) {
                    var b, c, d;
                    if (a == null) {
                        a = [];
                    }
                    this._root = {};
                    this.size = 0;
                    for (c = 0, d = a.length; c < d; c++) {
                        b = a[c];
                        this.add(b);
                    }
                }
                a.prototype.add = function(a) {
                    var b, c, d, f;
                    if (a == null) {
                        return;
                    }
                    this.size++;
                    b = this._root;
                    for (d = 0, f = a.length; d < f; d++) {
                        c = a[d];
                        if (b[c] == null) {
                            b[c] = {};
                        }
                        b = b[c];
                    }
                    b[e] = true;
                    return a;
                };
                a.prototype.has = function(a) {
                    var b, c, d, f;
                    if (a == null) {
                        return false;
                    }
                    b = this._root;
                    for (d = 0, f = a.length; d < f; d++) {
                        c = a[d];
                        if (b[c] == null) {
                            return false;
                        }
                        b = b[c];
                    }
                    if (b[e]) {
                        return true;
                    } else {
                        return false;
                    }
                };
                a.prototype.longestPrefixOf = function(a) {
                    var b, c, d, e, f;
                    if (a == null) {
                        return "";
                    }
                    b = this._root;
                    d = "";
                    for (e = 0, f = a.length; e < f; e++) {
                        c = a[e];
                        if (b[c] == null) {
                            break;
                        }
                        d += c;
                        b = b[c];
                    }
                    return d;
                };
                a.prototype.wordsWithPrefix = function(a) {
                    var c, d, f, h, i, j, k, l, m, n;
                    if (a == null) {
                        return [];
                    }
                    a != null || (a = "");
                    k = [];
                    d = this._root;
                    for (l = 0, m = a.length; l < m; l++) {
                        f = a[l];
                        d = d[f];
                        if (d == null) {
                            return [];
                        }
                    }
                    i = new b();
                    i.enqueue([ d, "" ]);
                    while (i.size !== 0) {
                        n = i.dequeue(), h = n[0], c = n[1];
                        if (h[e]) {
                            k.push(a + c);
                        }
                        for (f in h) {
                            if (!g.call(h, f)) continue;
                            j = h[f];
                            i.enqueue([ j, c + f ]);
                        }
                    }
                    return k;
                };
                a.prototype.remove = function(a) {
                    var b, c, d, g, h, i, j, k;
                    if (a == null) {
                        return;
                    }
                    b = this._root;
                    g = [];
                    for (h = 0, j = a.length; h < j; h++) {
                        d = a[h];
                        if (b[d] == null) {
                            return;
                        }
                        b = b[d];
                        g.push([ d, b ]);
                    }
                    if (!b[e]) {
                        return;
                    }
                    this.size--;
                    delete b[e];
                    if (f(b, 1)) {
                        return a;
                    }
                    for (c = i = k = g.length - 1; k <= 1 ? i <= 1 : i >= 1; c = k <= 1 ? ++i : --i) {
                        if (!f(g[c][1], 1)) {
                            delete g[c - 1][1][g[c][0]];
                        } else {
                            break;
                        }
                    }
                    if (!f(this._root[g[0][0]], 1)) {
                        delete this._root[g[0][0]];
                    }
                    return a;
                };
                return a;
            }();
            f = function(a, b) {
                var c, d;
                if (b === 0) {
                    return true;
                }
                d = 0;
                for (c in a) {
                    if (!g.call(a, c)) continue;
                    d++;
                    if (d >= b) {
                        return true;
                    }
                }
                return false;
            };
            a.exports = d;
        }).call(this);
    } ]);
    b.module("uiGmapgoogle-maps.wrapped").service("uiGmapMarkerSpiderfier", [ "uiGmapGoogleMapApi", function(b) {
        var c = this;
        +function() {
            var b = {}.hasOwnProperty, c = [].slice;
            this["OverlappingMarkerSpiderfier"] = function() {
                var d, e, f, g, h, i, j, k, l, m, n;
                k = o.prototype;
                l = [ o, k ];
                for (f = 0, i = l.length; f < i; f++) {
                    n = l[f];
                    n["VERSION"] = "0.3.3";
                }
                e = void 0;
                d = void 0;
                j = void 0;
                m = Math.PI * 2;
                k["keepSpiderfied"] = false;
                k["markersWontHide"] = false;
                k["markersWontMove"] = false;
                k["nearbyDistance"] = 20;
                k["circleSpiralSwitchover"] = 9;
                k["circleFootSeparation"] = 23;
                k["circleStartAngle"] = m / 12;
                k["spiralFootSeparation"] = 26;
                k["spiralLengthStart"] = 11;
                k["spiralLengthFactor"] = 4;
                k["spiderfiedZIndex"] = 1e3;
                k["usualLegZIndex"] = 10;
                k["highlightedLegZIndex"] = 20;
                k["event"] = "click";
                k["minZoomLevel"] = false;
                k["legWeight"] = 1.5;
                k["legColors"] = {
                    usual: {},
                    highlighted: {}
                };
                h = k["legColors"]["usual"];
                g = k["legColors"]["highlighted"];
                o["initializeGoogleMaps"] = function(a) {
                    e = a.maps;
                    d = e.event;
                    j = e.MapTypeId;
                    h[j.HYBRID] = h[j.SATELLITE] = "#fff";
                    g[j.HYBRID] = g[j.SATELLITE] = "#f00";
                    h[j.TERRAIN] = h[j.ROADMAP] = "#444";
                    g[j.TERRAIN] = g[j.ROADMAP] = "#f00";
                    this.ProjHelper = function(a) {
                        return this.setMap(a);
                    };
                    this.ProjHelper.prototype = new e.OverlayView();
                    return this.ProjHelper.prototype["draw"] = function() {};
                };
                function o(a, c) {
                    var e, f, g, h, i, j;
                    this.map = a;
                    if (c == null) {
                        c = {};
                    }
                    for (f in c) {
                        if (!b.call(c, f)) continue;
                        j = c[f];
                        this[f] = j;
                    }
                    this.projHelper = new this.constructor.ProjHelper(this.map);
                    this.initMarkerArrays();
                    this.listeners = {};
                    i = [ "click", "zoom_changed", "maptypeid_changed" ];
                    for (g = 0, h = i.length; g < h; g++) {
                        e = i[g];
                        d.addListener(this.map, e, function(a) {
                            return function() {
                                return a["unspiderfy"]();
                            };
                        }(this));
                    }
                }
                k.initMarkerArrays = function() {
                    this.markers = [];
                    return this.markerListenerRefs = [];
                };
                k["addMarker"] = function(a) {
                    var b;
                    if (a["_oms"] != null) {
                        return this;
                    }
                    a["_oms"] = true;
                    b = [ d.addListener(a, this["event"], function(b) {
                        return function(c) {
                            return b.spiderListener(a, c);
                        };
                    }(this)) ];
                    if (!this["markersWontHide"]) {
                        b.push(d.addListener(a, "visible_changed", function(b) {
                            return function() {
                                return b.markerChangeListener(a, false);
                            };
                        }(this)));
                    }
                    if (!this["markersWontMove"]) {
                        b.push(d.addListener(a, "position_changed", function(b) {
                            return function() {
                                return b.markerChangeListener(a, true);
                            };
                        }(this)));
                    }
                    this.markerListenerRefs.push(b);
                    this.markers.push(a);
                    return this;
                };
                k.markerChangeListener = function(a, b) {
                    if (a["_omsData"] != null && (b || !a.getVisible()) && !(this.spiderfying != null || this.unspiderfying != null)) {
                        return this["unspiderfy"](b ? a : null);
                    }
                };
                k["getMarkers"] = function() {
                    return this.markers.slice(0);
                };
                k["removeMarker"] = function(a) {
                    var b, c, e, f, g;
                    if (a["_omsData"] != null) {
                        this["unspiderfy"]();
                    }
                    b = this.arrIndexOf(this.markers, a);
                    if (b < 0) {
                        return this;
                    }
                    g = this.markerListenerRefs.splice(b, 1)[0];
                    for (c = 0, e = g.length; c < e; c++) {
                        f = g[c];
                        d.removeListener(f);
                    }
                    delete a["_oms"];
                    this.markers.splice(b, 1);
                    return this;
                };
                k["clearMarkers"] = function() {
                    var a, b, c, e, f, g, h, i, j;
                    this["unspiderfy"]();
                    j = this.markers;
                    for (a = b = 0, c = j.length; b < c; a = ++b) {
                        h = j[a];
                        g = this.markerListenerRefs[a];
                        for (i = 0, e = g.length; i < e; i++) {
                            f = g[i];
                            d.removeListener(f);
                        }
                        delete h["_oms"];
                    }
                    this.initMarkerArrays();
                    return this;
                };
                k["addListener"] = function(a, b) {
                    var c;
                    ((c = this.listeners)[a] != null ? c[a] : c[a] = []).push(b);
                    return this;
                };
                k["removeListener"] = function(a, b) {
                    var c;
                    c = this.arrIndexOf(this.listeners[a], b);
                    if (!(c < 0)) {
                        this.listeners[a].splice(c, 1);
                    }
                    return this;
                };
                k["clearListeners"] = function(a) {
                    this.listeners[a] = [];
                    return this;
                };
                k.trigger = function() {
                    var a, b, d, e, f, g, h, i;
                    b = arguments[0], a = 2 <= arguments.length ? c.call(arguments, 1) : [];
                    h = (g = this.listeners[b]) != null ? g : [];
                    i = [];
                    for (e = 0, f = h.length; e < f; e++) {
                        d = h[e];
                        i.push(d.apply(null, a));
                    }
                    return i;
                };
                k.generatePtsCircle = function(a, b) {
                    var c, d, f, g, h, i, j, k;
                    f = this["circleFootSeparation"] * (2 + a);
                    i = f / m;
                    d = m / a;
                    k = [];
                    for (g = h = 0, j = a; 0 <= j ? h < j : h > j; g = 0 <= j ? ++h : --h) {
                        c = this["circleStartAngle"] + g * d;
                        k.push(new e.Point(b.x + i * Math.cos(c), b.y + i * Math.sin(c)));
                    }
                    return k;
                };
                k.generatePtsSpiral = function(a, b) {
                    var c, d, f, g, h, i, j;
                    g = this["spiralLengthStart"];
                    c = 0;
                    j = [];
                    for (d = f = 0, i = a; 0 <= i ? f < i : f > i; d = 0 <= i ? ++f : --f) {
                        c += this["spiralFootSeparation"] / g + d * 5e-4;
                        h = new e.Point(b.x + g * Math.cos(c), b.y + g * Math.sin(c));
                        g += m * this["spiralLengthFactor"] / c;
                        j.push(h);
                    }
                    return j;
                };
                k.spiderListener = function(b, c) {
                    var d, e, f, g, h, i, j, l, m, n, o, p, q;
                    l = b["_omsData"] != null;
                    if (!(l && this["keepSpiderfied"])) {
                        if (this["event"] === "mouseover") {
                            d = this;
                            e = function() {
                                return d["unspiderfy"]();
                            };
                            a.clearTimeout(k.timeout);
                            k.timeout = setTimeout(e, 3e3);
                        } else {
                            this["unspiderfy"]();
                        }
                    }
                    if (l || this.map.getStreetView().getVisible() || this.map.getMapTypeId() === "GoogleEarthAPI") {
                        return this.trigger("click", b, c);
                    } else {
                        n = [];
                        o = [];
                        m = this["nearbyDistance"];
                        p = m * m;
                        j = this.llToPt(b.position);
                        q = this.markers;
                        for (f = 0, g = q.length; f < g; f++) {
                            h = q[f];
                            if (!(h.map != null && h.getVisible())) {
                                continue;
                            }
                            i = this.llToPt(h.position);
                            if (this.ptDistanceSq(i, j) < p) {
                                n.push({
                                    marker: h,
                                    markerPt: i
                                });
                            } else {
                                o.push(h);
                            }
                        }
                        if (n.length === 1) {
                            return this.trigger("click", b, c);
                        } else {
                            return this.spiderfy(n, o);
                        }
                    }
                };
                k["markersNearMarker"] = function(a, b) {
                    var c, d, e, f, g, h, i, j, k, l, m;
                    if (b == null) {
                        b = false;
                    }
                    if (this.projHelper.getProjection() == null) {
                        throw "Must wait for 'idle' event on map before calling markersNearMarker";
                    }
                    i = this["nearbyDistance"];
                    j = i * i;
                    g = this.llToPt(a.position);
                    h = [];
                    k = this.markers;
                    for (c = 0, d = k.length; c < d; c++) {
                        e = k[c];
                        if (e === a || e.map == null || !e.getVisible()) {
                            continue;
                        }
                        f = this.llToPt((l = (m = e["_omsData"]) != null ? m.usualPosition : void 0) != null ? l : e.position);
                        if (this.ptDistanceSq(f, g) < j) {
                            h.push(e);
                            if (b) {
                                break;
                            }
                        }
                    }
                    return h;
                };
                k["markersNearAnyOtherMarker"] = function() {
                    var a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u;
                    if (this.projHelper.getProjection() == null) {
                        throw "Must wait for 'idle' event on map before calling markersNearAnyOtherMarker";
                    }
                    o = this["nearbyDistance"];
                    p = o * o;
                    m = function() {
                        var a, b, c, d, e, f;
                        c = this.markers;
                        f = [];
                        for (a = 0, b = c.length; a < b; a++) {
                            h = c[a];
                            f.push({
                                pt: this.llToPt((d = (e = h["_omsData"]) != null ? e.usualPosition : void 0) != null ? d : h.position),
                                willSpiderfy: false
                            });
                        }
                        return f;
                    }.call(this);
                    r = this.markers;
                    for (b = d = 0, e = r.length; d < e; b = ++d) {
                        i = r[b];
                        if (!(i.map != null && i.getVisible())) {
                            continue;
                        }
                        j = m[b];
                        if (j.willSpiderfy) {
                            continue;
                        }
                        s = this.markers;
                        for (c = n = 0, f = s.length; n < f; c = ++n) {
                            k = s[c];
                            if (c === b) {
                                continue;
                            }
                            if (!(k.map != null && k.getVisible())) {
                                continue;
                            }
                            l = m[c];
                            if (c < b && !l.willSpiderfy) {
                                continue;
                            }
                            if (this.ptDistanceSq(j.pt, l.pt) < p) {
                                j.willSpiderfy = l.willSpiderfy = true;
                                break;
                            }
                        }
                    }
                    t = this.markers;
                    u = [];
                    for (a = q = 0, g = t.length; q < g; a = ++q) {
                        h = t[a];
                        if (m[a].willSpiderfy) {
                            u.push(h);
                        }
                    }
                    return u;
                };
                k.makeHighlightListenerFuncs = function(a) {
                    return {
                        highlight: function(b) {
                            return function() {
                                return a["_omsData"].leg.setOptions({
                                    strokeColor: b["legColors"]["highlighted"][b.map.mapTypeId],
                                    zIndex: b["highlightedLegZIndex"]
                                });
                            };
                        }(this),
                        unhighlight: function(b) {
                            return function() {
                                return a["_omsData"].leg.setOptions({
                                    strokeColor: b["legColors"]["usual"][b.map.mapTypeId],
                                    zIndex: b["usualLegZIndex"]
                                });
                            };
                        }(this)
                    };
                };
                k.spiderfy = function(a, b) {
                    var c, f, g, h, i, j, k, l, m, n, o;
                    if (this["minZoomLevel"] && this.map.getZoom() < this["minZoomLevel"]) {
                        return false;
                    }
                    this.spiderfying = true;
                    n = a.length;
                    c = this.ptAverage(function() {
                        var b, c, d;
                        d = [];
                        for (b = 0, c = a.length; b < c; b++) {
                            l = a[b];
                            d.push(l.markerPt);
                        }
                        return d;
                    }());
                    h = n >= this["circleSpiralSwitchover"] ? this.generatePtsSpiral(n, c).reverse() : this.generatePtsCircle(n, c);
                    o = function() {
                        var b, c, l;
                        l = [];
                        for (b = 0, c = h.length; b < c; b++) {
                            g = h[b];
                            f = this.ptToLl(g);
                            m = this.minExtract(a, function(a) {
                                return function(b) {
                                    return a.ptDistanceSq(b.markerPt, g);
                                };
                            }(this));
                            k = m.marker;
                            j = new e.Polyline({
                                map: this.map,
                                path: [ k.position, f ],
                                strokeColor: this["legColors"]["usual"][this.map.mapTypeId],
                                strokeWeight: this["legWeight"],
                                zIndex: this["usualLegZIndex"]
                            });
                            k["_omsData"] = {
                                usualPosition: k.position,
                                leg: j
                            };
                            if (this["legColors"]["highlighted"][this.map.mapTypeId] !== this["legColors"]["usual"][this.map.mapTypeId]) {
                                i = this.makeHighlightListenerFuncs(k);
                                k["_omsData"].hightlightListeners = {
                                    highlight: d.addListener(k, "mouseover", i.highlight),
                                    unhighlight: d.addListener(k, "mouseout", i.unhighlight)
                                };
                            }
                            k.setPosition(f);
                            k.setZIndex(Math.round(this["spiderfiedZIndex"] + g.y));
                            l.push(k);
                        }
                        return l;
                    }.call(this);
                    delete this.spiderfying;
                    this.spiderfied = true;
                    return this.trigger("spiderfy", o, b);
                };
                k["unspiderfy"] = function(a) {
                    var b, c, e, f, g, h, i;
                    if (a == null) {
                        a = null;
                    }
                    if (this.spiderfied == null) {
                        return this;
                    }
                    this.unspiderfying = true;
                    i = [];
                    g = [];
                    h = this.markers;
                    for (b = 0, c = h.length; b < c; b++) {
                        f = h[b];
                        if (f["_omsData"] != null) {
                            f["_omsData"].leg.setMap(null);
                            if (f !== a) {
                                f.setPosition(f["_omsData"].usualPosition);
                            }
                            f.setZIndex(null);
                            e = f["_omsData"].hightlightListeners;
                            if (e != null) {
                                d.removeListener(e.highlight);
                                d.removeListener(e.unhighlight);
                            }
                            delete f["_omsData"];
                            i.push(f);
                        } else {
                            g.push(f);
                        }
                    }
                    delete this.unspiderfying;
                    delete this.spiderfied;
                    this.trigger("unspiderfy", i, g);
                    return this;
                };
                k.ptDistanceSq = function(a, b) {
                    var c, d;
                    c = a.x - b.x;
                    d = a.y - b.y;
                    return c * c + d * d;
                };
                k.ptAverage = function(a) {
                    var b, c, d, f, g, h;
                    g = h = 0;
                    for (b = 0, c = a.length; b < c; b++) {
                        f = a[b];
                        g += f.x;
                        h += f.y;
                    }
                    d = a.length;
                    return new e.Point(g / d, h / d);
                };
                k.llToPt = function(a) {
                    return this.projHelper.getProjection().fromLatLngToDivPixel(a);
                };
                k.ptToLl = function(a) {
                    return this.projHelper.getProjection().fromDivPixelToLatLng(a);
                };
                k.minExtract = function(a, b) {
                    var c, d, e, f, g, h, i;
                    for (e = g = 0, h = a.length; g < h; e = ++g) {
                        f = a[e];
                        i = b(f);
                        if (typeof c === "undefined" || c === null || i < d) {
                            d = i;
                            c = e;
                        }
                    }
                    return a.splice(c, 1)[0];
                };
                k.arrIndexOf = function(a, b) {
                    var c, d, e, f;
                    if (a.indexOf != null) {
                        return a.indexOf(b);
                    }
                    for (c = d = 0, e = a.length; d < e; c = ++d) {
                        f = a[c];
                        if (f === b) {
                            return c;
                        }
                    }
                    return -1;
                };
                return o;
            }();
        }.apply(c);
        b.then(function() {
            c.OverlappingMarkerSpiderfier.initializeGoogleMaps(a.google);
        });
        return this.OverlappingMarkerSpiderfier;
    } ]);
    b.module("uiGmapgoogle-maps.extensions").service("uiGmapExtendMarkerClusterer", [ "uiGmapLodash", "uiGmapPropMap", function(b, d) {
        return {
            init: c.once(function() {
                (function() {
                    var c = {}.hasOwnProperty, e = function(a, b) {
                        for (var d in b) {
                            if (c.call(b, d)) a[d] = b[d];
                        }
                        function e() {
                            this.constructor = a;
                        }
                        e.prototype = b.prototype;
                        a.prototype = new e();
                        a.__super__ = b.prototype;
                        return a;
                    };
                    a.NgMapCluster = function(a) {
                        e(c, a);
                        function c(a) {
                            c.__super__.constructor.call(this, a);
                            this.markers_ = new d();
                        }
                        c.prototype.addMarker = function(a) {
                            var b;
                            var c;
                            var d;
                            if (this.isMarkerAlreadyAdded_(a)) {
                                var e = this.markers_.get(a.key);
                                if (e.getPosition().lat() == a.getPosition().lat() && e.getPosition().lon() == a.getPosition().lon()) return false;
                            }
                            if (!this.center_) {
                                this.center_ = a.getPosition();
                                this.calculateBounds_();
                            } else {
                                if (this.averageCenter_) {
                                    var f = this.markers_.length + 1;
                                    var g = (this.center_.lat() * (f - 1) + a.getPosition().lat()) / f;
                                    var h = (this.center_.lng() * (f - 1) + a.getPosition().lng()) / f;
                                    this.center_ = new google.maps.LatLng(g, h);
                                    this.calculateBounds_();
                                }
                            }
                            a.isAdded = true;
                            this.markers_.push(a);
                            c = this.markers_.length;
                            d = this.markerClusterer_.getMaxZoom();
                            if (d !== null && this.map_.getZoom() > d) {
                                if (a.getMap() !== this.map_) {
                                    a.setMap(this.map_);
                                }
                            } else if (c < this.minClusterSize_) {
                                if (a.getMap() !== this.map_) {
                                    a.setMap(this.map_);
                                }
                            } else if (c === this.minClusterSize_) {
                                this.markers_.each(function(a) {
                                    a.setMap(null);
                                });
                            } else {
                                a.setMap(null);
                            }
                            return true;
                        };
                        c.prototype.isMarkerAlreadyAdded_ = function(a) {
                            return b.isNullOrUndefined(this.markers_.get(a.key));
                        };
                        c.prototype.getBounds = function() {
                            var a;
                            var b = new google.maps.LatLngBounds(this.center_, this.center_);
                            this.getMarkers().each(function(a) {
                                b.extend(a.getPosition());
                            });
                            return b;
                        };
                        c.prototype.remove = function() {
                            this.clusterIcon_.setMap(null);
                            this.markers_ = new d();
                            delete this.markers_;
                        };
                        return c;
                    }(Cluster);
                    a.NgMapMarkerClusterer = function(a) {
                        e(b, a);
                        function b(a, c, e) {
                            b.__super__.constructor.call(this, a, c, e);
                            this.markers_ = new d();
                        }
                        b.prototype.clearMarkers = function() {
                            this.resetViewport_(true);
                            this.markers_ = new d();
                        };
                        b.prototype.removeMarker_ = function(a) {
                            if (!this.markers_.get(a.key)) {
                                return false;
                            }
                            a.setMap(null);
                            this.markers_.remove(a.key);
                            return true;
                        };
                        b.prototype.createClusters_ = function(a) {
                            var b, c;
                            var d;
                            var e = this;
                            if (!this.ready_) {
                                return;
                            }
                            if (a === 0) {
                                google.maps.event.trigger(this, "clusteringbegin", this);
                                if (typeof this.timerRefStatic !== "undefined") {
                                    clearTimeout(this.timerRefStatic);
                                    delete this.timerRefStatic;
                                }
                            }
                            if (this.getMap().getZoom() > 3) {
                                d = new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(), this.getMap().getBounds().getNorthEast());
                            } else {
                                d = new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));
                            }
                            var f = this.getExtendedBounds(d);
                            var g = Math.min(a + this.batchSize_, this.markers_.length);
                            var h = this.markers_.values();
                            for (b = a; b < g; b++) {
                                c = h[b];
                                if (!c.isAdded && this.isMarkerInBounds_(c, f)) {
                                    if (!this.ignoreHidden_ || this.ignoreHidden_ && c.getVisible()) {
                                        this.addToClosestCluster_(c);
                                    }
                                }
                            }
                            if (g < this.markers_.length) {
                                this.timerRefStatic = setTimeout(function() {
                                    e.createClusters_(g);
                                }, 0);
                            } else {
                                for (b = 0; b < this.clusters_.length; b++) {
                                    this.clusters_[b].updateIcon_();
                                }
                                delete this.timerRefStatic;
                                google.maps.event.trigger(this, "clusteringend", this);
                            }
                        };
                        b.prototype.addToClosestCluster_ = function(a) {
                            var b, c, d, e;
                            var f = 4e4;
                            var g = null;
                            for (b = 0; b < this.clusters_.length; b++) {
                                d = this.clusters_[b];
                                e = d.getCenter();
                                if (e) {
                                    c = this.distanceBetweenPoints_(e, a.getPosition());
                                    if (c < f) {
                                        f = c;
                                        g = d;
                                    }
                                }
                            }
                            if (g && g.isMarkerInClusterBounds(a)) {
                                g.addMarker(a);
                            } else {
                                d = new NgMapCluster(this);
                                d.addMarker(a);
                                this.clusters_.push(d);
                            }
                        };
                        b.prototype.redraw_ = function() {
                            this.createClusters_(0);
                        };
                        b.prototype.resetViewport_ = function(a) {
                            var b, c;
                            for (b = 0; b < this.clusters_.length; b++) {
                                this.clusters_[b].remove();
                            }
                            this.clusters_ = [];
                            this.markers_.each(function(b) {
                                b.isAdded = false;
                                if (a) {
                                    b.setMap(null);
                                }
                            });
                        };
                        b.prototype.extend = function(a, b) {
                            return function(a) {
                                var b;
                                for (b in a.prototype) {
                                    if (b !== "constructor") this.prototype[b] = a.prototype[b];
                                }
                                return this;
                            }.apply(a, [ b ]);
                        };
                        ClusterIcon.prototype.show = function() {
                            if (this.div_) {
                                var a = "";
                                var b = this.backgroundPosition_.split(" ");
                                var c = parseInt(b[0].trim(), 10);
                                var d = parseInt(b[1].trim(), 10);
                                var e = this.getPosFromLatLng_(this.center_);
                                this.div_.style.cssText = this.createCss(e);
                                a = "<img src='" + this.url_ + "' style='position: absolute; top: " + d + "px; left: " + c + "px; ";
                                if (!this.cluster_.getMarkerClusterer().enableRetinaIcons_) {
                                    a += "clip: rect(" + -1 * d + "px, " + (-1 * c + this.width_) + "px, " + (-1 * d + this.height_) + "px, " + -1 * c + "px);";
                                } else {
                                    a += "width: " + this.width_ + "px;" + "height: " + this.height_ + "px;";
                                }
                                a += "'>";
                                this.div_.innerHTML = a + "<div style='" + "position: absolute;" + "top: " + this.anchorText_[0] + "px;" + "left: " + this.anchorText_[1] + "px;" + "color: " + this.textColor_ + ";" + "font-size: " + this.textSize_ + "px;" + "font-family: " + this.fontFamily_ + ";" + "font-weight: " + this.fontWeight_ + ";" + "font-style: " + this.fontStyle_ + ";" + "text-decoration: " + this.textDecoration_ + ";" + "text-align: center;" + "width: " + this.width_ + "px;" + "line-height:" + this.height_ + "px;" + "'>" + this.sums_.text + "</div>";
                                if (typeof this.sums_.title === "undefined" || this.sums_.title === "") {
                                    this.div_.title = this.cluster_.getMarkerClusterer().getTitle();
                                } else {
                                    this.div_.title = this.sums_.title;
                                }
                                this.div_.style.display = "";
                            }
                            this.visible_ = true;
                        };
                        return b;
                    }(MarkerClusterer);
                }).call(this);
            })
        };
    } ]);
})(window, angular, _);